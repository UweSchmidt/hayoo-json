[
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides a fairly direct representation of the\n SAM/BAM alignment format, along with an interface to read and write\n alignments in this format.\n\u003c/p\u003e\u003cp\u003eThe package is based on the C SamTools library available at\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://samtools.sourceforge.net/\u003c/a\u003e\n\u003c/p\u003e\u003cp\u003eand the SAM/BAM file format is described here\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://samtools.sourceforge.net/SAM-1.3.pdf\u003c/a\u003e\n\u003c/p\u003e\u003cp\u003eThis package only reads existing alignment files generated by other\n tools. The meaning of the various flags is actually determined by\n the program that produced the alignment file.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "module",
        "fct-source": "src/Bio-SamTools-Bam.html",
        "fct-type": "module",
        "title": "Bam"
      },
      "index": {
        "description": "This module provides fairly direct representation of the SAM BAM alignment format along with an interface to read and write alignments in this format The package is based on the SamTools library available at http samtools.sourceforge.net and the SAM BAM file format is described here http samtools.sourceforge.net SAM-1.3.pdf This package only reads existing alignment files generated by other tools The meaning of the various flags is actually determined by the program that produced the alignment file",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "Bam",
        "normalized": "",
        "package": "samtools",
        "partial": "Bam",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#t:Bam1",
      "description": {
        "fct-descr": "\u003cp\u003eSAM/BAM format alignment\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Internal.html#Bam1",
        "fct-type": "data",
        "title": "Bam1"
      },
      "index": {
        "description": "SAM BAM format alignment",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "Bam1",
        "normalized": "",
        "package": "samtools",
        "partial": "Bam",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#t:Header",
      "description": {
        "fct-descr": "\u003cp\u003eTarget sequences from a SAM alignment set\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Internal.html#Header",
        "fct-type": "data",
        "title": "Header"
      },
      "index": {
        "description": "Target sequences from SAM alignment set",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "Header",
        "normalized": "",
        "package": "samtools",
        "partial": "Header",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#t:HeaderSeq",
      "description": {
        "fct-descr": "\u003cp\u003eInformation about one target sequence in a SAM alignment set\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Internal.html#HeaderSeq",
        "fct-type": "data",
        "title": "HeaderSeq"
      },
      "index": {
        "description": "Information about one target sequence in SAM alignment set",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "HeaderSeq",
        "normalized": "",
        "package": "samtools",
        "partial": "Header Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#t:InHandle",
      "description": {
        "fct-descr": "\u003cp\u003eHandle for reading SAM/BAM format alignments\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Bam.html#InHandle",
        "fct-type": "data",
        "title": "InHandle"
      },
      "index": {
        "description": "Handle for reading SAM BAM format alignments",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "InHandle",
        "normalized": "",
        "package": "samtools",
        "partial": "In Handle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#t:OutHandle",
      "description": {
        "fct-descr": "\u003cp\u003eHandle for writing SAM/BAM format alignments\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Bam.html#OutHandle",
        "fct-type": "data",
        "title": "OutHandle"
      },
      "index": {
        "description": "Handle for writing SAM BAM format alignments",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "OutHandle",
        "normalized": "",
        "package": "samtools",
        "partial": "Out Handle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:HeaderSeq",
      "description": {
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "HeaderSeq",
        "fct-source": "src/Bio-SamTools-Internal.html#HeaderSeq",
        "fct-type": "function",
        "title": "HeaderSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "HeaderSeq",
        "normalized": "",
        "package": "samtools",
        "partial": "Header Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:cigars",
      "description": {
        "fct-descr": "\u003cp\u003eCIGAR description of the alignment\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e [Cigar]",
        "fct-source": "src/Bio-SamTools-Bam.html#cigars",
        "fct-type": "function",
        "title": "cigars"
      },
      "index": {
        "description": "CIGAR description of the alignment",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "cigars",
        "normalized": "Bam-\u003e[Cigar]",
        "package": "samtools",
        "partial": "",
        "signature": "Bam-\u003e[Cigar]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:closeInHandle",
      "description": {
        "fct-descr": "\u003cp\u003eClose a SAM/BAM format alignment input handle\n\u003c/p\u003e\u003cp\u003eTarget sequence set data is still available after the file input\n has been closed.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "InHandle -\u003e IO ()",
        "fct-source": "src/Bio-SamTools-Bam.html#closeInHandle",
        "fct-type": "function",
        "title": "closeInHandle"
      },
      "index": {
        "description": "Close SAM BAM format alignment input handle Target sequence set data is still available after the file input has been closed",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "closeInHandle",
        "normalized": "InHandle-\u003eIO()",
        "package": "samtools",
        "partial": "In Handle",
        "signature": "InHandle-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:closeOutHandle",
      "description": {
        "fct-descr": "\u003cp\u003eClose an alignment output handle\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "OutHandle -\u003e IO ()",
        "fct-source": "src/Bio-SamTools-Bam.html#closeOutHandle",
        "fct-type": "function",
        "title": "closeOutHandle"
      },
      "index": {
        "description": "Close an alignment output handle",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "closeOutHandle",
        "normalized": "OutHandle-\u003eIO()",
        "package": "samtools",
        "partial": "Out Handle",
        "signature": "OutHandle-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:get1",
      "description": {
        "fct-descr": "\u003cp\u003eReads one alignment from an input handle, or returns \u003ccode\u003eNothing\u003c/code\u003e for end-of-file\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "InHandle -\u003e IO (Maybe Bam1)",
        "fct-source": "src/Bio-SamTools-Bam.html#get1",
        "fct-type": "function",
        "title": "get1"
      },
      "index": {
        "description": "Reads one alignment from an input handle or returns Nothing for end-of-file",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "get1",
        "normalized": "InHandle-\u003eIO(Maybe Bam)",
        "package": "samtools",
        "partial": "",
        "signature": "InHandle-\u003eIO(Maybe Bam)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:inHeader",
      "description": {
        "fct-descr": "\u003cp\u003eTarget sequence set for the alignments\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "InHandle -\u003e Header",
        "fct-source": "src/Bio-SamTools-Bam.html#inHeader",
        "fct-type": "function",
        "title": "inHeader"
      },
      "index": {
        "description": "Target sequence set for the alignments",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "inHeader",
        "normalized": "InHandle-\u003eHeader",
        "package": "samtools",
        "partial": "Header",
        "signature": "InHandle-\u003eHeader"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:insertSize",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the total insert length, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when the length is\n unavailable, e.g. because the read is unpaired or the mated read\n pair do not align in the proper relative orientation on the same\n strand.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int64",
        "fct-source": "src/Bio-SamTools-Bam.html#insertSize",
        "fct-type": "function",
        "title": "insertSize"
      },
      "index": {
        "description": "Just the total insert length or Nothing when the length is unavailable e.g because the read is unpaired or the mated read pair do not align in the proper relative orientation on the same strand",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "insertSize",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Size",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isDup",
      "description": {
        "fct-descr": "\u003cp\u003eIs the read a technical duplicate\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isDup",
        "fct-type": "function",
        "title": "isDup"
      },
      "index": {
        "description": "Is the read technical duplicate",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isDup",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Dup",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isMateReverse",
      "description": {
        "fct-descr": "\u003cp\u003eIs the read paired and the mate's reverse complement aligned to the target\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isMateReverse",
        "fct-type": "function",
        "title": "isMateReverse"
      },
      "index": {
        "description": "Is the read paired and the mate reverse complement aligned to the target",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isMateReverse",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Mate Reverse",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isMateUnmap",
      "description": {
        "fct-descr": "\u003cp\u003eIs the read paired and the mate unmapped\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isMateUnmap",
        "fct-type": "function",
        "title": "isMateUnmap"
      },
      "index": {
        "description": "Is the read paired and the mate unmapped",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isMateUnmap",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Mate Unmap",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isPaired",
      "description": {
        "fct-descr": "\u003cp\u003eIs the read paired\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isPaired",
        "fct-type": "function",
        "title": "isPaired"
      },
      "index": {
        "description": "Is the read paired",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isPaired",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Paired",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isProperPair",
      "description": {
        "fct-descr": "\u003cp\u003eIs the pair properly aligned (usually based on relative orientation and distance)\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isProperPair",
        "fct-type": "function",
        "title": "isProperPair"
      },
      "index": {
        "description": "Is the pair properly aligned usually based on relative orientation and distance",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isProperPair",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Proper Pair",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isQCFail",
      "description": {
        "fct-descr": "\u003cp\u003eDid the read fail quality controls\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isQCFail",
        "fct-type": "function",
        "title": "isQCFail"
      },
      "index": {
        "description": "Did the read fail quality controls",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isQCFail",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "QCFail",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isRead1",
      "description": {
        "fct-descr": "\u003cp\u003eIs the fragment from the first read in the template\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isRead1",
        "fct-type": "function",
        "title": "isRead1"
      },
      "index": {
        "description": "Is the fragment from the first read in the template",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isRead1",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Read",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isRead2",
      "description": {
        "fct-descr": "\u003cp\u003eIs the fragment from the second read in the template\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isRead2",
        "fct-type": "function",
        "title": "isRead2"
      },
      "index": {
        "description": "Is the fragment from the second read in the template",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isRead2",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Read",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isReverse",
      "description": {
        "fct-descr": "\u003cp\u003eIs the fragment's reverse complement aligned to the target\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isReverse",
        "fct-type": "function",
        "title": "isReverse"
      },
      "index": {
        "description": "Is the fragment reverse complement aligned to the target",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isReverse",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Reverse",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isSecondary",
      "description": {
        "fct-descr": "\u003cp\u003eIs the fragment alignment secondary\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isSecondary",
        "fct-type": "function",
        "title": "isSecondary"
      },
      "index": {
        "description": "Is the fragment alignment secondary",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isSecondary",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Secondary",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:isUnmap",
      "description": {
        "fct-descr": "\u003cp\u003eIs the read unmapped\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Bool",
        "fct-source": "src/Bio-SamTools-Bam.html#isUnmap",
        "fct-type": "function",
        "title": "isUnmap"
      },
      "index": {
        "description": "Is the read unmapped",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "isUnmap",
        "normalized": "Bam-\u003eBool",
        "package": "samtools",
        "partial": "Unmap",
        "signature": "Bam-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:len",
      "description": {
        "fct-descr": "\u003cp\u003eTarget sequence lengh\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "!Int64",
        "fct-source": "src/Bio-SamTools-Internal.html#HeaderSeq",
        "fct-type": "function",
        "title": "len"
      },
      "index": {
        "description": "Target sequence lengh",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "len",
        "normalized": "",
        "package": "samtools",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:lookupTarget",
      "description": {
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Header -\u003e ByteString -\u003e Maybe Int",
        "fct-source": "src/Bio-SamTools-Internal.html#lookupTarget",
        "fct-type": "function",
        "title": "lookupTarget"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "lookupTarget",
        "normalized": "Header-\u003eByteString-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Target",
        "signature": "Header-\u003eByteString-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:matchDesc",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the match descriptor alignment field, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when it\n is absent\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe ByteString",
        "fct-source": "src/Bio-SamTools-Bam.html#matchDesc",
        "fct-type": "function",
        "title": "matchDesc"
      },
      "index": {
        "description": "Just the match descriptor alignment field or Nothing when it is absent",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "matchDesc",
        "normalized": "Bam-\u003eMaybe ByteString",
        "package": "samtools",
        "partial": "Desc",
        "signature": "Bam-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:matePosition",
      "description": {
        "fct-descr": "\u003cp\u003e'Just the 0-based coordinate of the left-most position in the\n mate alignment on the target, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when the read is\n unpaired or the mate is unmapped.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int64",
        "fct-source": "src/Bio-SamTools-Bam.html#matePosition",
        "fct-type": "function",
        "title": "matePosition"
      },
      "index": {
        "description": "Just the based coordinate of the left-most position in the mate alignment on the target or Nothing when the read is unpaired or the mate is unmapped",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "matePosition",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Position",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:mateTargetID",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the target ID of the mate alignment target reference\n sequence, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when the mate is unmapped or the read is\n unpaired.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int",
        "fct-source": "src/Bio-SamTools-Bam.html#mateTargetID",
        "fct-type": "function",
        "title": "mateTargetID"
      },
      "index": {
        "description": "Just the target ID of the mate alignment target reference sequence or Nothing when the mate is unmapped or the read is unpaired",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "mateTargetID",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Target ID",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:mateTargetLen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the length of the mate alignment target reference\n sequence, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when the mate is unmapped or the read is\n unpaired.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int64",
        "fct-source": "src/Bio-SamTools-Bam.html#mateTargetLen",
        "fct-type": "function",
        "title": "mateTargetLen"
      },
      "index": {
        "description": "Just the length of the mate alignment target reference sequence or Nothing when the mate is unmapped or the read is unpaired",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "mateTargetLen",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Target Len",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:mateTargetName",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the name of the mate alignment target reference sequence,\n or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when the mate is unmapped or the read is unpaired.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe ByteString",
        "fct-source": "src/Bio-SamTools-Bam.html#mateTargetName",
        "fct-type": "function",
        "title": "mateTargetName"
      },
      "index": {
        "description": "Just the name of the mate alignment target reference sequence or Nothing when the mate is unmapped or the read is unpaired",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "mateTargetName",
        "normalized": "Bam-\u003eMaybe ByteString",
        "package": "samtools",
        "partial": "Target Name",
        "signature": "Bam-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:nHits",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the number of reported alignments, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when this\n information is not present.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int",
        "fct-source": "src/Bio-SamTools-Bam.html#nHits",
        "fct-type": "function",
        "title": "nHits"
      },
      "index": {
        "description": "Just the number of reported alignments or Nothing when this information is not present",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "nHits",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Hits",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:nMismatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the number of mismatches in the alignemnt, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e\n when this information is not present\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int",
        "fct-source": "src/Bio-SamTools-Bam.html#nMismatch",
        "fct-type": "function",
        "title": "nMismatch"
      },
      "index": {
        "description": "Just the number of mismatches in the alignemnt or Nothing when this information is not present",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "nMismatch",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Mismatch",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:nTargets",
      "description": {
        "fct-descr": "\u003cp\u003eNumber of target sequences\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Header -\u003e Int",
        "fct-source": "src/Bio-SamTools-Internal.html#nTargets",
        "fct-type": "function",
        "title": "nTargets"
      },
      "index": {
        "description": "Number of target sequences",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "nTargets",
        "normalized": "Header-\u003eInt",
        "package": "samtools",
        "partial": "Targets",
        "signature": "Header-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:name",
      "description": {
        "fct-descr": "\u003cp\u003eTarget sequence name \n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "!ByteString",
        "fct-source": "src/Bio-SamTools-Internal.html#HeaderSeq",
        "fct-type": "function",
        "title": "name"
      },
      "index": {
        "description": "Target sequence name",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "name",
        "normalized": "",
        "package": "samtools",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:openBamInFile",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a BAM (binary) format file\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e IO InHandle",
        "fct-source": "src/Bio-SamTools-Bam.html#openBamInFile",
        "fct-type": "function",
        "title": "openBamInFile"
      },
      "index": {
        "description": "Open BAM binary format file",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "openBamInFile",
        "normalized": "FilePath-\u003eIO InHandle",
        "package": "samtools",
        "partial": "Bam In File",
        "signature": "FilePath-\u003eIO InHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:openBamOutFile",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a BAM format file for writing alignments\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e Header -\u003e IO OutHandle",
        "fct-source": "src/Bio-SamTools-Bam.html#openBamOutFile",
        "fct-type": "function",
        "title": "openBamOutFile"
      },
      "index": {
        "description": "Open BAM format file for writing alignments",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "openBamOutFile",
        "normalized": "FilePath-\u003eHeader-\u003eIO OutHandle",
        "package": "samtools",
        "partial": "Bam Out File",
        "signature": "FilePath-\u003eHeader-\u003eIO OutHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:openTamInFile",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a TAM (tab-delimited text) format file with \u003ccode\u003e@SQ\u003c/code\u003e headers\n for the target sequence set.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e IO InHandle",
        "fct-source": "src/Bio-SamTools-Bam.html#openTamInFile",
        "fct-type": "function",
        "title": "openTamInFile"
      },
      "index": {
        "description": "Open TAM tab-delimited text format file with SQ headers for the target sequence set",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "openTamInFile",
        "normalized": "FilePath-\u003eIO InHandle",
        "package": "samtools",
        "partial": "Tam In File",
        "signature": "FilePath-\u003eIO InHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:openTamInFileWithIndex",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a TAM format file with a separate target sequence set index\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e FilePath -\u003e IO InHandle",
        "fct-source": "src/Bio-SamTools-Bam.html#openTamInFileWithIndex",
        "fct-type": "function",
        "title": "openTamInFileWithIndex"
      },
      "index": {
        "description": "Open TAM format file with separate target sequence set index",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "openTamInFileWithIndex",
        "normalized": "FilePath-\u003eFilePath-\u003eIO InHandle",
        "package": "samtools",
        "partial": "Tam In File With Index",
        "signature": "FilePath-\u003eFilePath-\u003eIO InHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:openTamOutFile",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a TAM format file with \u003ccode\u003e@SQ\u003c/code\u003e headers for writing alignments\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e Header -\u003e IO OutHandle",
        "fct-source": "src/Bio-SamTools-Bam.html#openTamOutFile",
        "fct-type": "function",
        "title": "openTamOutFile"
      },
      "index": {
        "description": "Open TAM format file with SQ headers for writing alignments",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "openTamOutFile",
        "normalized": "FilePath-\u003eHeader-\u003eIO OutHandle",
        "package": "samtools",
        "partial": "Tam Out File",
        "signature": "FilePath-\u003eHeader-\u003eIO OutHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:outHeader",
      "description": {
        "fct-descr": "\u003cp\u003eTarget sequence set for the alignments\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "OutHandle -\u003e Header",
        "fct-source": "src/Bio-SamTools-Bam.html#outHeader",
        "fct-type": "function",
        "title": "outHeader"
      },
      "index": {
        "description": "Target sequence set for the alignments",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "outHeader",
        "normalized": "OutHandle-\u003eHeader",
        "package": "samtools",
        "partial": "Header",
        "signature": "OutHandle-\u003eHeader"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:position",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the 0-based index of the leftmost aligned position on the\n target sequence, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e for an unmapped read\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int64",
        "fct-source": "src/Bio-SamTools-Bam.html#position",
        "fct-type": "function",
        "title": "position"
      },
      "index": {
        "description": "Just the based index of the leftmost aligned position on the target sequence or Nothing for an unmapped read",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "position",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:put1",
      "description": {
        "fct-descr": "\u003cp\u003eWrites one alignment to an input handle.\n\u003c/p\u003e\u003cp\u003eThere is no validation that the target sequence set of the output\n handle matches the target sequence set of the alignment.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "OutHandle -\u003e Bam1 -\u003e IO ()",
        "fct-source": "src/Bio-SamTools-Bam.html#put1",
        "fct-type": "function",
        "title": "put1"
      },
      "index": {
        "description": "Writes one alignment to an input handle There is no validation that the target sequence set of the output handle matches the target sequence set of the alignment",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "put1",
        "normalized": "OutHandle-\u003eBam-\u003eIO()",
        "package": "samtools",
        "partial": "",
        "signature": "OutHandle-\u003eBam-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:queryLength",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the length of the query sequence, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when it is\n unavailable.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int64",
        "fct-source": "src/Bio-SamTools-Bam.html#queryLength",
        "fct-type": "function",
        "title": "queryLength"
      },
      "index": {
        "description": "Just the length of the query sequence or Nothing when it is unavailable",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "queryLength",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Length",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:queryName",
      "description": {
        "fct-descr": "\u003cp\u003eName of the query sequence\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e ByteString",
        "fct-source": "src/Bio-SamTools-Bam.html#queryName",
        "fct-type": "function",
        "title": "queryName"
      },
      "index": {
        "description": "Name of the query sequence",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "queryName",
        "normalized": "Bam-\u003eByteString",
        "package": "samtools",
        "partial": "Name",
        "signature": "Bam-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:queryQual",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the query qualities, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when it is\n unavailable. These are returned in ASCII format, i.e., \u003cem\u003eq\u003c/em\u003e + 33.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe ByteString",
        "fct-source": "src/Bio-SamTools-Bam.html#queryQual",
        "fct-type": "function",
        "title": "queryQual"
      },
      "index": {
        "description": "Just the query qualities or Nothing when it is unavailable These are returned in ASCII format i.e",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "queryQual",
        "normalized": "Bam-\u003eMaybe ByteString",
        "package": "samtools",
        "partial": "Qual",
        "signature": "Bam-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:querySeq",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the query sequence, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e when it is unavailable\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe ByteString",
        "fct-source": "src/Bio-SamTools-Bam.html#querySeq",
        "fct-type": "function",
        "title": "querySeq"
      },
      "index": {
        "description": "Just the query sequence or Nothing when it is unavailable",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "querySeq",
        "normalized": "Bam-\u003eMaybe ByteString",
        "package": "samtools",
        "partial": "Seq",
        "signature": "Bam-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:readBams",
      "description": {
        "fct-descr": "\u003cp\u003eRead a BAM file as a lazy strem of \u003ccode\u003e\u003ca\u003eBam1\u003c/a\u003e\u003c/code\u003e records.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e IO [Bam1]",
        "fct-source": "src/Bio-SamTools-Bam.html#readBams",
        "fct-type": "function",
        "title": "readBams"
      },
      "index": {
        "description": "Read BAM file as lazy strem of Bam1 records",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "readBams",
        "normalized": "FilePath-\u003eIO[Bam]",
        "package": "samtools",
        "partial": "Bams",
        "signature": "FilePath-\u003eIO[Bam]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:refSeqLoc",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the reference sequence location (as per \u003ccode\u003e\u003ca\u003erefSpLoc\u003c/a\u003e\u003c/code\u003e) on\n the target reference (as per \u003ccode\u003e\u003ca\u003etargetName\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe SpliceSeqLoc",
        "fct-source": "src/Bio-SamTools-Bam.html#refSeqLoc",
        "fct-type": "function",
        "title": "refSeqLoc"
      },
      "index": {
        "description": "Just the reference sequence location as per refSpLoc on the target reference as per targetName",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "refSeqLoc",
        "normalized": "Bam-\u003eMaybe SpliceSeqLoc",
        "package": "samtools",
        "partial": "Seq Loc",
        "signature": "Bam-\u003eMaybe SpliceSeqLoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:refSpLoc",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the reference sequence location covered by the\n alignment. This includes nucleotide positions that are reported to\n be deleted in the read, but not skipped nucleotide position\n (typically intronic positions in a spliced alignment). If the\n reference location is unavailable, e.g. for an unmapped read or for\n a read with no CIGAR format alignment information, then \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe SpliceLoc",
        "fct-source": "src/Bio-SamTools-Bam.html#refSpLoc",
        "fct-type": "function",
        "title": "refSpLoc"
      },
      "index": {
        "description": "Just the reference sequence location covered by the alignment This includes nucleotide positions that are reported to be deleted in the read but not skipped nucleotide position typically intronic positions in spliced alignment If the reference location is unavailable e.g for an unmapped read or for read with no CIGAR format alignment information then Nothing",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "refSpLoc",
        "normalized": "Bam-\u003eMaybe SpliceLoc",
        "package": "samtools",
        "partial": "Sp Loc",
        "signature": "Bam-\u003eMaybe SpliceLoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetID",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the reference target sequence ID in the target set, or\n \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e for an unmapped read\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int",
        "fct-source": "src/Bio-SamTools-Bam.html#targetID",
        "fct-type": "function",
        "title": "targetID"
      },
      "index": {
        "description": "Just the reference target sequence ID in the target set or Nothing for an unmapped read",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetID",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "ID",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetLen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the total length of the target sequence, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e for\n an unmapped read\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe Int64",
        "fct-source": "src/Bio-SamTools-Bam.html#targetLen",
        "fct-type": "function",
        "title": "targetLen"
      },
      "index": {
        "description": "Just the total length of the target sequence or Nothing for an unmapped read",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetLen",
        "normalized": "Bam-\u003eMaybe Int",
        "package": "samtools",
        "partial": "Len",
        "signature": "Bam-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetName",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e the target sequence name, or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e for an unmapped\n read\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Bam1 -\u003e Maybe ByteString",
        "fct-source": "src/Bio-SamTools-Bam.html#targetName",
        "fct-type": "function",
        "title": "targetName"
      },
      "index": {
        "description": "Just the target sequence name or Nothing for an unmapped read",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetName",
        "normalized": "Bam-\u003eMaybe ByteString",
        "package": "samtools",
        "partial": "Name",
        "signature": "Bam-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetSeq",
      "description": {
        "fct-descr": "\u003cp\u003eReturns a target sequence by ID, which is a 0-based index\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Header -\u003e Int -\u003e HeaderSeq",
        "fct-source": "src/Bio-SamTools-Internal.html#targetSeq",
        "fct-type": "function",
        "title": "targetSeq"
      },
      "index": {
        "description": "Returns target sequence by ID which is based index",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetSeq",
        "normalized": "Header-\u003eInt-\u003eHeaderSeq",
        "package": "samtools",
        "partial": "Seq",
        "signature": "Header-\u003eInt-\u003eHeaderSeq"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetSeqLen",
      "description": {
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Header -\u003e Int -\u003e Int64",
        "fct-source": "src/Bio-SamTools-Internal.html#targetSeqLen",
        "fct-type": "function",
        "title": "targetSeqLen"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetSeqLen",
        "normalized": "Header-\u003eInt-\u003eInt",
        "package": "samtools",
        "partial": "Seq Len",
        "signature": "Header-\u003eInt-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetSeqList",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the list of target sequences\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Header -\u003e [HeaderSeq]",
        "fct-source": "src/Bio-SamTools-Internal.html#targetSeqList",
        "fct-type": "function",
        "title": "targetSeqList"
      },
      "index": {
        "description": "Returns the list of target sequences",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetSeqList",
        "normalized": "Header-\u003e[HeaderSeq]",
        "package": "samtools",
        "partial": "Seq List",
        "signature": "Header-\u003e[HeaderSeq]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:targetSeqName",
      "description": {
        "fct-descr": "\u003cp\u003eReturns a target sequence name by ID\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "Header -\u003e Int -\u003e ByteString",
        "fct-source": "src/Bio-SamTools-Internal.html#targetSeqName",
        "fct-type": "function",
        "title": "targetSeqName"
      },
      "index": {
        "description": "Returns target sequence name by ID",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "targetSeqName",
        "normalized": "Header-\u003eInt-\u003eByteString",
        "package": "samtools",
        "partial": "Seq Name",
        "signature": "Header-\u003eInt-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:withBamInFile",
      "description": {
        "fct-descr": "\u003cp\u003eAs \u003ccode\u003e\u003ca\u003ewithTamInFile\u003c/a\u003e\u003c/code\u003e for BAM (binary) format files\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e (InHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-Bam.html#withBamInFile",
        "fct-type": "function",
        "title": "withBamInFile"
      },
      "index": {
        "description": "As withTamInFile for BAM binary format files",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "withBamInFile",
        "normalized": "FilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Bam In File",
        "signature": "FilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:withBamOutFile",
      "description": {
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e Header -\u003e (OutHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-Bam.html#withBamOutFile",
        "fct-type": "function",
        "title": "withBamOutFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "withBamOutFile",
        "normalized": "FilePath-\u003eHeader-\u003e(OutHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Bam Out File",
        "signature": "FilePath-\u003eHeader-\u003e(OutHandle-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:withTamInFile",
      "description": {
        "fct-descr": "\u003cp\u003eRun an IO action using a handle to a TAM format file that will be\n opened (see \u003ccode\u003e\u003ca\u003eopenTamInFile\u003c/a\u003e\u003c/code\u003e) and closed for the action.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e (InHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-Bam.html#withTamInFile",
        "fct-type": "function",
        "title": "withTamInFile"
      },
      "index": {
        "description": "Run an IO action using handle to TAM format file that will be opened see openTamInFile and closed for the action",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "withTamInFile",
        "normalized": "FilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Tam In File",
        "signature": "FilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:withTamInFileWithIndex",
      "description": {
        "fct-descr": "\u003cp\u003eAs \u003ccode\u003e\u003ca\u003ewithTamInFile\u003c/a\u003e\u003c/code\u003e with a separate target sequence index set (see\n \u003ccode\u003e\u003ca\u003eopenTamInFileWithIndex\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e FilePath -\u003e (InHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-Bam.html#withTamInFileWithIndex",
        "fct-type": "function",
        "title": "withTamInFileWithIndex"
      },
      "index": {
        "description": "As withTamInFile with separate target sequence index set see openTamInFileWithIndex",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "withTamInFileWithIndex",
        "normalized": "FilePath-\u003eFilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Tam In File With Index",
        "signature": "FilePath-\u003eFilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Bam.html#v:withTamOutFile",
      "description": {
        "fct-module": "Bio.SamTools.Bam",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e Header -\u003e (OutHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-Bam.html#withTamOutFile",
        "fct-type": "function",
        "title": "withTamOutFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Bam",
        "module": "Bio.SamTools.Bam",
        "name": "withTamOutFile",
        "normalized": "FilePath-\u003eHeader-\u003e(OutHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Tam Out File",
        "signature": "FilePath-\u003eHeader-\u003e(OutHandle-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides an interface to sorted, indexed BAM\n alignment files, which allow rapid extraction of alignments that lie\n within one specific region of one sequence.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "module",
        "fct-source": "src/Bio-SamTools-BamIndex.html",
        "fct-type": "module",
        "title": "BamIndex"
      },
      "index": {
        "description": "This module provides an interface to sorted indexed BAM alignment files which allow rapid extraction of alignments that lie within one specific region of one sequence",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "BamIndex",
        "normalized": "",
        "package": "samtools",
        "partial": "Bam Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#t:IdxHandle",
      "description": {
        "fct-descr": "\u003cp\u003eHandle for fetching alignments by region from a sorted, indexed\n BAM file.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-BamIndex.html#IdxHandle",
        "fct-type": "data",
        "title": "IdxHandle"
      },
      "index": {
        "description": "Handle for fetching alignments by region from sorted indexed BAM file",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "IdxHandle",
        "normalized": "",
        "package": "samtools",
        "partial": "Idx Handle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#t:Query",
      "description": {
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-BamIndex.html#Query",
        "fct-type": "data",
        "title": "Query"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "Query",
        "normalized": "",
        "package": "samtools",
        "partial": "Query",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:close",
      "description": {
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "IdxHandle -\u003e IO ()",
        "fct-source": "src/Bio-SamTools-BamIndex.html#close",
        "fct-type": "function",
        "title": "close"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "close",
        "normalized": "IdxHandle-\u003eIO()",
        "package": "samtools",
        "partial": "",
        "signature": "IdxHandle-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:idxFilename",
      "description": {
        "fct-descr": "\u003cp\u003eFilename of sorted, indexed BAM file\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "IdxHandle -\u003e FilePath",
        "fct-source": "src/Bio-SamTools-BamIndex.html#idxFilename",
        "fct-type": "function",
        "title": "idxFilename"
      },
      "index": {
        "description": "Filename of sorted indexed BAM file",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "idxFilename",
        "normalized": "IdxHandle-\u003eFilePath",
        "package": "samtools",
        "partial": "Filename",
        "signature": "IdxHandle-\u003eFilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:idxHeader",
      "description": {
        "fct-descr": "\u003cp\u003eTarget sequences\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "IdxHandle -\u003e Header",
        "fct-source": "src/Bio-SamTools-BamIndex.html#idxHeader",
        "fct-type": "function",
        "title": "idxHeader"
      },
      "index": {
        "description": "Target sequences",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "idxHeader",
        "normalized": "IdxHandle-\u003eHeader",
        "package": "samtools",
        "partial": "Header",
        "signature": "IdxHandle-\u003eHeader"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:next",
      "description": {
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "Query -\u003e IO (Maybe Bam1)",
        "fct-source": "src/Bio-SamTools-BamIndex.html#next",
        "fct-type": "function",
        "title": "next"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "next",
        "normalized": "Query-\u003eIO(Maybe Bam)",
        "package": "samtools",
        "partial": "",
        "signature": "Query-\u003eIO(Maybe Bam)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:open",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a sorted, indexed BAM file.              \n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e IO IdxHandle",
        "fct-source": "src/Bio-SamTools-BamIndex.html#open",
        "fct-type": "function",
        "title": "open"
      },
      "index": {
        "description": "Open sorted indexed BAM file",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "open",
        "normalized": "FilePath-\u003eIO IdxHandle",
        "package": "samtools",
        "partial": "",
        "signature": "FilePath-\u003eIO IdxHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:query",
      "description": {
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "IdxHandle -\u003e Int -\u003e (Int64, Int64) -\u003e IO Query",
        "fct-source": "src/Bio-SamTools-BamIndex.html#query",
        "fct-type": "function",
        "title": "query"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "query",
        "normalized": "IdxHandle-\u003eInt-\u003e(Int,Int)-\u003eIO Query",
        "package": "samtools",
        "partial": "",
        "signature": "IdxHandle-\u003eInt-\u003e(Int,Int)-\u003eIO Query"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:qyHandle",
      "description": {
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "Query -\u003e IdxHandle",
        "fct-source": "src/Bio-SamTools-BamIndex.html#qyHandle",
        "fct-type": "function",
        "title": "qyHandle"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "qyHandle",
        "normalized": "Query-\u003eIdxHandle",
        "package": "samtools",
        "partial": "Handle",
        "signature": "Query-\u003eIdxHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:readBamRegion",
      "description": {
        "fct-descr": "\u003cp\u003eUse a BAM index file to extract \u003ccode\u003e\u003ca\u003eBam1\u003c/a\u003e\u003c/code\u003e records aligned to a \n specific target sequence (chromosome) number and region.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "IdxHandle -\u003e Int -\u003e (Int64, Int64) -\u003e IO [Bam1]",
        "fct-source": "src/Bio-SamTools-BamIndex.html#readBamRegion",
        "fct-type": "function",
        "title": "readBamRegion"
      },
      "index": {
        "description": "Use BAM index file to extract Bam1 records aligned to specific target sequence chromosome number and region",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "readBamRegion",
        "normalized": "IdxHandle-\u003eInt-\u003e(Int,Int)-\u003eIO[Bam]",
        "package": "samtools",
        "partial": "Bam Region",
        "signature": "IdxHandle-\u003eInt-\u003e(Int,Int)-\u003eIO[Bam]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-BamIndex.html#v:withIndex",
      "description": {
        "fct-module": "Bio.SamTools.BamIndex",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e (IdxHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-BamIndex.html#withIndex",
        "fct-type": "function",
        "title": "withIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools BamIndex",
        "module": "Bio.SamTools.BamIndex",
        "name": "withIndex",
        "normalized": "FilePath-\u003e(IdxHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Index",
        "signature": "FilePath-\u003e(IdxHandle-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eHandling of the extended CIGAR pair-wise alignment descriptors\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "module",
        "fct-source": "src/Bio-SamTools-Cigar.html",
        "fct-type": "module",
        "title": "Cigar"
      },
      "index": {
        "description": "Handling of the extended CIGAR pair-wise alignment descriptors",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Cigar",
        "normalized": "",
        "package": "samtools",
        "partial": "Cigar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#t:Cigar",
      "description": {
        "fct-descr": "\u003cp\u003eCigar entry including length\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Cigar.html#Cigar",
        "fct-type": "data",
        "title": "Cigar"
      },
      "index": {
        "description": "Cigar entry including length",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Cigar",
        "normalized": "",
        "package": "samtools",
        "partial": "Cigar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#t:CigarType",
      "description": {
        "fct-descr": "\u003cp\u003eCigar entry types\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "data",
        "title": "CigarType"
      },
      "index": {
        "description": "Cigar entry types",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "CigarType",
        "normalized": "",
        "package": "samtools",
        "partial": "Cigar Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:Cigar",
      "description": {
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Cigar",
        "fct-source": "src/Bio-SamTools-Cigar.html#Cigar",
        "fct-type": "function",
        "title": "Cigar"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Cigar",
        "normalized": "",
        "package": "samtools",
        "partial": "Cigar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:Del",
      "description": {
        "fct-descr": "\u003cp\u003eDeletion from read relative to reference\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Del",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "Del"
      },
      "index": {
        "description": "Deletion from read relative to reference",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Del",
        "normalized": "",
        "package": "samtools",
        "partial": "Del",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:HardClip",
      "description": {
        "fct-descr": "\u003cp\u003eTrimmed nucleotides, removed from read\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "HardClip",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "HardClip"
      },
      "index": {
        "description": "Trimmed nucleotides removed from read",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "HardClip",
        "normalized": "",
        "package": "samtools",
        "partial": "Hard Clip",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:Ins",
      "description": {
        "fct-descr": "\u003cp\u003eInsertion in read relative to reference\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Ins",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "Ins"
      },
      "index": {
        "description": "Insertion in read relative to reference",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Ins",
        "normalized": "",
        "package": "samtools",
        "partial": "Ins",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:Match",
      "description": {
        "fct-descr": "\u003cp\u003eAligned nucleotide, may be a match or mismatch\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Match",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "Match"
      },
      "index": {
        "description": "Aligned nucleotide may be match or mismatch",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Match",
        "normalized": "",
        "package": "samtools",
        "partial": "Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:Pad",
      "description": {
        "fct-descr": "\u003cp\u003eDeletion from padded reference\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Pad",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "Pad"
      },
      "index": {
        "description": "Deletion from padded reference",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "Pad",
        "normalized": "",
        "package": "samtools",
        "partial": "Pad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:RefSkip",
      "description": {
        "fct-descr": "\u003cp\u003eSkipped reference bases, i.e., splice\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "RefSkip",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "RefSkip"
      },
      "index": {
        "description": "Skipped reference bases i.e splice",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "RefSkip",
        "normalized": "",
        "package": "samtools",
        "partial": "Ref Skip",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:SoftClip",
      "description": {
        "fct-descr": "\u003cp\u003eTrimmed nucleotides, still present in read\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "SoftClip",
        "fct-source": "src/Bio-SamTools-Cigar.html#CigarType",
        "fct-type": "function",
        "title": "SoftClip"
      },
      "index": {
        "description": "Trimmed nucleotides still present in read",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "SoftClip",
        "normalized": "",
        "package": "samtools",
        "partial": "Soft Clip",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:cigar",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "!CigarType",
        "fct-source": "src/Bio-SamTools-Cigar.html#Cigar",
        "fct-type": "function",
        "title": "cigar"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "cigar",
        "normalized": "",
        "package": "samtools",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:cigarToAlignment",
      "description": {
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Int64 -\u003e [Cigar] -\u003e [(Maybe Pos, Maybe Pos)]",
        "fct-source": "src/Bio-SamTools-Cigar.html#cigarToAlignment",
        "fct-type": "function",
        "title": "cigarToAlignment"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "cigarToAlignment",
        "normalized": "Int-\u003e[Cigar]-\u003e[(Maybe Pos,Maybe Pos)]",
        "package": "samtools",
        "partial": "To Alignment",
        "signature": "Int-\u003e[Cigar]-\u003e[(Maybe Pos,Maybe Pos)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:cigarToSpLoc",
      "description": {
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "Int64 -\u003e [Cigar] -\u003e SpliceLoc",
        "fct-source": "src/Bio-SamTools-Cigar.html#cigarToSpLoc",
        "fct-type": "function",
        "title": "cigarToSpLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "cigarToSpLoc",
        "normalized": "Int-\u003e[Cigar]-\u003eSpliceLoc",
        "package": "samtools",
        "partial": "To Sp Loc",
        "signature": "Int-\u003e[Cigar]-\u003eSpliceLoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:length",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "!Int64",
        "fct-source": "src/Bio-SamTools-Cigar.html#Cigar",
        "fct-type": "function",
        "title": "length"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "length",
        "normalized": "",
        "package": "samtools",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-Cigar.html#v:toCigar",
      "description": {
        "fct-descr": "\u003cp\u003eConvert a \u003ccode\u003eBAM\u003c/code\u003e binary cigar integer to a \u003ccode\u003e\u003ca\u003eCigar\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.Cigar",
        "fct-package": "samtools",
        "fct-signature": "CUInt -\u003e Cigar",
        "fct-source": "src/Bio-SamTools-Cigar.html#toCigar",
        "fct-type": "function",
        "title": "toCigar"
      },
      "index": {
        "description": "Convert BAM binary cigar integer to Cigar",
        "hierarchy": "Bio SamTools Cigar",
        "module": "Bio.SamTools.Cigar",
        "name": "toCigar",
        "normalized": "CUInt-\u003eCigar",
        "package": "samtools",
        "partial": "Cigar",
        "signature": "CUInt-\u003eCigar"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFetch sequences from an indexed fasta file\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "module",
        "fct-source": "src/Bio-SamTools-FaIdx.html",
        "fct-type": "module",
        "title": "FaIdx"
      },
      "index": {
        "description": "Fetch sequences from an indexed fasta file",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "FaIdx",
        "normalized": "",
        "package": "samtools",
        "partial": "Fa Idx",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#t:InHandle",
      "description": {
        "fct-descr": "\u003cp\u003eInput handle for an indexed fasta file\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "data",
        "fct-source": "src/Bio-SamTools-FaIdx.html#InHandle",
        "fct-type": "data",
        "title": "InHandle"
      },
      "index": {
        "description": "Input handle for an indexed fasta file",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "InHandle",
        "normalized": "",
        "package": "samtools",
        "partial": "In Handle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:close",
      "description": {
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "InHandle -\u003e IO ()",
        "fct-source": "src/Bio-SamTools-FaIdx.html#close",
        "fct-type": "function",
        "title": "close"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "close",
        "normalized": "InHandle-\u003eIO()",
        "package": "samtools",
        "partial": "",
        "signature": "InHandle-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:fetch",
      "description": {
        "fct-descr": "\u003cp\u003eFetch a region specified by sequence name and coordinates, or the\n empty string when the sequence is not found.\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "InHandle-\u003e ByteString-\u003e (Int64, Int64)-\u003e IO ByteString",
        "fct-type": "function",
        "title": "fetch"
      },
      "index": {
        "description": "Fetch region specified by sequence name and coordinates or the empty string when the sequence is not found",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "fetch",
        "normalized": "InHandle-\u003eByteString-\u003e(Int,Int)-\u003eIO ByteString",
        "package": "samtools",
        "partial": "",
        "signature": "InHandle-\u003eByteString-\u003e(Int,Int)-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:fetchLoc",
      "description": {
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "InHandle -\u003e OnSeq l -\u003e IO (Maybe ByteString)",
        "fct-source": "src/Bio-SamTools-FaIdx.html#fetchLoc",
        "fct-type": "function",
        "title": "fetchLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "fetchLoc",
        "normalized": "InHandle-\u003eOnSeq a-\u003eIO(Maybe ByteString)",
        "package": "samtools",
        "partial": "Loc",
        "signature": "InHandle-\u003eOnSeq l-\u003eIO(Maybe ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:filename",
      "description": {
        "fct-descr": "\u003cp\u003eName of the fasta file\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "InHandle -\u003e FilePath",
        "fct-source": "src/Bio-SamTools-FaIdx.html#filename",
        "fct-type": "function",
        "title": "filename"
      },
      "index": {
        "description": "Name of the fasta file",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "filename",
        "normalized": "InHandle-\u003eFilePath",
        "package": "samtools",
        "partial": "",
        "signature": "InHandle-\u003eFilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:open",
      "description": {
        "fct-descr": "\u003cp\u003eOpen an indexed fasta file\n\u003c/p\u003e",
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e IO InHandle",
        "fct-source": "src/Bio-SamTools-FaIdx.html#open",
        "fct-type": "function",
        "title": "open"
      },
      "index": {
        "description": "Open an indexed fasta file",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "open",
        "normalized": "FilePath-\u003eIO InHandle",
        "package": "samtools",
        "partial": "",
        "signature": "FilePath-\u003eIO InHandle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:readLoc",
      "description": {
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e OnSeq l -\u003e IO (Maybe ByteString)",
        "fct-source": "src/Bio-SamTools-FaIdx.html#readLoc",
        "fct-type": "function",
        "title": "readLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "readLoc",
        "normalized": "FilePath-\u003eOnSeq a-\u003eIO(Maybe ByteString)",
        "package": "samtools",
        "partial": "Loc",
        "signature": "FilePath-\u003eOnSeq l-\u003eIO(Maybe ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/samtools/docs/Bio-SamTools-FaIdx.html#v:withFastaIndex",
      "description": {
        "fct-module": "Bio.SamTools.FaIdx",
        "fct-package": "samtools",
        "fct-signature": "FilePath -\u003e (InHandle -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Bio-SamTools-FaIdx.html#withFastaIndex",
        "fct-type": "function",
        "title": "withFastaIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Bio SamTools FaIdx",
        "module": "Bio.SamTools.FaIdx",
        "name": "withFastaIndex",
        "normalized": "FilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a",
        "package": "samtools",
        "partial": "Fasta Index",
        "signature": "FilePath-\u003e(InHandle-\u003eIO a)-\u003eIO a"
      }
    }
  }
]