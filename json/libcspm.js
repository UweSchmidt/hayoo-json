[
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#",
      "description": {
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-CommandLineOptions.html",
        "fct-type": "module",
        "title": "CommandLineOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "CommandLineOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Command Line Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#t:Options",
      "description": {
        "fct-descr": "\u003cp\u003eThe type of options for libcspm.\n\u003c/p\u003e",
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-CommandLineOptions.html#Options",
        "fct-type": "data",
        "title": "Options"
      },
      "index": {
        "description": "The type of options for libcspm",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "Options",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#v:Options",
      "description": {
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "Options",
        "fct-source": "src/CSPM-CommandLineOptions.html#Options",
        "fct-type": "function",
        "title": "Options"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "Options",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#v:allOptions",
      "description": {
        "fct-descr": "\u003cp\u003eAll available command line options.\n\u003c/p\u003e",
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "(a -\u003e Options) -\u003e (a -\u003e Options -\u003e a) -\u003e [OptDescr (a -\u003e a)]",
        "fct-source": "src/CSPM-CommandLineOptions.html#allOptions",
        "fct-type": "function",
        "title": "allOptions"
      },
      "index": {
        "description": "All available command line options",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "allOptions",
        "normalized": "(a-\u003eOptions)-\u003e(a-\u003eOptions-\u003ea)-\u003e[OptDescr(a-\u003ea)]",
        "package": "libcspm",
        "partial": "Options",
        "signature": "(a-\u003eOptions)-\u003e(a-\u003eOptions-\u003ea)-\u003e[OptDescr(a-\u003ea)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#v:defaultOptions",
      "description": {
        "fct-descr": "\u003cp\u003eThe default set of options.\n\u003c/p\u003e",
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "Options",
        "fct-source": "src/CSPM-CommandLineOptions.html#defaultOptions",
        "fct-type": "function",
        "title": "defaultOptions"
      },
      "index": {
        "description": "The default set of options",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "defaultOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#v:setOptions",
      "description": {
        "fct-descr": "\u003cp\u003eSets the options to the values given.\n\u003c/p\u003e",
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "Options -\u003e m ()",
        "fct-source": "src/CSPM-CommandLineOptions.html#setOptions",
        "fct-type": "function",
        "title": "setOptions"
      },
      "index": {
        "description": "Sets the options to the values given",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "setOptions",
        "normalized": "Options-\u003ea()",
        "package": "libcspm",
        "partial": "Options",
        "signature": "Options-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#v:tcOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "ErrorOptions",
        "fct-source": "src/CSPM-CommandLineOptions.html#Options",
        "fct-type": "function",
        "title": "tcOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "tcOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-CommandLineOptions.html#v:typeCheckerOptions",
      "description": {
        "fct-descr": "\u003cp\u003eAll options for the type-checker.\n\u003c/p\u003e",
        "fct-module": "CSPM.CommandLineOptions",
        "fct-package": "libcspm",
        "fct-signature": "(a -\u003e Options) -\u003e (a -\u003e Options -\u003e a) -\u003e [OptDescr (a -\u003e a)]",
        "fct-source": "src/CSPM-CommandLineOptions.html#typeCheckerOptions",
        "fct-type": "function",
        "title": "typeCheckerOptions"
      },
      "index": {
        "description": "All options for the type-checker",
        "hierarchy": "CSPM CommandLineOptions",
        "module": "CSPM.CommandLineOptions",
        "name": "typeCheckerOptions",
        "normalized": "(a-\u003eOptions)-\u003e(a-\u003eOptions-\u003ea)-\u003e[OptDescr(a-\u003ea)]",
        "package": "libcspm",
        "partial": "Checker Options",
        "signature": "(a-\u003eOptions)-\u003e(a-\u003eOptions-\u003ea)-\u003e[OptDescr(a-\u003ea)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-FreeVars.html#",
      "description": {
        "fct-module": "CSPM.DataStructures.FreeVars",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-DataStructures-FreeVars.html",
        "fct-type": "module",
        "title": "FreeVars"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures FreeVars",
        "module": "CSPM.DataStructures.FreeVars",
        "name": "FreeVars",
        "normalized": "",
        "package": "libcspm",
        "partial": "Free Vars",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-FreeVars.html#t:BoundNames",
      "description": {
        "fct-module": "CSPM.DataStructures.FreeVars",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-DataStructures-FreeVars.html#BoundNames",
        "fct-type": "class",
        "title": "BoundNames"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures FreeVars",
        "module": "CSPM.DataStructures.FreeVars",
        "name": "BoundNames",
        "normalized": "",
        "package": "libcspm",
        "partial": "Bound Names",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-FreeVars.html#t:FreeVars",
      "description": {
        "fct-module": "CSPM.DataStructures.FreeVars",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-DataStructures-FreeVars.html#FreeVars",
        "fct-type": "class",
        "title": "FreeVars"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures FreeVars",
        "module": "CSPM.DataStructures.FreeVars",
        "name": "FreeVars",
        "normalized": "",
        "package": "libcspm",
        "partial": "Free Vars",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-FreeVars.html#v:boundNames",
      "description": {
        "fct-module": "CSPM.DataStructures.FreeVars",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e [Name]",
        "fct-source": "src/CSPM-DataStructures-FreeVars.html#boundNames",
        "fct-type": "method",
        "title": "boundNames"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures FreeVars",
        "module": "CSPM.DataStructures.FreeVars",
        "name": "boundNames",
        "normalized": "a-\u003e[Name]",
        "package": "libcspm",
        "partial": "Names",
        "signature": "a-\u003e[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-FreeVars.html#v:freeVars",
      "description": {
        "fct-module": "CSPM.DataStructures.FreeVars",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e [Name]",
        "fct-source": "src/CSPM-DataStructures-FreeVars.html#freeVars",
        "fct-type": "method",
        "title": "freeVars"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures FreeVars",
        "module": "CSPM.DataStructures.FreeVars",
        "name": "freeVars",
        "normalized": "a-\u003e[Name]",
        "package": "libcspm",
        "partial": "Vars",
        "signature": "a-\u003e[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-FreeVars.html#v:freeVars-39-",
      "description": {
        "fct-module": "CSPM.DataStructures.FreeVars",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e [Name]",
        "fct-source": "src/CSPM-DataStructures-FreeVars.html#freeVars%27",
        "fct-type": "method",
        "title": "freeVars'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures FreeVars",
        "module": "CSPM.DataStructures.FreeVars",
        "name": "freeVars'",
        "normalized": "a-\u003e[Name]",
        "package": "libcspm",
        "partial": "Vars'",
        "signature": "a-\u003e[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Literals.html#",
      "description": {
        "fct-module": "CSPM.DataStructures.Literals",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-DataStructures-Literals.html",
        "fct-type": "module",
        "title": "Literals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Literals",
        "module": "CSPM.DataStructures.Literals",
        "name": "Literals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Literals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Literals.html#t:Literal",
      "description": {
        "fct-module": "CSPM.DataStructures.Literals",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Literals.html#Literal",
        "fct-type": "data",
        "title": "Literal"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Literals",
        "module": "CSPM.DataStructures.Literals",
        "name": "Literal",
        "normalized": "",
        "package": "libcspm",
        "partial": "Literal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Literals.html#v:Bool",
      "description": {
        "fct-descr": "\u003cp\u003eA boolean.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Literals",
        "fct-package": "libcspm",
        "fct-signature": "Bool Bool",
        "fct-source": "src/CSPM-DataStructures-Literals.html#Literal",
        "fct-type": "function",
        "title": "Bool"
      },
      "index": {
        "description": "boolean",
        "hierarchy": "CSPM DataStructures Literals",
        "module": "CSPM.DataStructures.Literals",
        "name": "Bool",
        "normalized": "",
        "package": "libcspm",
        "partial": "Bool",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Literals.html#v:Char",
      "description": {
        "fct-descr": "\u003cp\u003eA character.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Literals",
        "fct-package": "libcspm",
        "fct-signature": "Char Char",
        "fct-source": "src/CSPM-DataStructures-Literals.html#Literal",
        "fct-type": "function",
        "title": "Char"
      },
      "index": {
        "description": "character",
        "hierarchy": "CSPM DataStructures Literals",
        "module": "CSPM.DataStructures.Literals",
        "name": "Char",
        "normalized": "",
        "package": "libcspm",
        "partial": "Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Literals.html#v:Int",
      "description": {
        "fct-descr": "\u003cp\u003eAn integer. This is finite size, as per the FDR spec.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Literals",
        "fct-package": "libcspm",
        "fct-signature": "Int Int",
        "fct-source": "src/CSPM-DataStructures-Literals.html#Literal",
        "fct-type": "function",
        "title": "Int"
      },
      "index": {
        "description": "An integer This is finite size as per the FDR spec",
        "hierarchy": "CSPM DataStructures Literals",
        "module": "CSPM.DataStructures.Literals",
        "name": "Int",
        "normalized": "",
        "package": "libcspm",
        "partial": "Int",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Literals.html#v:String",
      "description": {
        "fct-descr": "\u003cp\u003eA string.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Literals",
        "fct-package": "libcspm",
        "fct-signature": "String String",
        "fct-source": "src/CSPM-DataStructures-Literals.html#Literal",
        "fct-type": "function",
        "title": "String"
      },
      "index": {
        "description": "string",
        "hierarchy": "CSPM DataStructures Literals",
        "module": "CSPM.DataStructures.Literals",
        "name": "String",
        "normalized": "",
        "package": "libcspm",
        "partial": "String",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eNames used by the evaluator. This is heavily inspired by GHC.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-DataStructures-Names.html",
        "fct-type": "module",
        "title": "Names"
      },
      "index": {
        "description": "Names used by the evaluator This is heavily inspired by GHC",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "Names",
        "normalized": "",
        "package": "libcspm",
        "partial": "Names",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#t:Name",
      "description": {
        "fct-descr": "\u003cp\u003eA renamed name and is the exclusive type used after the renamer. Names\n are guaranteed to be unique, meaning that two names are equal iff they\n refer to the same binding instance. For example, consider the following CSPM\n code:\n\u003c/p\u003e\u003cpre\u003e\n      f = 1\n      g = let f = 2 within (f, f)\n\u003c/pre\u003e\u003cp\u003eThis will be renamed to:\n\u003c/p\u003e\u003cpre\u003e\n      f0 = 1\n      g = let f1 = 2 within (f1, f1)\n\u003c/pre\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "data",
        "title": "Name"
      },
      "index": {
        "description": "renamed name and is the exclusive type used after the renamer Names are guaranteed to be unique meaning that two names are equal iff they refer to the same binding instance For example consider the following CSPM code let within This will be renamed to f0 let f1 within f1 f1",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "Name",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#t:NameType",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Names.html#NameType",
        "fct-type": "data",
        "title": "NameType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "NameType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#t:OccName",
      "description": {
        "fct-descr": "\u003cp\u003eA name that occurs in the source code somewhere.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Names.html#OccName",
        "fct-type": "data",
        "title": "OccName"
      },
      "index": {
        "description": "name that occurs in the source code somewhere",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "OccName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Occ Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#t:UnRenamedName",
      "description": {
        "fct-descr": "\u003cp\u003eA name that has not yet been renamed. Created by the parser.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Names.html#UnRenamedName",
        "fct-type": "data",
        "title": "UnRenamedName"
      },
      "index": {
        "description": "name that has not yet been renamed Created by the parser",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "UnRenamedName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Un Renamed Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:ExternalName",
      "description": {
        "fct-descr": "\u003cp\u003eAn externally visible name (like a top level definition).\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "ExternalName",
        "fct-source": "src/CSPM-DataStructures-Names.html#NameType",
        "fct-type": "function",
        "title": "ExternalName"
      },
      "index": {
        "description": "An externally visible name like top level definition",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "ExternalName",
        "normalized": "",
        "package": "libcspm",
        "partial": "External Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:InternalName",
      "description": {
        "fct-descr": "\u003cp\u003eA name created by the renamer, but from the users' source (e.g. from\n a lambda).\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "InternalName",
        "fct-source": "src/CSPM-DataStructures-Names.html#NameType",
        "fct-type": "function",
        "title": "InternalName"
      },
      "index": {
        "description": "name created by the renamer but from the users source e.g from lambda",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "InternalName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Internal Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:Name",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "Name",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "function",
        "title": "Name"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "Name",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:OccName",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "OccName String",
        "fct-source": "src/CSPM-DataStructures-Names.html#OccName",
        "fct-type": "function",
        "title": "OccName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "OccName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Occ Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:Qual",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "Qual",
        "fct-source": "src/CSPM-DataStructures-Names.html#UnRenamedName",
        "fct-type": "function",
        "title": "Qual"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "Qual",
        "normalized": "",
        "package": "libcspm",
        "partial": "Qual",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:UnQual",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "UnQual OccName",
        "fct-source": "src/CSPM-DataStructures-Names.html#UnRenamedName",
        "fct-type": "function",
        "title": "UnQual"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "UnQual",
        "normalized": "",
        "package": "libcspm",
        "partial": "Un Qual",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:WiredInName",
      "description": {
        "fct-descr": "\u003cp\u003eA built in name.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "WiredInName",
        "fct-source": "src/CSPM-DataStructures-Names.html#NameType",
        "fct-type": "function",
        "title": "WiredInName"
      },
      "index": {
        "description": "built in name",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "WiredInName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Wired In Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:isNameDataConstructor",
      "description": {
        "fct-descr": "\u003cp\u003eDoes the given Name correspond to a data type or a channel definition.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e Bool",
        "fct-source": "src/CSPM-DataStructures-Names.html#isNameDataConstructor",
        "fct-type": "function",
        "title": "isNameDataConstructor"
      },
      "index": {
        "description": "Does the given Name correspond to data type or channel definition",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "isNameDataConstructor",
        "normalized": "Name-\u003eBool",
        "package": "libcspm",
        "partial": "Name Data Constructor",
        "signature": "Name-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:mkExternalName",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "UnRenamedName -\u003e SrcSpan -\u003e Bool -\u003e m Name",
        "fct-source": "src/CSPM-DataStructures-Names.html#mkExternalName",
        "fct-type": "function",
        "title": "mkExternalName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "mkExternalName",
        "normalized": "UnRenamedName-\u003eSrcSpan-\u003eBool-\u003ea Name",
        "package": "libcspm",
        "partial": "External Name",
        "signature": "UnRenamedName-\u003eSrcSpan-\u003eBool-\u003em Name"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:mkFreshInternalName",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "m Name",
        "fct-source": "src/CSPM-DataStructures-Names.html#mkFreshInternalName",
        "fct-type": "function",
        "title": "mkFreshInternalName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "mkFreshInternalName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Fresh Internal Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:mkInternalName",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "UnRenamedName -\u003e SrcSpan -\u003e m Name",
        "fct-source": "src/CSPM-DataStructures-Names.html#mkInternalName",
        "fct-type": "function",
        "title": "mkInternalName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "mkInternalName",
        "normalized": "UnRenamedName-\u003eSrcSpan-\u003ea Name",
        "package": "libcspm",
        "partial": "Internal Name",
        "signature": "UnRenamedName-\u003eSrcSpan-\u003em Name"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:mkWiredInName",
      "description": {
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "UnRenamedName -\u003e Bool -\u003e m Name",
        "fct-source": "src/CSPM-DataStructures-Names.html#mkWiredInName",
        "fct-type": "function",
        "title": "mkWiredInName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "mkWiredInName",
        "normalized": "UnRenamedName-\u003eBool-\u003ea Name",
        "package": "libcspm",
        "partial": "Wired In Name",
        "signature": "UnRenamedName-\u003eBool-\u003em Name"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:nameDefinition",
      "description": {
        "fct-descr": "\u003cp\u003eWhere this name was defined. If this occurs in a pattern, then it\n will be equal to the location of the pattern, otherwise it will be\n equal to the location of the definition that this name binds to.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "!SrcSpan",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "function",
        "title": "nameDefinition"
      },
      "index": {
        "description": "Where this name was defined If this occurs in pattern then it will be equal to the location of the pattern otherwise it will be equal to the location of the definition that this name binds to",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "nameDefinition",
        "normalized": "",
        "package": "libcspm",
        "partial": "Definition",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:nameFullyQualified",
      "description": {
        "fct-descr": "\u003cp\u003eThe original occurence of this name (used for error messages).\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "!UnRenamedName",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "function",
        "title": "nameFullyQualified"
      },
      "index": {
        "description": "The original occurence of this name used for error messages",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "nameFullyQualified",
        "normalized": "",
        "package": "libcspm",
        "partial": "Fully Qualified",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:nameIsConstructor",
      "description": {
        "fct-descr": "\u003cp\u003eIs this name a type constructor, i.e. a datatype or a channel?\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "function",
        "title": "nameIsConstructor"
      },
      "index": {
        "description": "Is this name type constructor i.e datatype or channel",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "nameIsConstructor",
        "normalized": "",
        "package": "libcspm",
        "partial": "Is Constructor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:nameType",
      "description": {
        "fct-descr": "\u003cp\u003eThe type of this name.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "NameType",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "function",
        "title": "nameType"
      },
      "index": {
        "description": "The type of this name",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "nameType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:nameUnique",
      "description": {
        "fct-descr": "\u003cp\u003eThe unique identifier for this name. Inserted by the renamer.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/CSPM-DataStructures-Names.html#Name",
        "fct-type": "function",
        "title": "nameUnique"
      },
      "index": {
        "description": "The unique identifier for this name Inserted by the renamer",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "nameUnique",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unique",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:unRenamedNameMemberName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "UnRenamedName",
        "fct-source": "src/CSPM-DataStructures-Names.html#UnRenamedName",
        "fct-type": "function",
        "title": "unRenamedNameMemberName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "unRenamedNameMemberName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Renamed Name Member Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Names.html#v:unRenamedNameModuleName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Names",
        "fct-package": "libcspm",
        "fct-signature": "OccName",
        "fct-source": "src/CSPM-DataStructures-Names.html#UnRenamedName",
        "fct-type": "function",
        "title": "unRenamedNameModuleName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Names",
        "module": "CSPM.DataStructures.Names",
        "name": "unRenamedNameModuleName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Renamed Name Module Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module represents the abstract syntax tree of machine CSP.\n Most of the datatypes are parameterised over the type of variables that they\n contain. Before renaming (by \u003ccode\u003e\u003ca\u003eRenamer\u003c/a\u003e\u003c/code\u003e) the variables are of type \n \u003ccode\u003e\u003ca\u003eUnRenamedName\u003c/a\u003e\u003c/code\u003e, wheras after renaming they are of type \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e (and are\n hence associated with their bindings instances). Furthermore, nearly all\n pieces of syntax are annoated with their location in the source code, and\n (sometimes) with their type (but only after type checking). This is done \n using the \u003ccode\u003e\u003ca\u003eAnnotated\u003c/a\u003e\u003c/code\u003e datatype.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-DataStructures-Syntax.html",
        "fct-type": "module",
        "title": "Syntax"
      },
      "index": {
        "description": "This module represents the abstract syntax tree of machine CSP Most of the datatypes are parameterised over the type of variables that they contain Before renaming by Renamer the variables are of type UnRenamedName wheras after renaming they are of type Name and are hence associated with their bindings instances Furthermore nearly all pieces of syntax are annoated with their location in the source code and sometimes with their type but only after type checking This is done using the Annotated datatype",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Syntax",
        "normalized": "",
        "package": "libcspm",
        "partial": "Syntax",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnAssertion",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnAssertion",
        "fct-type": "type",
        "title": "AnAssertion"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnAssertion",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Assertion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnCSPMFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnCSPMFile",
        "fct-type": "type",
        "title": "AnCSPMFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnCSPMFile",
        "normalized": "",
        "package": "libcspm",
        "partial": "An CSPMFile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnDataTypeClause",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnDataTypeClause",
        "fct-type": "type",
        "title": "AnDataTypeClause"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnDataTypeClause",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Data Type Clause",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnDecl",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnDecl",
        "fct-type": "type",
        "title": "AnDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnDecl",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnExp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnExp",
        "fct-type": "type",
        "title": "AnExp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnExp",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Exp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnField",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnField",
        "fct-type": "type",
        "title": "AnField"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnField",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Field",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnInteractiveStmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnInteractiveStmt",
        "fct-type": "type",
        "title": "AnInteractiveStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnInteractiveStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Interactive Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnMatch",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnMatch",
        "fct-type": "type",
        "title": "AnMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnMatch",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnPat",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnPat",
        "fct-type": "type",
        "title": "AnPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnSType",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnSType",
        "fct-type": "type",
        "title": "AnSType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnSType",
        "normalized": "",
        "package": "libcspm",
        "partial": "An SType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnSTypeConstraint",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnSTypeConstraint",
        "fct-type": "type",
        "title": "AnSTypeConstraint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnSTypeConstraint",
        "normalized": "",
        "package": "libcspm",
        "partial": "An SType Constraint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnSTypeScheme",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnSTypeScheme",
        "fct-type": "type",
        "title": "AnSTypeScheme"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnSTypeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "An SType Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:AnStmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#AnStmt",
        "fct-type": "type",
        "title": "AnStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AnStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "An Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Assertion",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "data",
        "title": "Assertion"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Assertion",
        "normalized": "",
        "package": "libcspm",
        "partial": "Assertion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:BinaryBooleanOp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "data",
        "title": "BinaryBooleanOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "BinaryBooleanOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Boolean Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:BinaryMathsOp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryMathsOp",
        "fct-type": "data",
        "title": "BinaryMathsOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "BinaryMathsOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Maths Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:CSPMFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#CSPMFile",
        "fct-type": "data",
        "title": "CSPMFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "CSPMFile",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPMFile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:DataTypeClause",
      "description": {
        "fct-descr": "\u003cp\u003eThe clause of a datatype, e.g. if a datatype declaration was:\n\u003c/p\u003e\u003cpre\u003e datatype T = A.Int.Bool | B.Bool | C\n\u003c/pre\u003e\u003cp\u003eThen T would have three datatype clauses, one for each of its tags (i.e.\n \u003ccode\u003eA\u003c/code\u003e, \u003ccode\u003eB\u003c/code\u003e and \u003ccode\u003eC\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#DataTypeClause",
        "fct-type": "data",
        "title": "DataTypeClause"
      },
      "index": {
        "description": "The clause of datatype e.g if datatype declaration was datatype A.Int.Bool B.Bool Then would have three datatype clauses one for each of its tags i.e and",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "DataTypeClause",
        "normalized": "",
        "package": "libcspm",
        "partial": "Data Type Clause",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Decl",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "data",
        "title": "Decl"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Decl",
        "normalized": "",
        "package": "libcspm",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Exp",
      "description": {
        "fct-descr": "\u003cp\u003eAn expression.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "data",
        "title": "Exp"
      },
      "index": {
        "description": "An expression",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Exp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Field",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Field",
        "fct-type": "data",
        "title": "Field"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Field",
        "normalized": "",
        "package": "libcspm",
        "partial": "Field",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:InteractiveStmt",
      "description": {
        "fct-descr": "\u003cp\u003eA statement in an interactive session.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#InteractiveStmt",
        "fct-type": "data",
        "title": "InteractiveStmt"
      },
      "index": {
        "description": "statement in an interactive session",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "InteractiveStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Match",
      "description": {
        "fct-descr": "\u003cp\u003eMatches occur on the left hand side of a function declaration and there\n is one \u003ccode\u003e\u003ca\u003eMatch\u003c/a\u003e\u003c/code\u003e for each clause of the declaration. For example, given the\n declaration:\n\u003c/p\u003e\u003cpre\u003e\n      f(\u003ca/\u003e) = 0\n      f(\u003ca\u003ex\u003c/a\u003e^xs) = 1+f(xs)\n\u003c/pre\u003e\u003cp\u003ethere would be two matches.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Match",
        "fct-type": "data",
        "title": "Match"
      },
      "index": {
        "description": "Matches occur on the left hand side of function declaration and there is one Match for each clause of the declaration For example given the declaration xs xs there would be two matches",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Match",
        "normalized": "",
        "package": "libcspm",
        "partial": "Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Model",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "data",
        "title": "Model"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Model",
        "normalized": "",
        "package": "libcspm",
        "partial": "Model",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:ModelOption",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#ModelOption",
        "fct-type": "data",
        "title": "ModelOption"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ModelOption",
        "normalized": "",
        "package": "libcspm",
        "partial": "Model Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PAssertion",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PAssertion",
        "fct-type": "type",
        "title": "PAssertion"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PAssertion",
        "normalized": "",
        "package": "libcspm",
        "partial": "PAssertion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PCSPMFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PCSPMFile",
        "fct-type": "type",
        "title": "PCSPMFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PCSPMFile",
        "normalized": "",
        "package": "libcspm",
        "partial": "PCSPMFile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PDataTypeClause",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PDataTypeClause",
        "fct-type": "type",
        "title": "PDataTypeClause"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PDataTypeClause",
        "normalized": "",
        "package": "libcspm",
        "partial": "PData Type Clause",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PDecl",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PDecl",
        "fct-type": "type",
        "title": "PDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PDecl",
        "normalized": "",
        "package": "libcspm",
        "partial": "PDecl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PExp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PExp",
        "fct-type": "type",
        "title": "PExp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PExp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PExp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PField",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PField",
        "fct-type": "type",
        "title": "PField"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PField",
        "normalized": "",
        "package": "libcspm",
        "partial": "PField",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PInteractiveStmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PInteractiveStmt",
        "fct-type": "type",
        "title": "PInteractiveStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PInteractiveStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInteractive Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PMatch",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PMatch",
        "fct-type": "type",
        "title": "PMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PMatch",
        "normalized": "",
        "package": "libcspm",
        "partial": "PMatch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PPat",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PPat",
        "fct-type": "type",
        "title": "PPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "PPat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PSType",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PSType",
        "fct-type": "type",
        "title": "PSType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PSType",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PSTypeConstraint",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PSTypeConstraint",
        "fct-type": "type",
        "title": "PSTypeConstraint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PSTypeConstraint",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSType Constraint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PSTypeScheme",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PSTypeScheme",
        "fct-type": "type",
        "title": "PSTypeScheme"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PSTypeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSType Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:PStmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#PStmt",
        "fct-type": "type",
        "title": "PStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "PStmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Pat",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "data",
        "title": "Pat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Pat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:SType",
      "description": {
        "fct-descr": "\u003cp\u003eA syntatic type.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "data",
        "title": "SType"
      },
      "index": {
        "description": "syntatic type",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SType",
        "normalized": "",
        "package": "libcspm",
        "partial": "SType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:STypeConstraint",
      "description": {
        "fct-descr": "\u003cp\u003eA syntatic type constraint.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeConstraint",
        "fct-type": "data",
        "title": "STypeConstraint"
      },
      "index": {
        "description": "syntatic type constraint",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STypeConstraint",
        "normalized": "",
        "package": "libcspm",
        "partial": "SType Constraint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:STypeScheme",
      "description": {
        "fct-descr": "\u003cp\u003eA syntatic type scheme.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeScheme",
        "fct-type": "data",
        "title": "STypeScheme"
      },
      "index": {
        "description": "syntatic type scheme",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STypeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "SType Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:SemanticProperty",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SemanticProperty",
        "fct-type": "data",
        "title": "SemanticProperty"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SemanticProperty",
        "normalized": "",
        "package": "libcspm",
        "partial": "Semantic Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:Stmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Stmt",
        "fct-type": "data",
        "title": "Stmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Stmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCAssertion",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCAssertion",
        "fct-type": "type",
        "title": "TCAssertion"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCAssertion",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCAssertion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCCSPMFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCCSPMFile",
        "fct-type": "type",
        "title": "TCCSPMFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCCSPMFile",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCCSPMFile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCDataTypeClause",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCDataTypeClause",
        "fct-type": "type",
        "title": "TCDataTypeClause"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCDataTypeClause",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCData Type Clause",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCDecl",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCDecl",
        "fct-type": "type",
        "title": "TCDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCDecl",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCDecl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCExp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCExp",
        "fct-type": "type",
        "title": "TCExp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCExp",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCExp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCField",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCField",
        "fct-type": "type",
        "title": "TCField"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCField",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCField",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCInteractiveStmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCInteractiveStmt",
        "fct-type": "type",
        "title": "TCInteractiveStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCInteractiveStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCInteractive Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCMatch",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCMatch",
        "fct-type": "type",
        "title": "TCMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCMatch",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCMatch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCPat",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCPat",
        "fct-type": "type",
        "title": "TCPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCPat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCSType",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCSType",
        "fct-type": "type",
        "title": "TCSType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCSType",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCSType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCSTypeConstraint",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCSTypeConstraint",
        "fct-type": "type",
        "title": "TCSTypeConstraint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCSTypeConstraint",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCSType Constraint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCSTypeScheme",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCSTypeScheme",
        "fct-type": "type",
        "title": "TCSTypeScheme"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCSTypeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCSType Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:TCStmt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#TCStmt",
        "fct-type": "type",
        "title": "TCStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TCStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TCStmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:UnaryBooleanOp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#UnaryBooleanOp",
        "fct-type": "data",
        "title": "UnaryBooleanOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "UnaryBooleanOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unary Boolean Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#t:UnaryMathsOp",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#UnaryMathsOp",
        "fct-type": "data",
        "title": "UnaryMathsOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "UnaryMathsOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unary Maths Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ASNot",
      "description": {
        "fct-descr": "\u003cp\u003eThe negation of an assertion, not currently supported.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ASNot (AnAssertion id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "ASNot"
      },
      "index": {
        "description": "The negation of an assertion not currently supported",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ASNot",
        "normalized": "",
        "package": "libcspm",
        "partial": "ASNot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:AlphaParallel",
      "description": {
        "fct-descr": "\u003cp\u003eAlphabetised parallel, e.g. \u003ccode\u003eP [A || B] Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AlphaParallel",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "AlphaParallel"
      },
      "index": {
        "description": "Alphabetised parallel e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "AlphaParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alpha Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:And",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "And",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "And"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "And",
        "normalized": "",
        "package": "libcspm",
        "partial": "And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:App",
      "description": {
        "fct-descr": "\u003cp\u003eFunction application.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "App",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "App"
      },
      "index": {
        "description": "Function application",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "App",
        "normalized": "",
        "package": "libcspm",
        "partial": "App",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Assert",
      "description": {
        "fct-descr": "\u003cp\u003eAn assertion in a file, e.g. \u003ccode\u003eassert P [T= Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Assert (AnAssertion id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "Assert"
      },
      "index": {
        "description": "An assertion in file e.g assert",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Assert",
        "normalized": "",
        "package": "libcspm",
        "partial": "Assert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Bind",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Bind [AnDecl id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#InteractiveStmt",
        "fct-type": "function",
        "title": "Bind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Bind",
        "normalized": "Bind[AnDecl a]",
        "package": "libcspm",
        "partial": "Bind",
        "signature": "Bind[AnDecl id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:BooleanBinaryOp",
      "description": {
        "fct-descr": "\u003cp\u003eApplication of a binary boolean operator.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "BooleanBinaryOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "BooleanBinaryOp"
      },
      "index": {
        "description": "Application of binary boolean operator",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "BooleanBinaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Boolean Binary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:BooleanUnaryOp",
      "description": {
        "fct-descr": "\u003cp\u003eApplication of a unary boolean operator.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "BooleanUnaryOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "BooleanUnaryOp"
      },
      "index": {
        "description": "Application of unary boolean operator",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "BooleanUnaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Boolean Unary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:CSPMFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "CSPMFile [AnDecl id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#CSPMFile",
        "fct-type": "function",
        "title": "CSPMFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "CSPMFile",
        "normalized": "CSPMFile[AnDecl a]",
        "package": "libcspm",
        "partial": "CSPMFile",
        "signature": "CSPMFile[AnDecl id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Channel",
      "description": {
        "fct-descr": "\u003cp\u003eA channel declaration, e.g. \u003ccode\u003echannel c, d : {0..1}.{0..1}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Channel [id] (Maybe (AnExp id))",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "Channel"
      },
      "index": {
        "description": "channel declaration e.g channel",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Channel",
        "normalized": "Channel[a](Maybe(AnExp a))",
        "package": "libcspm",
        "partial": "Channel",
        "signature": "Channel[id](Maybe(AnExp id))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Concat",
      "description": {
        "fct-descr": "\u003cp\u003eList concatenation, e.g. \u003ccode\u003ex^y\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Concat",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Concat"
      },
      "index": {
        "description": "List concatenation e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Concat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Concat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:DataType",
      "description": {
        "fct-descr": "\u003cp\u003eA datatype declaration, e.g. \u003ccode\u003edatatype T = Clause1 | Clause2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "DataType id [AnDataTypeClause id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "DataType"
      },
      "index": {
        "description": "datatype declaration e.g datatype Clause1 Clause2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "DataType",
        "normalized": "DataType a[AnDataTypeClause a]",
        "package": "libcspm",
        "partial": "Data Type",
        "signature": "DataType id[AnDataTypeClause id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:DataTypeClause",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "DataTypeClause",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#DataTypeClause",
        "fct-type": "function",
        "title": "DataTypeClause"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "DataTypeClause",
        "normalized": "",
        "package": "libcspm",
        "partial": "Data Type Clause",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:DeadlockFreedom",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "DeadlockFreedom",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SemanticProperty",
        "fct-type": "function",
        "title": "DeadlockFreedom"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "DeadlockFreedom",
        "normalized": "",
        "package": "libcspm",
        "partial": "Deadlock Freedom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Deterministic",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Deterministic",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SemanticProperty",
        "fct-type": "function",
        "title": "Deterministic"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Deterministic",
        "normalized": "",
        "package": "libcspm",
        "partial": "Deterministic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Divide",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Divide",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryMathsOp",
        "fct-type": "function",
        "title": "Divide"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Divide",
        "normalized": "",
        "package": "libcspm",
        "partial": "Divide",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:DotApp",
      "description": {
        "fct-descr": "\u003cp\u003eDot operator application, e.g. \u003ccode\u003ec.x\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "DotApp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "DotApp"
      },
      "index": {
        "description": "Dot operator application e.g c.x",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "DotApp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Dot App",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Equals",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Equals",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "Equals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Equals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Equals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Evaluate",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Evaluate (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#InteractiveStmt",
        "fct-type": "function",
        "title": "Evaluate"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Evaluate",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Exception",
      "description": {
        "fct-descr": "\u003cp\u003eException operator, e.g. \u003ccode\u003eP [| A |\u003e Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Exception",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Exception"
      },
      "index": {
        "description": "Exception operator e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Exception",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exception",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ExpPatDoublePattern",
      "description": {
        "fct-descr": "\u003cp\u003eUsed only for parsing - never appears in an AST.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ExpPatDoublePattern (AnExp id) (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ExpPatDoublePattern"
      },
      "index": {
        "description": "Used only for parsing never appears in an AST",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ExpPatDoublePattern",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exp Pat Double Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ExpPatWildCard",
      "description": {
        "fct-descr": "\u003cp\u003eUsed only for parsing - never appears in an AST.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ExpPatWildCard",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ExpPatWildCard"
      },
      "index": {
        "description": "Used only for parsing never appears in an AST",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ExpPatWildCard",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exp Pat Wild Card",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:External",
      "description": {
        "fct-descr": "\u003cp\u003eAn import of an external function, e.g. \u003ccode\u003eexternal test\u003c/code\u003e,\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "External",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "External"
      },
      "index": {
        "description": "An import of an external function e.g external test",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "External",
        "normalized": "",
        "package": "libcspm",
        "partial": "External",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ExternalChoice",
      "description": {
        "fct-descr": "\u003cp\u003eExternal choice, e.g. \u003ccode\u003eP [] Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ExternalChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ExternalChoice"
      },
      "index": {
        "description": "External choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "External Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Failures",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Failures",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Failures"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Failures",
        "normalized": "",
        "package": "libcspm",
        "partial": "Failures",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:FailuresDivergences",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "FailuresDivergences",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "FailuresDivergences"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "FailuresDivergences",
        "normalized": "",
        "package": "libcspm",
        "partial": "Failures Divergences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:FunBind",
      "description": {
        "fct-descr": "\u003cp\u003eA function binding, e.g. \u003ccode\u003efunc(x,y)(z) = 0\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "FunBind id [AnMatch id] (Maybe (AnSTypeScheme id))",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "FunBind"
      },
      "index": {
        "description": "function binding e.g func",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "FunBind",
        "normalized": "FunBind a[AnMatch a](Maybe(AnSTypeScheme a))",
        "package": "libcspm",
        "partial": "Fun Bind",
        "signature": "FunBind id[AnMatch id](Maybe(AnSTypeScheme id))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:GenParallel",
      "description": {
        "fct-descr": "\u003cp\u003eGeneralised parallel, e.g. \u003ccode\u003eP [| A |] Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "GenParallel",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "GenParallel"
      },
      "index": {
        "description": "Generalised parallel e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "GenParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Gen Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Generator",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Generator (AnPat id) (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Stmt",
        "fct-type": "function",
        "title": "Generator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Generator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Generator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:GreaterThan",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "GreaterThan",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "GreaterThan"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "GreaterThan",
        "normalized": "",
        "package": "libcspm",
        "partial": "Greater Than",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:GreaterThanEq",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "GreaterThanEq",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "GreaterThanEq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "GreaterThanEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "Greater Than Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:GuardedExp",
      "description": {
        "fct-descr": "\u003cp\u003eGuarded expressions, e.g. \u003ccode\u003eb & P\u003c/code\u003e where \u003ccode\u003eb\u003c/code\u003e is a boolean expression.\n This is equivalent to \u003ccode\u003eif b then P else STOP\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "GuardedExp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "GuardedExp"
      },
      "index": {
        "description": "Guarded expressions e.g where is boolean expression This is equivalent to if then else STOP",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "GuardedExp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Guarded Exp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Hiding",
      "description": {
        "fct-descr": "\u003cp\u003eHiding of events, e.g. \u003ccode\u003eP  A\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Hiding",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Hiding"
      },
      "index": {
        "description": "Hiding of events e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Hiding",
        "normalized": "",
        "package": "libcspm",
        "partial": "Hiding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:If",
      "description": {
        "fct-descr": "\u003cp\u003eIf statements, e.g. \u003ccode\u003eif cond then e1 else e2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "If",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "If"
      },
      "index": {
        "description": "If statements e.g if cond then e1 else e2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "If",
        "normalized": "",
        "package": "libcspm",
        "partial": "If",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Input",
      "description": {
        "fct-descr": "\u003cpre\u003e?x:A\u003c/pre\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Input (AnPat id) (Maybe (AnExp id))",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Field",
        "fct-type": "function",
        "title": "Input"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Input",
        "normalized": "",
        "package": "libcspm",
        "partial": "Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Interleave",
      "description": {
        "fct-descr": "\u003cp\u003eInterleaving of processes, e.g. \u003ccode\u003eP ||| Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Interleave",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Interleave"
      },
      "index": {
        "description": "Interleaving of processes e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Interleave",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interleave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:InternalChoice",
      "description": {
        "fct-descr": "\u003cp\u003eInternal choice, e.g. \u003ccode\u003eP |~| Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "InternalChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "InternalChoice"
      },
      "index": {
        "description": "Internal choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "InternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "Internal Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Interrupt",
      "description": {
        "fct-descr": "\u003cp\u003eInterrupt (where the left process is turned off once the right process\n performs an event), e.g. \u003ccode\u003eP / Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Interrupt",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Interrupt"
      },
      "index": {
        "description": "Interrupt where the left process is turned off once the right process performs an event e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Interrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Lambda",
      "description": {
        "fct-descr": "\u003cp\u003eLambda functions, e.g. \u003ccode\u003e(x,y) @ e(x,y)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Lambda",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Lambda"
      },
      "index": {
        "description": "Lambda functions e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Lambda",
        "normalized": "",
        "package": "libcspm",
        "partial": "Lambda",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:LessThan",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "LessThan",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "LessThan"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "LessThan",
        "normalized": "",
        "package": "libcspm",
        "partial": "Less Than",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:LessThanEq",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "LessThanEq",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "LessThanEq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "LessThanEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "Less Than Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Let",
      "description": {
        "fct-descr": "\u003cp\u003eLet declarations, e.g. \u003ccode\u003elet func = e1 within e2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Let",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Let"
      },
      "index": {
        "description": "Let declarations e.g let func e1 within e2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Let",
        "normalized": "",
        "package": "libcspm",
        "partial": "Let",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:LinkParallel",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "LinkParallel",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "LinkParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "LinkParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Link Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:List",
      "description": {
        "fct-descr": "\u003cp\u003eList literals, e.g. \u003ccode\u003e\u003ca\u003e1,2,3\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "List",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "List"
      },
      "index": {
        "description": "List literals e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "List",
        "normalized": "",
        "package": "libcspm",
        "partial": "List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ListComp",
      "description": {
        "fct-descr": "\u003cp\u003eList comprehensions, e.g. \u003ccode\u003e\u003ca\u003e| (x,y) \u003c- e\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ListComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ListComp"
      },
      "index": {
        "description": "List comprehensions e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ListComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ListEnumFrom",
      "description": {
        "fct-descr": "\u003cp\u003eInfinite list of integers from the given value, e.g. \u003ccode\u003e\u003ca\u003e1..\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ListEnumFrom",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ListEnumFrom"
      },
      "index": {
        "description": "Infinite list of integers from the given value e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ListEnumFrom",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Enum From",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ListEnumFromComp",
      "description": {
        "fct-descr": "\u003cp\u003eList of integers from the given value, concatenating all adjacent\n lists, e.g. \u003ccode\u003e\u003ca\u003e| x \u003c- \u003c0\u003c/a\u003e\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ListEnumFromComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ListEnumFromComp"
      },
      "index": {
        "description": "List of integers from the given value concatenating all adjacent lists e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ListEnumFromComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Enum From Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ListEnumFromTo",
      "description": {
        "fct-descr": "\u003cp\u003eBounded list of integers between the given values, e.g. \u003ccode\u003e\u003ca\u003e1..3\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ListEnumFromTo",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ListEnumFromTo"
      },
      "index": {
        "description": "Bounded list of integers between the given values e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ListEnumFromTo",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Enum From To",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ListEnumFromToComp",
      "description": {
        "fct-descr": "\u003cp\u003eList of integers between the given values, concatenating all items into\n one list, e.g. \u003ccode\u003e\u003ca\u003e| (x,y) \u003c- \u003c(0,1)\u003c/a\u003e\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ListEnumFromToComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ListEnumFromToComp"
      },
      "index": {
        "description": "List of integers between the given values concatenating all items into one list e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ListEnumFromToComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Enum From To Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ListLength",
      "description": {
        "fct-descr": "\u003cp\u003eThe length of the list, e.g. \u003ccode\u003e#list\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ListLength",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ListLength"
      },
      "index": {
        "description": "The length of the list e.g list",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ListLength",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Lit",
      "description": {
        "fct-descr": "\u003cp\u003eLiterals, e.g. \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003e1\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Lit",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Lit"
      },
      "index": {
        "description": "Literals e.g true or",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Lit",
        "normalized": "",
        "package": "libcspm",
        "partial": "Lit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:LivelockFreedom",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "LivelockFreedom",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SemanticProperty",
        "fct-type": "function",
        "title": "LivelockFreedom"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "LivelockFreedom",
        "normalized": "",
        "package": "libcspm",
        "partial": "Livelock Freedom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Map",
      "description": {
        "fct-descr": "\u003cp\u003eA literal map, e.g. \u003ccode\u003e(| 1 =\u003e 2 |)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Map",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Map"
      },
      "index": {
        "description": "literal map e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Map",
        "normalized": "",
        "package": "libcspm",
        "partial": "Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Match",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Match",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Match",
        "fct-type": "function",
        "title": "Match"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Match",
        "normalized": "",
        "package": "libcspm",
        "partial": "Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:MathsBinaryOp",
      "description": {
        "fct-descr": "\u003cp\u003eApplication of binary maths operator, e.g. \u003ccode\u003ex+y\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "MathsBinaryOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "MathsBinaryOp"
      },
      "index": {
        "description": "Application of binary maths operator e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "MathsBinaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Maths Binary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:MathsUnaryOp",
      "description": {
        "fct-descr": "\u003cp\u003eApplication of unary maths operator, e.g. \u003ccode\u003e-x\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "MathsUnaryOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "MathsUnaryOp"
      },
      "index": {
        "description": "Application of unary maths operator e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "MathsUnaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Maths Unary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Minus",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Minus",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryMathsOp",
        "fct-type": "function",
        "title": "Minus"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Minus",
        "normalized": "",
        "package": "libcspm",
        "partial": "Minus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Mod",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Mod",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryMathsOp",
        "fct-type": "function",
        "title": "Mod"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Mod",
        "normalized": "",
        "package": "libcspm",
        "partial": "Mod",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Module",
      "description": {
        "fct-descr": "\u003cp\u003eA module declaration, e.g. \u003ccode\u003emodule X(Y,Z) ... export ... endmodule\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Module",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "Module"
      },
      "index": {
        "description": "module declaration e.g module export endmodule",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Module",
        "normalized": "",
        "package": "libcspm",
        "partial": "Module",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ModuleInstance",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ModuleInstance",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "ModuleInstance"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ModuleInstance",
        "normalized": "",
        "package": "libcspm",
        "partial": "Module Instance",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:NameType",
      "description": {
        "fct-descr": "\u003cp\u003eA nametype declaration, e.g. \u003ccode\u003enametype T2 = T.T\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "NameType id (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "NameType"
      },
      "index": {
        "description": "nametype declaration e.g nametype T2 T.T",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "NameType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Negate",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Negate",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#UnaryMathsOp",
        "fct-type": "function",
        "title": "Negate"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Negate",
        "normalized": "",
        "package": "libcspm",
        "partial": "Negate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:NonDetInput",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e$x:A\u003c/code\u003e (see P395 UCS)\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "NonDetInput (AnPat id) (Maybe (AnExp id))",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Field",
        "fct-type": "function",
        "title": "NonDetInput"
      },
      "index": {
        "description": "see P395 UCS",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "NonDetInput",
        "normalized": "",
        "package": "libcspm",
        "partial": "Non Det Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Not",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Not",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#UnaryBooleanOp",
        "fct-type": "function",
        "title": "Not"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Not",
        "normalized": "",
        "package": "libcspm",
        "partial": "Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:NotEquals",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "NotEquals",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "NotEquals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "NotEquals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Not Equals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Or",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Or",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryBooleanOp",
        "fct-type": "function",
        "title": "Or"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Or",
        "normalized": "",
        "package": "libcspm",
        "partial": "Or",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Output",
      "description": {
        "fct-descr": "\u003cpre\u003e!x\u003c/pre\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Output (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Field",
        "fct-type": "function",
        "title": "Output"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Output",
        "normalized": "",
        "package": "libcspm",
        "partial": "Output",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PCompDot",
      "description": {
        "fct-descr": "\u003cp\u003eLike with a \u003ccode\u003e\u003ca\u003ePCompList\u003c/a\u003e\u003c/code\u003e we flatten nested dot patterns to make it\n easier to evaluate.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PCompDot",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PCompDot"
      },
      "index": {
        "description": "Like with PCompList we flatten nested dot patterns to make it easier to evaluate",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PCompDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "PComp Dot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PCompList",
      "description": {
        "fct-descr": "\u003cp\u003eSince you can write list patterns such as:\n\u003c/p\u003e\u003cpre\u003e f(\u003cx,y\u003e^xs^\u003cz,p\u003e^\u003c9,0\u003e)\n f(\u003cx,y\u003e)\n f(xs^\u003cx,y\u003e)\n\u003c/pre\u003e\u003cp\u003ewe need an easy may of matching them. Thus, we compile\n the patterns to a \u003ccode\u003ePCompList\u003c/code\u003e instead.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003ePCompList ps (Just (p, ps'))\u003c/code\u003e corresponds to a list\n where it starts with ps (where each p in ps matches exactly one\n list element, has a middle of p (which must be a variable pattern, \n or a wildcard) and and end matching exactly ps' (again, where each p\n in ps matches exactly one list component).\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PCompList",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PCompList"
      },
      "index": {
        "description": "Since you can write list patterns such as xs xs we need an easy may of matching them Thus we compile the patterns to PCompList instead PCompList ps Just ps corresponds to list where it starts with ps where each in ps matches exactly one list element has middle of which must be variable pattern or wildcard and and end matching exactly ps again where each in ps matches exactly one list component",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PCompList",
        "normalized": "",
        "package": "libcspm",
        "partial": "PComp List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PConcat",
      "description": {
        "fct-descr": "\u003cp\u003eThe concatenation of two patterns, e.g. \u003ccode\u003ep1^p2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PConcat",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PConcat"
      },
      "index": {
        "description": "The concatenation of two patterns e.g p1 p2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PConcat",
        "normalized": "",
        "package": "libcspm",
        "partial": "PConcat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PDotApp",
      "description": {
        "fct-descr": "\u003cp\u003eThe dot of two patterns, e.g. \u003ccode\u003ep1.p2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PDotApp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PDotApp"
      },
      "index": {
        "description": "The dot of two patterns e.g p1.p2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PDotApp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PDot App",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PDoublePattern",
      "description": {
        "fct-descr": "\u003cp\u003eA double pattern match, e.g. \u003ccode\u003ep1@@p2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PDoublePattern",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PDoublePattern"
      },
      "index": {
        "description": "double pattern match e.g p1@@p2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PDoublePattern",
        "normalized": "",
        "package": "libcspm",
        "partial": "PDouble Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PList",
      "description": {
        "fct-descr": "\u003cp\u003eA literal pattern list, e.g. \u003ccode\u003e\u003ca\u003ep1,p2,p3\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PList",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PList"
      },
      "index": {
        "description": "literal pattern list e.g p1 p2 p3",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PList",
        "normalized": "",
        "package": "libcspm",
        "partial": "PList",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PLit",
      "description": {
        "fct-descr": "\u003cp\u003eA literal pattern, e.g. \u003ccode\u003etrue\u003c/code\u003e, or \u003ccode\u003e0\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PLit",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PLit"
      },
      "index": {
        "description": "literal pattern e.g true or",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PLit",
        "normalized": "",
        "package": "libcspm",
        "partial": "PLit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PParen",
      "description": {
        "fct-descr": "\u003cp\u003eA user supplied parenthesis in a pattern.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PParen",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PParen"
      },
      "index": {
        "description": "user supplied parenthesis in pattern",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PParen",
        "normalized": "",
        "package": "libcspm",
        "partial": "PParen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PSet",
      "description": {
        "fct-descr": "\u003cp\u003eA set pattern. Only singleton patterns, or zero patterns are supported.\n This is checked by the desugarer. For example, \u003ccode\u003e{p1,p2}\u003c/code\u003e is not allowed,\n but \u003ccode\u003e{p1}\u003c/code\u003e and \u003ccode\u003e{}\u003c/code\u003e are allowed.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PSet",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PSet"
      },
      "index": {
        "description": "set pattern Only singleton patterns or zero patterns are supported This is checked by the desugarer For example p1 p2 is not allowed but p1 and are allowed",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PTuple",
      "description": {
        "fct-descr": "\u003cp\u003eA tuple pattern, e.g. \u003ccode\u003e(p1,p2,p3)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PTuple",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PTuple"
      },
      "index": {
        "description": "tuple pattern e.g p1 p2 p3",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PTuple",
        "normalized": "",
        "package": "libcspm",
        "partial": "PTuple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PVar",
      "description": {
        "fct-descr": "\u003cp\u003eA variable pattern, e.g. \u003ccode\u003ex\u003c/code\u003e, or \u003ccode\u003eA\u003c/code\u003e where \u003ccode\u003eA\u003c/code\u003e is a datatype clause. \n If the variable is a datatype clause then it only matches that datatype\n tag, whereas for anything else it matches anything.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PVar",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PVar"
      },
      "index": {
        "description": "variable pattern e.g or where is datatype clause If the variable is datatype clause then it only matches that datatype tag whereas for anything else it matches anything",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "PVar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PWildCard",
      "description": {
        "fct-descr": "\u003cp\u003eMatches anything but does not bind it.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PWildCard",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "PWildCard"
      },
      "index": {
        "description": "Matches anything but does not bind it",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PWildCard",
        "normalized": "",
        "package": "libcspm",
        "partial": "PWild Card",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Paren",
      "description": {
        "fct-descr": "\u003cp\u003eA user provided bracket, e.g. \u003ccode\u003e(e)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Paren",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Paren"
      },
      "index": {
        "description": "user provided bracket e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Paren",
        "normalized": "",
        "package": "libcspm",
        "partial": "Paren",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ParsedTypeAnnotation",
      "description": {
        "fct-descr": "\u003cp\u003eA type annotation for the given names. This is only used inside the\n parser and never appears in outside ASTs.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ParsedTypeAnnotation [id] (AnSTypeScheme id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "ParsedTypeAnnotation"
      },
      "index": {
        "description": "type annotation for the given names This is only used inside the parser and never appears in outside ASTs",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ParsedTypeAnnotation",
        "normalized": "ParsedTypeAnnotation[a](AnSTypeScheme a)",
        "package": "libcspm",
        "partial": "Parsed Type Annotation",
        "signature": "ParsedTypeAnnotation[id](AnSTypeScheme id)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PatBind",
      "description": {
        "fct-descr": "\u003cp\u003eThe binding of a pattern to an expression, e.g. \u003ccode\u003e(p,q) = e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PatBind (AnPat id) (AnExp id) (Maybe (AnSTypeScheme id))",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "PatBind"
      },
      "index": {
        "description": "The binding of pattern to an expression e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PatBind",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pat Bind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Plus",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Plus",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryMathsOp",
        "fct-type": "function",
        "title": "Plus"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Plus",
        "normalized": "",
        "package": "libcspm",
        "partial": "Plus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Prefix",
      "description": {
        "fct-descr": "\u003cp\u003eEvent prefixing, e.g. \u003ccode\u003ec$x?y!z -\u003e P\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Prefix",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Prefix"
      },
      "index": {
        "description": "Event prefixing e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Prefix",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PrintStatement",
      "description": {
        "fct-descr": "\u003cp\u003eA print statement, e.g. \u003ccode\u003eprint x\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PrintStatement",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "PrintStatement"
      },
      "index": {
        "description": "print statement e.g print",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PrintStatement",
        "normalized": "",
        "package": "libcspm",
        "partial": "Print Statement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:PropertyCheck",
      "description": {
        "fct-descr": "\u003cp\u003eA check of property, like deadlock freedom, e.g. \n \u003ccode\u003eassert P :[deadlock free [F]]\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "PropertyCheck",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "PropertyCheck"
      },
      "index": {
        "description": "check of property like deadlock freedom e.g assert deadlock free",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "PropertyCheck",
        "normalized": "",
        "package": "libcspm",
        "partial": "Property Check",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Qualifier",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Qualifier (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Stmt",
        "fct-type": "function",
        "title": "Qualifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Qualifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Qualifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Refinement",
      "description": {
        "fct-descr": "\u003cp\u003eA refinement assertion, e.g. \u003ccode\u003eassert P [F= Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Refinement",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "Refinement"
      },
      "index": {
        "description": "refinement assertion e.g assert",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Refinement",
        "normalized": "",
        "package": "libcspm",
        "partial": "Refinement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Refusals",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Refusals",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Refusals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Refusals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Refusals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:RefusalsDivergences",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "RefusalsDivergences",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "RefusalsDivergences"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "RefusalsDivergences",
        "normalized": "",
        "package": "libcspm",
        "partial": "Refusals Divergences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Rename",
      "description": {
        "fct-descr": "\u003cp\u003eEvent renaming, e.g. \u003ccode\u003eP [[ a.x \u003c- b.x | x \u003c- X ]]\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Rename",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Rename"
      },
      "index": {
        "description": "Event renaming e.g a.x b.x",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Rename",
        "normalized": "",
        "package": "libcspm",
        "partial": "Rename",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedAlphaParallel",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated alphabetised parallel, e.g. \u003ccode\u003e|| x : X @ [| A(x) |] P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedAlphaParallel",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedAlphaParallel"
      },
      "index": {
        "description": "Replicated alphabetised parallel e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedAlphaParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Alpha Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedExternalChoice",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated external choice, e.g. \u003ccode\u003e[] x : X @ P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedExternalChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedExternalChoice"
      },
      "index": {
        "description": "Replicated external choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated External Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedInterleave",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated interleave, e.g. \u003ccode\u003e||| x : X @ P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedInterleave",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedInterleave"
      },
      "index": {
        "description": "Replicated interleave e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedInterleave",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Interleave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedInternalChoice",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated internal choice, e.g. \u003ccode\u003e|~| x : X @ P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedInternalChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedInternalChoice"
      },
      "index": {
        "description": "Replicated internal choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedInternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Internal Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedLinkParallel",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated link parallel, e.g. \n \u003ccode\u003e[a.x \u003c- b.x | x \u003c- X(y)] y : Y @ P(y)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedLinkParallel",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedLinkParallel"
      },
      "index": {
        "description": "Replicated link parallel e.g a.x b.x",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedLinkParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Link Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedParallel",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated parallel, e.g. \u003ccode\u003e[| A |] x : X @ P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedParallel",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedParallel"
      },
      "index": {
        "description": "Replicated parallel e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedSequentialComp",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated sequential choice, e.g. \u003ccode\u003e; x : \u003ca\u003e0,1\u003c/a\u003e @ P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedSequentialComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedSequentialComp"
      },
      "index": {
        "description": "Replicated sequential choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedSequentialComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Sequential Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ReplicatedSynchronisingExternalChoice",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated synchronising external choice, e.g. \u003ccode\u003e[+ A +] x : X @ P(x)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "ReplicatedSynchronisingExternalChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ReplicatedSynchronisingExternalChoice"
      },
      "index": {
        "description": "Replicated synchronising external choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ReplicatedSynchronisingExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replicated Synchronising External Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Revivals",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Revivals",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Revivals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Revivals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Revivals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:RevivalsDivergences",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "RevivalsDivergences",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "RevivalsDivergences"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "RevivalsDivergences",
        "normalized": "",
        "package": "libcspm",
        "partial": "Revivals Divergences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:RunAssertion",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "RunAssertion (AnAssertion id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#InteractiveStmt",
        "fct-type": "function",
        "title": "RunAssertion"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "RunAssertion",
        "normalized": "",
        "package": "libcspm",
        "partial": "Run Assertion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STBool",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STBool",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STBool"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STBool",
        "normalized": "",
        "package": "libcspm",
        "partial": "STBool",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STChar",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STChar",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STChar",
        "normalized": "",
        "package": "libcspm",
        "partial": "STChar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STDatatype",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STDatatype id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STDatatype"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STDatatype",
        "normalized": "",
        "package": "libcspm",
        "partial": "STDatatype",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STDot",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STDot (AnSType id) (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STDot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "STDot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STDotable",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STDotable (AnSType id) (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STDotable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STDotable",
        "normalized": "",
        "package": "libcspm",
        "partial": "STDotable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STEvent",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STEvent",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STEvent"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STEvent",
        "normalized": "",
        "package": "libcspm",
        "partial": "STEvent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STExtendable",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STExtendable (AnSType id) id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STExtendable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STExtendable",
        "normalized": "",
        "package": "libcspm",
        "partial": "STExtendable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STFunction",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STFunction [AnSType id] (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STFunction",
        "normalized": "STFunction[AnSType a](AnSType a)",
        "package": "libcspm",
        "partial": "STFunction",
        "signature": "STFunction[AnSType id](AnSType id)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STInt",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STInt",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STInt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STInt",
        "normalized": "",
        "package": "libcspm",
        "partial": "STInt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STMap",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STMap (AnSType id) (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STMap"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "STMap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STParen",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STParen (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STParen"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STParen",
        "normalized": "",
        "package": "libcspm",
        "partial": "STParen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STProc",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STProc",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STProc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STProc",
        "normalized": "",
        "package": "libcspm",
        "partial": "STProc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STSeq",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STSeq (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STSeq",
        "normalized": "",
        "package": "libcspm",
        "partial": "STSeq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STSet",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STSet (AnSType id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "STSet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STTuple",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STTuple [AnSType id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STTuple"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STTuple",
        "normalized": "STTuple[AnSType a]",
        "package": "libcspm",
        "partial": "STTuple",
        "signature": "STTuple[AnSType id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STVar",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STVar id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#SType",
        "fct-type": "function",
        "title": "STVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "STVar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STypeConstraint",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STypeConstraint",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeConstraint",
        "fct-type": "function",
        "title": "STypeConstraint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STypeConstraint",
        "normalized": "",
        "package": "libcspm",
        "partial": "SType Constraint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:STypeScheme",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "STypeScheme",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeScheme",
        "fct-type": "function",
        "title": "STypeScheme"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "STypeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "SType Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SequentialComp",
      "description": {
        "fct-descr": "\u003cp\u003eSequential composition, e.g. \u003ccode\u003eP; Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SequentialComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SequentialComp"
      },
      "index": {
        "description": "Sequential composition e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SequentialComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Sequential Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Set",
      "description": {
        "fct-descr": "\u003cp\u003eSet literals, e.g. \u003ccode\u003e{1,2,3}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Set",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Set"
      },
      "index": {
        "description": "Set literals e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Set",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetComp",
      "description": {
        "fct-descr": "\u003cp\u003eSet comprehensions, e.g. \u003ccode\u003e{x,y | (x,y) \u003c- e}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetComp"
      },
      "index": {
        "description": "Set comprehensions e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetEnum",
      "description": {
        "fct-descr": "\u003cp\u003eEnumerated Sets, i.e. sets that complete the events, e.g. \u003ccode\u003e{| c.x |}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetEnum",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetEnum"
      },
      "index": {
        "description": "Enumerated Sets i.e sets that complete the events e.g c.x",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetEnum",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Enum",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetEnumComp",
      "description": {
        "fct-descr": "\u003cp\u003eSet comprehension version of \u003ccode\u003e\u003ca\u003eSetEnum\u003c/a\u003e\u003c/code\u003e, e.g. \u003ccode\u003e{| c.x | x \u003c- xs |}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetEnumComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetEnumComp"
      },
      "index": {
        "description": "Set comprehension version of SetEnum e.g c.x xs",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetEnumComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Enum Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetEnumFrom",
      "description": {
        "fct-descr": "\u003cp\u003eThe infinite set of integers from the given value, e.g. \u003ccode\u003e{5..}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetEnumFrom",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetEnumFrom"
      },
      "index": {
        "description": "The infinite set of integers from the given value e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetEnumFrom",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Enum From",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetEnumFromComp",
      "description": {
        "fct-descr": "\u003cp\u003eSet of integers from the given value, concatenating all adjacent\n sets, e.g. \u003ccode\u003e{x.. | x \u003c- {0}}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetEnumFromComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetEnumFromComp"
      },
      "index": {
        "description": "Set of integers from the given value concatenating all adjacent sets e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetEnumFromComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Enum From Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetEnumFromTo",
      "description": {
        "fct-descr": "\u003cp\u003eThe bounded set of integers between the two given values, e.g. \n \u003ccode\u003e{5..6}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetEnumFromTo",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetEnumFromTo"
      },
      "index": {
        "description": "The bounded set of integers between the two given values e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetEnumFromTo",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Enum From To",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SetEnumFromToComp",
      "description": {
        "fct-descr": "\u003cp\u003eSet of integers between the given values, concatenating all items into\n one set, e.g. \u003ccode\u003e{x..y | (x,y) \u003c- {(0,1)}}\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SetEnumFromToComp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SetEnumFromToComp"
      },
      "index": {
        "description": "Set of integers between the given values concatenating all items into one set e.g x..y",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SetEnumFromToComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set Enum From To Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SlidingChoice",
      "description": {
        "fct-descr": "\u003cp\u003eSliding choice, e.g. \u003ccode\u003eP |\u003e Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SlidingChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SlidingChoice"
      },
      "index": {
        "description": "Sliding choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SlidingChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "Sliding Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SubType",
      "description": {
        "fct-descr": "\u003cp\u003eA subtype declaration, e.g. \u003ccode\u003esubtype T = Clause1 | Clause2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SubType id [AnDataTypeClause id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "SubType"
      },
      "index": {
        "description": "subtype declaration e.g subtype Clause1 Clause2",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SubType",
        "normalized": "SubType a[AnDataTypeClause a]",
        "package": "libcspm",
        "partial": "Sub Type",
        "signature": "SubType id[AnDataTypeClause id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SynchronisingExternalChoice",
      "description": {
        "fct-descr": "\u003cp\u003eSynchronising external choice, e.g. \u003ccode\u003eP [+A+] Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SynchronisingExternalChoice",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SynchronisingExternalChoice"
      },
      "index": {
        "description": "Synchronising external choice e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SynchronisingExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "Synchronising External Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:SynchronisingInterrupt",
      "description": {
        "fct-descr": "\u003cp\u003eSynchronising interrupt, e.g. \u003ccode\u003eP /+A+ Q\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SynchronisingInterrupt",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "SynchronisingInterrupt"
      },
      "index": {
        "description": "Synchronising interrupt e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "SynchronisingInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "Synchronising Interrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:TauPriority",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "TauPriority (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#ModelOption",
        "fct-type": "function",
        "title": "TauPriority"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TauPriority",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tau Priority",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:TimedPrefix",
      "description": {
        "fct-descr": "\u003cp\u003eA timed prefix - only appears after desugaring.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "TimedPrefix",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "TimedPrefix"
      },
      "index": {
        "description": "timed prefix only appears after desugaring",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TimedPrefix",
        "normalized": "",
        "package": "libcspm",
        "partial": "Timed Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:TimedSection",
      "description": {
        "fct-descr": "\u003cp\u003eA timed section, e.g. \u003ccode\u003eTimed(f) { P = a -\u003e b -\u003e P }\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "TimedSection",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "TimedSection"
      },
      "index": {
        "description": "timed section e.g Timed",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "TimedSection",
        "normalized": "",
        "package": "libcspm",
        "partial": "Timed Section",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Times",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Times",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#BinaryMathsOp",
        "fct-type": "function",
        "title": "Times"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Times",
        "normalized": "",
        "package": "libcspm",
        "partial": "Times",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Traces",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Traces",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Traces"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Traces",
        "normalized": "",
        "package": "libcspm",
        "partial": "Traces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Transparent",
      "description": {
        "fct-descr": "\u003cp\u003eAn import of a transparent function, e.g. \u003ccode\u003etransparent normal\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Transparent",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "Transparent"
      },
      "index": {
        "description": "An import of transparent function e.g transparent normal",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Transparent",
        "normalized": "",
        "package": "libcspm",
        "partial": "Transparent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eTuples, e.g. \u003ccode\u003e(1,2)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Tuple",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Tuple"
      },
      "index": {
        "description": "Tuples e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Tuple",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tuple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:Var",
      "description": {
        "fct-descr": "\u003cp\u003eVariables, e.g. \u003ccode\u003ex\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Var",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "Var"
      },
      "index": {
        "description": "Variables e.g",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "Var",
        "normalized": "",
        "package": "libcspm",
        "partial": "Var",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:allAssertionsInFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnCSPMFile a -\u003e [AnAssertion a]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#allAssertionsInFile",
        "fct-type": "function",
        "title": "allAssertionsInFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "allAssertionsInFile",
        "normalized": "AnCSPMFile a-\u003e[AnAssertion a]",
        "package": "libcspm",
        "partial": "Assertions In File",
        "signature": "AnCSPMFile a-\u003e[AnAssertion a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:allPrintStatementsInFile",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnCSPMFile a -\u003e [Located String]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#allPrintStatementsInFile",
        "fct-type": "function",
        "title": "allPrintStatementsInFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "allPrintStatementsInFile",
        "normalized": "AnCSPMFile a-\u003e[Located String]",
        "package": "libcspm",
        "partial": "Print Statements In File",
        "signature": "AnCSPMFile a-\u003e[Located String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:alphaParAlphabetLeftProcess",
      "description": {
        "fct-descr": "\u003cp\u003eAlphabet of process 1.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "alphaParAlphabetLeftProcess"
      },
      "index": {
        "description": "Alphabet of process",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "alphaParAlphabetLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Alphabet Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:alphaParAlphabetRightProcess",
      "description": {
        "fct-descr": "\u003cp\u003eAlphabet of process 2.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "alphaParAlphabetRightProcess"
      },
      "index": {
        "description": "Alphabet of process",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "alphaParAlphabetRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Alphabet Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:alphaParLeftProcess",
      "description": {
        "fct-descr": "\u003cp\u003eProcess 1.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "alphaParLeftProcess"
      },
      "index": {
        "description": "Process",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "alphaParLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:alphaParRightProcess",
      "description": {
        "fct-descr": "\u003cp\u003eProcess 2.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "alphaParRightProcess"
      },
      "index": {
        "description": "Process",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "alphaParRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:appArguments",
      "description": {
        "fct-descr": "\u003cp\u003eThe arguments applied to the function\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "appArguments"
      },
      "index": {
        "description": "The arguments applied to the function",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "appArguments",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Arguments",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:appFunction",
      "description": {
        "fct-descr": "\u003cp\u003eThe function.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "appFunction"
      },
      "index": {
        "description": "The function",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "appFunction",
        "normalized": "",
        "package": "libcspm",
        "partial": "Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:booleanBinaryOpLeftExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "booleanBinaryOpLeftExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "booleanBinaryOpLeftExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Op Left Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:booleanBinaryOpOperator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "BinaryBooleanOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "booleanBinaryOpOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "booleanBinaryOpOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Op Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:booleanBinaryOpRightExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "booleanBinaryOpRightExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "booleanBinaryOpRightExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Op Right Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:concatLeftList",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "concatLeftList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "concatLeftList",
        "normalized": "",
        "package": "libcspm",
        "partial": "Left List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:concatRightList",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "concatRightList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "concatRightList",
        "normalized": "",
        "package": "libcspm",
        "partial": "Right List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:dataTypeClauseName",
      "description": {
        "fct-descr": "\u003cp\u003eThe name of the datatype clause.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#DataTypeClause",
        "fct-type": "function",
        "title": "dataTypeClauseName"
      },
      "index": {
        "description": "The name of the datatype clause",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "dataTypeClauseName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Clause Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:dataTypeClauseTypeExpression",
      "description": {
        "fct-descr": "\u003cp\u003eThe expression that gives the set of values that can be dotted\n with this clause. For example, in the above example the datatype\n clause for A would have \u003ca\u003eInt.Bool\u003c/a\u003e as its type expression.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Maybe (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#DataTypeClause",
        "fct-type": "function",
        "title": "dataTypeClauseTypeExpression"
      },
      "index": {
        "description": "The expression that gives the set of values that can be dotted with this clause For example in the above example the datatype clause for would have Int.Bool as its type expression",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "dataTypeClauseTypeExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Clause Type Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:dotAppLeftArgument",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "dotAppLeftArgument"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "dotAppLeftArgument",
        "normalized": "",
        "package": "libcspm",
        "partial": "App Left Argument",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:dotAppRighArgument",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "dotAppRighArgument"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "dotAppRighArgument",
        "normalized": "",
        "package": "libcspm",
        "partial": "App Righ Argument",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:exceptionAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "exceptionAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "exceptionAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:exceptionLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "exceptionLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "exceptionLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:exceptionRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "exceptionRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "exceptionRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:extChoiceLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "extChoiceLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "extChoiceLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Choice Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:extChoiceRightOperator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "extChoiceRightOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "extChoiceRightOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Choice Right Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:externalImportedNames",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "externalImportedNames"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "externalImportedNames",
        "normalized": "[a]",
        "package": "libcspm",
        "partial": "Imported Names",
        "signature": "[id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:genParallelAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "genParallelAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "genParallelAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parallel Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:genParallelLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "genParallelLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "genParallelLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parallel Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:genParallelRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "genParallelRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "genParallelRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parallel Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:getSymbolTable",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Annotated (Maybe SymbolTable, PSymbolTable) a -\u003e SymbolTable",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#getSymbolTable",
        "fct-type": "function",
        "title": "getSymbolTable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "getSymbolTable",
        "normalized": "Annotated(Maybe SymbolTable,PSymbolTable)a-\u003eSymbolTable",
        "package": "libcspm",
        "partial": "Symbol Table",
        "signature": "Annotated(Maybe SymbolTable,PSymbolTable)a-\u003eSymbolTable"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:getType",
      "description": {
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Annotated (Maybe Type, PType) a -\u003e Type",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#getType",
        "fct-type": "function",
        "title": "getType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "getType",
        "normalized": "Annotated(Maybe Type,PType)a-\u003eType",
        "package": "libcspm",
        "partial": "Type",
        "signature": "Annotated(Maybe Type,PType)a-\u003eType"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:guardedExpCondition",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "guardedExpCondition"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "guardedExpCondition",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exp Condition",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:guardedExpProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "guardedExpProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "guardedExpProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exp Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:hidingAlphabet",
      "description": {
        "fct-descr": "\u003cp\u003eThe set of events to be hidden.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "hidingAlphabet"
      },
      "index": {
        "description": "The set of events to be hidden",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "hidingAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:hidingProcess",
      "description": {
        "fct-descr": "\u003cp\u003eThe process the hiding is applied to.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "hidingProcess"
      },
      "index": {
        "description": "The process the hiding is applied to",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "hidingProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ifCondition",
      "description": {
        "fct-descr": "\u003cp\u003eThe condition of the if.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ifCondition"
      },
      "index": {
        "description": "The condition of the if",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ifCondition",
        "normalized": "",
        "package": "libcspm",
        "partial": "Condition",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ifElseBranch",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ifElseBranch"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ifElseBranch",
        "normalized": "",
        "package": "libcspm",
        "partial": "Else Branch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:ifThenBranch",
      "description": {
        "fct-descr": "\u003cp\u003eThe then branch.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "ifThenBranch"
      },
      "index": {
        "description": "The then branch",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "ifThenBranch",
        "normalized": "",
        "package": "libcspm",
        "partial": "Then Branch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:intChoiceLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "intChoiceLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "intChoiceLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Choice Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:intChoiceRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "intChoiceRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "intChoiceRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Choice Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:interleaveLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "interleaveLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "interleaveLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:interleaveRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "interleaveRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "interleaveRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:interruptLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "interruptLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "interruptLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:interruptRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "interruptRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "interruptRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:lambdaBindingPatterns",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "lambdaBindingPatterns"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "lambdaBindingPatterns",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "Binding Patterns",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:lambdaRightHandSide",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "lambdaRightHandSide"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "lambdaRightHandSide",
        "normalized": "",
        "package": "libcspm",
        "partial": "Right Hand Side",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:letDeclarations",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnDecl id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "letDeclarations"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "letDeclarations",
        "normalized": "[AnDecl a]",
        "package": "libcspm",
        "partial": "Declarations",
        "signature": "[AnDecl id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:letExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "letExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "letExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:linkParLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "linkParLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "linkParLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:linkParRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "linkParRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "linkParRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:linkParTieStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "linkParTieStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "linkParTieStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Par Tie Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:linkParTiedEvents",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[(AnExp id, AnExp id)]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "linkParTiedEvents"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "linkParTiedEvents",
        "normalized": "[(AnExp a,AnExp a)]",
        "package": "libcspm",
        "partial": "Par Tied Events",
        "signature": "[(AnExp id,AnExp id)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listCompItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listCompItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listCompItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Comp Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromCompLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromCompLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromCompLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From Comp Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Enum From Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromToCompLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromToCompLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromToCompLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Comp Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromToCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromToCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromToCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Enum From To Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromToCompUpperBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromToCompUpperBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromToCompUpperBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Comp Upper Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromToLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromToLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromToLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listEnumFromToUpperBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listEnumFromToUpperBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listEnumFromToUpperBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Upper Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:listLengthExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "listLengthExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "listLengthExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Length Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:litLiteral",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Literal",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "litLiteral"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "litLiteral",
        "normalized": "",
        "package": "libcspm",
        "partial": "Literal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:mapKeyValuePairs",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[(AnExp id, AnExp id)]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "mapKeyValuePairs"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "mapKeyValuePairs",
        "normalized": "[(AnExp a,AnExp a)]",
        "package": "libcspm",
        "partial": "Key Value Pairs",
        "signature": "[(AnExp id,AnExp id)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:matchPatterns",
      "description": {
        "fct-descr": "\u003cp\u003eThe patterns that need to be matched. This is a list of lists as\n functions may be curried, like \u003ccode\u003ef(x,y)(z) = ...\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[[AnPat id]]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Match",
        "fct-type": "function",
        "title": "matchPatterns"
      },
      "index": {
        "description": "The patterns that need to be matched This is list of lists as functions may be curried like",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "matchPatterns",
        "normalized": "[[AnPat a]]",
        "package": "libcspm",
        "partial": "Patterns",
        "signature": "[[AnPat id]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:matchRightHandSide",
      "description": {
        "fct-descr": "\u003cp\u003eThe expression to be evaluated if the match succeeds.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Match",
        "fct-type": "function",
        "title": "matchRightHandSide"
      },
      "index": {
        "description": "The expression to be evaluated if the match succeeds",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "matchRightHandSide",
        "normalized": "",
        "package": "libcspm",
        "partial": "Right Hand Side",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:mathsBinaryOpLeftExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "mathsBinaryOpLeftExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "mathsBinaryOpLeftExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Op Left Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:mathsBinaryOpOperator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "BinaryMathsOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "mathsBinaryOpOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "mathsBinaryOpOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Op Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:mathsBinaryOpRightExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "mathsBinaryOpRightExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "mathsBinaryOpRightExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Binary Op Right Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:mathsUnaryOpExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "mathsUnaryOpExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "mathsUnaryOpExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unary Op Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:mathsUnaryOpOperator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "UnaryMathsOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "mathsUnaryOpOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "mathsUnaryOpOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unary Op Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleArguments",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleArguments"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleArguments",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "Arguments",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleExportedDeclarations",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnDecl id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleExportedDeclarations"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleExportedDeclarations",
        "normalized": "[AnDecl a]",
        "package": "libcspm",
        "partial": "Exported Declarations",
        "signature": "[AnDecl id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleInstanceName",
      "description": {
        "fct-descr": "\u003cp\u003eThe name of the module instance.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleInstanceName"
      },
      "index": {
        "description": "The name of the module instance",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleInstanceName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Instance Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleInstanceNameMap",
      "description": {
        "fct-descr": "\u003cp\u003eMap from name of this module to name of inner module.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[(id, id)]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleInstanceNameMap"
      },
      "index": {
        "description": "Map from name of this module to name of inner module",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleInstanceNameMap",
        "normalized": "[(a,a)]",
        "package": "libcspm",
        "partial": "Instance Name Map",
        "signature": "[(id,id)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleInstanceOf",
      "description": {
        "fct-descr": "\u003cp\u003eThe name of the module this is an instance of.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleInstanceOf"
      },
      "index": {
        "description": "The name of the module this is an instance of",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleInstanceOf",
        "normalized": "",
        "package": "libcspm",
        "partial": "Instance Of",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleInstanceOfArguments",
      "description": {
        "fct-descr": "\u003cp\u003eThe arguments of the module that this is an instance of.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleInstanceOfArguments"
      },
      "index": {
        "description": "The arguments of the module that this is an instance of",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleInstanceOfArguments",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Instance Of Arguments",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleInstanceOfDeclaration",
      "description": {
        "fct-descr": "\u003cp\u003eThe module that this is an instance of\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Maybe (AnDecl id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleInstanceOfDeclaration"
      },
      "index": {
        "description": "The module that this is an instance of",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleInstanceOfDeclaration",
        "normalized": "",
        "package": "libcspm",
        "partial": "Instance Of Declaration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:moduleName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "moduleName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "moduleName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:modulePrivateDeclarations",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnDecl id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "modulePrivateDeclarations"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "modulePrivateDeclarations",
        "normalized": "[AnDecl a]",
        "package": "libcspm",
        "partial": "Private Declarations",
        "signature": "[AnDecl id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pConcatLeftPat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pConcatLeftPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pConcatLeftPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Concat Left Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pConcatRightPat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pConcatRightPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pConcatRightPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Concat Right Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pDotItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pDotItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pDotItems",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "Dot Items",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pDotLeftPat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pDotLeftPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pDotLeftPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Dot Left Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pDotOriginalpattern",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Pat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pDotOriginalpattern"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pDotOriginalpattern",
        "normalized": "",
        "package": "libcspm",
        "partial": "Dot Originalpattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pDotRightPat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pDotRightPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pDotRightPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Dot Right Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pDoublePatLeftPat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pDoublePatLeftPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pDoublePatLeftPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Double Pat Left Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pDoublePatRightPat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pDoublePatRightPat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pDoublePatRightPat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Double Pat Right Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pListItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pListItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pListItems",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "List Items",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pListMiddleEndItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Maybe (AnPat id, [AnPat id])",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pListMiddleEndItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pListMiddleEndItems",
        "normalized": "Maybe(AnPat a,[AnPat a])",
        "package": "libcspm",
        "partial": "List Middle End Items",
        "signature": "Maybe(AnPat id,[AnPat id])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pListOriginalPattern",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Pat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pListOriginalPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pListOriginalPattern",
        "normalized": "",
        "package": "libcspm",
        "partial": "List Original Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pListStartItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pListStartItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pListStartItems",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "List Start Items",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pLitLiteral",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Literal",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pLitLiteral"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pLitLiteral",
        "normalized": "",
        "package": "libcspm",
        "partial": "Lit Literal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pParenPattern",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnPat id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pParenPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pParenPattern",
        "normalized": "",
        "package": "libcspm",
        "partial": "Paren Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pSetItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pSetItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pSetItems",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "Set Items",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pTupleItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnPat id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pTupleItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pTupleItems",
        "normalized": "[AnPat a]",
        "package": "libcspm",
        "partial": "Tuple Items",
        "signature": "[AnPat id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:pVarIdentity",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Pat",
        "fct-type": "function",
        "title": "pVarIdentity"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "pVarIdentity",
        "normalized": "",
        "package": "libcspm",
        "partial": "Var Identity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:parenExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "parenExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "parenExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:prefixChannel",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "prefixChannel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "prefixChannel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Channel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:prefixFields",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnField id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "prefixFields"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "prefixFields",
        "normalized": "[AnField a]",
        "package": "libcspm",
        "partial": "Fields",
        "signature": "[AnField id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:prefixProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "prefixProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "prefixProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:printStatement",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "String",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "printStatement"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "printStatement",
        "normalized": "",
        "package": "libcspm",
        "partial": "Statement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:propertyCheckModel",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Maybe Model",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "propertyCheckModel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "propertyCheckModel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Check Model",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:propertyCheckProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "propertyCheckProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "propertyCheckProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Check Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:propertyCheckProperty",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "SemanticProperty",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "propertyCheckProperty"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "propertyCheckProperty",
        "normalized": "",
        "package": "libcspm",
        "partial": "Check Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:refinementImplementation",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "refinementImplementation"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "refinementImplementation",
        "normalized": "",
        "package": "libcspm",
        "partial": "Implementation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:refinementModel",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Model",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "refinementModel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "refinementModel",
        "normalized": "",
        "package": "libcspm",
        "partial": "Model",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:refinementModelOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[ModelOption id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "refinementModelOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "refinementModelOptions",
        "normalized": "[ModelOption a]",
        "package": "libcspm",
        "partial": "Model Options",
        "signature": "[ModelOption id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:refinementSpecification",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Assertion",
        "fct-type": "function",
        "title": "refinementSpecification"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "refinementSpecification",
        "normalized": "",
        "package": "libcspm",
        "partial": "Specification",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:renameProcess",
      "description": {
        "fct-descr": "\u003cp\u003eThe process that is renamed.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "renameProcess"
      },
      "index": {
        "description": "The process that is renamed",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "renameProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:renameTieStatements",
      "description": {
        "fct-descr": "\u003cp\u003eThe statements for the ties.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "renameTieStatements"
      },
      "index": {
        "description": "The statements for the ties",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "renameTieStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Tie Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:renameTiedEvents",
      "description": {
        "fct-descr": "\u003cp\u003eThe events that are renamed, in the format of \u003ccode\u003e(old, new)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[(AnExp id, AnExp id)]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "renameTiedEvents"
      },
      "index": {
        "description": "The events that are renamed in the format of old new",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "renameTiedEvents",
        "normalized": "[(AnExp a,AnExp a)]",
        "package": "libcspm",
        "partial": "Tied Events",
        "signature": "[(AnExp id,AnExp id)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repAlphaParAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repAlphaParAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repAlphaParAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alpha Par Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repAlphaParProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repAlphaParProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repAlphaParProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alpha Par Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repAlphaParReplicatedStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repAlphaParReplicatedStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repAlphaParReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Alpha Par Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repExtChoiceProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repExtChoiceProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repExtChoiceProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Ext Choice Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repExtChoiceReplicatedStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repExtChoiceReplicatedStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repExtChoiceReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Ext Choice Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repIntChoiceProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repIntChoiceProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repIntChoiceProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Int Choice Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repIntChoiceReplicatedStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repIntChoiceReplicatedStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repIntChoiceReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Int Choice Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repInterleaveProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repInterleaveProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repInterleaveProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interleave Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repInterleaveReplicatedStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repInterleaveReplicatedStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repInterleaveReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Interleave Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repLinkParProcess",
      "description": {
        "fct-descr": "\u003cp\u003eThe process\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repLinkParProcess"
      },
      "index": {
        "description": "The process",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repLinkParProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Link Par Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repLinkParReplicatedStatements",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003eStmt\u003c/a\u003e\u003c/code\u003es - the process (and ties) are evaluated once for each \n value generated by these.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repLinkParReplicatedStatements"
      },
      "index": {
        "description": "The Stmt the process and ties are evaluated once for each value generated by these",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repLinkParReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Link Par Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repLinkParTieStatements",
      "description": {
        "fct-descr": "\u003cp\u003eThe statements for the ties.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repLinkParTieStatements"
      },
      "index": {
        "description": "The statements for the ties",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repLinkParTieStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Link Par Tie Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repLinkParTiedChannels",
      "description": {
        "fct-descr": "\u003cp\u003eThe tied events.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[(AnExp id, AnExp id)]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repLinkParTiedChannels"
      },
      "index": {
        "description": "The tied events",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repLinkParTiedChannels",
        "normalized": "[(AnExp a,AnExp a)]",
        "package": "libcspm",
        "partial": "Link Par Tied Channels",
        "signature": "[(AnExp id,AnExp id)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repParAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repParAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repParAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repParProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repParProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repParProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Par Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repParReplicatedStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repParReplicatedStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repParReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Par Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repSeqCompProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repSeqCompProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repSeqCompProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Seq Comp Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repSeqCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repSeqCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repSeqCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Seq Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repSynchronisingExtChoiceAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repSynchronisingExtChoiceAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repSynchronisingExtChoiceAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Synchronising Ext Choice Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repSynchronisingExtChoiceProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repSynchronisingExtChoiceProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repSynchronisingExtChoiceProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Synchronising Ext Choice Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:repSynchronisingExtChoiceReplicatedStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "repSynchronisingExtChoiceReplicatedStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "repSynchronisingExtChoiceReplicatedStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Synchronising Ext Choice Replicated Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:seqCompLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "seqCompLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "seqCompLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Comp Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:seqCompRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "seqCompRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "seqCompRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Comp Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setCompItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setCompItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setCompItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Comp Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumCompItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumCompItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumCompItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Enum Comp Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Enum Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromCompLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromCompLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromCompLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From Comp Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Enum From Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromToCompLowerBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromToCompLowerBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromToCompLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Comp Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromToCompStatements",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnStmt id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromToCompStatements"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromToCompStatements",
        "normalized": "[AnStmt a]",
        "package": "libcspm",
        "partial": "Enum From To Comp Statements",
        "signature": "[AnStmt id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromToCompUpperBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromToCompUpperBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromToCompUpperBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Comp Upper Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromToLowerBound",
      "description": {
        "fct-descr": "\u003cp\u003eThe lower bound.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromToLowerBound"
      },
      "index": {
        "description": "The lower bound",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromToLowerBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Lower Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumFromToUpperBound",
      "description": {
        "fct-descr": "\u003cp\u003eThe upper bound.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumFromToUpperBound"
      },
      "index": {
        "description": "The upper bound",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumFromToUpperBound",
        "normalized": "",
        "package": "libcspm",
        "partial": "Enum From To Upper Bound",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setEnumItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setEnumItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setEnumItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Enum Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:setItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "setItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "setItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:slidingChoiceLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "slidingChoiceLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "slidingChoiceLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Choice Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:slidingChoiceRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "slidingChoiceRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "slidingChoiceRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Choice Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:stypeConstraintName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Constraint",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeConstraint",
        "fct-type": "function",
        "title": "stypeConstraintName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "stypeConstraintName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Constraint Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:stypeConstraintVariable",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeConstraint",
        "fct-type": "function",
        "title": "stypeConstraintVariable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "stypeConstraintVariable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Constraint Variable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:stypeSchemeFreeVars",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeScheme",
        "fct-type": "function",
        "title": "stypeSchemeFreeVars"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "stypeSchemeFreeVars",
        "normalized": "[a]",
        "package": "libcspm",
        "partial": "Scheme Free Vars",
        "signature": "[id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:stypeSchemeType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnSType id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeScheme",
        "fct-type": "function",
        "title": "stypeSchemeType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "stypeSchemeType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scheme Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:stypeSchemeTypeConstraints",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnSTypeConstraint id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#STypeScheme",
        "fct-type": "function",
        "title": "stypeSchemeTypeConstraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "stypeSchemeTypeConstraints",
        "normalized": "[AnSTypeConstraint a]",
        "package": "libcspm",
        "partial": "Scheme Type Constraints",
        "signature": "[AnSTypeConstraint id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:synchronisingExternalChoiceAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "synchronisingExternalChoiceAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "synchronisingExternalChoiceAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "External Choice Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:synchronisingExternalChoiceLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "synchronisingExternalChoiceLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "synchronisingExternalChoiceLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "External Choice Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:synchronisingExternalChoiceRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "synchronisingExternalChoiceRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "synchronisingExternalChoiceRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "External Choice Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:synchronisingInterruptAlphabet",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "synchronisingInterruptAlphabet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "synchronisingInterruptAlphabet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interrupt Alphabet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:synchronisingInterruptLeftProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "synchronisingInterruptLeftProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "synchronisingInterruptLeftProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interrupt Left Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:synchronisingInterruptRightProcess",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "synchronisingInterruptRightProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "synchronisingInterruptRightProcess",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interrupt Right Process",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:timedPrefixOriginalPrefix",
      "description": {
        "fct-descr": "\u003cp\u003eThe original Prefix clause (it MUST be a regular Prefix).\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "timedPrefixOriginalPrefix"
      },
      "index": {
        "description": "The original Prefix clause it MUST be regular Prefix",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "timedPrefixOriginalPrefix",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prefix Original Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:timedPrefixRecursionName",
      "description": {
        "fct-descr": "\u003cp\u003eThe name used to recurse back to this process.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "timedPrefixRecursionName"
      },
      "index": {
        "description": "The name used to recurse back to this process",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "timedPrefixRecursionName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prefix Recursion Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:timedSectionContents",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnDecl id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "timedSectionContents"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "timedSectionContents",
        "normalized": "[AnDecl a]",
        "package": "libcspm",
        "partial": "Section Contents",
        "signature": "[AnDecl id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:timedSectionFunction",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Maybe (AnExp id)",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "timedSectionFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "timedSectionFunction",
        "normalized": "",
        "package": "libcspm",
        "partial": "Section Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:timedSectionTockName",
      "description": {
        "fct-descr": "\u003cp\u003eThe tock instance used - set by the renamer.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "Maybe Name",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "timedSectionTockName"
      },
      "index": {
        "description": "The tock instance used set by the renamer",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "timedSectionTockName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Section Tock Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:transparentImportedNames",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Decl",
        "fct-type": "function",
        "title": "transparentImportedNames"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "transparentImportedNames",
        "normalized": "[a]",
        "package": "libcspm",
        "partial": "Imported Names",
        "signature": "[id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:tupleItems",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "[AnExp id]",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "tupleItems"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "tupleItems",
        "normalized": "[AnExp a]",
        "package": "libcspm",
        "partial": "Items",
        "signature": "[AnExp id]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:unaryBooleanExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "AnExp id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "unaryBooleanExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "unaryBooleanExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Boolean Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:unaryBooleanOpOperator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "UnaryBooleanOp",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "unaryBooleanOpOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "unaryBooleanOpOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Boolean Op Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Syntax.html#v:varIdentity",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Syntax",
        "fct-package": "libcspm",
        "fct-signature": "id",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Exp",
        "fct-type": "function",
        "title": "varIdentity"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Syntax",
        "module": "CSPM.DataStructures.Syntax",
        "name": "varIdentity",
        "normalized": "",
        "package": "libcspm",
        "partial": "Identity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-DataStructures-Types.html",
        "fct-type": "module",
        "title": "Types"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "Types",
        "normalized": "",
        "package": "libcspm",
        "partial": "Types",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:Constraint",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Types.html#Constraint",
        "fct-type": "data",
        "title": "Constraint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "Constraint",
        "normalized": "",
        "package": "libcspm",
        "partial": "Constraint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:PSymbolTable",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Types.html#PSymbolTable",
        "fct-type": "type",
        "title": "PSymbolTable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "PSymbolTable",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSymbol Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:PType",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Types.html#PType",
        "fct-type": "type",
        "title": "PType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "PType",
        "normalized": "",
        "package": "libcspm",
        "partial": "PType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:SymbolTable",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-DataStructures-Types.html#SymbolTable",
        "fct-type": "type",
        "title": "SymbolTable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "SymbolTable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Symbol Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:Type",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "data",
        "title": "Type"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "Type",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:TypeScheme",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeScheme",
        "fct-type": "data",
        "title": "TypeScheme"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TypeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:TypeVar",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVar",
        "fct-type": "data",
        "title": "TypeVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TypeVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Var",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#t:TypeVarRef",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "data",
        "title": "TypeVarRef"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TypeVarRef",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Var Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:CEq",
      "description": {
        "fct-descr": "\u003cp\u003eComparable for equality\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "CEq",
        "fct-source": "src/CSPM-DataStructures-Types.html#Constraint",
        "fct-type": "function",
        "title": "CEq"
      },
      "index": {
        "description": "Comparable for equality",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "CEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "CEq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:CInputable",
      "description": {
        "fct-descr": "\u003cp\u003eCan be input on a channel\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "CInputable",
        "fct-source": "src/CSPM-DataStructures-Types.html#Constraint",
        "fct-type": "function",
        "title": "CInputable"
      },
      "index": {
        "description": "Can be input on channel",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "CInputable",
        "normalized": "",
        "package": "libcspm",
        "partial": "CInputable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:COrd",
      "description": {
        "fct-descr": "\u003cp\u003eOrderable\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "COrd",
        "fct-source": "src/CSPM-DataStructures-Types.html#Constraint",
        "fct-type": "function",
        "title": "COrd"
      },
      "index": {
        "description": "Orderable",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "COrd",
        "normalized": "",
        "package": "libcspm",
        "partial": "COrd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:CSet",
      "description": {
        "fct-descr": "\u003cp\u003eCan form sets of the type.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "CSet",
        "fct-source": "src/CSPM-DataStructures-Types.html#Constraint",
        "fct-type": "function",
        "title": "CSet"
      },
      "index": {
        "description": "Can form sets of the type",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "CSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:CYieldable",
      "description": {
        "fct-descr": "\u003cp\u003eIs something that can be yielded on the right hand side of =\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "CYieldable",
        "fct-source": "src/CSPM-DataStructures-Types.html#Constraint",
        "fct-type": "function",
        "title": "CYieldable"
      },
      "index": {
        "description": "Is something that can be yielded on the right hand side of",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "CYieldable",
        "normalized": "",
        "package": "libcspm",
        "partial": "CYieldable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:ForAll",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "ForAll",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeScheme",
        "fct-type": "function",
        "title": "ForAll"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "ForAll",
        "normalized": "",
        "package": "libcspm",
        "partial": "For All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:RigidTypeVarRef",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "RigidTypeVarRef",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "function",
        "title": "RigidTypeVarRef"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "RigidTypeVarRef",
        "normalized": "",
        "package": "libcspm",
        "partial": "Rigid Type Var Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TBool",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TBool",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TBool"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TBool",
        "normalized": "",
        "package": "libcspm",
        "partial": "TBool",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TChar",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TChar",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TChar",
        "normalized": "",
        "package": "libcspm",
        "partial": "TChar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TDatatype",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TDatatype Name",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TDatatype"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TDatatype",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDatatype",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TDot",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TDot Type Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TDot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TDotable",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TDotable Type Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TDotable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TDotable",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDotable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TEvent",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TEvent",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TEvent"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TEvent",
        "normalized": "",
        "package": "libcspm",
        "partial": "TEvent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TExtendable",
      "description": {
        "fct-descr": "\u003cp\u003eSomething that can be extended via some means to a given type.\n\u003c/p\u003e\u003cp\u003eAfter type-checking, the TypeVarRef will simply be a variable that\n contains Nothing. This means that it can be converted into an explicit\n TDotable via some unknown means, or directly to the return type.\n\u003c/p\u003e\u003cp\u003eThe variable argument here has a slightly special role during\n unification. If it contains Nothing then this is extendable via some\n unknown means to the specified type. If it contains a TDotable argt rt,\n then we know that one of the arguments is argt, and the remaining\n arguments are rt, which must either be a Dotable or a variable. The\n meaning in the former sense is recursive, the meaning in the latter case\n is clear. If it contains  TVar tvref, then this means tvref has replaced\n this argument variable.\n\u003c/p\u003e\u003cp\u003eWe need to do the above as we may have multiple things that are\n extendable in the same way, so we need to sync the arguments together.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TExtendable",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TExtendable"
      },
      "index": {
        "description": "Something that can be extended via some means to given type After type-checking the TypeVarRef will simply be variable that contains Nothing This means that it can be converted into an explicit TDotable via some unknown means or directly to the return type The variable argument here has slightly special role during unification If it contains Nothing then this is extendable via some unknown means to the specified type If it contains TDotable argt rt then we know that one of the arguments is argt and the remaining arguments are rt which must either be Dotable or variable The meaning in the former sense is recursive the meaning in the latter case is clear If it contains TVar tvref then this means tvref has replaced this argument variable We need to do the above as we may have multiple things that are extendable in the same way so we need to sync the arguments together",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TExtendable",
        "normalized": "",
        "package": "libcspm",
        "partial": "TExtendable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TExtendableEmptyDotList",
      "description": {
        "fct-descr": "\u003cp\u003eThis type is used only during type-checking, and is guaranteed to only\n ever appear at the top-level of the left-hand side of a TExtendable.\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TExtendableEmptyDotList",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TExtendableEmptyDotList"
      },
      "index": {
        "description": "This type is used only during type-checking and is guaranteed to only ever appear at the top-level of the left-hand side of TExtendable",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TExtendableEmptyDotList",
        "normalized": "",
        "package": "libcspm",
        "partial": "TExtendable Empty Dot List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TFunction",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TFunction [Type] Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TFunction",
        "normalized": "TFunction[Type]Type",
        "package": "libcspm",
        "partial": "TFunction",
        "signature": "TFunction[Type]Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TInt",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TInt",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TInt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TInt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TInt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TMap",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TMap",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TMap"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "TMap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TProc",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TProc",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TProc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TProc",
        "normalized": "",
        "package": "libcspm",
        "partial": "TProc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TSeq",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TSeq Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TSeq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TSeq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TSet",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TSet Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "TSet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TTuple",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TTuple [Type]",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TTuple"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TTuple",
        "normalized": "TTuple[Type]",
        "package": "libcspm",
        "partial": "TTuple",
        "signature": "TTuple[Type]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TVar",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TVar TypeVarRef",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "TVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "TVar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:TypeVarRef",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TypeVarRef",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "function",
        "title": "TypeVarRef"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "TypeVarRef",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Var Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:collectConstraints",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e [(TypeVarRef, [Constraint])]",
        "fct-source": "src/CSPM-DataStructures-Types.html#collectConstraints",
        "fct-type": "function",
        "title": "collectConstraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "collectConstraints",
        "normalized": "Type-\u003e[(TypeVarRef,[Constraint])]",
        "package": "libcspm",
        "partial": "Constraints",
        "signature": "Type-\u003e[(TypeVarRef,[Constraint])]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:constraintImpliedBy",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Constraint -\u003e Constraint -\u003e Bool",
        "fct-source": "src/CSPM-DataStructures-Types.html#constraintImpliedBy",
        "fct-type": "function",
        "title": "constraintImpliedBy"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "constraintImpliedBy",
        "normalized": "Constraint-\u003eConstraint-\u003eBool",
        "package": "libcspm",
        "partial": "Implied By",
        "signature": "Constraint-\u003eConstraint-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:constraints",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "[Constraint]",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "function",
        "title": "constraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "constraints",
        "normalized": "[Constraint]",
        "package": "libcspm",
        "partial": "",
        "signature": "[Constraint]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:extendableArgument",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TypeVarRef",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "extendableArgument"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "extendableArgument",
        "normalized": "",
        "package": "libcspm",
        "partial": "Argument",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:extendableUltimateType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "extendableUltimateType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "extendableUltimateType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Ultimate Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:freshPSymbolTable",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "m PSymbolTable",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshPSymbolTable",
        "fct-type": "function",
        "title": "freshPSymbolTable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "freshPSymbolTable",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSymbol Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:freshPType",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "m PType",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshPType",
        "fct-type": "function",
        "title": "freshPType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "freshPType",
        "normalized": "",
        "package": "libcspm",
        "partial": "PType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:freshRigidTypeVarWithConstraints",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e [Constraint] -\u003e m Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshRigidTypeVarWithConstraints",
        "fct-type": "function",
        "title": "freshRigidTypeVarWithConstraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "freshRigidTypeVarWithConstraints",
        "normalized": "Name-\u003e[Constraint]-\u003ea Type",
        "package": "libcspm",
        "partial": "Rigid Type Var With Constraints",
        "signature": "Name-\u003e[Constraint]-\u003em Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:freshTypeVar",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "m Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshTypeVar",
        "fct-type": "function",
        "title": "freshTypeVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "freshTypeVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Var",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:freshTypeVarRef",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "[Constraint] -\u003e m TypeVarRef",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshTypeVarRef",
        "fct-type": "function",
        "title": "freshTypeVarRef"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "freshTypeVarRef",
        "normalized": "[Constraint]-\u003ea TypeVarRef",
        "package": "libcspm",
        "partial": "Type Var Ref",
        "signature": "[Constraint]-\u003em TypeVarRef"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:freshTypeVarWithConstraints",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "[Constraint] -\u003e m Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshTypeVarWithConstraints",
        "fct-type": "function",
        "title": "freshTypeVarWithConstraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "freshTypeVarWithConstraints",
        "normalized": "[Constraint]-\u003ea Type",
        "package": "libcspm",
        "partial": "Type Var With Constraints",
        "signature": "[Constraint]-\u003em Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:isRigid",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TypeVarRef -\u003e Bool",
        "fct-source": "src/CSPM-DataStructures-Types.html#isRigid",
        "fct-type": "function",
        "title": "isRigid"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "isRigid",
        "normalized": "TypeVarRef-\u003eBool",
        "package": "libcspm",
        "partial": "Rigid",
        "signature": "TypeVarRef-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:mapKeyType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "mapKeyType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "mapKeyType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Key Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:mapValueType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#Type",
        "fct-type": "function",
        "title": "mapValueType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "mapValueType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Value Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:prettyPrintTypes",
      "description": {
        "fct-descr": "\u003cp\u003ePretty prints several types using the same variable substitutions\n\u003c/p\u003e",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "[Type] -\u003e [Doc]",
        "fct-source": "src/CSPM-DataStructures-Types.html#prettyPrintTypes",
        "fct-type": "function",
        "title": "prettyPrintTypes"
      },
      "index": {
        "description": "Pretty prints several types using the same variable substitutions",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "prettyPrintTypes",
        "normalized": "[Type]-\u003e[Doc]",
        "package": "libcspm",
        "partial": "Print Types",
        "signature": "[Type]-\u003e[Doc]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:readPSymbolTable",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "PSymbolTable -\u003e m SymbolTable",
        "fct-source": "src/CSPM-DataStructures-Types.html#readPSymbolTable",
        "fct-type": "function",
        "title": "readPSymbolTable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "readPSymbolTable",
        "normalized": "PSymbolTable-\u003ea SymbolTable",
        "package": "libcspm",
        "partial": "PSymbol Table",
        "signature": "PSymbolTable-\u003em SymbolTable"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:readPType",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "PType -\u003e m (Maybe Type)",
        "fct-source": "src/CSPM-DataStructures-Types.html#readPType",
        "fct-type": "function",
        "title": "readPType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "readPType",
        "normalized": "PType-\u003ea(Maybe Type)",
        "package": "libcspm",
        "partial": "PType",
        "signature": "PType-\u003em(Maybe Type)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:reduceConstraints",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "[Constraint] -\u003e [Constraint]",
        "fct-source": "src/CSPM-DataStructures-Types.html#reduceConstraints",
        "fct-type": "function",
        "title": "reduceConstraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "reduceConstraints",
        "normalized": "[Constraint]-\u003e[Constraint]",
        "package": "libcspm",
        "partial": "Constraints",
        "signature": "[Constraint]-\u003e[Constraint]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:rigidName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Name",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "function",
        "title": "rigidName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "rigidName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:setPSymbolTable",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "PSymbolTable -\u003e SymbolTable -\u003e m ()",
        "fct-source": "src/CSPM-DataStructures-Types.html#setPSymbolTable",
        "fct-type": "function",
        "title": "setPSymbolTable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "setPSymbolTable",
        "normalized": "PSymbolTable-\u003eSymbolTable-\u003ea()",
        "package": "libcspm",
        "partial": "PSymbol Table",
        "signature": "PSymbolTable-\u003eSymbolTable-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:setPType",
      "description": {
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "PType -\u003e Type -\u003e m ()",
        "fct-source": "src/CSPM-DataStructures-Types.html#setPType",
        "fct-type": "function",
        "title": "setPType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "setPType",
        "normalized": "PType-\u003eType-\u003ea()",
        "package": "libcspm",
        "partial": "PType",
        "signature": "PType-\u003eType-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:typePointer",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "PType",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "function",
        "title": "typePointer"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "typePointer",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pointer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:typeSchemeType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeScheme",
        "fct-type": "function",
        "title": "typeSchemeType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "typeSchemeType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scheme Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:typeSchemeVariables",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "[(TypeVar, [Constraint])]",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeScheme",
        "fct-type": "function",
        "title": "typeSchemeVariables"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "typeSchemeVariables",
        "normalized": "[(TypeVar,[Constraint])]",
        "package": "libcspm",
        "partial": "Scheme Variables",
        "signature": "[(TypeVar,[Constraint])]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-DataStructures-Types.html#v:typeVar",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.DataStructures.Types",
        "fct-package": "libcspm",
        "fct-signature": "TypeVar",
        "fct-source": "src/CSPM-DataStructures-Types.html#TypeVarRef",
        "fct-type": "function",
        "title": "typeVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM DataStructures Types",
        "module": "CSPM.DataStructures.Types",
        "name": "typeVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Var",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Desugar.html#",
      "description": {
        "fct-module": "CSPM.Desugar",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Desugar.html",
        "fct-type": "module",
        "title": "Desugar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Desugar",
        "module": "CSPM.Desugar",
        "name": "Desugar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Desugar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Desugar.html#t:Desugarable",
      "description": {
        "fct-module": "CSPM.Desugar",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-Desugar.html#Desugarable",
        "fct-type": "class",
        "title": "Desugarable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Desugar",
        "module": "CSPM.Desugar",
        "name": "Desugarable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Desugarable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Desugar.html#v:desugar",
      "description": {
        "fct-module": "CSPM.Desugar",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e DesugarMonad a",
        "fct-source": "src/CSPM-Desugar.html#desugar",
        "fct-type": "method",
        "title": "desugar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Desugar",
        "module": "CSPM.Desugar",
        "name": "desugar",
        "normalized": "a-\u003eDesugarMonad a",
        "package": "libcspm",
        "partial": "",
        "signature": "a-\u003eDesugarMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Desugar.html#v:runDesugar",
      "description": {
        "fct-module": "CSPM.Desugar",
        "fct-package": "libcspm",
        "fct-signature": "DesugarMonad a -\u003e m a",
        "fct-source": "src/CSPM-Desugar.html#runDesugar",
        "fct-type": "function",
        "title": "runDesugar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Desugar",
        "module": "CSPM.Desugar",
        "name": "runDesugar",
        "normalized": "DesugarMonad a-\u003eb a",
        "package": "libcspm",
        "partial": "Desugar",
        "signature": "DesugarMonad a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-BuiltInFunctions.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.BuiltInFunctions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-BuiltInFunctions.html",
        "fct-type": "module",
        "title": "BuiltInFunctions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator BuiltInFunctions",
        "module": "CSPM.Evaluator.BuiltInFunctions",
        "name": "BuiltInFunctions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Built In Functions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-BuiltInFunctions.html#v:builtInName",
      "description": {
        "fct-module": "CSPM.Evaluator.BuiltInFunctions",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e Name",
        "fct-source": "src/CSPM-Prelude.html#builtInName",
        "fct-type": "function",
        "title": "builtInName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator BuiltInFunctions",
        "module": "CSPM.Evaluator.BuiltInFunctions",
        "name": "builtInName",
        "normalized": "String-\u003eName",
        "package": "libcspm",
        "partial": "In Name",
        "signature": "String-\u003eName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-BuiltInFunctions.html#v:injectBuiltInFunctions",
      "description": {
        "fct-module": "CSPM.Evaluator.BuiltInFunctions",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-BuiltInFunctions.html#injectBuiltInFunctions",
        "fct-type": "function",
        "title": "injectBuiltInFunctions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator BuiltInFunctions",
        "module": "CSPM.Evaluator.BuiltInFunctions",
        "name": "injectBuiltInFunctions",
        "normalized": "EvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Built In Functions",
        "signature": "EvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-DeclBind.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.DeclBind",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-DeclBind.html",
        "fct-type": "module",
        "title": "DeclBind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator DeclBind",
        "module": "CSPM.Evaluator.DeclBind",
        "name": "DeclBind",
        "normalized": "",
        "package": "libcspm",
        "partial": "Decl Bind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-DeclBind.html#v:bindDecls",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a list of declarations, returns a sequence of names bounds to\n values that can be passed to \u003ccode\u003e\u003ca\u003eaddScopeAndBind\u003c/a\u003e\u003c/code\u003e in order to bind them in\n the current scope.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.DeclBind",
        "fct-package": "libcspm",
        "fct-signature": "[TCDecl] -\u003e EvaluationMonad [(Name, EvaluationMonad Value)]",
        "fct-source": "src/CSPM-Evaluator-DeclBind.html#bindDecls",
        "fct-type": "function",
        "title": "bindDecls"
      },
      "index": {
        "description": "Given list of declarations returns sequence of names bounds to values that can be passed to addScopeAndBind in order to bind them in the current scope",
        "hierarchy": "CSPM Evaluator DeclBind",
        "module": "CSPM.Evaluator.DeclBind",
        "name": "bindDecls",
        "normalized": "[TCDecl]-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]",
        "package": "libcspm",
        "partial": "Decls",
        "signature": "[TCDecl]-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-DeepSeq.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.DeepSeq",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-DeepSeq.html",
        "fct-type": "module",
        "title": "DeepSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator DeepSeq",
        "module": "CSPM.Evaluator.DeepSeq",
        "name": "DeepSeq",
        "normalized": "",
        "package": "libcspm",
        "partial": "Deep Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Dot.html",
        "fct-type": "module",
        "title": "Dot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "Dot",
        "normalized": "",
        "package": "libcspm",
        "partial": "Dot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:combineDots",
      "description": {
        "fct-descr": "\u003cp\u003eTakes two values and dots then together appropriately.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e Value -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Dot.html#combineDots",
        "fct-type": "function",
        "title": "combineDots"
      },
      "index": {
        "description": "Takes two values and dots then together appropriately",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "combineDots",
        "normalized": "Value-\u003eValue-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Dots",
        "signature": "Value-\u003eValue-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:compressIntoEnumeratedSet",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a set and returns a list of values xs such that \n Union({productions(x) | x \u003c- xs}) == xs. For example, if c is a channel of\n type {0,1} then {c.0, c.1} would return [c].\n\u003c/p\u003e\u003cp\u003eThis is primarily used for display purposes.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e EvaluationMonad (Maybe [Value])",
        "fct-source": "src/CSPM-Evaluator-Dot.html#compressIntoEnumeratedSet",
        "fct-type": "function",
        "title": "compressIntoEnumeratedSet"
      },
      "index": {
        "description": "Takes set and returns list of values xs such that Union productions xs xs For example if is channel of type then c.0 c.1 would return This is primarily used for display purposes",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "compressIntoEnumeratedSet",
        "normalized": "ValueSet-\u003eEvaluationMonad(Maybe[Value])",
        "package": "libcspm",
        "partial": "Into Enumerated Set",
        "signature": "ValueSet-\u003eEvaluationMonad(Maybe[Value])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:dataTypeInfo",
      "description": {
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e EvaluationMonad (Value, Int, Array Int ValueSet)",
        "fct-source": "src/CSPM-Evaluator-Dot.html#dataTypeInfo",
        "fct-type": "function",
        "title": "dataTypeInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "dataTypeInfo",
        "normalized": "Name-\u003eEvaluationMonad(Value,Int,Array Int ValueSet)",
        "package": "libcspm",
        "partial": "Type Info",
        "signature": "Name-\u003eEvaluationMonad(Value,Int,Array Int ValueSet)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:extensions",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a datatype or a channel value and then computes all x such that \n ev.x is a full datatype/event. Each of the returned values is guaranteed\n to be a VDot.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e EvaluationMonad [Value]",
        "fct-source": "src/CSPM-Evaluator-Dot.html#extensions",
        "fct-type": "function",
        "title": "extensions"
      },
      "index": {
        "description": "Takes datatype or channel value and then computes all such that ev.x is full datatype event Each of the returned values is guaranteed to be VDot",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "extensions",
        "normalized": "Value-\u003eEvaluationMonad[Value]",
        "package": "libcspm",
        "partial": "",
        "signature": "Value-\u003eEvaluationMonad[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:extensionsSet",
      "description": {
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e EvaluationMonad ValueSet",
        "fct-source": "src/CSPM-Evaluator-Dot.html#extensionsSet",
        "fct-type": "function",
        "title": "extensionsSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "extensionsSet",
        "normalized": "Value-\u003eEvaluationMonad ValueSet",
        "package": "libcspm",
        "partial": "Set",
        "signature": "Value-\u003eEvaluationMonad ValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:oneFieldExtensions",
      "description": {
        "fct-descr": "\u003cp\u003eReturns an x such that ev.x has been extended by exactly one atomic field.\n This could be inside a subfield or elsewhere.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e EvaluationMonad [Value]",
        "fct-source": "src/CSPM-Evaluator-Dot.html#oneFieldExtensions",
        "fct-type": "function",
        "title": "oneFieldExtensions"
      },
      "index": {
        "description": "Returns an such that ev.x has been extended by exactly one atomic field This could be inside subfield or elsewhere",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "oneFieldExtensions",
        "normalized": "Value-\u003eEvaluationMonad[Value]",
        "package": "libcspm",
        "partial": "Field Extensions",
        "signature": "Value-\u003eEvaluationMonad[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:productions",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a datatype or a channel value and computes v.x for all x that\n complete the value.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e EvaluationMonad [Value]",
        "fct-source": "src/CSPM-Evaluator-Dot.html#productions",
        "fct-type": "function",
        "title": "productions"
      },
      "index": {
        "description": "Takes datatype or channel value and computes v.x for all that complete the value",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "productions",
        "normalized": "Value-\u003eEvaluationMonad[Value]",
        "package": "libcspm",
        "partial": "",
        "signature": "Value-\u003eEvaluationMonad[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:productionsSet",
      "description": {
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e EvaluationMonad ValueSet",
        "fct-source": "src/CSPM-Evaluator-Dot.html#productionsSet",
        "fct-type": "function",
        "title": "productionsSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "productionsSet",
        "normalized": "Value-\u003eEvaluationMonad ValueSet",
        "package": "libcspm",
        "partial": "Set",
        "signature": "Value-\u003eEvaluationMonad ValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Dot.html#v:splitIntoFields",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a set of dotted values (i.e. a set of VDot _) and returns a list of\n sets such that the cartesian product is equal to the original set.\n\u003c/p\u003e\u003cp\u003eThis throws an error if the set cannot be decomposed.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Dot",
        "fct-package": "libcspm",
        "fct-signature": "Bool -\u003e Name -\u003e ValueSet -\u003e EvaluationMonad [ValueSet]",
        "fct-source": "src/CSPM-Evaluator-Dot.html#splitIntoFields",
        "fct-type": "function",
        "title": "splitIntoFields"
      },
      "index": {
        "description": "Takes set of dotted values i.e set of VDot and returns list of sets such that the cartesian product is equal to the original set This throws an error if the set cannot be decomposed",
        "hierarchy": "CSPM Evaluator Dot",
        "module": "CSPM.Evaluator.Dot",
        "name": "splitIntoFields",
        "normalized": "Bool-\u003eName-\u003eValueSet-\u003eEvaluationMonad[ValueSet]",
        "package": "libcspm",
        "partial": "Into Fields",
        "signature": "Bool-\u003eName-\u003eValueSet-\u003eEvaluationMonad[ValueSet]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Environment.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Environment",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Environment.html",
        "fct-type": "module",
        "title": "Environment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Environment",
        "module": "CSPM.Evaluator.Environment",
        "name": "Environment",
        "normalized": "",
        "package": "libcspm",
        "partial": "Environment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Environment.html#t:Environment",
      "description": {
        "fct-module": "CSPM.Evaluator.Environment",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Environment.html#Environment",
        "fct-type": "data",
        "title": "Environment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Environment",
        "module": "CSPM.Evaluator.Environment",
        "name": "Environment",
        "normalized": "",
        "package": "libcspm",
        "partial": "Environment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Environment.html#v:lookup",
      "description": {
        "fct-module": "CSPM.Evaluator.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e Name -\u003e Value",
        "fct-source": "src/CSPM-Evaluator-Environment.html#lookup",
        "fct-type": "function",
        "title": "lookup"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Environment",
        "module": "CSPM.Evaluator.Environment",
        "name": "lookup",
        "normalized": "Environment-\u003eName-\u003eValue",
        "package": "libcspm",
        "partial": "",
        "signature": "Environment-\u003eName-\u003eValue"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Environment.html#v:new",
      "description": {
        "fct-module": "CSPM.Evaluator.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment",
        "fct-source": "src/CSPM-Evaluator-Environment.html#new",
        "fct-type": "function",
        "title": "new"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Environment",
        "module": "CSPM.Evaluator.Environment",
        "name": "new",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Environment.html#v:newLayerAndBind",
      "description": {
        "fct-module": "CSPM.Evaluator.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e [(Name, Value)] -\u003e Environment",
        "fct-source": "src/CSPM-Evaluator-Environment.html#newLayerAndBind",
        "fct-type": "function",
        "title": "newLayerAndBind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Environment",
        "module": "CSPM.Evaluator.Environment",
        "name": "newLayerAndBind",
        "normalized": "Environment-\u003e[(Name,Value)]-\u003eEnvironment",
        "package": "libcspm",
        "partial": "Layer And Bind",
        "signature": "Environment-\u003e[(Name,Value)]-\u003eEnvironment"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html",
        "fct-type": "module",
        "title": "Exceptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "Exceptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exceptions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:cannotCheckSetMembershipError",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e ValueSet -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#cannotCheckSetMembershipError",
        "fct-type": "function",
        "title": "cannotCheckSetMembershipError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "cannotCheckSetMembershipError",
        "normalized": "Value-\u003eValueSet-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Check Set Membership Error",
        "signature": "Value-\u003eValueSet-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:cannotConvertIntegersToListMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#cannotConvertIntegersToListMessage",
        "fct-type": "function",
        "title": "cannotConvertIntegersToListMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "cannotConvertIntegersToListMessage",
        "normalized": "",
        "package": "libcspm",
        "partial": "Convert Integers To List Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:cannotConvertProcessesToListMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#cannotConvertProcessesToListMessage",
        "fct-type": "function",
        "title": "cannotConvertProcessesToListMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "cannotConvertProcessesToListMessage",
        "normalized": "",
        "package": "libcspm",
        "partial": "Convert Processes To List Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:cannotDifferenceSetsMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#cannotDifferenceSetsMessage",
        "fct-type": "function",
        "title": "cannotDifferenceSetsMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "cannotDifferenceSetsMessage",
        "normalized": "ValueSet-\u003eValueSet-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Difference Sets Message",
        "signature": "ValueSet-\u003eValueSet-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:cardOfInfiniteSetMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#cardOfInfiniteSetMessage",
        "fct-type": "function",
        "title": "cardOfInfiniteSetMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "cardOfInfiniteSetMessage",
        "normalized": "ValueSet-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Of Infinite Set Message",
        "signature": "ValueSet-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:divideByZeroMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#divideByZeroMessage",
        "fct-type": "function",
        "title": "divideByZeroMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "divideByZeroMessage",
        "normalized": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "By Zero Message",
        "signature": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:dotIsNotValidMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e Int -\u003e Value -\u003e ValueSet -\u003e SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#dotIsNotValidMessage",
        "fct-type": "function",
        "title": "dotIsNotValidMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "dotIsNotValidMessage",
        "normalized": "Value-\u003eInt-\u003eValue-\u003eValueSet-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Is Not Valid Message",
        "signature": "Value-\u003eInt-\u003eValue-\u003eValueSet-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:funBindPatternMatchFailureMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Name -\u003e [[Value]] -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#funBindPatternMatchFailureMessage",
        "fct-type": "function",
        "title": "funBindPatternMatchFailureMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "funBindPatternMatchFailureMessage",
        "normalized": "SrcSpan-\u003eName-\u003e[[Value]]-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Bind Pattern Match Failure Message",
        "signature": "SrcSpan-\u003eName-\u003e[[Value]]-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:headEmptyListMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#headEmptyListMessage",
        "fct-type": "function",
        "title": "headEmptyListMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "headEmptyListMessage",
        "normalized": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Empty List Message",
        "signature": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:keyNotInDomainOfMapMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#keyNotInDomainOfMapMessage",
        "fct-type": "function",
        "title": "keyNotInDomainOfMapMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "keyNotInDomainOfMapMessage",
        "normalized": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Not In Domain Of Map Message",
        "signature": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:patternMatchFailureMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e TCPat -\u003e Value -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#patternMatchFailureMessage",
        "fct-type": "function",
        "title": "patternMatchFailureMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "patternMatchFailureMessage",
        "normalized": "SrcSpan-\u003eTCPat-\u003eValue-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Match Failure Message",
        "signature": "SrcSpan-\u003eTCPat-\u003eValue-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:patternMatchesFailureMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e [TCPat] -\u003e [Value] -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#patternMatchesFailureMessage",
        "fct-type": "function",
        "title": "patternMatchesFailureMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "patternMatchesFailureMessage",
        "normalized": "SrcSpan-\u003e[TCPat]-\u003e[Value]-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Matches Failure Message",
        "signature": "SrcSpan-\u003e[TCPat]-\u003e[Value]-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:printCallStack",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Maybe ScopeIdentifier -\u003e Doc",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#printCallStack",
        "fct-type": "function",
        "title": "printCallStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "printCallStack",
        "normalized": "Maybe ScopeIdentifier-\u003eDoc",
        "package": "libcspm",
        "partial": "Call Stack",
        "signature": "Maybe ScopeIdentifier-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:prioritiseEmptyListMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#prioritiseEmptyListMessage",
        "fct-type": "function",
        "title": "prioritiseEmptyListMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "prioritiseEmptyListMessage",
        "normalized": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Empty List Message",
        "signature": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:replicatedInternalChoiceOverEmptySetMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Exp Name -\u003e SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#replicatedInternalChoiceOverEmptySetMessage",
        "fct-type": "function",
        "title": "replicatedInternalChoiceOverEmptySetMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "replicatedInternalChoiceOverEmptySetMessage",
        "normalized": "Exp Name-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Internal Choice Over Empty Set Message",
        "signature": "Exp Name-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:replicatedInternalChoiceOverEmptySetMessage-39-",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Pat Name -\u003e SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#replicatedInternalChoiceOverEmptySetMessage%27",
        "fct-type": "function",
        "title": "replicatedInternalChoiceOverEmptySetMessage'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "replicatedInternalChoiceOverEmptySetMessage'",
        "normalized": "Pat Name-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Internal Choice Over Empty Set Message'",
        "signature": "Pat Name-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:replicatedLinkParallelOverEmptySeqMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Exp Name -\u003e SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#replicatedLinkParallelOverEmptySeqMessage",
        "fct-type": "function",
        "title": "replicatedLinkParallelOverEmptySeqMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "replicatedLinkParallelOverEmptySeqMessage",
        "normalized": "Exp Name-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Link Parallel Over Empty Seq Message",
        "signature": "Exp Name-\u003eSrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:setNotRectangularErrorMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e ValueSet -\u003e Maybe ValueSet -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#setNotRectangularErrorMessage",
        "fct-type": "function",
        "title": "setNotRectangularErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "setNotRectangularErrorMessage",
        "normalized": "SrcSpan-\u003eValueSet-\u003eMaybe ValueSet-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Not Rectangular Error Message",
        "signature": "SrcSpan-\u003eValueSet-\u003eMaybe ValueSet-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:tailEmptyListMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#tailEmptyListMessage",
        "fct-type": "function",
        "title": "tailEmptyListMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "tailEmptyListMessage",
        "normalized": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Empty List Message",
        "signature": "SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Exceptions.html#v:typeCheckerFailureMessage",
      "description": {
        "fct-module": "CSPM.Evaluator.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Evaluator-Exceptions.html#typeCheckerFailureMessage",
        "fct-type": "function",
        "title": "typeCheckerFailureMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Exceptions",
        "module": "CSPM.Evaluator.Exceptions",
        "name": "typeCheckerFailureMessage",
        "normalized": "String-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Checker Failure Message",
        "signature": "String-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Expr.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Expr",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Expr.html",
        "fct-type": "module",
        "title": "Expr"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Expr",
        "module": "CSPM.Evaluator.Expr",
        "name": "Expr",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Expr.html#t:Evaluatable",
      "description": {
        "fct-module": "CSPM.Evaluator.Expr",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-Evaluator-Expr.html#Evaluatable",
        "fct-type": "class",
        "title": "Evaluatable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Expr",
        "module": "CSPM.Evaluator.Expr",
        "name": "Evaluatable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluatable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Expr.html#v:eval",
      "description": {
        "fct-module": "CSPM.Evaluator.Expr",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Expr.html#eval",
        "fct-type": "method",
        "title": "eval"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Expr",
        "module": "CSPM.Evaluator.Expr",
        "name": "eval",
        "normalized": "a-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "",
        "signature": "a-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-File.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.File",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-File.html",
        "fct-type": "module",
        "title": "File"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator File",
        "module": "CSPM.Evaluator.File",
        "name": "File",
        "normalized": "",
        "package": "libcspm",
        "partial": "File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-File.html#v:bindFile",
      "description": {
        "fct-module": "CSPM.Evaluator.File",
        "fct-package": "libcspm",
        "fct-signature": "TCCSPMFile -\u003e EvaluationMonad [(Name, EvaluationMonad Value)]",
        "fct-source": "src/CSPM-Evaluator-File.html#bindFile",
        "fct-type": "function",
        "title": "bindFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator File",
        "module": "CSPM.Evaluator.File",
        "name": "bindFile",
        "normalized": "TCCSPMFile-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]",
        "package": "libcspm",
        "partial": "File",
        "signature": "TCCSPMFile-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Monad.html",
        "fct-type": "module",
        "title": "Monad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "Monad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#t:EvaluationMonad",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationMonad",
        "fct-type": "type",
        "title": "EvaluationMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "EvaluationMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluation Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#t:EvaluationState",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "data",
        "title": "EvaluationState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "EvaluationState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluation State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:EvaluationState",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationState",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "EvaluationState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "EvaluationState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluation State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:addScopeAndBind",
      "description": {
        "fct-descr": "\u003cp\u003eImplements non-recursive lets.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[(Name, Value)] -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#addScopeAndBind",
        "fct-type": "function",
        "title": "addScopeAndBind"
      },
      "index": {
        "description": "Implements non-recursive lets",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "addScopeAndBind",
        "normalized": "[(Name,Value)]-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Scope And Bind",
        "signature": "[(Name,Value)]-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:addScopeAndBindM",
      "description": {
        "fct-descr": "\u003cp\u003eImplements recursive lets.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[(Name, EvaluationMonad Value)] -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#addScopeAndBindM",
        "fct-type": "function",
        "title": "addScopeAndBindM"
      },
      "index": {
        "description": "Implements recursive lets",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "addScopeAndBindM",
        "normalized": "[(Name,EvaluationMonad Value)]-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Scope And Bind",
        "signature": "[(Name,EvaluationMonad Value)]-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:currentExpressionLocation",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "currentExpressionLocation"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "currentExpressionLocation",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expression Location",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:doRuntimeRangeChecks",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "doRuntimeRangeChecks"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "doRuntimeRangeChecks",
        "normalized": "",
        "package": "libcspm",
        "partial": "Runtime Range Checks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:environment",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Environment",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "environment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "environment",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:getCurrentExpressionLocation",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad SrcSpan",
        "fct-source": "src/CSPM-Evaluator-Monad.html#getCurrentExpressionLocation",
        "fct-type": "function",
        "title": "getCurrentExpressionLocation"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "getCurrentExpressionLocation",
        "normalized": "",
        "package": "libcspm",
        "partial": "Current Expression Location",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:getEnvironment",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad Environment",
        "fct-source": "src/CSPM-Evaluator-Monad.html#getEnvironment",
        "fct-type": "function",
        "title": "getEnvironment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "getEnvironment",
        "normalized": "",
        "package": "libcspm",
        "partial": "Environment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:getParentScopeIdentifier",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad (Maybe ScopeIdentifier)",
        "fct-source": "src/CSPM-Evaluator-Monad.html#getParentScopeIdentifier",
        "fct-type": "function",
        "title": "getParentScopeIdentifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "getParentScopeIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parent Scope Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:getState",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad EvaluationState",
        "fct-source": "src/CSPM-Evaluator-Monad.html#getState",
        "fct-type": "function",
        "title": "getState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "getState",
        "normalized": "",
        "package": "libcspm",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:gets",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(EvaluationState -\u003e a) -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#gets",
        "fct-type": "function",
        "title": "gets"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "gets",
        "normalized": "(EvaluationState-\u003ea)-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "",
        "signature": "(EvaluationState-\u003ea)-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:lookupVarMaybeThunk",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Monad.html#lookupVarMaybeThunk",
        "fct-type": "function",
        "title": "lookupVarMaybeThunk"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "lookupVarMaybeThunk",
        "normalized": "Name-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Var Maybe Thunk",
        "signature": "Name-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:maybeTimedCSP",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad a -\u003e (Name -\u003e (Event -\u003e Int) -\u003e EvaluationMonad a) -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#maybeTimedCSP",
        "fct-type": "function",
        "title": "maybeTimedCSP"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "maybeTimedCSP",
        "normalized": "EvaluationMonad a-\u003e(Name-\u003e(Event-\u003eInt)-\u003eEvaluationMonad a)-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Timed CSP",
        "signature": "EvaluationMonad a-\u003e(Name-\u003e(Event-\u003eInt)-\u003eEvaluationMonad a)-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:modify",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(EvaluationState -\u003e EvaluationState) -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#modify",
        "fct-type": "function",
        "title": "modify"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "modify",
        "normalized": "(EvaluationState-\u003eEvaluationState)-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "",
        "signature": "(EvaluationState-\u003eEvaluationState)-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:parentScopeIdentifier",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Maybe ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "parentScopeIdentifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "parentScopeIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scope Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:profilerState",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerState",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "profilerState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "profilerState",
        "normalized": "",
        "package": "libcspm",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:runEvaluator",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationState -\u003e EvaluationMonad a -\u003e a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#runEvaluator",
        "fct-type": "function",
        "title": "runEvaluator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "runEvaluator",
        "normalized": "EvaluationState-\u003eEvaluationMonad a-\u003ea",
        "package": "libcspm",
        "partial": "Evaluator",
        "signature": "EvaluationState-\u003eEvaluationMonad a-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:setCurrentExpressionLocation",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#setCurrentExpressionLocation",
        "fct-type": "function",
        "title": "setCurrentExpressionLocation"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "setCurrentExpressionLocation",
        "normalized": "SrcSpan-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Current Expression Location",
        "signature": "SrcSpan-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:setTimedCSP",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e (Event -\u003e Int) -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#setTimedCSP",
        "fct-type": "function",
        "title": "setTimedCSP"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "setTimedCSP",
        "normalized": "Name-\u003e(Event-\u003eInt)-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Timed CSP",
        "signature": "Name-\u003e(Event-\u003eInt)-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:throwError",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ErrorMessage -\u003e a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#throwError",
        "fct-type": "function",
        "title": "throwError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "throwError",
        "normalized": "ErrorMessage-\u003ea",
        "package": "libcspm",
        "partial": "Error",
        "signature": "ErrorMessage-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:throwError-39-",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(SrcSpan -\u003e Maybe ScopeIdentifier -\u003e ErrorMessage) -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#throwError%27",
        "fct-type": "function",
        "title": "throwError'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "throwError'",
        "normalized": "(SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage)-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Error'",
        "signature": "(SrcSpan-\u003eMaybe ScopeIdentifier-\u003eErrorMessage)-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:timedSection",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Maybe (Event -\u003e Int, Name)",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "function",
        "title": "timedSection"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "timedSection",
        "normalized": "Maybe(Event-\u003eInt,Name)",
        "package": "libcspm",
        "partial": "Section",
        "signature": "Maybe(Event-\u003eInt,Name)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Monad.html#v:updateParentScopeIdentifier",
      "description": {
        "fct-module": "CSPM.Evaluator.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ScopeIdentifier -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#updateParentScopeIdentifier",
        "fct-type": "function",
        "title": "updateParentScopeIdentifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Monad",
        "module": "CSPM.Evaluator.Monad",
        "name": "updateParentScopeIdentifier",
        "normalized": "ScopeIdentifier-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Parent Scope Identifier",
        "signature": "ScopeIdentifier-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-PatBind.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.PatBind",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-PatBind.html",
        "fct-type": "module",
        "title": "PatBind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator PatBind",
        "module": "CSPM.Evaluator.PatBind",
        "name": "PatBind",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pat Bind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-PatBind.html#t:Bindable",
      "description": {
        "fct-module": "CSPM.Evaluator.PatBind",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-Evaluator-PatBind.html#Bindable",
        "fct-type": "class",
        "title": "Bindable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator PatBind",
        "module": "CSPM.Evaluator.PatBind",
        "name": "Bindable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Bindable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-PatBind.html#v:bind",
      "description": {
        "fct-module": "CSPM.Evaluator.PatBind",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Value -\u003e (Bool, [(Name, Value)])",
        "fct-source": "src/CSPM-Evaluator-PatBind.html#bind",
        "fct-type": "method",
        "title": "bind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator PatBind",
        "module": "CSPM.Evaluator.PatBind",
        "name": "bind",
        "normalized": "a-\u003eValue-\u003e(Bool,[(Name,Value)])",
        "package": "libcspm",
        "partial": "",
        "signature": "a-\u003eValue-\u003e(Bool,[(Name,Value)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-PatBind.html#v:bindAll",
      "description": {
        "fct-module": "CSPM.Evaluator.PatBind",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e [Value] -\u003e (Bool, [(Name, Value)])",
        "fct-source": "src/CSPM-Evaluator-PatBind.html#bindAll",
        "fct-type": "function",
        "title": "bindAll"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator PatBind",
        "module": "CSPM.Evaluator.PatBind",
        "name": "bindAll",
        "normalized": "[a]-\u003e[Value]-\u003e(Bool,[(Name,Value)])",
        "package": "libcspm",
        "partial": "All",
        "signature": "[a]-\u003e[Value]-\u003e(Bool,[(Name,Value)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html",
        "fct-type": "module",
        "title": "ProcessValues"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "ProcessValues",
        "normalized": "",
        "package": "libcspm",
        "partial": "Process Values",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:CSPOperator",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "data",
        "title": "CSPOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "CSPOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPOperator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:Event",
      "description": {
        "fct-descr": "\u003cp\u003eEvents, as represented in the LTS.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "data",
        "title": "Event"
      },
      "index": {
        "description": "Events as represented in the LTS",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Event",
        "normalized": "",
        "package": "libcspm",
        "partial": "Event",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:EventMap",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#EventMap",
        "fct-type": "type",
        "title": "EventMap"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "EventMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "Event Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:EventSet",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#EventSet",
        "fct-type": "type",
        "title": "EventSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "EventSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Event Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:Proc",
      "description": {
        "fct-descr": "\u003cp\u003eA compiled process. Note this is an infinite data structure (due to\n PProcCall) as this makes compilation easy (we can easily chase\n dependencies).\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "data",
        "title": "Proc"
      },
      "index": {
        "description": "compiled process Note this is an infinite data structure due to PProcCall as this makes compilation easy we can easily chase dependencies",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Proc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Proc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:ProcName",
      "description": {
        "fct-descr": "\u003cp\u003eProcNames uniquely identify processes.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "newtype",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcName",
        "fct-type": "newtype",
        "title": "ProcName"
      },
      "index": {
        "description": "ProcNames uniquely identify processes",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "ProcName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Proc Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:ProcOperator",
      "description": {
        "fct-descr": "\u003cp\u003eAn operator that can be applied to processes.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "data",
        "title": "ProcOperator"
      },
      "index": {
        "description": "An operator that can be applied to processes",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "ProcOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Proc Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:UnCompiledOperator",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#UnCompiledOperator",
        "fct-type": "type",
        "title": "UnCompiledOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "UnCompiledOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Un Compiled Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:UnCompiledProc",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#UnCompiledProc",
        "fct-type": "type",
        "title": "UnCompiledProc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "UnCompiledProc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Un Compiled Proc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#t:UnCompiledProcOperator",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#UnCompiledProcOperator",
        "fct-type": "type",
        "title": "UnCompiledProcOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "UnCompiledProcOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Un Compiled Proc Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Chase",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Chase Bool",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Chase"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Chase",
        "normalized": "",
        "package": "libcspm",
        "partial": "Chase",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Determinise",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Determinise",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Determinise"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Determinise",
        "normalized": "",
        "package": "libcspm",
        "partial": "Determinise",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Diamond",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Diamond",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Diamond"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Diamond",
        "normalized": "",
        "package": "libcspm",
        "partial": "Diamond",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Explicate",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Explicate Bool",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Explicate"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Explicate",
        "normalized": "",
        "package": "libcspm",
        "partial": "Explicate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:ModelCompress",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "ModelCompress",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "ModelCompress"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "ModelCompress",
        "normalized": "",
        "package": "libcspm",
        "partial": "Model Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Normalize",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Normalize Bool",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Normalize"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Normalize",
        "normalized": "",
        "package": "libcspm",
        "partial": "Normalize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PAlphaParallel",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PAlphaParallel (seq evs)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PAlphaParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PAlphaParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "PAlpha Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PBinaryOp",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PBinaryOp (op seq ev evs evm) (Proc seq op pn ev evs evm) (Proc seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "PBinaryOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PBinaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PBinary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PException",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PException evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PException"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PException",
        "normalized": "",
        "package": "libcspm",
        "partial": "PException",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PExternalChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PExternalChoice",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PExternalChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PExternal Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PGenParallel",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PGenParallel evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PGenParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PGenParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "PGen Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PHide",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PHide evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PHide"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PHide",
        "normalized": "",
        "package": "libcspm",
        "partial": "PHide",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PInterleave",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PInterleave",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PInterleave"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PInterleave",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInterleave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PInternalChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PInternalChoice",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PInternalChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PInternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInternal Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PInterrupt",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PInterrupt",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInterrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PLinkParallel",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PLinkParallel evm",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PLinkParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PLinkParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "PLink Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:POp",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "POp (op seq ev evs evm) (seq (Proc seq op pn ev evs evm))",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "POp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "POp",
        "normalized": "",
        "package": "libcspm",
        "partial": "POp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:POperator",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "POperator (ProcOperator seq evs)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "POperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "POperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "POperator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PPrefix",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PPrefix ev",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PPrefix",
        "normalized": "",
        "package": "libcspm",
        "partial": "PPrefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PProcCall",
      "description": {
        "fct-descr": "\u003cp\u003eLabels the process this contains. This allows infinite loops to be\n spotted.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PProcCall pn (Proc seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "PProcCall"
      },
      "index": {
        "description": "Labels the process this contains This allows infinite loops to be spotted",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PProcCall",
        "normalized": "",
        "package": "libcspm",
        "partial": "PProc Call",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PRename",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PRename evm",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PRename"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PRename",
        "normalized": "",
        "package": "libcspm",
        "partial": "PRename",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PSequentialComp",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PSequentialComp",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSequentialComp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PSequentialComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSequential Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PSlidingChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PSlidingChoice",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSlidingChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PSlidingChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSliding Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PSynchronisingExternalChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PSynchronisingExternalChoice evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSynchronisingExternalChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PSynchronisingExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSynchronising External Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PSynchronisingInterrupt",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PSynchronisingInterrupt evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSynchronisingInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PSynchronisingInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSynchronising Interrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:PUnaryOp",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "PUnaryOp (op seq ev evs evm) (Proc seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "PUnaryOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "PUnaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PUnary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Prioritise",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Prioritise Bool (seq evs)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Prioritise"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Prioritise",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prioritise",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:ProcName",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "ProcName ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcName",
        "fct-type": "function",
        "title": "ProcName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "ProcName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Proc Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:StrongBisim",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "StrongBisim",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "StrongBisim"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "StrongBisim",
        "normalized": "",
        "package": "libcspm",
        "partial": "Strong Bisim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Tau",
      "description": {
        "fct-descr": "\u003cp\u003eThe internal special event tau.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Tau",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "function",
        "title": "Tau"
      },
      "index": {
        "description": "The internal special event tau",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Tau",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tau",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:TauLoopFactor",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "TauLoopFactor",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "TauLoopFactor"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "TauLoopFactor",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tau Loop Factor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:Tick",
      "description": {
        "fct-descr": "\u003cp\u003eThe internal event tick, representing termination.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Tick",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "function",
        "title": "Tick"
      },
      "index": {
        "description": "The internal event tick representing termination",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "Tick",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tick",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:UserEvent",
      "description": {
        "fct-descr": "\u003cp\u003eAny event defined in a channel definition.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "UserEvent Value",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "function",
        "title": "UserEvent"
      },
      "index": {
        "description": "Any event defined in channel definition",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "UserEvent",
        "normalized": "",
        "package": "libcspm",
        "partial": "User Event",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:WeakBisim",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "WeakBisim",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "WeakBisim"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "WeakBisim",
        "normalized": "",
        "package": "libcspm",
        "partial": "Weak Bisim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:components",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the components of a given process.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Proc Seq op pn ev evs evm -\u003e Seq (Proc Seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#components",
        "fct-type": "function",
        "title": "components"
      },
      "index": {
        "description": "Returns the components of given process",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "components",
        "normalized": "Proc Seq a b c d e-\u003eSeq(Proc Seq a b c d e)",
        "package": "libcspm",
        "partial": "",
        "signature": "Proc Seq op pn ev evs evm-\u003eSeq(Proc Seq op pn ev evs evm)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:eventSetFromList",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "[Event] -\u003e EventSet",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#eventSetFromList",
        "fct-type": "function",
        "title": "eventSetFromList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "eventSetFromList",
        "normalized": "[Event]-\u003eEventSet",
        "package": "libcspm",
        "partial": "Set From List",
        "signature": "[Event]-\u003eEventSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:operator",
      "description": {
        "fct-descr": "\u003cp\u003eGives the operator of a process. If the process is a ProcCall an error is\n thrown.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Proc seq op pn ev evs evm -\u003e op seq ev evs evm",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#operator",
        "fct-type": "function",
        "title": "operator"
      },
      "index": {
        "description": "Gives the operator of process If the process is ProcCall an error is thrown",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "operator",
        "normalized": "Proc a b c d e f-\u003eb a d e f",
        "package": "libcspm",
        "partial": "",
        "signature": "Proc seq op pn ev evs evm-\u003eop seq ev evs evm"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:splitProcIntoComponents",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a process, returns the initial process and all processes that it\n calls.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "Proc seq op pn ev evs evm -\u003e (Proc seq op pn ev evs evm, [(pn, Proc seq op pn ev evs evm)])",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#splitProcIntoComponents",
        "fct-type": "function",
        "title": "splitProcIntoComponents"
      },
      "index": {
        "description": "Given process returns the initial process and all processes that it calls",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "splitProcIntoComponents",
        "normalized": "Proc a b c d e f-\u003e(Proc a b c d e f,[(c,Proc a b c d e f)])",
        "package": "libcspm",
        "partial": "Proc Into Components",
        "signature": "Proc seq op pn ev evs evm-\u003e(Proc seq op pn ev evs evm,[(pn,Proc seq op pn ev evs evm)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ProcessValues.html#v:trimProcess",
      "description": {
        "fct-module": "CSPM.Evaluator.ProcessValues",
        "fct-package": "libcspm",
        "fct-signature": "UnCompiledProc -\u003e UnCompiledProc",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#trimProcess",
        "fct-type": "function",
        "title": "trimProcess"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ProcessValues",
        "module": "CSPM.Evaluator.ProcessValues",
        "name": "trimProcess",
        "normalized": "UnCompiledProc-\u003eUnCompiledProc",
        "package": "libcspm",
        "partial": "Process",
        "signature": "UnCompiledProc-\u003eUnCompiledProc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Profiler.html",
        "fct-type": "module",
        "title": "Profiler"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "Profiler",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#t:ProfilerOptions",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "data",
        "title": "ProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "ProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#t:ProfilerState",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerState",
        "fct-type": "data",
        "title": "ProfilerState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "ProfilerState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#t:ProfilingData",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilingData",
        "fct-type": "data",
        "title": "ProfilingData"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "ProfilingData",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiling Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:ProfilerOptions",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "ProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "ProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:defaultProfilerOptions",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#defaultProfilerOptions",
        "fct-type": "function",
        "title": "defaultProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "defaultProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:flattenRecursiveCalls",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "flattenRecursiveCalls"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "flattenRecursiveCalls",
        "normalized": "",
        "package": "libcspm",
        "partial": "Recursive Calls",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:getProfilingData",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad ProfilingData",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#getProfilingData",
        "fct-type": "function",
        "title": "getProfilingData"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "getProfilingData",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiling Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:initialProfilerState",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions -\u003e IO ProfilerState",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#initialProfilerState",
        "fct-type": "function",
        "title": "initialProfilerState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "initialProfilerState",
        "normalized": "ProfilerOptions-\u003eIO ProfilerState",
        "package": "libcspm",
        "partial": "Profiler State",
        "signature": "ProfilerOptions-\u003eIO ProfilerState"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:isActive",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "isActive"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "isActive",
        "normalized": "",
        "package": "libcspm",
        "partial": "Active",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:maybeRegisterCall",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad (Name -\u003e EvaluationMonad a -\u003e EvaluationMonad a)",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#maybeRegisterCall",
        "fct-type": "function",
        "title": "maybeRegisterCall"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "maybeRegisterCall",
        "normalized": "EvaluationMonad(Name-\u003eEvaluationMonad a-\u003eEvaluationMonad a)",
        "package": "libcspm",
        "partial": "Register Call",
        "signature": "EvaluationMonad(Name-\u003eEvaluationMonad a-\u003eEvaluationMonad a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:profilerActive",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationState -\u003e Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#profilerActive",
        "fct-type": "function",
        "title": "profilerActive"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "profilerActive",
        "normalized": "EvaluationState-\u003eBool",
        "package": "libcspm",
        "partial": "Active",
        "signature": "EvaluationState-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Profiler.html#v:registerCall",
      "description": {
        "fct-module": "CSPM.Evaluator.Profiler",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e EvaluationMonad a -\u003e EvaluationMonad a",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#registerCall",
        "fct-type": "function",
        "title": "registerCall"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Profiler",
        "module": "CSPM.Evaluator.Profiler",
        "name": "registerCall",
        "normalized": "Name-\u003eEvaluationMonad a-\u003eEvaluationMonad a",
        "package": "libcspm",
        "partial": "Call",
        "signature": "Name-\u003eEvaluationMonad a-\u003eEvaluationMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValuePrettyPrinter.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.ValuePrettyPrinter",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-ValuePrettyPrinter.html",
        "fct-type": "module",
        "title": "ValuePrettyPrinter"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValuePrettyPrinter",
        "module": "CSPM.Evaluator.ValuePrettyPrinter",
        "name": "ValuePrettyPrinter",
        "normalized": "",
        "package": "libcspm",
        "partial": "Value Pretty Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValuePrettyPrinter.html#v:prettyPrintAllRequiredProcesses",
      "description": {
        "fct-descr": "\u003cp\u003ePretty prints the given process and all processes that it depends upon.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValuePrettyPrinter",
        "fct-package": "libcspm",
        "fct-signature": "Proc seq op ProcName ev evs evm -\u003e Doc",
        "fct-source": "src/CSPM-Evaluator-ValuePrettyPrinter.html#prettyPrintAllRequiredProcesses",
        "fct-type": "function",
        "title": "prettyPrintAllRequiredProcesses"
      },
      "index": {
        "description": "Pretty prints the given process and all processes that it depends upon",
        "hierarchy": "CSPM Evaluator ValuePrettyPrinter",
        "module": "CSPM.Evaluator.ValuePrettyPrinter",
        "name": "prettyPrintAllRequiredProcesses",
        "normalized": "Proc a b ProcName c d e-\u003eDoc",
        "package": "libcspm",
        "partial": "Print All Required Processes",
        "signature": "Proc seq op ProcName ev evs evm-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides a set implementation for machine CSP sets. This relies heavily\n on the type checking and assumes in many places that the sets being operated\n on are suitable for the opertion in question.\n\u003c/p\u003e\u003cp\u003eWe cannot just use the built in set implementation as FDR assumes in several\n places that infinite sets are allowed.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html",
        "fct-type": "module",
        "title": "ValueSet"
      },
      "index": {
        "description": "Provides set implementation for machine CSP sets This relies heavily on the type checking and assumes in many places that the sets being operated on are suitable for the opertion in question We cannot just use the built in set implementation as FDR assumes in several places that infinite sets are allowed",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "ValueSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Value Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#t:CartProductType",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#CartProductType",
        "fct-type": "data",
        "title": "CartProductType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "CartProductType",
        "normalized": "",
        "package": "libcspm",
        "partial": "Cart Product Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#t:ValueSet",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "data",
        "title": "ValueSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "ValueSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Value Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:AllMaps",
      "description": {
        "fct-descr": "\u003cp\u003eThe set of all maps from the given domain to the given image.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "AllMaps ValueSet ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "AllMaps"
      },
      "index": {
        "description": "The set of all maps from the given domain to the given image",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "AllMaps",
        "normalized": "",
        "package": "libcspm",
        "partial": "All Maps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:AllSequences",
      "description": {
        "fct-descr": "\u003cp\u003eA set containing all sequences over the given set.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "AllSequences ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "AllSequences"
      },
      "index": {
        "description": "set containing all sequences over the given set",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "AllSequences",
        "normalized": "",
        "package": "libcspm",
        "partial": "All Sequences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:CartDot",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "CartDot",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#CartProductType",
        "fct-type": "function",
        "title": "CartDot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "CartDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "Cart Dot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:CartTuple",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "CartTuple",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#CartProductType",
        "fct-type": "function",
        "title": "CartTuple"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "CartTuple",
        "normalized": "",
        "package": "libcspm",
        "partial": "Cart Tuple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:CartesianProduct",
      "description": {
        "fct-descr": "\u003cp\u003eA cartesian product of several sets.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "CartesianProduct [ValueSet] CartProductType",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "CartesianProduct"
      },
      "index": {
        "description": "cartesian product of several sets",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "CartesianProduct",
        "normalized": "CartesianProduct[ValueSet]CartProductType",
        "package": "libcspm",
        "partial": "Cartesian Product",
        "signature": "CartesianProduct[ValueSet]CartProductType"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:CompositeSet",
      "description": {
        "fct-descr": "\u003cp\u003eA union of several sets.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "CompositeSet (Seq ValueSet)",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "CompositeSet"
      },
      "index": {
        "description": "union of several sets",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "CompositeSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Composite Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:ExplicitSet",
      "description": {
        "fct-descr": "\u003cp\u003eAn explicit set of values\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ExplicitSet (Set Value)",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "ExplicitSet"
      },
      "index": {
        "description": "An explicit set of values",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "ExplicitSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Explicit Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:IntSetFrom",
      "description": {
        "fct-descr": "\u003cp\u003eThe infinite set of integers starting at lb.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "IntSetFrom Int",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "IntSetFrom"
      },
      "index": {
        "description": "The infinite set of integers starting at lb",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "IntSetFrom",
        "normalized": "",
        "package": "libcspm",
        "partial": "Int Set From",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:Integers",
      "description": {
        "fct-descr": "\u003cp\u003eSet of all integers\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "Integers",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "Integers"
      },
      "index": {
        "description": "Set of all integers",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "Integers",
        "normalized": "",
        "package": "libcspm",
        "partial": "Integers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:Powerset",
      "description": {
        "fct-descr": "\u003cp\u003eThe powerset of the given set\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "Powerset ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "Powerset"
      },
      "index": {
        "description": "The powerset of the given set",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "Powerset",
        "normalized": "",
        "package": "libcspm",
        "partial": "Powerset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:Processes",
      "description": {
        "fct-descr": "\u003cp\u003eSet of all processes\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "Processes",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#ValueSet",
        "fct-type": "function",
        "title": "Processes"
      },
      "index": {
        "description": "Set of all processes",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "Processes",
        "normalized": "",
        "package": "libcspm",
        "partial": "Processes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:allMaps",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#allMaps",
        "fct-type": "function",
        "title": "allMaps"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "allMaps",
        "normalized": "ValueSet-\u003eValueSet-\u003eValueSet",
        "package": "libcspm",
        "partial": "Maps",
        "signature": "ValueSet-\u003eValueSet-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:allSequences",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the set of all sequences over the input set. This is infinite\n so we use a CompositeSet.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#allSequences",
        "fct-type": "function",
        "title": "allSequences"
      },
      "index": {
        "description": "Returns the set of all sequences over the input set This is infinite so we use CompositeSet",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "allSequences",
        "normalized": "ValueSet-\u003eValueSet",
        "package": "libcspm",
        "partial": "Sequences",
        "signature": "ValueSet-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:card",
      "description": {
        "fct-descr": "\u003cp\u003eThe cardinality of the set. Throws an error if the set is infinite.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e Integer",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#card",
        "fct-type": "function",
        "title": "card"
      },
      "index": {
        "description": "The cardinality of the set Throws an error if the set is infinite",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "card",
        "normalized": "ValueSet-\u003eInteger",
        "package": "libcspm",
        "partial": "",
        "signature": "ValueSet-\u003eInteger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:cartesianProduct",
      "description": {
        "fct-descr": "\u003cp\u003eProduces a ValueSet of the carteisan product of several ValueSets, \n using \u003ccode\u003evc\u003c/code\u003e to convert each sequence of values into a single value.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "CartProductType -\u003e [ValueSet] -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#cartesianProduct",
        "fct-type": "function",
        "title": "cartesianProduct"
      },
      "index": {
        "description": "Produces ValueSet of the carteisan product of several ValueSets using vc to convert each sequence of values into single value",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "cartesianProduct",
        "normalized": "CartProductType-\u003e[ValueSet]-\u003eValueSet",
        "package": "libcspm",
        "partial": "Product",
        "signature": "CartProductType-\u003e[ValueSet]-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:compareValueSets",
      "description": {
        "fct-descr": "\u003cp\u003eCompares two value sets using subseteq (as per the specification).\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet -\u003e Maybe Ordering",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#compareValueSets",
        "fct-type": "function",
        "title": "compareValueSets"
      },
      "index": {
        "description": "Compares two value sets using subseteq as per the specification",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "compareValueSets",
        "normalized": "ValueSet-\u003eValueSet-\u003eMaybe Ordering",
        "package": "libcspm",
        "partial": "Value Sets",
        "signature": "ValueSet-\u003eValueSet-\u003eMaybe Ordering"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:difference",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#difference",
        "fct-type": "function",
        "title": "difference"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "difference",
        "normalized": "ValueSet-\u003eValueSet-\u003eValueSet",
        "package": "libcspm",
        "partial": "",
        "signature": "ValueSet-\u003eValueSet-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:empty",
      "description": {
        "fct-descr": "\u003cp\u003eIs the specified set empty?\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e Bool",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#empty",
        "fct-type": "function",
        "title": "empty"
      },
      "index": {
        "description": "Is the specified set empty",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "empty",
        "normalized": "ValueSet-\u003eBool",
        "package": "libcspm",
        "partial": "",
        "signature": "ValueSet-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:emptySet",
      "description": {
        "fct-descr": "\u003cp\u003eThe empty set\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#emptySet",
        "fct-type": "function",
        "title": "emptySet"
      },
      "index": {
        "description": "The empty set",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "emptySet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:fastUnDotCartProduct",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e Maybe [ValueSet]",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#fastUnDotCartProduct",
        "fct-type": "function",
        "title": "fastUnDotCartProduct"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "fastUnDotCartProduct",
        "normalized": "ValueSet-\u003eMaybe[ValueSet]",
        "package": "libcspm",
        "partial": "Un Dot Cart Product",
        "signature": "ValueSet-\u003eMaybe[ValueSet]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:fromList",
      "description": {
        "fct-descr": "\u003cp\u003eConverts a list to a set\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "[Value] -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#fromList",
        "fct-type": "function",
        "title": "fromList"
      },
      "index": {
        "description": "Converts list to set",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "fromList",
        "normalized": "[Value]-\u003eValueSet",
        "package": "libcspm",
        "partial": "List",
        "signature": "[Value]-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:infiniteUnions",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "[ValueSet] -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#infiniteUnions",
        "fct-type": "function",
        "title": "infiniteUnions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "infiniteUnions",
        "normalized": "[ValueSet]-\u003eValueSet",
        "package": "libcspm",
        "partial": "Unions",
        "signature": "[ValueSet]-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:intersection",
      "description": {
        "fct-descr": "\u003cp\u003eIntersects two sets throwing an error if it cannot be done in a way that \n will terminate.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#intersection",
        "fct-type": "function",
        "title": "intersection"
      },
      "index": {
        "description": "Intersects two sets throwing an error if it cannot be done in way that will terminate",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "intersection",
        "normalized": "ValueSet-\u003eValueSet-\u003eValueSet",
        "package": "libcspm",
        "partial": "",
        "signature": "ValueSet-\u003eValueSet-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:intersections",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated intersection.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "[ValueSet] -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#intersections",
        "fct-type": "function",
        "title": "intersections"
      },
      "index": {
        "description": "Replicated intersection",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "intersections",
        "normalized": "[ValueSet]-\u003eValueSet",
        "package": "libcspm",
        "partial": "",
        "signature": "[ValueSet]-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:member",
      "description": {
        "fct-descr": "\u003cp\u003eIs the specified value a member of the set.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e ValueSet -\u003e Bool",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#member",
        "fct-type": "function",
        "title": "member"
      },
      "index": {
        "description": "Is the specified value member of the set",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "member",
        "normalized": "Value-\u003eValueSet-\u003eBool",
        "package": "libcspm",
        "partial": "",
        "signature": "Value-\u003eValueSet-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:powerset",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#powerset",
        "fct-type": "function",
        "title": "powerset"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "powerset",
        "normalized": "ValueSet-\u003eValueSet",
        "package": "libcspm",
        "partial": "",
        "signature": "ValueSet-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:singletonValue",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the value iff the set contains one item only.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e Maybe Value",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#singletonValue",
        "fct-type": "function",
        "title": "singletonValue"
      },
      "index": {
        "description": "Returns the value iff the set contains one item only",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "singletonValue",
        "normalized": "ValueSet-\u003eMaybe Value",
        "package": "libcspm",
        "partial": "Value",
        "signature": "ValueSet-\u003eMaybe Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:toList",
      "description": {
        "fct-descr": "\u003cp\u003eConverts a set to list.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e [Value]",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#toList",
        "fct-type": "function",
        "title": "toList"
      },
      "index": {
        "description": "Converts set to list",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "toList",
        "normalized": "ValueSet-\u003e[Value]",
        "package": "libcspm",
        "partial": "List",
        "signature": "ValueSet-\u003e[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:toSeq",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e Seq Value",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#toSeq",
        "fct-type": "function",
        "title": "toSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "toSeq",
        "normalized": "ValueSet-\u003eSeq Value",
        "package": "libcspm",
        "partial": "Seq",
        "signature": "ValueSet-\u003eSeq Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:unDotProduct",
      "description": {
        "fct-descr": "\u003cp\u003eAttempts to decompose the set into a cartesian product, returning Nothing\n if it cannot.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e Maybe [ValueSet]",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#unDotProduct",
        "fct-type": "function",
        "title": "unDotProduct"
      },
      "index": {
        "description": "Attempts to decompose the set into cartesian product returning Nothing if it cannot",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "unDotProduct",
        "normalized": "ValueSet-\u003eMaybe[ValueSet]",
        "package": "libcspm",
        "partial": "Dot Product",
        "signature": "ValueSet-\u003eMaybe[ValueSet]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:union",
      "description": {
        "fct-descr": "\u003cp\u003eUnion two sets throwing an error if it cannot be done in a way that will\n terminate.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e ValueSet -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#union",
        "fct-type": "function",
        "title": "union"
      },
      "index": {
        "description": "Union two sets throwing an error if it cannot be done in way that will terminate",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "union",
        "normalized": "ValueSet-\u003eValueSet-\u003eValueSet",
        "package": "libcspm",
        "partial": "",
        "signature": "ValueSet-\u003eValueSet-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:unions",
      "description": {
        "fct-descr": "\u003cp\u003eReplicated union.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "[ValueSet] -\u003e ValueSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#unions",
        "fct-type": "function",
        "title": "unions"
      },
      "index": {
        "description": "Replicated union",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "unions",
        "normalized": "[ValueSet]-\u003eValueSet",
        "package": "libcspm",
        "partial": "",
        "signature": "[ValueSet]-\u003eValueSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-ValueSet.html#v:valueSetToEventSet",
      "description": {
        "fct-module": "CSPM.Evaluator.ValueSet",
        "fct-package": "libcspm",
        "fct-signature": "ValueSet -\u003e EventSet",
        "fct-source": "src/CSPM-Evaluator-ValueSet.html#valueSetToEventSet",
        "fct-type": "function",
        "title": "valueSetToEventSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator ValueSet",
        "module": "CSPM.Evaluator.ValueSet",
        "name": "valueSetToEventSet",
        "normalized": "ValueSet-\u003eEventSet",
        "package": "libcspm",
        "partial": "Set To Event Set",
        "signature": "ValueSet-\u003eEventSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator-Values.html",
        "fct-type": "module",
        "title": "Values"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Values",
        "normalized": "",
        "package": "libcspm",
        "partial": "Values",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:CSPOperator",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "data",
        "title": "CSPOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "CSPOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPOperator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:Event",
      "description": {
        "fct-descr": "\u003cp\u003eEvents, as represented in the LTS.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "data",
        "title": "Event"
      },
      "index": {
        "description": "Events as represented in the LTS",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Event",
        "normalized": "",
        "package": "libcspm",
        "partial": "Event",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:EventSet",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#EventSet",
        "fct-type": "type",
        "title": "EventSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "EventSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "Event Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:FunctionIdentifier",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "data",
        "title": "FunctionIdentifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "FunctionIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Function Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:Proc",
      "description": {
        "fct-descr": "\u003cp\u003eA compiled process. Note this is an infinite data structure (due to\n PProcCall) as this makes compilation easy (we can easily chase\n dependencies).\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "data",
        "title": "Proc"
      },
      "index": {
        "description": "compiled process Note this is an infinite data structure due to PProcCall as this makes compilation easy we can easily chase dependencies",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Proc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Proc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:ProcOperator",
      "description": {
        "fct-descr": "\u003cp\u003eAn operator that can be applied to processes.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "data",
        "title": "ProcOperator"
      },
      "index": {
        "description": "An operator that can be applied to processes",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "ProcOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Proc Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:ScopeIdentifier",
      "description": {
        "fct-descr": "\u003cp\u003eA disambiguator between different occurences of either processes or\n functions. This works by storing the values that are bound (i.e. the free\n variables the inner \u003ccode\u003ething\u003c/code\u003e may depend on). This is used as a \u003ccode\u003e\u003ca\u003eProcName\u003c/a\u003e\u003c/code\u003e and\n for \u003ccode\u003e\u003ca\u003eFunctionIdentifier\u003c/a\u003e\u003c/code\u003es.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "data",
        "title": "ScopeIdentifier"
      },
      "index": {
        "description": "disambiguator between different occurences of either processes or functions This works by storing the values that are bound i.e the free variables the inner thing may depend on This is used as ProcName and for FunctionIdentifier",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "ScopeIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scope Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:UProc",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-Values.html#UProc",
        "fct-type": "type",
        "title": "UProc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "UProc",
        "normalized": "",
        "package": "libcspm",
        "partial": "UProc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:UProcOperator",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-Values.html#UProcOperator",
        "fct-type": "type",
        "title": "UProcOperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "UProcOperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "UProc Operator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#t:Value",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "data",
        "title": "Value"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Value",
        "normalized": "",
        "package": "libcspm",
        "partial": "Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Chase",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Chase Bool",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Chase"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Chase",
        "normalized": "",
        "package": "libcspm",
        "partial": "Chase",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Determinise",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Determinise",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Determinise"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Determinise",
        "normalized": "",
        "package": "libcspm",
        "partial": "Determinise",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Diamond",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Diamond",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Diamond"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Diamond",
        "normalized": "",
        "package": "libcspm",
        "partial": "Diamond",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Explicate",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Explicate Bool",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Explicate"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Explicate",
        "normalized": "",
        "package": "libcspm",
        "partial": "Explicate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:FBuiltInFunction",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "FBuiltInFunction",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "FBuiltInFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "FBuiltInFunction",
        "normalized": "",
        "package": "libcspm",
        "partial": "FBuilt In Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:FLambda",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "FLambda",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "FLambda"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "FLambda",
        "normalized": "",
        "package": "libcspm",
        "partial": "FLambda",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:FMatchBind",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "FMatchBind",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "FMatchBind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "FMatchBind",
        "normalized": "",
        "package": "libcspm",
        "partial": "FMatch Bind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:ModelCompress",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "ModelCompress",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "ModelCompress"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "ModelCompress",
        "normalized": "",
        "package": "libcspm",
        "partial": "Model Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Normalize",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Normalize Bool",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Normalize"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Normalize",
        "normalized": "",
        "package": "libcspm",
        "partial": "Normalize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PAlphaParallel",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PAlphaParallel (seq evs)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PAlphaParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PAlphaParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "PAlpha Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PBinaryOp",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PBinaryOp (op seq ev evs evm) (Proc seq op pn ev evs evm) (Proc seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "PBinaryOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PBinaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PBinary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PException",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PException evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PException"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PException",
        "normalized": "",
        "package": "libcspm",
        "partial": "PException",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PExternalChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PExternalChoice",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PExternalChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PExternal Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PGenParallel",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PGenParallel evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PGenParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PGenParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "PGen Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PHide",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PHide evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PHide"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PHide",
        "normalized": "",
        "package": "libcspm",
        "partial": "PHide",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PInterleave",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PInterleave",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PInterleave"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PInterleave",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInterleave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PInternalChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PInternalChoice",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PInternalChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PInternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInternal Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PInterrupt",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PInterrupt",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "PInterrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PLinkParallel",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PLinkParallel evm",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PLinkParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PLinkParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "PLink Parallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:POp",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "POp (op seq ev evs evm) (seq (Proc seq op pn ev evs evm))",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "POp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "POp",
        "normalized": "",
        "package": "libcspm",
        "partial": "POp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:POperator",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "POperator (ProcOperator seq evs)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "POperator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "POperator",
        "normalized": "",
        "package": "libcspm",
        "partial": "POperator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PPrefix",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PPrefix ev",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PPrefix",
        "normalized": "",
        "package": "libcspm",
        "partial": "PPrefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PProcCall",
      "description": {
        "fct-descr": "\u003cp\u003eLabels the process this contains. This allows infinite loops to be\n spotted.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PProcCall pn (Proc seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "PProcCall"
      },
      "index": {
        "description": "Labels the process this contains This allows infinite loops to be spotted",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PProcCall",
        "normalized": "",
        "package": "libcspm",
        "partial": "PProc Call",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PRename",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PRename evm",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PRename"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PRename",
        "normalized": "",
        "package": "libcspm",
        "partial": "PRename",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PSequentialComp",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PSequentialComp",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSequentialComp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PSequentialComp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSequential Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PSlidingChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PSlidingChoice",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSlidingChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PSlidingChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSliding Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PSynchronisingExternalChoice",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PSynchronisingExternalChoice evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSynchronisingExternalChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PSynchronisingExternalChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSynchronising External Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PSynchronisingInterrupt",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PSynchronisingInterrupt evs",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#CSPOperator",
        "fct-type": "function",
        "title": "PSynchronisingInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PSynchronisingInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "PSynchronising Interrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:PUnaryOp",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "PUnaryOp (op seq ev evs evm) (Proc seq op pn ev evs evm)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Proc",
        "fct-type": "function",
        "title": "PUnaryOp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "PUnaryOp",
        "normalized": "",
        "package": "libcspm",
        "partial": "PUnary Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Prioritise",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Prioritise Bool (seq evs)",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "Prioritise"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Prioritise",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prioritise",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:SFunctionBind",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "SFunctionBind",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "function",
        "title": "SFunctionBind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "SFunctionBind",
        "normalized": "",
        "package": "libcspm",
        "partial": "SFunction Bind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:SVariableBind",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "SVariableBind",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "function",
        "title": "SVariableBind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "SVariableBind",
        "normalized": "",
        "package": "libcspm",
        "partial": "SVariable Bind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:StrongBisim",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "StrongBisim",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "StrongBisim"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "StrongBisim",
        "normalized": "",
        "package": "libcspm",
        "partial": "Strong Bisim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Tau",
      "description": {
        "fct-descr": "\u003cp\u003eThe internal special event tau.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Tau",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "function",
        "title": "Tau"
      },
      "index": {
        "description": "The internal special event tau",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Tau",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tau",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:TauLoopFactor",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "TauLoopFactor",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "TauLoopFactor"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "TauLoopFactor",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tau Loop Factor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:Tick",
      "description": {
        "fct-descr": "\u003cp\u003eThe internal event tick, representing termination.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Tick",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "function",
        "title": "Tick"
      },
      "index": {
        "description": "The internal event tick representing termination",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "Tick",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tick",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:UserEvent",
      "description": {
        "fct-descr": "\u003cp\u003eAny event defined in a channel definition.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "UserEvent Value",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#Event",
        "fct-type": "function",
        "title": "UserEvent"
      },
      "index": {
        "description": "Any event defined in channel definition",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "UserEvent",
        "normalized": "",
        "package": "libcspm",
        "partial": "User Event",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VBool",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VBool Bool",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VBool"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VBool",
        "normalized": "",
        "package": "libcspm",
        "partial": "VBool",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VChannel",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VChannel Name",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VChannel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VChannel",
        "normalized": "",
        "package": "libcspm",
        "partial": "VChannel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VChar",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VChar Char",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VChar",
        "normalized": "",
        "package": "libcspm",
        "partial": "VChar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VDataType",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VDataType Name",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VDataType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VDataType",
        "normalized": "",
        "package": "libcspm",
        "partial": "VData Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VDot",
      "description": {
        "fct-descr": "\u003cp\u003eIf A is a datatype clause that has 3 fields a b c then a runtime\n instantiation of this would be VDot [VDataType \u003ca\u003eA\u003c/a\u003e, a, b, c] where a,b\n and c can contain other VDots.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VDot [Value]",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VDot"
      },
      "index": {
        "description": "If is datatype clause that has fields then runtime instantiation of this would be VDot VDataType where and can contain other VDots",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VDot",
        "normalized": "VDot[Value]",
        "package": "libcspm",
        "partial": "VDot",
        "signature": "VDot[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VFunction",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VFunction FunctionIdentifier ([Value] -\u003e EvaluationMonad Value)",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VFunction",
        "normalized": "VFunction FunctionIdentifier([Value]-\u003eEvaluationMonad Value)",
        "package": "libcspm",
        "partial": "VFunction",
        "signature": "VFunction FunctionIdentifier([Value]-\u003eEvaluationMonad Value)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VInt",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VInt Int",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VInt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VInt",
        "normalized": "",
        "package": "libcspm",
        "partial": "VInt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VList",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VList [Value]",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VList",
        "normalized": "VList[Value]",
        "package": "libcspm",
        "partial": "VList",
        "signature": "VList[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VMap",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VMap (Map Value Value)",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VMap"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "VMap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VProc",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VProc UProc",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VProc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VProc",
        "normalized": "",
        "package": "libcspm",
        "partial": "VProc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VSet",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VSet ValueSet",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VSet",
        "normalized": "",
        "package": "libcspm",
        "partial": "VSet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VThunk",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VThunk (EvaluationMonad Value)",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VThunk"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VThunk",
        "normalized": "",
        "package": "libcspm",
        "partial": "VThunk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:VTuple",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "VTuple (Array Int Value)",
        "fct-source": "src/CSPM-Evaluator-Values.html#Value",
        "fct-type": "function",
        "title": "VTuple"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "VTuple",
        "normalized": "",
        "package": "libcspm",
        "partial": "VTuple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:WeakBisim",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "WeakBisim",
        "fct-source": "src/CSPM-Evaluator-ProcessValues.html#ProcOperator",
        "fct-type": "function",
        "title": "WeakBisim"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "WeakBisim",
        "normalized": "",
        "package": "libcspm",
        "partial": "Weak Bisim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:annonymousScopeId",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "[Value] -\u003e Maybe ScopeIdentifier -\u003e ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-Values.html#annonymousScopeId",
        "fct-type": "function",
        "title": "annonymousScopeId"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "annonymousScopeId",
        "normalized": "[Value]-\u003eMaybe ScopeIdentifier-\u003eScopeIdentifier",
        "package": "libcspm",
        "partial": "Scope Id",
        "signature": "[Value]-\u003eMaybe ScopeIdentifier-\u003eScopeIdentifier"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:argumentGroups",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "[[Value]]",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "argumentGroups"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "argumentGroups",
        "normalized": "[[Value]]",
        "package": "libcspm",
        "partial": "Groups",
        "signature": "[[Value]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:arguments",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "[Value]",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "arguments"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "arguments",
        "normalized": "[Value]",
        "package": "libcspm",
        "partial": "",
        "signature": "[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:compareValues",
      "description": {
        "fct-descr": "\u003cp\u003eImplements CSPM comparisons (note that Ord Value does not).\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e Value -\u003e Maybe Ordering",
        "fct-source": "src/CSPM-Evaluator-Values.html#compareValues",
        "fct-type": "function",
        "title": "compareValues"
      },
      "index": {
        "description": "Implements CSPM comparisons note that Ord Value does not",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "compareValues",
        "normalized": "Value-\u003eValue-\u003eMaybe Ordering",
        "package": "libcspm",
        "partial": "Values",
        "signature": "Value-\u003eValue-\u003eMaybe Ordering"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:functionName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Name",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "functionName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "functionName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:lambdaExpression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Exp Name",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "lambdaExpression"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "lambdaExpression",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:lookupVar",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Values.html#lookupVar",
        "fct-type": "function",
        "title": "lookupVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "lookupVar",
        "normalized": "Name-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Var",
        "signature": "Name-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:maybeSave",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e EvaluationMonad Value -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Values.html#maybeSave",
        "fct-type": "function",
        "title": "maybeSave"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "maybeSave",
        "normalized": "Type-\u003eEvaluationMonad Value-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Save",
        "signature": "Type-\u003eEvaluationMonad Value-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:noSave",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a program that yields a value, returns a second program that can be\n inserted into the environment, but will cause the environment not to save\n the actual value, but to recompute it everytime. This is useful for cheap,\n to compute, but high cost in terms of memory, computations (like named\n processes).\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad Value -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Values.html#noSave",
        "fct-type": "function",
        "title": "noSave"
      },
      "index": {
        "description": "Given program that yields value returns second program that can be inserted into the environment but will cause the environment not to save the actual value but to recompute it everytime This is useful for cheap to compute but high cost in terms of memory computations like named processes",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "noSave",
        "normalized": "EvaluationMonad Value-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Save",
        "signature": "EvaluationMonad Value-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:parentFunctionIdentifier",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Maybe ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "parentFunctionIdentifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "parentFunctionIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Function Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:parentScopeIdentifier",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Maybe ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "function",
        "title": "parentScopeIdentifier"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "parentScopeIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scope Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:procName",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "ScopeIdentifier -\u003e ProcName",
        "fct-source": "src/CSPM-Evaluator-Values.html#procName",
        "fct-type": "function",
        "title": "procName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "procName",
        "normalized": "ScopeIdentifier-\u003eProcName",
        "package": "libcspm",
        "partial": "Name",
        "signature": "ScopeIdentifier-\u003eProcName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:removeThunk",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator-Values.html#removeThunk",
        "fct-type": "function",
        "title": "removeThunk"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "removeThunk",
        "normalized": "Value-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Thunk",
        "signature": "Value-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:scopeFunctionArguments",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "[[Value]]",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "function",
        "title": "scopeFunctionArguments"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "scopeFunctionArguments",
        "normalized": "[[Value]]",
        "package": "libcspm",
        "partial": "Function Arguments",
        "signature": "[[Value]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:scopeFunctionName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Name",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "function",
        "title": "scopeFunctionName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "scopeFunctionName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Function Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:scopeId",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e [[Value]] -\u003e Maybe ScopeIdentifier -\u003e ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-Values.html#scopeId",
        "fct-type": "function",
        "title": "scopeId"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "scopeId",
        "normalized": "Name-\u003e[[Value]]-\u003eMaybe ScopeIdentifier-\u003eScopeIdentifier",
        "package": "libcspm",
        "partial": "Id",
        "signature": "Name-\u003e[[Value]]-\u003eMaybe ScopeIdentifier-\u003eScopeIdentifier"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:scopeIdentifier",
      "description": {
        "fct-descr": "\u003cp\u003eThe free variables this is bound in\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Maybe ScopeIdentifier",
        "fct-source": "src/CSPM-Evaluator-Values.html#FunctionIdentifier",
        "fct-type": "function",
        "title": "scopeIdentifier"
      },
      "index": {
        "description": "The free variables this is bound in",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "scopeIdentifier",
        "normalized": "",
        "package": "libcspm",
        "partial": "Identifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:trimValueForProcessName",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e Value",
        "fct-source": "src/CSPM-Evaluator-Values.html#trimValueForProcessName",
        "fct-type": "function",
        "title": "trimValueForProcessName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "trimValueForProcessName",
        "normalized": "Value-\u003eValue",
        "package": "libcspm",
        "partial": "Value For Process Name",
        "signature": "Value-\u003eValue"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:tupleFromList",
      "description": {
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "[Value] -\u003e Value",
        "fct-source": "src/CSPM-Evaluator-Values.html#tupleFromList",
        "fct-type": "function",
        "title": "tupleFromList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "tupleFromList",
        "normalized": "[Value]-\u003eValue",
        "package": "libcspm",
        "partial": "From List",
        "signature": "[Value]-\u003eValue"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:valueEventToEvent",
      "description": {
        "fct-descr": "\u003cp\u003eThis assumes that the value is a VDot with the left is a VChannel\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "Value -\u003e Event",
        "fct-source": "src/CSPM-Evaluator-Values.html#valueEventToEvent",
        "fct-type": "function",
        "title": "valueEventToEvent"
      },
      "index": {
        "description": "This assumes that the value is VDot with the left is VChannel",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "valueEventToEvent",
        "normalized": "Value-\u003eEvent",
        "package": "libcspm",
        "partial": "Event To Event",
        "signature": "Value-\u003eEvent"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator-Values.html#v:variablesBound",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator.Values",
        "fct-package": "libcspm",
        "fct-signature": "[Value]",
        "fct-source": "src/CSPM-Evaluator-Values.html#ScopeIdentifier",
        "fct-type": "function",
        "title": "variablesBound"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator Values",
        "module": "CSPM.Evaluator.Values",
        "name": "variablesBound",
        "normalized": "[Value]",
        "package": "libcspm",
        "partial": "Bound",
        "signature": "[Value]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Evaluator.html",
        "fct-type": "module",
        "title": "Evaluator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "Evaluator",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#t:EvaluationMonad",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationMonad",
        "fct-type": "type",
        "title": "EvaluationMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "EvaluationMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluation Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#t:EvaluationState",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Monad.html#EvaluationState",
        "fct-type": "data",
        "title": "EvaluationState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "EvaluationState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluation State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#t:EvaluatorOptions",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "data",
        "title": "EvaluatorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "EvaluatorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#t:ProfilerOptions",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "data",
        "title": "ProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "ProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#t:ProfilingData",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilingData",
        "fct-type": "data",
        "title": "ProfilingData"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "ProfilingData",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiling Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:EvaluatorOptions",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "EvaluatorOptions",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "function",
        "title": "EvaluatorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "EvaluatorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:ProfilerOptions",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "ProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "ProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:addToEnvironment",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "[(Name, EvaluationMonad Value)] -\u003e EvaluationMonad EvaluationState",
        "fct-source": "src/CSPM-Evaluator.html#addToEnvironment",
        "fct-type": "function",
        "title": "addToEnvironment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "addToEnvironment",
        "normalized": "[(Name,EvaluationMonad Value)]-\u003eEvaluationMonad EvaluationState",
        "package": "libcspm",
        "partial": "To Environment",
        "signature": "[(Name,EvaluationMonad Value)]-\u003eEvaluationMonad EvaluationState"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:defaultEvaluatorOptions",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "EvaluatorOptions",
        "fct-source": "src/CSPM-Evaluator.html#defaultEvaluatorOptions",
        "fct-type": "function",
        "title": "defaultEvaluatorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "defaultEvaluatorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:defaultProfilerOptions",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#defaultProfilerOptions",
        "fct-type": "function",
        "title": "defaultProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "defaultProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:evaluateDecl",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluates the declaration but doesn't add it to the current environment.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "TCDecl -\u003e EvaluationMonad [(Name, EvaluationMonad Value)]",
        "fct-source": "src/CSPM-Evaluator.html#evaluateDecl",
        "fct-type": "function",
        "title": "evaluateDecl"
      },
      "index": {
        "description": "Evaluates the declaration but doesn add it to the current environment",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "evaluateDecl",
        "normalized": "TCDecl-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]",
        "package": "libcspm",
        "partial": "Decl",
        "signature": "TCDecl-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:evaluateExp",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "TCExp -\u003e EvaluationMonad Value",
        "fct-source": "src/CSPM-Evaluator.html#evaluateExp",
        "fct-type": "function",
        "title": "evaluateExp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "evaluateExp",
        "normalized": "TCExp-\u003eEvaluationMonad Value",
        "package": "libcspm",
        "partial": "Exp",
        "signature": "TCExp-\u003eEvaluationMonad Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:evaluateFile",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluates the declaration but doesn't add it to the current environment.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "TCCSPMFile -\u003e EvaluationMonad [(Name, EvaluationMonad Value)]",
        "fct-source": "src/CSPM-Evaluator.html#evaluateFile",
        "fct-type": "function",
        "title": "evaluateFile"
      },
      "index": {
        "description": "Evaluates the declaration but doesn add it to the current environment",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "evaluateFile",
        "normalized": "TCCSPMFile-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]",
        "package": "libcspm",
        "partial": "File",
        "signature": "TCCSPMFile-\u003eEvaluationMonad[(Name,EvaluationMonad Value)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:flattenRecursiveCalls",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "flattenRecursiveCalls"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "flattenRecursiveCalls",
        "normalized": "",
        "package": "libcspm",
        "partial": "Recursive Calls",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:initEvaluator",
      "description": {
        "fct-descr": "\u003cp\u003eThe environment to use initially. This uses the IO monad as \n the EvaluationMonad cannot be used without a valid environment.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "EvaluatorOptions -\u003e IO EvaluationState",
        "fct-source": "src/CSPM-Evaluator.html#initEvaluator",
        "fct-type": "function",
        "title": "initEvaluator"
      },
      "index": {
        "description": "The environment to use initially This uses the IO monad as the EvaluationMonad cannot be used without valid environment",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "initEvaluator",
        "normalized": "EvaluatorOptions-\u003eIO EvaluationState",
        "package": "libcspm",
        "partial": "Evaluator",
        "signature": "EvaluatorOptions-\u003eIO EvaluationState"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:isActive",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "isActive"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "isActive",
        "normalized": "",
        "package": "libcspm",
        "partial": "Active",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:maybeProcessNameToProcess",
      "description": {
        "fct-descr": "\u003cp\u003eAttempts to convert a process name to a process, if possible.\n\u003c/p\u003e",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "ProcName -\u003e EvaluationMonad (Maybe UProc)",
        "fct-source": "src/CSPM-Evaluator.html#maybeProcessNameToProcess",
        "fct-type": "function",
        "title": "maybeProcessNameToProcess"
      },
      "index": {
        "description": "Attempts to convert process name to process if possible",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "maybeProcessNameToProcess",
        "normalized": "ProcName-\u003eEvaluationMonad(Maybe UProc)",
        "package": "libcspm",
        "partial": "Process Name To Process",
        "signature": "ProcName-\u003eEvaluationMonad(Maybe UProc)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:profilerOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "function",
        "title": "profilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "profilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:profilingData",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad ProfilingData",
        "fct-source": "src/CSPM-Evaluator.html#profilingData",
        "fct-type": "function",
        "title": "profilingData"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "profilingData",
        "normalized": "",
        "package": "libcspm",
        "partial": "Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:runEvaluator",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationState -\u003e EvaluationMonad a -\u003e a",
        "fct-source": "src/CSPM-Evaluator-Monad.html#runEvaluator",
        "fct-type": "function",
        "title": "runEvaluator"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "runEvaluator",
        "normalized": "EvaluationState-\u003eEvaluationMonad a-\u003ea",
        "package": "libcspm",
        "partial": "Evaluator",
        "signature": "EvaluationState-\u003eEvaluationMonad a-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:runFromStateToState",
      "description": {
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationState -\u003e EvaluationMonad a -\u003e (a, EvaluationState)",
        "fct-source": "src/CSPM-Evaluator.html#runFromStateToState",
        "fct-type": "function",
        "title": "runFromStateToState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "runFromStateToState",
        "normalized": "EvaluationState-\u003eEvaluationMonad a-\u003e(a,EvaluationState)",
        "package": "libcspm",
        "partial": "From State To State",
        "signature": "EvaluationState-\u003eEvaluationMonad a-\u003e(a,EvaluationState)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Evaluator.html#v:runtimeRangeChecks",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Evaluator",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "function",
        "title": "runtimeRangeChecks"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Evaluator",
        "module": "CSPM.Evaluator",
        "name": "runtimeRangeChecks",
        "normalized": "",
        "package": "libcspm",
        "partial": "Range Checks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Parser-Exceptions.html",
        "fct-type": "module",
        "title": "Exceptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "Exceptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exceptions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:ambiguousTypeAnnotationsError",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "UnRenamedName -\u003e [SrcSpan] -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#ambiguousTypeAnnotationsError",
        "fct-type": "function",
        "title": "ambiguousTypeAnnotationsError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "ambiguousTypeAnnotationsError",
        "normalized": "UnRenamedName-\u003e[SrcSpan]-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Type Annotations Error",
        "signature": "UnRenamedName-\u003e[SrcSpan]-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:definitionSpanFileError",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PExp -\u003e PExp -\u003e SrcSpan -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#definitionSpanFileError",
        "fct-type": "function",
        "title": "definitionSpanFileError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "definitionSpanFileError",
        "normalized": "PExp-\u003ePExp-\u003eSrcSpan-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Span File Error",
        "signature": "PExp-\u003ePExp-\u003eSrcSpan-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:fileAccessErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "FilePath -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#fileAccessErrorMessage",
        "fct-type": "function",
        "title": "fileAccessErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "fileAccessErrorMessage",
        "normalized": "FilePath-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Access Error Message",
        "signature": "FilePath-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidExpressionErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PExp -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidExpressionErrorMessage",
        "fct-type": "function",
        "title": "invalidExpressionErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidExpressionErrorMessage",
        "normalized": "PExp-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Expression Error Message",
        "signature": "PExp-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidFunctionArgsErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PSType -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidFunctionArgsErrorMessage",
        "fct-type": "function",
        "title": "invalidFunctionArgsErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidFunctionArgsErrorMessage",
        "normalized": "PSType-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Function Args Error Message",
        "signature": "PSType-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidIncludeErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidIncludeErrorMessage",
        "fct-type": "function",
        "title": "invalidIncludeErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidIncludeErrorMessage",
        "normalized": "SrcSpan-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Include Error Message",
        "signature": "SrcSpan-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidLetDeclarationErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PDecl -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidLetDeclarationErrorMessage",
        "fct-type": "function",
        "title": "invalidLetDeclarationErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidLetDeclarationErrorMessage",
        "normalized": "PDecl-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Let Declaration Error Message",
        "signature": "PDecl-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidModuleDeclarationErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PDecl -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidModuleDeclarationErrorMessage",
        "fct-type": "function",
        "title": "invalidModuleDeclarationErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidModuleDeclarationErrorMessage",
        "normalized": "PDecl-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Module Declaration Error Message",
        "signature": "PDecl-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidPatternErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PExp -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidPatternErrorMessage",
        "fct-type": "function",
        "title": "invalidPatternErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidPatternErrorMessage",
        "normalized": "PExp-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Pattern Error Message",
        "signature": "PExp-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:invalidTimedSectionDeclarationErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "PDecl -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#invalidTimedSectionDeclarationErrorMessage",
        "fct-type": "function",
        "title": "invalidTimedSectionDeclarationErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "invalidTimedSectionDeclarationErrorMessage",
        "normalized": "PDecl-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Timed Section Declaration Error Message",
        "signature": "PDecl-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:lexicalErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#lexicalErrorMessage",
        "fct-type": "function",
        "title": "lexicalErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "lexicalErrorMessage",
        "normalized": "SrcSpan-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Error Message",
        "signature": "SrcSpan-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:parseErrorMessage",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "LToken -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#parseErrorMessage",
        "fct-type": "function",
        "title": "parseErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "parseErrorMessage",
        "normalized": "LToken-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Error Message",
        "signature": "LToken-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:throwSourceError",
      "description": {
        "fct-descr": "\u003cp\u003eThrow an error message as a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ErrorMessages -\u003e a",
        "fct-source": "src/Util-Exception.html#throwSourceError",
        "fct-type": "function",
        "title": "throwSourceError"
      },
      "index": {
        "description": "Throw an error message as SourceError",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "throwSourceError",
        "normalized": "ErrorMessages-\u003ea",
        "package": "libcspm",
        "partial": "Source Error",
        "signature": "ErrorMessages-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:unknownConstraintError",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e SrcSpan -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#unknownConstraintError",
        "fct-type": "function",
        "title": "unknownConstraintError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "unknownConstraintError",
        "normalized": "String-\u003eSrcSpan-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Constraint Error",
        "signature": "String-\u003eSrcSpan-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Exceptions.html#v:unusedTypeAnnotationsError",
      "description": {
        "fct-module": "CSPM.Parser.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "UnRenamedName -\u003e SrcSpan -\u003e ErrorMessage",
        "fct-source": "src/CSPM-Parser-Exceptions.html#unusedTypeAnnotationsError",
        "fct-type": "function",
        "title": "unusedTypeAnnotationsError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Exceptions",
        "module": "CSPM.Parser.Exceptions",
        "name": "unusedTypeAnnotationsError",
        "normalized": "UnRenamedName-\u003eSrcSpan-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Type Annotations Error",
        "signature": "UnRenamedName-\u003eSrcSpan-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Parser-Lexer.html",
        "fct-type": "module",
        "title": "Lexer"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "Lexer",
        "normalized": "",
        "package": "libcspm",
        "partial": "Lexer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#t:AlexAcc",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAcc",
        "fct-type": "data",
        "title": "AlexAcc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAcc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Acc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#t:AlexAccPred",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAccPred",
        "fct-type": "type",
        "title": "AlexAccPred"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAccPred",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Acc Pred",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#t:AlexAddr",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAddr",
        "fct-type": "data",
        "title": "AlexAddr"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAddr",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Addr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#t:AlexInput",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexInput",
        "fct-type": "type",
        "title": "AlexInput"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexInput",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#t:AlexLastAcc",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexLastAcc",
        "fct-type": "data",
        "title": "AlexLastAcc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexLastAcc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Last Acc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#t:AlexReturn",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexReturn",
        "fct-type": "data",
        "title": "AlexReturn"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexReturn",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Return",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexA-35-",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexA# Addr#",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAddr",
        "fct-type": "function",
        "title": "AlexA#"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexA#",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexAcc",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAcc a",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAcc",
        "fct-type": "function",
        "title": "AlexAcc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAcc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Acc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexAccPred",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAccPred a (AlexAccPred user)",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAcc",
        "fct-type": "function",
        "title": "AlexAccPred"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAccPred",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Acc Pred",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexAccSkip",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAccSkip",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAcc",
        "fct-type": "function",
        "title": "AlexAccSkip"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAccSkip",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Acc Skip",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexAccSkipPred",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAccSkipPred (AlexAccPred user)",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexAcc",
        "fct-type": "function",
        "title": "AlexAccSkipPred"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexAccSkipPred",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Acc Skip Pred",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexEOF",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexEOF",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexReturn",
        "fct-type": "function",
        "title": "AlexEOF"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexEOF",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex EOF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexError",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexError !AlexInput",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexReturn",
        "fct-type": "function",
        "title": "AlexError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexError",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexLastAcc",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexLastAcc a !AlexInput !Int",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexLastAcc",
        "fct-type": "function",
        "title": "AlexLastAcc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexLastAcc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Last Acc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexLastSkip",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexLastSkip !AlexInput !Int",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexLastAcc",
        "fct-type": "function",
        "title": "AlexLastSkip"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexLastSkip",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Last Skip",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexNone",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexNone",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexLastAcc",
        "fct-type": "function",
        "title": "AlexNone"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexNone",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex None",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexSkip",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexSkip !AlexInput !Int",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexReturn",
        "fct-type": "function",
        "title": "AlexSkip"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexSkip",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Skip",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:AlexToken",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexToken !AlexInput !Int a",
        "fct-source": "src/CSPM-Parser-Lexer.html#AlexReturn",
        "fct-type": "function",
        "title": "AlexToken"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "AlexToken",
        "normalized": "",
        "package": "libcspm",
        "partial": "Alex Token",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexAndPred",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "(t -\u003e t1 -\u003e t2 -\u003e t3 -\u003e Bool) -\u003e (t -\u003e t1 -\u003e t2 -\u003e t3 -\u003e Bool) -\u003e t -\u003e t1 -\u003e t2 -\u003e t3 -\u003e Bool",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexAndPred",
        "fct-type": "function",
        "title": "alexAndPred"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexAndPred",
        "normalized": "(a-\u003ea-\u003ea-\u003ea-\u003eBool)-\u003e(a-\u003ea-\u003ea-\u003ea-\u003eBool)-\u003ea-\u003ea-\u003ea-\u003ea-\u003eBool",
        "package": "libcspm",
        "partial": "And Pred",
        "signature": "(t-\u003et-\u003et-\u003et-\u003eBool)-\u003e(t-\u003et-\u003et-\u003et-\u003eBool)-\u003et-\u003et-\u003et-\u003et-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexGetByte",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Maybe (Word8, AlexInput)",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexGetByte",
        "fct-type": "function",
        "title": "alexGetByte"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexGetByte",
        "normalized": "AlexInput-\u003eMaybe(Word,AlexInput)",
        "package": "libcspm",
        "partial": "Get Byte",
        "signature": "AlexInput-\u003eMaybe(Word,AlexInput)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexGetChar",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Maybe (Char, AlexInput)",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexGetChar",
        "fct-type": "function",
        "title": "alexGetChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexGetChar",
        "normalized": "AlexInput-\u003eMaybe(Char,AlexInput)",
        "package": "libcspm",
        "partial": "Get Char",
        "signature": "AlexInput-\u003eMaybe(Char,AlexInput)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexIndexInt16OffAddr",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAddr -\u003e Int# -\u003e Int#",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexIndexInt16OffAddr",
        "fct-type": "function",
        "title": "alexIndexInt16OffAddr"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexIndexInt16OffAddr",
        "normalized": "AlexAddr-\u003eInt #-\u003eInt #",
        "package": "libcspm",
        "partial": "Index Int Off Addr",
        "signature": "AlexAddr-\u003eInt #-\u003eInt #"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexIndexInt32OffAddr",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAddr -\u003e Int# -\u003e Int#",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexIndexInt32OffAddr",
        "fct-type": "function",
        "title": "alexIndexInt32OffAddr"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexIndexInt32OffAddr",
        "normalized": "AlexAddr-\u003eInt #-\u003eInt #",
        "package": "libcspm",
        "partial": "Index Int Off Addr",
        "signature": "AlexAddr-\u003eInt #-\u003eInt #"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexInputPrevChar",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Char",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexInputPrevChar",
        "fct-type": "function",
        "title": "alexInputPrevChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexInputPrevChar",
        "normalized": "AlexInput-\u003eChar",
        "package": "libcspm",
        "partial": "Input Prev Char",
        "signature": "AlexInput-\u003eChar"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexPrevCharIs",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Char -\u003e t -\u003e AlexInput -\u003e t1 -\u003e t2 -\u003e Bool",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexPrevCharIs",
        "fct-type": "function",
        "title": "alexPrevCharIs"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexPrevCharIs",
        "normalized": "Char-\u003ea-\u003eAlexInput-\u003ea-\u003ea-\u003eBool",
        "package": "libcspm",
        "partial": "Prev Char Is",
        "signature": "Char-\u003et-\u003eAlexInput-\u003et-\u003et-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexPrevCharIsOneOf",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Array Char e -\u003e t -\u003e AlexInput -\u003e t1 -\u003e t2 -\u003e e",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexPrevCharIsOneOf",
        "fct-type": "function",
        "title": "alexPrevCharIsOneOf"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexPrevCharIsOneOf",
        "normalized": "Array Char a-\u003eb-\u003eAlexInput-\u003eb-\u003eb-\u003ea",
        "package": "libcspm",
        "partial": "Prev Char Is One Of",
        "signature": "Array Char e-\u003et-\u003eAlexInput-\u003et-\u003et-\u003ee"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexPrevCharMatches",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "(Char -\u003e t3) -\u003e t -\u003e AlexInput -\u003e t1 -\u003e t2 -\u003e t3",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexPrevCharMatches",
        "fct-type": "function",
        "title": "alexPrevCharMatches"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexPrevCharMatches",
        "normalized": "(Char-\u003ea)-\u003ea-\u003eAlexInput-\u003ea-\u003ea-\u003ea",
        "package": "libcspm",
        "partial": "Prev Char Matches",
        "signature": "(Char-\u003et)-\u003et-\u003eAlexInput-\u003et-\u003et-\u003et"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexRightContext",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e AlexAccPred (Any *)",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexRightContext",
        "fct-type": "function",
        "title": "alexRightContext"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexRightContext",
        "normalized": "Int-\u003eAlexAccPred(Any*)",
        "package": "libcspm",
        "partial": "Right Context",
        "signature": "Int-\u003eAlexAccPred(Any*)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexScan",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "ParserState -\u003e Int -\u003e AlexReturn (AlexInput -\u003e Int -\u003e ParseMonad LToken)",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexScan",
        "fct-type": "function",
        "title": "alexScan"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexScan",
        "normalized": "ParserState-\u003eInt-\u003eAlexReturn(AlexInput-\u003eInt-\u003eParseMonad LToken)",
        "package": "libcspm",
        "partial": "Scan",
        "signature": "ParserState-\u003eInt-\u003eAlexReturn(AlexInput-\u003eInt-\u003eParseMonad LToken)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alexScanUser",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Any * -\u003e ParserState -\u003e Int -\u003e AlexReturn (AlexInput -\u003e Int -\u003e ParseMonad LToken)",
        "fct-source": "src/CSPM-Parser-Lexer.html#alexScanUser",
        "fct-type": "function",
        "title": "alexScanUser"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alexScanUser",
        "normalized": "Any*-\u003eParserState-\u003eInt-\u003eAlexReturn(AlexInput-\u003eInt-\u003eParseMonad LToken)",
        "package": "libcspm",
        "partial": "Scan User",
        "signature": "Any*-\u003eParserState-\u003eInt-\u003eAlexReturn(AlexInput-\u003eInt-\u003eParseMonad LToken)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_accept",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Array Int [AlexAcc (AlexInput -\u003e Int -\u003e ParseMonad LToken) (Any *)]",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_accept",
        "fct-type": "function",
        "title": "alex_accept"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_accept",
        "normalized": "Array Int[AlexAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)(Any*)]",
        "package": "libcspm",
        "partial": "",
        "signature": "Array Int[AlexAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)(Any*)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_0",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_0",
        "fct-type": "function",
        "title": "alex_action_0"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_0",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_1",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_1",
        "fct-type": "function",
        "title": "alex_action_1"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_1",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_10",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_10",
        "fct-type": "function",
        "title": "alex_action_10"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_10",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_100",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_100",
        "fct-type": "function",
        "title": "alex_action_100"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_100",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_101",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_101",
        "fct-type": "function",
        "title": "alex_action_101"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_101",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_102",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_102",
        "fct-type": "function",
        "title": "alex_action_102"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_102",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_103",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_103",
        "fct-type": "function",
        "title": "alex_action_103"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_103",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_104",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_104",
        "fct-type": "function",
        "title": "alex_action_104"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_104",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_105",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_105",
        "fct-type": "function",
        "title": "alex_action_105"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_105",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_106",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_106",
        "fct-type": "function",
        "title": "alex_action_106"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_106",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_107",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_107",
        "fct-type": "function",
        "title": "alex_action_107"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_107",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_108",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_108",
        "fct-type": "function",
        "title": "alex_action_108"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_108",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_109",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_109",
        "fct-type": "function",
        "title": "alex_action_109"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_109",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_11",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_11",
        "fct-type": "function",
        "title": "alex_action_11"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_11",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_110",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_110",
        "fct-type": "function",
        "title": "alex_action_110"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_110",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_111",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_111",
        "fct-type": "function",
        "title": "alex_action_111"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_111",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_112",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_112",
        "fct-type": "function",
        "title": "alex_action_112"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_112",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_113",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_113",
        "fct-type": "function",
        "title": "alex_action_113"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_113",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_114",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_114",
        "fct-type": "function",
        "title": "alex_action_114"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_114",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_115",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_115",
        "fct-type": "function",
        "title": "alex_action_115"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_115",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_116",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_116",
        "fct-type": "function",
        "title": "alex_action_116"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_116",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_117",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_117",
        "fct-type": "function",
        "title": "alex_action_117"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_117",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_118",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_118",
        "fct-type": "function",
        "title": "alex_action_118"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_118",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_119",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_119",
        "fct-type": "function",
        "title": "alex_action_119"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_119",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_12",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_12",
        "fct-type": "function",
        "title": "alex_action_12"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_12",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_120",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_120",
        "fct-type": "function",
        "title": "alex_action_120"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_120",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_121",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_121",
        "fct-type": "function",
        "title": "alex_action_121"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_121",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_122",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_122",
        "fct-type": "function",
        "title": "alex_action_122"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_122",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_123",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_123",
        "fct-type": "function",
        "title": "alex_action_123"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_123",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_124",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_124",
        "fct-type": "function",
        "title": "alex_action_124"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_124",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_125",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_125",
        "fct-type": "function",
        "title": "alex_action_125"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_125",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_13",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_13",
        "fct-type": "function",
        "title": "alex_action_13"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_13",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_14",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_14",
        "fct-type": "function",
        "title": "alex_action_14"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_14",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_15",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_15",
        "fct-type": "function",
        "title": "alex_action_15"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_15",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_16",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_16",
        "fct-type": "function",
        "title": "alex_action_16"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_16",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_17",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_17",
        "fct-type": "function",
        "title": "alex_action_17"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_17",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_18",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_18",
        "fct-type": "function",
        "title": "alex_action_18"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_18",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_19",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_19",
        "fct-type": "function",
        "title": "alex_action_19"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_19",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_2",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_2",
        "fct-type": "function",
        "title": "alex_action_2"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_2",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_20",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_20",
        "fct-type": "function",
        "title": "alex_action_20"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_20",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_21",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_21",
        "fct-type": "function",
        "title": "alex_action_21"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_21",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_22",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_22",
        "fct-type": "function",
        "title": "alex_action_22"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_22",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_23",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_23",
        "fct-type": "function",
        "title": "alex_action_23"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_23",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_24",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_24",
        "fct-type": "function",
        "title": "alex_action_24"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_24",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_25",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_25",
        "fct-type": "function",
        "title": "alex_action_25"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_25",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_26",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_26",
        "fct-type": "function",
        "title": "alex_action_26"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_26",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_27",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_27",
        "fct-type": "function",
        "title": "alex_action_27"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_27",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_28",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_28",
        "fct-type": "function",
        "title": "alex_action_28"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_28",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_29",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_29",
        "fct-type": "function",
        "title": "alex_action_29"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_29",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_3",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_3",
        "fct-type": "function",
        "title": "alex_action_3"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_3",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_30",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_30",
        "fct-type": "function",
        "title": "alex_action_30"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_30",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_31",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_31",
        "fct-type": "function",
        "title": "alex_action_31"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_31",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_32",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_32",
        "fct-type": "function",
        "title": "alex_action_32"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_32",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_33",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_33",
        "fct-type": "function",
        "title": "alex_action_33"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_33",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_34",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_34",
        "fct-type": "function",
        "title": "alex_action_34"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_34",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_35",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_35",
        "fct-type": "function",
        "title": "alex_action_35"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_35",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_36",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_36",
        "fct-type": "function",
        "title": "alex_action_36"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_36",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_37",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_37",
        "fct-type": "function",
        "title": "alex_action_37"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_37",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_38",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_38",
        "fct-type": "function",
        "title": "alex_action_38"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_38",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_39",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_39",
        "fct-type": "function",
        "title": "alex_action_39"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_39",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_4",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_4",
        "fct-type": "function",
        "title": "alex_action_4"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_4",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_40",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_40",
        "fct-type": "function",
        "title": "alex_action_40"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_40",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_41",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_41",
        "fct-type": "function",
        "title": "alex_action_41"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_41",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_42",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_42",
        "fct-type": "function",
        "title": "alex_action_42"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_42",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_43",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_43",
        "fct-type": "function",
        "title": "alex_action_43"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_43",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_44",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_44",
        "fct-type": "function",
        "title": "alex_action_44"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_44",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_45",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_45",
        "fct-type": "function",
        "title": "alex_action_45"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_45",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_46",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_46",
        "fct-type": "function",
        "title": "alex_action_46"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_46",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_47",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_47",
        "fct-type": "function",
        "title": "alex_action_47"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_47",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_48",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_48",
        "fct-type": "function",
        "title": "alex_action_48"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_48",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_49",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_49",
        "fct-type": "function",
        "title": "alex_action_49"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_49",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_5",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_5",
        "fct-type": "function",
        "title": "alex_action_5"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_5",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_50",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_50",
        "fct-type": "function",
        "title": "alex_action_50"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_50",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_51",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_51",
        "fct-type": "function",
        "title": "alex_action_51"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_51",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_52",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_52",
        "fct-type": "function",
        "title": "alex_action_52"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_52",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_53",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_53",
        "fct-type": "function",
        "title": "alex_action_53"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_53",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_54",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_54",
        "fct-type": "function",
        "title": "alex_action_54"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_54",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_55",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_55",
        "fct-type": "function",
        "title": "alex_action_55"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_55",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_56",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_56",
        "fct-type": "function",
        "title": "alex_action_56"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_56",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_57",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_57",
        "fct-type": "function",
        "title": "alex_action_57"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_57",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_58",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_58",
        "fct-type": "function",
        "title": "alex_action_58"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_58",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_59",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_59",
        "fct-type": "function",
        "title": "alex_action_59"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_59",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_6",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_6",
        "fct-type": "function",
        "title": "alex_action_6"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_6",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_60",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_60",
        "fct-type": "function",
        "title": "alex_action_60"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_60",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_61",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_61",
        "fct-type": "function",
        "title": "alex_action_61"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_61",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_62",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_62",
        "fct-type": "function",
        "title": "alex_action_62"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_62",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_63",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_63",
        "fct-type": "function",
        "title": "alex_action_63"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_63",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_64",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_64",
        "fct-type": "function",
        "title": "alex_action_64"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_64",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_65",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_65",
        "fct-type": "function",
        "title": "alex_action_65"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_65",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_66",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_66",
        "fct-type": "function",
        "title": "alex_action_66"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_66",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_67",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_67",
        "fct-type": "function",
        "title": "alex_action_67"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_67",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_68",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_68",
        "fct-type": "function",
        "title": "alex_action_68"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_68",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_69",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_69",
        "fct-type": "function",
        "title": "alex_action_69"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_69",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_7",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_7",
        "fct-type": "function",
        "title": "alex_action_7"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_7",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_70",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_70",
        "fct-type": "function",
        "title": "alex_action_70"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_70",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_71",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_71",
        "fct-type": "function",
        "title": "alex_action_71"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_71",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_72",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_72",
        "fct-type": "function",
        "title": "alex_action_72"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_72",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_73",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_73",
        "fct-type": "function",
        "title": "alex_action_73"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_73",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_74",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_74",
        "fct-type": "function",
        "title": "alex_action_74"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_74",
        "normalized": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_75",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_75",
        "fct-type": "function",
        "title": "alex_action_75"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_75",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_76",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_76",
        "fct-type": "function",
        "title": "alex_action_76"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_76",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_77",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_77",
        "fct-type": "function",
        "title": "alex_action_77"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_77",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_78",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_78",
        "fct-type": "function",
        "title": "alex_action_78"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_78",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_79",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_79",
        "fct-type": "function",
        "title": "alex_action_79"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_79",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_8",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_8",
        "fct-type": "function",
        "title": "alex_action_8"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_8",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_80",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_80",
        "fct-type": "function",
        "title": "alex_action_80"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_80",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_81",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_81",
        "fct-type": "function",
        "title": "alex_action_81"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_81",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_82",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_82",
        "fct-type": "function",
        "title": "alex_action_82"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_82",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_83",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_83",
        "fct-type": "function",
        "title": "alex_action_83"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_83",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_84",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_84",
        "fct-type": "function",
        "title": "alex_action_84"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_84",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_85",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_85",
        "fct-type": "function",
        "title": "alex_action_85"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_85",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_86",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_86",
        "fct-type": "function",
        "title": "alex_action_86"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_86",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_87",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_87",
        "fct-type": "function",
        "title": "alex_action_87"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_87",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_88",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_88",
        "fct-type": "function",
        "title": "alex_action_88"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_88",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_89",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_89",
        "fct-type": "function",
        "title": "alex_action_89"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_89",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_9",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_9",
        "fct-type": "function",
        "title": "alex_action_9"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_9",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_90",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_90",
        "fct-type": "function",
        "title": "alex_action_90"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_90",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_91",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_91",
        "fct-type": "function",
        "title": "alex_action_91"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_91",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_92",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_92",
        "fct-type": "function",
        "title": "alex_action_92"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_92",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_93",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_93",
        "fct-type": "function",
        "title": "alex_action_93"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_93",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_94",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_94",
        "fct-type": "function",
        "title": "alex_action_94"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_94",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_95",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_95",
        "fct-type": "function",
        "title": "alex_action_95"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_95",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_96",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_96",
        "fct-type": "function",
        "title": "alex_action_96"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_96",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_97",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_97",
        "fct-type": "function",
        "title": "alex_action_97"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_97",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_98",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_98",
        "fct-type": "function",
        "title": "alex_action_98"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_98",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_action_99",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_action_99",
        "fct-type": "function",
        "title": "alex_action_99"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_action_99",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_base",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAddr",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_base",
        "fct-type": "function",
        "title": "alex_base"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_base",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_check",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAddr",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_check",
        "fct-type": "function",
        "title": "alex_check"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_check",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_deflt",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAddr",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_deflt",
        "fct-type": "function",
        "title": "alex_deflt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_deflt",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_scan_tkn",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Any * -\u003e ParserState -\u003e Int# -\u003e ParserState -\u003e Int# -\u003e AlexLastAcc (AlexInput -\u003e Int -\u003e ParseMonad LToken) -\u003e (AlexLastAcc (AlexInput -\u003e Int -\u003e ParseMonad LToken), ParserState)",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_scan_tkn",
        "fct-type": "function",
        "title": "alex_scan_tkn"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_scan_tkn",
        "normalized": "Any*-\u003eParserState-\u003eInt #-\u003eParserState-\u003eInt #-\u003eAlexLastAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)-\u003e(AlexLastAcc(AlexInput-\u003eInt-\u003eParseMonad LToken),ParserState)",
        "package": "libcspm",
        "partial": "",
        "signature": "Any*-\u003eParserState-\u003eInt #-\u003eParserState-\u003eInt #-\u003eAlexLastAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)-\u003e(AlexLastAcc(AlexInput-\u003eInt-\u003eParseMonad LToken),ParserState)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:alex_table",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexAddr",
        "fct-source": "src/CSPM-Parser-Lexer.html#alex_table",
        "fct-type": "function",
        "title": "alex_table"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "alex_table",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:assert",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int",
        "fct-source": "src/CSPM-Parser-Lexer.html#assert",
        "fct-type": "function",
        "title": "assert"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "assert",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:begin",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#begin",
        "fct-type": "function",
        "title": "begin"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "begin",
        "normalized": "Int-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "Int-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:begin-39-",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e Token -\u003e AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#begin%27",
        "fct-type": "function",
        "title": "begin'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "begin'",
        "normalized": "Int-\u003eToken-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "Int-\u003eToken-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:closeseq",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Token -\u003e AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#closeseq",
        "fct-type": "function",
        "title": "closeseq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "closeseq",
        "normalized": "Token-\u003eAlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "Token-\u003eAlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:getNextToken",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#getNextToken",
        "fct-type": "function",
        "title": "getNextToken"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "getNextToken",
        "normalized": "",
        "package": "libcspm",
        "partial": "Next Token",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:getNextTokenWrapper",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "(LToken -\u003e ParseMonad a) -\u003e ParseMonad a",
        "fct-source": "src/CSPM-Parser-Lexer.html#getNextTokenWrapper",
        "fct-type": "function",
        "title": "getNextTokenWrapper"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "getNextTokenWrapper",
        "normalized": "(LToken-\u003eParseMonad a)-\u003eParseMonad a",
        "package": "libcspm",
        "partial": "Next Token Wrapper",
        "signature": "(LToken-\u003eParseMonad a)-\u003eParseMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:gt",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#gt",
        "fct-type": "function",
        "title": "gt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "gt",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:iUnbox",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e Int#",
        "fct-source": "src/CSPM-Parser-Lexer.html#iUnbox",
        "fct-type": "function",
        "title": "iUnbox"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "iUnbox",
        "normalized": "Int-\u003eInt #",
        "package": "libcspm",
        "partial": "Unbox",
        "signature": "Int-\u003eInt #"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:lstrip",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003estrip\u003c/a\u003e\u003c/code\u003e, but applies only to the left side of the string.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/CSPM-Parser-Lexer.html#lstrip",
        "fct-type": "function",
        "title": "lstrip"
      },
      "index": {
        "description": "Same as strip but applies only to the left side of the string",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "lstrip",
        "normalized": "String-\u003eString",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:nestedComment",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#nestedComment",
        "fct-type": "function",
        "title": "nestedComment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "nestedComment",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "Comment",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:openseq",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Token -\u003e AlexInput -\u003e Int -\u003e StateT ParserState IO LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#openseq",
        "fct-type": "function",
        "title": "openseq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "openseq",
        "normalized": "Token-\u003eAlexInput-\u003eInt-\u003eStateT ParserState IO LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "Token-\u003eAlexInput-\u003eInt-\u003eStateT ParserState IO LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:quickIndex",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Array Int [AlexAcc (AlexInput -\u003e Int -\u003e ParseMonad LToken) (Any *)] -\u003e Int -\u003e [AlexAcc (AlexInput -\u003e Int -\u003e ParseMonad LToken) (Any *)]",
        "fct-source": "src/CSPM-Parser-Lexer.html#quickIndex",
        "fct-type": "function",
        "title": "quickIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "quickIndex",
        "normalized": "Array Int[AlexAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)(Any*)]-\u003eInt-\u003e[AlexAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)(Any*)]",
        "package": "libcspm",
        "partial": "Index",
        "signature": "Array Int[AlexAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)(Any*)]-\u003eInt-\u003e[AlexAcc(AlexInput-\u003eInt-\u003eParseMonad LToken)(Any*)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:rstrip",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003estrip\u003c/a\u003e\u003c/code\u003e, but applies only to the right side of the string.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/CSPM-Parser-Lexer.html#rstrip",
        "fct-type": "function",
        "title": "rstrip"
      },
      "index": {
        "description": "Same as strip but applies only to the right side of the string",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "rstrip",
        "normalized": "String-\u003eString",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:sem_prop",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int",
        "fct-source": "src/CSPM-Parser-Lexer.html#sem_prop",
        "fct-type": "function",
        "title": "sem_prop"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "sem_prop",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:skip",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#skip",
        "fct-type": "function",
        "title": "skip"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "skip",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:soak",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int",
        "fct-source": "src/CSPM-Parser-Lexer.html#soak",
        "fct-type": "function",
        "title": "soak"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "soak",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:soakTok",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Token -\u003e AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#soakTok",
        "fct-type": "function",
        "title": "soakTok"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "soakTok",
        "normalized": "Token-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "Tok",
        "signature": "Token-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:soakTok-39-",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Token -\u003e AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#soakTok%27",
        "fct-type": "function",
        "title": "soakTok'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "soakTok'",
        "normalized": "Token-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "Tok'",
        "signature": "Token-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:stok",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "(String -\u003e Token) -\u003e AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#stok",
        "fct-type": "function",
        "title": "stok"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "stok",
        "normalized": "(String-\u003eToken)-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "(String-\u003eToken)-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:strip",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/CSPM-Parser-Lexer.html#strip",
        "fct-type": "function",
        "title": "strip"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "strip",
        "normalized": "String-\u003eString",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:switchInput",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#switchInput",
        "fct-type": "function",
        "title": "switchInput"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "switchInput",
        "normalized": "AlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "Input",
        "signature": "AlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:takeChars",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e [FileParserState] -\u003e String",
        "fct-source": "src/CSPM-Parser-Lexer.html#takeChars",
        "fct-type": "function",
        "title": "takeChars"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "takeChars",
        "normalized": "Int-\u003e[FileParserState]-\u003eString",
        "package": "libcspm",
        "partial": "Chars",
        "signature": "Int-\u003e[FileParserState]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:tok",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "Token -\u003e AlexInput -\u003e Int -\u003e ParseMonad LToken",
        "fct-source": "src/CSPM-Parser-Lexer.html#tok",
        "fct-type": "function",
        "title": "tok"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "tok",
        "normalized": "Token-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken",
        "package": "libcspm",
        "partial": "",
        "signature": "Token-\u003eAlexInput-\u003eInt-\u003eParseMonad LToken"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Lexer.html#v:wschars",
      "description": {
        "fct-module": "CSPM.Parser.Lexer",
        "fct-package": "libcspm",
        "fct-signature": "String",
        "fct-source": "src/CSPM-Parser-Lexer.html#wschars",
        "fct-type": "function",
        "title": "wschars"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Lexer",
        "module": "CSPM.Parser.Lexer",
        "name": "wschars",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Parser-Monad.html",
        "fct-type": "module",
        "title": "Monad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "Monad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#t:FileParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "data",
        "title": "FileParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "FileParserState",
        "normalized": "",
        "package": "libcspm",
        "partial": "File Parser State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#t:FilePosition",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Monad.html#FilePosition",
        "fct-type": "data",
        "title": "FilePosition"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "FilePosition",
        "normalized": "",
        "package": "libcspm",
        "partial": "File Position",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#t:ParseMonad",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Parser-Monad.html#ParseMonad",
        "fct-type": "type",
        "title": "ParseMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "ParseMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parse Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#t:ParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Monad.html#ParserState",
        "fct-type": "data",
        "title": "ParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "ParserState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parser State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:FileParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "FileParserState",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "FileParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "FileParserState",
        "normalized": "",
        "package": "libcspm",
        "partial": "File Parser State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:FilePosition",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "FilePosition !Int !Int !Int",
        "fct-source": "src/CSPM-Parser-Monad.html#FilePosition",
        "fct-type": "function",
        "title": "FilePosition"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "FilePosition",
        "normalized": "",
        "package": "libcspm",
        "partial": "File Position",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:ParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParserState",
        "fct-source": "src/CSPM-Parser-Monad.html#ParserState",
        "fct-type": "function",
        "title": "ParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "ParserState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parser State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:currentStartCode",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "currentStartCode"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "currentStartCode",
        "normalized": "",
        "package": "libcspm",
        "partial": "Start Code",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:fileName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "!String",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "fileName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "fileName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:filePositionToSrcLoc",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e FilePosition -\u003e SrcSpan",
        "fct-source": "src/CSPM-Parser-Monad.html#filePositionToSrcLoc",
        "fct-type": "function",
        "title": "filePositionToSrcLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "filePositionToSrcLoc",
        "normalized": "String-\u003eFilePosition-\u003eSrcSpan",
        "package": "libcspm",
        "partial": "Position To Src Loc",
        "signature": "String-\u003eFilePosition-\u003eSrcSpan"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:fileStack",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "![FileParserState]",
        "fct-source": "src/CSPM-Parser-Monad.html#ParserState",
        "fct-type": "function",
        "title": "fileStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "fileStack",
        "normalized": "[FileParserState]",
        "package": "libcspm",
        "partial": "Stack",
        "signature": "[FileParserState]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getCurrentStartCode",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad Int",
        "fct-source": "src/CSPM-Parser-Monad.html#getCurrentStartCode",
        "fct-type": "function",
        "title": "getCurrentStartCode"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getCurrentStartCode",
        "normalized": "",
        "package": "libcspm",
        "partial": "Current Start Code",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getFileName",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad String",
        "fct-source": "src/CSPM-Parser-Monad.html#getFileName",
        "fct-type": "function",
        "title": "getFileName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getFileName",
        "normalized": "",
        "package": "libcspm",
        "partial": "File Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getInput",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad String",
        "fct-source": "src/CSPM-Parser-Monad.html#getInput",
        "fct-type": "function",
        "title": "getInput"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getInput",
        "normalized": "",
        "package": "libcspm",
        "partial": "Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad ParserState",
        "fct-source": "src/CSPM-Parser-Monad.html#getParserState",
        "fct-type": "function",
        "title": "getParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getParserState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parser State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getPreviousChar",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad Char",
        "fct-source": "src/CSPM-Parser-Monad.html#getPreviousChar",
        "fct-type": "function",
        "title": "getPreviousChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getPreviousChar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Previous Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getSequenceStack",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad [Int]",
        "fct-source": "src/CSPM-Parser-Monad.html#getSequenceStack",
        "fct-type": "function",
        "title": "getSequenceStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getSequenceStack",
        "normalized": "ParseMonad[Int]",
        "package": "libcspm",
        "partial": "Sequence Stack",
        "signature": "ParseMonad[Int]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getTokenizerPos",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad FilePosition",
        "fct-source": "src/CSPM-Parser-Monad.html#getTokenizerPos",
        "fct-type": "function",
        "title": "getTokenizerPos"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getTokenizerPos",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tokenizer Pos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:getTopFileParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad FileParserState",
        "fct-source": "src/CSPM-Parser-Monad.html#getTopFileParserState",
        "fct-type": "function",
        "title": "getTopFileParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "getTopFileParserState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Top File Parser State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:input",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "String",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "input"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "input",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:modifyTopFileParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(FileParserState -\u003e FileParserState) -\u003e ParseMonad ()",
        "fct-source": "src/CSPM-Parser-Monad.html#modifyTopFileParserState",
        "fct-type": "function",
        "title": "modifyTopFileParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "modifyTopFileParserState",
        "normalized": "(FileParserState-\u003eFileParserState)-\u003eParseMonad()",
        "package": "libcspm",
        "partial": "Top File Parser State",
        "signature": "(FileParserState-\u003eFileParserState)-\u003eParseMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:movePos",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "FilePosition -\u003e Char -\u003e FilePosition",
        "fct-source": "src/CSPM-Parser-Monad.html#movePos",
        "fct-type": "function",
        "title": "movePos"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "movePos",
        "normalized": "FilePosition-\u003eChar-\u003eFilePosition",
        "package": "libcspm",
        "partial": "Pos",
        "signature": "FilePosition-\u003eChar-\u003eFilePosition"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:previousChar",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "!Char",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "previousChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "previousChar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:pushFile",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e ParseMonad a -\u003e ParseMonad a",
        "fct-source": "src/CSPM-Parser-Monad.html#pushFile",
        "fct-type": "function",
        "title": "pushFile"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "pushFile",
        "normalized": "String-\u003eParseMonad a-\u003eParseMonad a",
        "package": "libcspm",
        "partial": "File",
        "signature": "String-\u003eParseMonad a-\u003eParseMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:pushFileContents",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e String -\u003e ParseMonad ()",
        "fct-source": "src/CSPM-Parser-Monad.html#pushFileContents",
        "fct-type": "function",
        "title": "pushFileContents"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "pushFileContents",
        "normalized": "String-\u003eString-\u003eParseMonad()",
        "package": "libcspm",
        "partial": "File Contents",
        "signature": "String-\u003eString-\u003eParseMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:rootDir",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "!String",
        "fct-source": "src/CSPM-Parser-Monad.html#ParserState",
        "fct-type": "function",
        "title": "rootDir"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "rootDir",
        "normalized": "",
        "package": "libcspm",
        "partial": "Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:runParser",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad a -\u003e String -\u003e IO a",
        "fct-source": "src/CSPM-Parser-Monad.html#runParser",
        "fct-type": "function",
        "title": "runParser"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "runParser",
        "normalized": "ParseMonad a-\u003eString-\u003eIO a",
        "package": "libcspm",
        "partial": "Parser",
        "signature": "ParseMonad a-\u003eString-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:sequenceStack",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "![Int]",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "sequenceStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "sequenceStack",
        "normalized": "[Int]",
        "package": "libcspm",
        "partial": "Stack",
        "signature": "[Int]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:setCurrentStartCode",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e ParseMonad ()",
        "fct-source": "src/CSPM-Parser-Monad.html#setCurrentStartCode",
        "fct-type": "function",
        "title": "setCurrentStartCode"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "setCurrentStartCode",
        "normalized": "Int-\u003eParseMonad()",
        "package": "libcspm",
        "partial": "Current Start Code",
        "signature": "Int-\u003eParseMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:setParserState",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ParserState -\u003e ParseMonad ()",
        "fct-source": "src/CSPM-Parser-Monad.html#setParserState",
        "fct-type": "function",
        "title": "setParserState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "setParserState",
        "normalized": "ParserState-\u003eParseMonad()",
        "package": "libcspm",
        "partial": "Parser State",
        "signature": "ParserState-\u003eParseMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:setSequenceStack",
      "description": {
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[Int] -\u003e ParseMonad ()",
        "fct-source": "src/CSPM-Parser-Monad.html#setSequenceStack",
        "fct-type": "function",
        "title": "setSequenceStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "setSequenceStack",
        "normalized": "[Int]-\u003eParseMonad()",
        "package": "libcspm",
        "partial": "Sequence Stack",
        "signature": "[Int]-\u003eParseMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Monad.html#v:tokenizerPos",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Parser.Monad",
        "fct-package": "libcspm",
        "fct-signature": "!FilePosition",
        "fct-source": "src/CSPM-Parser-Monad.html#FileParserState",
        "fct-type": "function",
        "title": "tokenizerPos"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Monad",
        "module": "CSPM.Parser.Monad",
        "name": "tokenizerPos",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Parser.html#",
      "description": {
        "fct-module": "CSPM.Parser.Parser",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Parser-Parser.html",
        "fct-type": "module",
        "title": "Parser"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Parser",
        "module": "CSPM.Parser.Parser",
        "name": "Parser",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Parser.html#v:parseExpression_",
      "description": {
        "fct-module": "CSPM.Parser.Parser",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad PExp",
        "fct-source": "src/CSPM-Parser-Parser.html#parseExpression_",
        "fct-type": "function",
        "title": "parseExpression_"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Parser",
        "module": "CSPM.Parser.Parser",
        "name": "parseExpression_",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Parser.html#v:parseFile_",
      "description": {
        "fct-module": "CSPM.Parser.Parser",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad PCSPMFile",
        "fct-source": "src/CSPM-Parser-Parser.html#parseFile_",
        "fct-type": "function",
        "title": "parseFile_"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Parser",
        "module": "CSPM.Parser.Parser",
        "name": "parseFile_",
        "normalized": "",
        "package": "libcspm",
        "partial": "File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Parser.html#v:parseInteractiveStmt_",
      "description": {
        "fct-module": "CSPM.Parser.Parser",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad PInteractiveStmt",
        "fct-source": "src/CSPM-Parser-Parser.html#parseInteractiveStmt_",
        "fct-type": "function",
        "title": "parseInteractiveStmt_"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Parser",
        "module": "CSPM.Parser.Parser",
        "name": "parseInteractiveStmt_",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Parser-Tokens.html",
        "fct-type": "module",
        "title": "Tokens"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Tokens",
        "normalized": "",
        "package": "libcspm",
        "partial": "Tokens",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#t:LToken",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Parser-Tokens.html#LToken",
        "fct-type": "type",
        "title": "LToken"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "LToken",
        "normalized": "",
        "package": "libcspm",
        "partial": "LToken",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#t:Model",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "data",
        "title": "Model"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Model",
        "normalized": "",
        "package": "libcspm",
        "partial": "Model",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#t:Token",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "data",
        "title": "Token"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Token",
        "normalized": "",
        "package": "libcspm",
        "partial": "Token",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:Failures",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "Failures",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Failures"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Failures",
        "normalized": "",
        "package": "libcspm",
        "partial": "Failures",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:FailuresDivergences",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "FailuresDivergences",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "FailuresDivergences"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "FailuresDivergences",
        "normalized": "",
        "package": "libcspm",
        "partial": "Failures Divergences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:Refusals",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "Refusals",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Refusals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Refusals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Refusals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:RefusalsDivergences",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "RefusalsDivergences",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "RefusalsDivergences"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "RefusalsDivergences",
        "normalized": "",
        "package": "libcspm",
        "partial": "Refusals Divergences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:Revivals",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "Revivals",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Revivals"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Revivals",
        "normalized": "",
        "package": "libcspm",
        "partial": "Revivals",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:RevivalsDivergences",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "RevivalsDivergences",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "RevivalsDivergences"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "RevivalsDivergences",
        "normalized": "",
        "package": "libcspm",
        "partial": "Revivals Divergences",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TAnd",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TAnd",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TAnd"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TAnd",
        "normalized": "",
        "package": "libcspm",
        "partial": "TAnd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TAssert",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TAssert",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TAssert"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TAssert",
        "normalized": "",
        "package": "libcspm",
        "partial": "TAssert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TAssertNot",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TAssertNot",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TAssertNot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TAssertNot",
        "normalized": "",
        "package": "libcspm",
        "partial": "TAssert Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TBackSlash",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TBackSlash",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TBackSlash"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TBackSlash",
        "normalized": "",
        "package": "libcspm",
        "partial": "TBack Slash",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TChannel",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TChannel",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TChannel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TChannel",
        "normalized": "",
        "package": "libcspm",
        "partial": "TChannel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TChar",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TChar Char",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TChar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TChar",
        "normalized": "",
        "package": "libcspm",
        "partial": "TChar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TCloseSeq",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TCloseSeq",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TCloseSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TCloseSeq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TClose Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TColon",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TColon",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TColon"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TColon",
        "normalized": "",
        "package": "libcspm",
        "partial": "TColon",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TComma",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TComma",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TComma"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TComma",
        "normalized": "",
        "package": "libcspm",
        "partial": "TComma",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TConcat",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TConcat",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TConcat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TConcat",
        "normalized": "",
        "package": "libcspm",
        "partial": "TConcat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDataType",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDataType",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDataType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDataType",
        "normalized": "",
        "package": "libcspm",
        "partial": "TData Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDeadlockFree",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDeadlockFree",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDeadlockFree"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDeadlockFree",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDeadlock Free",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDefineEqual",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDefineEqual",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDefineEqual"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDefineEqual",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDefine Equal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDeterministic",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDeterministic",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDeterministic"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDeterministic",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDeterministic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDivergenceFree",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDivergenceFree",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDivergenceFree"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDivergenceFree",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDivergence Free",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDivide",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDivide",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDivide"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDivide",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDivide",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDollar",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDollar",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDollar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDollar",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDollar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDot",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDot",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDoubleAt",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDoubleAt",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDoubleAt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDoubleAt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDouble At",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDoubleDot",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDoubleDot",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDoubleDot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDoubleDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDouble Dot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TDrawnFrom",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TDrawnFrom",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TDrawnFrom"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TDrawnFrom",
        "normalized": "",
        "package": "libcspm",
        "partial": "TDrawn From",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TEOF",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TEOF",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TEOF"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TEOF",
        "normalized": "",
        "package": "libcspm",
        "partial": "TEOF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TElse",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TElse",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TElse"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TElse",
        "normalized": "",
        "package": "libcspm",
        "partial": "TElse",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TEmptySeq",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TEmptySeq",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TEmptySeq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TEmptySeq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TEmpty Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TEndModule",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TEndModule",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TEndModule"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TEndModule",
        "normalized": "",
        "package": "libcspm",
        "partial": "TEnd Module",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TEq",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TEq",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TEq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TEq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TExclamationMark",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TExclamationMark",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TExclamationMark"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TExclamationMark",
        "normalized": "",
        "package": "libcspm",
        "partial": "TExclamation Mark",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TExports",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TExports",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TExports"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TExports",
        "normalized": "",
        "package": "libcspm",
        "partial": "TExports",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TExtChoice",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TExtChoice",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TExtChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TExtChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "TExt Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TExternal",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TExternal",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TExternal"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TExternal",
        "normalized": "",
        "package": "libcspm",
        "partial": "TExternal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TFalse",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TFalse",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TFalse"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TFalse",
        "normalized": "",
        "package": "libcspm",
        "partial": "TFalse",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TGt",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TGt",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TGt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TGt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TGt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TGtEq",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TGtEq",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TGtEq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TGtEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TGt Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TGuard",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TGuard",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TGuard"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TGuard",
        "normalized": "",
        "package": "libcspm",
        "partial": "TGuard",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:THash",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "THash",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "THash"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "THash",
        "normalized": "",
        "package": "libcspm",
        "partial": "THash",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TIdent",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TIdent String",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TIdent"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TIdent",
        "normalized": "",
        "package": "libcspm",
        "partial": "TIdent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TIf",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TIf",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TIf"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TIf",
        "normalized": "",
        "package": "libcspm",
        "partial": "TIf",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TInstance",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TInstance",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TInstance"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TInstance",
        "normalized": "",
        "package": "libcspm",
        "partial": "TInstance",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TIntChoice",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TIntChoice",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TIntChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TIntChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "TInt Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TInteger",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TInteger Int",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TInteger"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TInteger",
        "normalized": "",
        "package": "libcspm",
        "partial": "TInteger",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TInterleave",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TInterleave",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TInterleave"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TInterleave",
        "normalized": "",
        "package": "libcspm",
        "partial": "TInterleave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TInterrupt",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TInterrupt",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TInterrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLBrace",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLBrace",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLBrace"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLBrace",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLBrace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLDoubleSqBracket",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLDoubleSqBracket",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLDoubleSqBracket"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLDoubleSqBracket",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLDouble Sq Bracket",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLMap",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLMap",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLMap"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLMap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLParen",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLParen",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLParen"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLParen",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLParen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLPipeBrace",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLPipeBrace",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLPipeBrace"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLPipeBrace",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLPipe Brace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLPipeSqBracket",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLPipeSqBracket",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLPipeSqBracket"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLPipeSqBracket",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLPipe Sq Bracket",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLSqBracket",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLSqBracket",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLSqBracket"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLSqBracket",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLSq Bracket",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLSyncExtChoice",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLSyncExtChoice",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLSyncExtChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLSyncExtChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLSync Ext Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLSyncInterrupt",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLSyncInterrupt",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLSyncInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLSyncInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLSync Interrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLambdaDot",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLambdaDot",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLambdaDot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLambdaDot",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLambda Dot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLet",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLet",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLet",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLivelockFree",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLivelockFree",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLivelockFree"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLivelockFree",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLivelock Free",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLt",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLt",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TLtEq",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TLtEq",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TLtEq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TLtEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TLt Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TMinus",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TMinus",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TMinus"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TMinus",
        "normalized": "",
        "package": "libcspm",
        "partial": "TMinus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TMod",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TMod",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TMod"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TMod",
        "normalized": "",
        "package": "libcspm",
        "partial": "TMod",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TModel",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TModel Model",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TModel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TModel",
        "normalized": "",
        "package": "libcspm",
        "partial": "TModel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TModule",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TModule",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TModule"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TModule",
        "normalized": "",
        "package": "libcspm",
        "partial": "TModule",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TNameType",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TNameType",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TNameType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TNameType",
        "normalized": "",
        "package": "libcspm",
        "partial": "TName Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TNewLine",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TNewLine",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TNewLine"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TNewLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "TNew Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TNot",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TNot",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TNot"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TNot",
        "normalized": "",
        "package": "libcspm",
        "partial": "TNot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TNotEq",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TNotEq",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TNotEq"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TNotEq",
        "normalized": "",
        "package": "libcspm",
        "partial": "TNot Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TOfType",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TOfType",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TOfType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TOfType",
        "normalized": "",
        "package": "libcspm",
        "partial": "TOf Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TOr",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TOr",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TOr"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TOr",
        "normalized": "",
        "package": "libcspm",
        "partial": "TOr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TParallel",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TParallel",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TParallel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TParallel",
        "normalized": "",
        "package": "libcspm",
        "partial": "TParallel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TPipe",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TPipe",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TPipe"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TPipe",
        "normalized": "",
        "package": "libcspm",
        "partial": "TPipe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TPlus",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TPlus",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TPlus"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TPlus",
        "normalized": "",
        "package": "libcspm",
        "partial": "TPlus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TPrefix",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TPrefix",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TPrefix",
        "normalized": "",
        "package": "libcspm",
        "partial": "TPrefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TPrint",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TPrint String",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TPrint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TPrint",
        "normalized": "",
        "package": "libcspm",
        "partial": "TPrint",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TQuestionMark",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TQuestionMark",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TQuestionMark"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TQuestionMark",
        "normalized": "",
        "package": "libcspm",
        "partial": "TQuestion Mark",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRBrace",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRBrace",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRBrace"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRBrace",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRBrace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRDoubleSqBracket",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRDoubleSqBracket",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRDoubleSqBracket"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRDoubleSqBracket",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRDouble Sq Bracket",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRException",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRException",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRException"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRException",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRException",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRMap",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRMap",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRMap"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRMap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRParen",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRParen",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRParen"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRParen",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRParen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRPipeBrace",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRPipeBrace",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRPipeBrace"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRPipeBrace",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRPipe Brace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRPipeSqBracket",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRPipeSqBracket",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRPipeSqBracket"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRPipeSqBracket",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRPipe Sq Bracket",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRSqBracket",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRSqBracket",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRSqBracket"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRSqBracket",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRSq Bracket",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRSyncExtChoice",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRSyncExtChoice",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRSyncExtChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRSyncExtChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRSync Ext Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRSyncInterrupt",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRSyncInterrupt",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRSyncInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRSyncInterrupt",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRSync Interrupt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TRefines",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TRefines Model",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TRefines"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TRefines",
        "normalized": "",
        "package": "libcspm",
        "partial": "TRefines",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TScope",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TScope",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TScope"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TScope",
        "normalized": "",
        "package": "libcspm",
        "partial": "TScope",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TSemiColon",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TSemiColon",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TSemiColon"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TSemiColon",
        "normalized": "",
        "package": "libcspm",
        "partial": "TSemi Colon",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TSlidingChoice",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TSlidingChoice",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TSlidingChoice"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TSlidingChoice",
        "normalized": "",
        "package": "libcspm",
        "partial": "TSliding Choice",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TString",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TString String",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TString"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TString",
        "normalized": "",
        "package": "libcspm",
        "partial": "TString",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TSubType",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TSubType",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TSubType"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TSubType",
        "normalized": "",
        "package": "libcspm",
        "partial": "TSub Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TTauPriority",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TTauPriority",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TTauPriority"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TTauPriority",
        "normalized": "",
        "package": "libcspm",
        "partial": "TTau Priority",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TThen",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TThen",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TThen"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TThen",
        "normalized": "",
        "package": "libcspm",
        "partial": "TThen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TTie",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TTie",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TTie"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TTie",
        "normalized": "",
        "package": "libcspm",
        "partial": "TTie",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TTimed",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TTimed",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TTimed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TTimed",
        "normalized": "",
        "package": "libcspm",
        "partial": "TTimed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TTimes",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TTimes",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TTimes"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TTimes",
        "normalized": "",
        "package": "libcspm",
        "partial": "TTimes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TTransparent",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TTransparent",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TTransparent"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TTransparent",
        "normalized": "",
        "package": "libcspm",
        "partial": "TTransparent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TTrue",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TTrue",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TTrue"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TTrue",
        "normalized": "",
        "package": "libcspm",
        "partial": "TTrue",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TWildCard",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TWildCard",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TWildCard"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TWildCard",
        "normalized": "",
        "package": "libcspm",
        "partial": "TWild Card",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TWithin",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TWithin",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TWithin"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TWithin",
        "normalized": "",
        "package": "libcspm",
        "partial": "TWithin",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TYield",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TYield",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TYield"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TYield",
        "normalized": "",
        "package": "libcspm",
        "partial": "TYield",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:TYieldStar",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "TYieldStar",
        "fct-source": "src/CSPM-Parser-Tokens.html#Token",
        "fct-type": "function",
        "title": "TYieldStar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "TYieldStar",
        "normalized": "",
        "package": "libcspm",
        "partial": "TYield Star",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser-Tokens.html#v:Traces",
      "description": {
        "fct-module": "CSPM.Parser.Tokens",
        "fct-package": "libcspm",
        "fct-signature": "Traces",
        "fct-source": "src/CSPM-DataStructures-Syntax.html#Model",
        "fct-type": "function",
        "title": "Traces"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser Tokens",
        "module": "CSPM.Parser.Tokens",
        "name": "Traces",
        "normalized": "",
        "package": "libcspm",
        "partial": "Traces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module that parses CSPM modules.\n\u003c/p\u003e\u003cp\u003eThe biggest problem with parsing CSPM is that \u003e means both greater than\n and end sequence. For example, consider \u003ccode\u003e\u003cx | x \u003e 2\u003c/code\u003e and \u003ccode\u003e\u003cx | x \u003e 2 \u003e\u003c/code\u003e.\n Both of these are syntactically valid, but the parser has no way of deducing\n whether or not the first \u003ccode\u003e\u003e\u003c/code\u003e it sees is an end sequence or a greater than.\n\u003c/p\u003e\u003cp\u003eClearly, without an arbitrary lookahead it is not possible, in general, to\n solve this. Hence, we go for the 'shortest sequence' approach, in which\n whenever a \u003ccode\u003e\u003e\u003c/code\u003e is seen whilst a list is currently open, we assume that it\n closes the list.\n\u003c/p\u003e\u003cp\u003eFDR has a slightly more sophisticated scheme, but this depends on the fact\n that Bison happens to generate a lazy lookahead in this case, whereas Happy\n is never lazy in its lookahead token. In particular, FDR has a sequence\n stack of integers. The top value means the number of open sequence brackets\n it has seen so far. It lexes \u003ccode\u003e\u003c\u003c/code\u003e as normal, but whenever it decides that a\n \u003ccode\u003e\u003c\u003c/code\u003e token is a open sequence token, adds one to the current top of the\n sequence stack. Then, whenever a \u003ccode\u003e\u003e\u003c/code\u003e token is discovered it checks to see \n if the top value is non-zero, and if so lexes endseq, otherwise lexes gt. \n It then decrements the value of the top of the sequence stack in the \n parser. It uses a stack to allow it to open new contexts within parenthesis.\n\u003c/p\u003e\u003cp\u003eLaziness is required when scanning something like \u003ccode\u003e\u003c1\u003e \u003e \u003c1\u003e\u003c/code\u003e as, if it is\n not lazy then the second \u003ccode\u003e\u003e\u003c/code\u003e will be lexed just before the first \u003ccode\u003e\u003e\u003c/code\u003e is dealt\n with.\n\u003c/p\u003e\u003cp\u003eInstead, we decrement the top of the sequence stack within the lexer instead.\n I don't think this will cause a change in behaviour, as if the lexer lexes\n a _endseq token then it will definitely decrement the counter later (and\n it has already checked to make sure it is non-zero). However, we do keep\n the decision about \u003ccode\u003eLT\u003c/code\u003e being \u003ccode\u003eopenseq\u003c/code\u003e or \u003ccode\u003e\u003c\u003c/code\u003e in the parser as this can \n decide when this is the case (e.g. \u003ccode\u003ex \u003c\u003c/code\u003e means it must be a \u003ccode\u003eLT\u003c/code\u003e). \n\u003c/p\u003e\u003cp\u003eThe above is a problem in conjunction with nested brackets. For example,\n consider \u003ccode\u003e\u003c(0,1) | x\u003e\u003c/code\u003e; when we parse this we would take the \u003ccode\u003e(\u003c/code\u003e into the \n lookahead before we actually parse \u003ccode\u003e\u003c\u003c/code\u003e, meaning that when we push the \u003ccode\u003e1\u003c/code\u003e\n onto the sequence stack it actually goes onto the new top entry that is \n popped off after \u003ccode\u003e)\u003c/code\u003e is processed. Therefore, the \u003ccode\u003e\u003e\u003c/code\u003e will be parsed as a \n \u003ccode\u003eGT\u003c/code\u003e. To solve this we make sure that whenever we pop off the sequence \n stack we add any remaining open sequences onto the new top element. Clearly \n this would be unsafe if we were relying on this for parsing, but as we are \n not this should be fine and should cause no further ambiguities.\n\u003c/p\u003e\u003cp\u003eIt should be noted the above is a big hacky workaround, but I see no \n alternative without resorting to an arbitrary lookahead parser (like parsec)\n and its obvious inefficiency.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Parser.html",
        "fct-type": "module",
        "title": "Parser"
      },
      "index": {
        "description": "module that parses CSPM modules The biggest problem with parsing CSPM is that means both greater than and end sequence For example consider and Both of these are syntactically valid but the parser has no way of deducing whether or not the first it sees is an end sequence or greater than Clearly without an arbitrary lookahead it is not possible in general to solve this Hence we go for the shortest sequence approach in which whenever is seen whilst list is currently open we assume that it closes the list FDR has slightly more sophisticated scheme but this depends on the fact that Bison happens to generate lazy lookahead in this case whereas Happy is never lazy in its lookahead token In particular FDR has sequence stack of integers The top value means the number of open sequence brackets it has seen so far It lexes as normal but whenever it decides that token is open sequence token adds one to the current top of the sequence stack Then whenever token is discovered it checks to see if the top value is non-zero and if so lexes endseq otherwise lexes gt It then decrements the value of the top of the sequence stack in the parser It uses stack to allow it to open new contexts within parenthesis Laziness is required when scanning something like as if it is not lazy then the second will be lexed just before the first is dealt with Instead we decrement the top of the sequence stack within the lexer instead don think this will cause change in behaviour as if the lexer lexes endseq token then it will definitely decrement the counter later and it has already checked to make sure it is non-zero However we do keep the decision about LT being openseq or in the parser as this can decide when this is the case e.g means it must be LT The above is problem in conjunction with nested brackets For example consider when we parse this we would take the into the lookahead before we actually parse meaning that when we push the onto the sequence stack it actually goes onto the new top entry that is popped off after is processed Therefore the will be parsed as GT To solve this we make sure that whenever we pop off the sequence stack we add any remaining open sequences onto the new top element Clearly this would be unsafe if we were relying on this for parsing but as we are not this should be fine and should cause no further ambiguities It should be noted the above is big hacky workaround but see no alternative without resorting to an arbitrary lookahead parser like parsec and its obvious inefficiency",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "Parser",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#t:ParseMonad",
      "description": {
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Parser-Monad.html#ParseMonad",
        "fct-type": "type",
        "title": "ParseMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "ParseMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Parse Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#v:parseExpression",
      "description": {
        "fct-descr": "\u003cp\u003eParses a string as an \u003ccode\u003e\u003ca\u003ePExp\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e ParseMonad PExp",
        "fct-source": "src/CSPM-Parser.html#parseExpression",
        "fct-type": "function",
        "title": "parseExpression"
      },
      "index": {
        "description": "Parses string as an PExp",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "parseExpression",
        "normalized": "String-\u003eParseMonad PExp",
        "package": "libcspm",
        "partial": "Expression",
        "signature": "String-\u003eParseMonad PExp"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#v:parseFile",
      "description": {
        "fct-descr": "\u003cp\u003eParse the given file, returning the parsed \u003ccode\u003ePModule\u003c/code\u003es.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e ParseMonad PCSPMFile",
        "fct-source": "src/CSPM-Parser.html#parseFile",
        "fct-type": "function",
        "title": "parseFile"
      },
      "index": {
        "description": "Parse the given file returning the parsed PModule",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "parseFile",
        "normalized": "String-\u003eParseMonad PCSPMFile",
        "package": "libcspm",
        "partial": "File",
        "signature": "String-\u003eParseMonad PCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#v:parseInteractiveStmt",
      "description": {
        "fct-descr": "\u003cp\u003eParse as string as an \u003ccode\u003e\u003ca\u003ePInteractiveStmt\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e ParseMonad PInteractiveStmt",
        "fct-source": "src/CSPM-Parser.html#parseInteractiveStmt",
        "fct-type": "function",
        "title": "parseInteractiveStmt"
      },
      "index": {
        "description": "Parse as string as an PInteractiveStmt",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "parseInteractiveStmt",
        "normalized": "String-\u003eParseMonad PInteractiveStmt",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": "String-\u003eParseMonad PInteractiveStmt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#v:parseStringAsFile",
      "description": {
        "fct-descr": "\u003cp\u003eParse a string, as though it were an entire file, returning the parsed\n \u003ccode\u003ePModule\u003c/code\u003es.\n\u003c/p\u003e",
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e ParseMonad PCSPMFile",
        "fct-source": "src/CSPM-Parser.html#parseStringAsFile",
        "fct-type": "function",
        "title": "parseStringAsFile"
      },
      "index": {
        "description": "Parse string as though it were an entire file returning the parsed PModule",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "parseStringAsFile",
        "normalized": "String-\u003eParseMonad PCSPMFile",
        "package": "libcspm",
        "partial": "String As File",
        "signature": "String-\u003eParseMonad PCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Parser.html#v:runParser",
      "description": {
        "fct-module": "CSPM.Parser",
        "fct-package": "libcspm",
        "fct-signature": "ParseMonad a -\u003e String -\u003e IO a",
        "fct-source": "src/CSPM-Parser-Monad.html#runParser",
        "fct-type": "function",
        "title": "runParser"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Parser",
        "module": "CSPM.Parser",
        "name": "runParser",
        "normalized": "ParseMonad a-\u003eString-\u003eIO a",
        "package": "libcspm",
        "partial": "Parser",
        "signature": "ParseMonad a-\u003eString-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module contains all the builtin definitions for the input CSPM\n language.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Prelude.html",
        "fct-type": "module",
        "title": "Prelude"
      },
      "index": {
        "description": "This module contains all the builtin definitions for the input CSPM language",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "Prelude",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prelude",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#t:BuiltIn",
      "description": {
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "data",
        "title": "BuiltIn"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "BuiltIn",
        "normalized": "",
        "package": "libcspm",
        "partial": "Built In",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:BuiltIn",
      "description": {
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "BuiltIn",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "BuiltIn"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "BuiltIn",
        "normalized": "",
        "package": "libcspm",
        "partial": "Built In",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:builtInName",
      "description": {
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e Name",
        "fct-source": "src/CSPM-Prelude.html#builtInName",
        "fct-type": "function",
        "title": "builtInName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "builtInName",
        "normalized": "String-\u003eName",
        "package": "libcspm",
        "partial": "In Name",
        "signature": "String-\u003eName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:builtins",
      "description": {
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Bool -\u003e [BuiltIn]",
        "fct-source": "src/CSPM-Prelude.html#builtins",
        "fct-type": "function",
        "title": "builtins"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "builtins",
        "normalized": "Bool-\u003e[BuiltIn]",
        "package": "libcspm",
        "partial": "",
        "signature": "Bool-\u003e[BuiltIn]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:deprecatedReplacement",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Maybe Name",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "deprecatedReplacement"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "deprecatedReplacement",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replacement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:externalFunctionForOccName",
      "description": {
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "OccName -\u003e Maybe BuiltIn",
        "fct-source": "src/CSPM-Prelude.html#externalFunctionForOccName",
        "fct-type": "function",
        "title": "externalFunctionForOccName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "externalFunctionForOccName",
        "normalized": "OccName-\u003eMaybe BuiltIn",
        "package": "libcspm",
        "partial": "Function For Occ Name",
        "signature": "OccName-\u003eMaybe BuiltIn"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:isDeprecated",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "isDeprecated"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "isDeprecated",
        "normalized": "",
        "package": "libcspm",
        "partial": "Deprecated",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:isExternal",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "isExternal"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "isExternal",
        "normalized": "",
        "package": "libcspm",
        "partial": "External",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:isHidden",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "isHidden"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "isHidden",
        "normalized": "",
        "package": "libcspm",
        "partial": "Hidden",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:isTransparent",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "isTransparent"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "isTransparent",
        "normalized": "",
        "package": "libcspm",
        "partial": "Transparent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:isTypeUnsafe",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "isTypeUnsafe"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "isTypeUnsafe",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Unsafe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:name",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Name",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "name"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "name",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:stringName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "String",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "stringName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "stringName",
        "normalized": "",
        "package": "libcspm",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:transparentFunctionForOccName",
      "description": {
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "OccName -\u003e Maybe BuiltIn",
        "fct-source": "src/CSPM-Prelude.html#transparentFunctionForOccName",
        "fct-type": "function",
        "title": "transparentFunctionForOccName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "transparentFunctionForOccName",
        "normalized": "OccName-\u003eMaybe BuiltIn",
        "package": "libcspm",
        "partial": "Function For Occ Name",
        "signature": "OccName-\u003eMaybe BuiltIn"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Prelude.html#v:typeScheme",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "TypeScheme",
        "fct-source": "src/CSPM-Prelude.html#BuiltIn",
        "fct-type": "function",
        "title": "typeScheme"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Prelude",
        "module": "CSPM.Prelude",
        "name": "typeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-PrettyPrinter.html#",
      "description": {
        "fct-module": "CSPM.PrettyPrinter",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-PrettyPrinter.html",
        "fct-type": "module",
        "title": "PrettyPrinter"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM PrettyPrinter",
        "module": "CSPM.PrettyPrinter",
        "name": "PrettyPrinter",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pretty Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-PrettyPrinter.html#v:prettyPrint",
      "description": {
        "fct-module": "CSPM.PrettyPrinter",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#prettyPrint",
        "fct-type": "function",
        "title": "prettyPrint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM PrettyPrinter",
        "module": "CSPM.PrettyPrinter",
        "name": "prettyPrint",
        "normalized": "a-\u003eDoc",
        "package": "libcspm",
        "partial": "Print",
        "signature": "a-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-PrettyPrinter.html#v:prettyPrintMatch",
      "description": {
        "fct-module": "CSPM.PrettyPrinter",
        "fct-package": "libcspm",
        "fct-signature": "id -\u003e AnMatch id -\u003e Doc",
        "fct-source": "src/CSPM-PrettyPrinter.html#prettyPrintMatch",
        "fct-type": "function",
        "title": "prettyPrintMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM PrettyPrinter",
        "module": "CSPM.PrettyPrinter",
        "name": "prettyPrintMatch",
        "normalized": "a-\u003eAnMatch a-\u003eDoc",
        "package": "libcspm",
        "partial": "Print Match",
        "signature": "id-\u003eAnMatch id-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eRenames all variables to unique Names, in the process converting all\n UnRenamedName into Name. This simplifies many subsequent phases as every\n name is guaranteed to be unique so flat maps may be used, rather than\n Hierarchical maps. Further, this also flags patterns that match channels\n and datatype clauses.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-Renamer.html",
        "fct-type": "module",
        "title": "Renamer"
      },
      "index": {
        "description": "Renames all variables to unique Names in the process converting all UnRenamedName into Name This simplifies many subsequent phases as every name is guaranteed to be unique so flat maps may be used rather than Hierarchical maps Further this also flags patterns that match channels and datatype clauses",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "Renamer",
        "normalized": "",
        "package": "libcspm",
        "partial": "Renamer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#t:RenamerMonad",
      "description": {
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-Renamer.html#RenamerMonad",
        "fct-type": "type",
        "title": "RenamerMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "RenamerMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Renamer Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#t:RenamerState",
      "description": {
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Renamer.html#RenamerState",
        "fct-type": "data",
        "title": "RenamerState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "RenamerState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Renamer State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#v:getBoundNames",
      "description": {
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "RenamerMonad [Name]",
        "fct-source": "src/CSPM-Renamer.html#getBoundNames",
        "fct-type": "function",
        "title": "getBoundNames"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "getBoundNames",
        "normalized": "RenamerMonad[Name]",
        "package": "libcspm",
        "partial": "Bound Names",
        "signature": "RenamerMonad[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#v:initRenamer",
      "description": {
        "fct-descr": "\u003cp\u003eInitialises the renamer.\n\u003c/p\u003e",
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "IO RenamerState",
        "fct-source": "src/CSPM-Renamer.html#initRenamer",
        "fct-type": "function",
        "title": "initRenamer"
      },
      "index": {
        "description": "Initialises the renamer",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "initRenamer",
        "normalized": "",
        "package": "libcspm",
        "partial": "Renamer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#v:newScope",
      "description": {
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "RenamerMonad ()",
        "fct-source": "src/CSPM-Renamer.html#newScope",
        "fct-type": "function",
        "title": "newScope"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "newScope",
        "normalized": "RenamerMonad()",
        "package": "libcspm",
        "partial": "Scope",
        "signature": "RenamerMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#v:rename",
      "description": {
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "e1 -\u003e RenamerMonad e2",
        "fct-source": "src/CSPM-Renamer.html#rename",
        "fct-type": "function",
        "title": "rename"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "rename",
        "normalized": "a-\u003eRenamerMonad a",
        "package": "libcspm",
        "partial": "",
        "signature": "e-\u003eRenamerMonad e"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-Renamer.html#v:runFromStateToState",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the renamer starting at the given state and returning the given state.\n\u003c/p\u003e",
        "fct-module": "CSPM.Renamer",
        "fct-package": "libcspm",
        "fct-signature": "RenamerState -\u003e RenamerMonad a -\u003e IO (a, RenamerState)",
        "fct-source": "src/CSPM-Renamer.html#runFromStateToState",
        "fct-type": "function",
        "title": "runFromStateToState"
      },
      "index": {
        "description": "Runs the renamer starting at the given state and returning the given state",
        "hierarchy": "CSPM Renamer",
        "module": "CSPM.Renamer",
        "name": "runFromStateToState",
        "normalized": "RenamerState-\u003eRenamerMonad a-\u003eIO(a,RenamerState)",
        "package": "libcspm",
        "partial": "From State To State",
        "signature": "RenamerState-\u003eRenamerMonad a-\u003eIO(a,RenamerState)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-BuiltInFunctions.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.BuiltInFunctions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-BuiltInFunctions.html",
        "fct-type": "module",
        "title": "BuiltInFunctions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker BuiltInFunctions",
        "module": "CSPM.TypeChecker.BuiltInFunctions",
        "name": "BuiltInFunctions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Built In Functions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-BuiltInFunctions.html#v:injectBuiltInFunctions",
      "description": {
        "fct-module": "CSPM.TypeChecker.BuiltInFunctions",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-BuiltInFunctions.html#injectBuiltInFunctions",
        "fct-type": "function",
        "title": "injectBuiltInFunctions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker BuiltInFunctions",
        "module": "CSPM.TypeChecker.BuiltInFunctions",
        "name": "injectBuiltInFunctions",
        "normalized": "TypeCheckMonad()",
        "package": "libcspm",
        "partial": "Built In Functions",
        "signature": "TypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Common.html",
        "fct-type": "module",
        "title": "Common"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "Common",
        "normalized": "",
        "package": "libcspm",
        "partial": "Common",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#t:TypeCheckable",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-TypeChecker-Common.html#TypeCheckable",
        "fct-type": "class",
        "title": "TypeCheckable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "TypeCheckable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Checkable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureAreEqual",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureAreEqual",
        "fct-type": "function",
        "title": "ensureAreEqual"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureAreEqual",
        "normalized": "[a]-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "Are Equal",
        "signature": "[a]-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureHasConstraint",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "Constraint -\u003e Type -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureHasConstraint",
        "fct-type": "function",
        "title": "ensureHasConstraint"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureHasConstraint",
        "normalized": "Constraint-\u003eType-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "Has Constraint",
        "signature": "Constraint-\u003eType-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsBool",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsBool",
        "fct-type": "function",
        "title": "ensureIsBool"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsBool",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Bool",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsChannel",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsChannel",
        "fct-type": "function",
        "title": "ensureIsChannel"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsChannel",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Channel",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsEvent",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsEvent",
        "fct-type": "function",
        "title": "ensureIsEvent"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsEvent",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Event",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsExtendable",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Type -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsExtendable",
        "fct-type": "function",
        "title": "ensureIsExtendable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsExtendable",
        "normalized": "a-\u003eType-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Extendable",
        "signature": "a-\u003eType-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsInt",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsInt",
        "fct-type": "function",
        "title": "ensureIsInt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsInt",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Int",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsList",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsList",
        "fct-type": "function",
        "title": "ensureIsList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsList",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is List",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsProc",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsProc",
        "fct-type": "function",
        "title": "ensureIsProc"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsProc",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Proc",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:ensureIsSet",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#ensureIsSet",
        "fct-type": "function",
        "title": "ensureIsSet"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "ensureIsSet",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Is Set",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:errorContext",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Maybe ErrorContext",
        "fct-source": "src/CSPM-TypeChecker-Common.html#errorContext",
        "fct-type": "method",
        "title": "errorContext"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "errorContext",
        "normalized": "a-\u003eMaybe ErrorContext",
        "package": "libcspm",
        "partial": "Context",
        "signature": "a-\u003eMaybe ErrorContext"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:typeCheck",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#typeCheck",
        "fct-type": "method",
        "title": "typeCheck"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "typeCheck",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Check",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:typeCheck-39-",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#typeCheck%27",
        "fct-type": "method",
        "title": "typeCheck'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "typeCheck'",
        "normalized": "a-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Check'",
        "signature": "a-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Common.html#v:typeCheckExpect",
      "description": {
        "fct-module": "CSPM.TypeChecker.Common",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Type -\u003e TypeCheckMonad b",
        "fct-source": "src/CSPM-TypeChecker-Common.html#typeCheckExpect",
        "fct-type": "method",
        "title": "typeCheckExpect"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Common",
        "module": "CSPM.TypeChecker.Common",
        "name": "typeCheckExpect",
        "normalized": "a-\u003eType-\u003eTypeCheckMonad b",
        "package": "libcspm",
        "partial": "Check Expect",
        "signature": "a-\u003eType-\u003eTypeCheckMonad b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Compressor.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eTraverses the AST filling in all the type information, ensuring that each\n type is fully compressed.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM.TypeChecker.Compressor",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Compressor.html",
        "fct-type": "module",
        "title": "Compressor"
      },
      "index": {
        "description": "Traverses the AST filling in all the type information ensuring that each type is fully compressed",
        "hierarchy": "CSPM TypeChecker Compressor",
        "module": "CSPM.TypeChecker.Compressor",
        "name": "Compressor",
        "normalized": "",
        "package": "libcspm",
        "partial": "Compressor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Compressor.html#t:Compressable",
      "description": {
        "fct-module": "CSPM.TypeChecker.Compressor",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM-TypeChecker-Compressor.html#Compressable",
        "fct-type": "class",
        "title": "Compressable"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Compressor",
        "module": "CSPM.TypeChecker.Compressor",
        "name": "Compressable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Compressable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Compressor.html#v:mcompress",
      "description": {
        "fct-descr": "\u003cp\u003eMap compress.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Compressor",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Compressor.html#mcompress",
        "fct-type": "method",
        "title": "mcompress"
      },
      "index": {
        "description": "Map compress",
        "hierarchy": "CSPM TypeChecker Compressor",
        "module": "CSPM.TypeChecker.Compressor",
        "name": "mcompress",
        "normalized": "a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "",
        "signature": "a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Decl.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Decl",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Decl.html",
        "fct-type": "module",
        "title": "Decl"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Decl",
        "module": "CSPM.TypeChecker.Decl",
        "name": "Decl",
        "normalized": "",
        "package": "libcspm",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Decl.html#v:typeCheckDecls",
      "description": {
        "fct-descr": "\u003cp\u003eType check a list of possibly mutually recursive functions\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Decl",
        "fct-package": "libcspm",
        "fct-signature": "[TCDecl] -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Decl.html#typeCheckDecls",
        "fct-type": "function",
        "title": "typeCheckDecls"
      },
      "index": {
        "description": "Type check list of possibly mutually recursive functions",
        "hierarchy": "CSPM TypeChecker Decl",
        "module": "CSPM.TypeChecker.Decl",
        "name": "typeCheckDecls",
        "normalized": "[TCDecl]-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Check Decls",
        "signature": "[TCDecl]-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Environment.html",
        "fct-type": "module",
        "title": "Environment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "Environment",
        "normalized": "",
        "package": "libcspm",
        "partial": "Environment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#t:Environment",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#Environment",
        "fct-type": "type",
        "title": "Environment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "Environment",
        "normalized": "",
        "package": "libcspm",
        "partial": "Environment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#t:SymbolInformation",
      "description": {
        "fct-descr": "\u003cp\u003eUsed to represent information about a symbol\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#SymbolInformation",
        "fct-type": "data",
        "title": "SymbolInformation"
      },
      "index": {
        "description": "Used to represent information about symbol",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "SymbolInformation",
        "normalized": "",
        "package": "libcspm",
        "partial": "Symbol Information",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:SymbolInformation",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "SymbolInformation",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#SymbolInformation",
        "fct-type": "function",
        "title": "SymbolInformation"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "SymbolInformation",
        "normalized": "",
        "package": "libcspm",
        "partial": "Symbol Information",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:bind",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e [(Name, SymbolInformation)] -\u003e Environment",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#bind",
        "fct-type": "function",
        "title": "bind"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "bind",
        "normalized": "Environment-\u003e[(Name,SymbolInformation)]-\u003eEnvironment",
        "package": "libcspm",
        "partial": "",
        "signature": "Environment-\u003e[(Name,SymbolInformation)]-\u003eEnvironment"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:delete",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e Name -\u003e Environment",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#delete",
        "fct-type": "function",
        "title": "delete"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "delete",
        "normalized": "Environment-\u003eName-\u003eEnvironment",
        "package": "libcspm",
        "partial": "",
        "signature": "Environment-\u003eName-\u003eEnvironment"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:deprecationReplacement",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Maybe Name",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#SymbolInformation",
        "fct-type": "function",
        "title": "deprecationReplacement"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "deprecationReplacement",
        "normalized": "",
        "package": "libcspm",
        "partial": "Replacement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:isDeprecated",
      "description": {
        "fct-descr": "\u003cp\u003eIs this symbol deprecated\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#SymbolInformation",
        "fct-type": "function",
        "title": "isDeprecated"
      },
      "index": {
        "description": "Is this symbol deprecated",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "isDeprecated",
        "normalized": "",
        "package": "libcspm",
        "partial": "Deprecated",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:isTypeUnsafe",
      "description": {
        "fct-descr": "\u003cp\u003eIs this symbols' type too general (if so\n use of it will emit a soundness warning)\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#SymbolInformation",
        "fct-type": "function",
        "title": "isTypeUnsafe"
      },
      "index": {
        "description": "Is this symbols type too general if so use of it will emit soundness warning",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "isTypeUnsafe",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Unsafe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:maybeLookup",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e Name -\u003e Maybe SymbolInformation",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#maybeLookup",
        "fct-type": "function",
        "title": "maybeLookup"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "maybeLookup",
        "normalized": "Environment-\u003eName-\u003eMaybe SymbolInformation",
        "package": "libcspm",
        "partial": "Lookup",
        "signature": "Environment-\u003eName-\u003eMaybe SymbolInformation"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:mkSymbolInformation",
      "description": {
        "fct-descr": "\u003cp\u003eMake symbol information for the type assuming that the symbol\n is not deprecated and its type is not unsafe.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "TypeScheme -\u003e SymbolInformation",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#mkSymbolInformation",
        "fct-type": "function",
        "title": "mkSymbolInformation"
      },
      "index": {
        "description": "Make symbol information for the type assuming that the symbol is not deprecated and its type is not unsafe",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "mkSymbolInformation",
        "normalized": "TypeScheme-\u003eSymbolInformation",
        "package": "libcspm",
        "partial": "Symbol Information",
        "signature": "TypeScheme-\u003eSymbolInformation"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:new",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#new",
        "fct-type": "function",
        "title": "new"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "new",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:toList",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e [(Name, SymbolInformation)]",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#toList",
        "fct-type": "function",
        "title": "toList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "toList",
        "normalized": "Environment-\u003e[(Name,SymbolInformation)]",
        "package": "libcspm",
        "partial": "List",
        "signature": "Environment-\u003e[(Name,SymbolInformation)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:typeScheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe type of the symbol\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "TypeScheme",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#SymbolInformation",
        "fct-type": "function",
        "title": "typeScheme"
      },
      "index": {
        "description": "The type of the symbol",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "typeScheme",
        "normalized": "",
        "package": "libcspm",
        "partial": "Scheme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Environment.html#v:update",
      "description": {
        "fct-module": "CSPM.TypeChecker.Environment",
        "fct-package": "libcspm",
        "fct-signature": "Environment -\u003e Name -\u003e SymbolInformation -\u003e Environment",
        "fct-source": "src/CSPM-TypeChecker-Environment.html#update",
        "fct-type": "function",
        "title": "update"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Environment",
        "module": "CSPM.TypeChecker.Environment",
        "name": "update",
        "normalized": "Environment-\u003eName-\u003eSymbolInformation-\u003eEnvironment",
        "package": "libcspm",
        "partial": "",
        "signature": "Environment-\u003eName-\u003eSymbolInformation-\u003eEnvironment"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html",
        "fct-type": "module",
        "title": "Exceptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "Exceptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exceptions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#t:Error",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#Error",
        "fct-type": "type",
        "title": "Error"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "Error",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#t:ErrorOptions",
      "description": {
        "fct-descr": "\u003cp\u003eA datatype used to hold which errors and warnings to actually emit.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#ErrorOptions",
        "fct-type": "data",
        "title": "ErrorOptions"
      },
      "index": {
        "description": "datatype used to hold which errors and warnings to actually emit",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "ErrorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#t:Warning",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#Warning",
        "fct-type": "type",
        "title": "Warning"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "Warning",
        "normalized": "",
        "package": "libcspm",
        "partial": "Warning",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:ErrorOptions",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ErrorOptions",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#ErrorOptions",
        "fct-type": "function",
        "title": "ErrorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "ErrorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:constraintUnificationErrorMessage",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Constraint -\u003e Type -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#constraintUnificationErrorMessage",
        "fct-type": "function",
        "title": "constraintUnificationErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "constraintUnificationErrorMessage",
        "normalized": "Constraint-\u003eType-\u003eError",
        "package": "libcspm",
        "partial": "Unification Error Message",
        "signature": "Constraint-\u003eType-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:defaultErrorOptions",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "ErrorOptions",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#defaultErrorOptions",
        "fct-type": "function",
        "title": "defaultErrorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "defaultErrorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:deprecatedNameUsed",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e Maybe Name -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#deprecatedNameUsed",
        "fct-type": "function",
        "title": "deprecatedNameUsed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "deprecatedNameUsed",
        "normalized": "Name-\u003eMaybe Name-\u003eError",
        "package": "libcspm",
        "partial": "Name Used",
        "signature": "Name-\u003eMaybe Name-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:illegalModuleInstanceCycleErrorMessage",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e Name -\u003e [Name] -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#illegalModuleInstanceCycleErrorMessage",
        "fct-type": "function",
        "title": "illegalModuleInstanceCycleErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "illegalModuleInstanceCycleErrorMessage",
        "normalized": "Name-\u003eName-\u003e[Name]-\u003eError",
        "package": "libcspm",
        "partial": "Module Instance Cycle Error Message",
        "signature": "Name-\u003eName-\u003e[Name]-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:incorrectArgumentCountMessage",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Doc -\u003e Int -\u003e Int -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#incorrectArgumentCountMessage",
        "fct-type": "function",
        "title": "incorrectArgumentCountMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "incorrectArgumentCountMessage",
        "normalized": "Doc-\u003eInt-\u003eInt-\u003eError",
        "package": "libcspm",
        "partial": "Argument Count Message",
        "signature": "Doc-\u003eInt-\u003eInt-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:infiniteUnificationMessage",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e Type -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#infiniteUnificationMessage",
        "fct-type": "function",
        "title": "infiniteUnificationMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "infiniteUnificationMessage",
        "normalized": "Type-\u003eType-\u003eError",
        "package": "libcspm",
        "partial": "Unification Message",
        "signature": "Type-\u003eType-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:unificationErrorMessage",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "[(Type, Type)] -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#unificationErrorMessage",
        "fct-type": "function",
        "title": "unificationErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "unificationErrorMessage",
        "normalized": "[(Type,Type)]-\u003eError",
        "package": "libcspm",
        "partial": "Error Message",
        "signature": "[(Type,Type)]-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:unsafeNameUsed",
      "description": {
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e Error",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#unsafeNameUsed",
        "fct-type": "function",
        "title": "unsafeNameUsed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "unsafeNameUsed",
        "normalized": "Name-\u003eError",
        "package": "libcspm",
        "partial": "Name Used",
        "signature": "Name-\u003eError"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:warnDeprecatedNamesUsed",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#ErrorOptions",
        "fct-type": "function",
        "title": "warnDeprecatedNamesUsed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "warnDeprecatedNamesUsed",
        "normalized": "",
        "package": "libcspm",
        "partial": "Deprecated Names Used",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Exceptions.html#v:warnUnsafeNamesUsed",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.TypeChecker.Exceptions",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#ErrorOptions",
        "fct-type": "function",
        "title": "warnUnsafeNamesUsed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Exceptions",
        "module": "CSPM.TypeChecker.Exceptions",
        "name": "warnUnsafeNamesUsed",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unsafe Names Used",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Expr.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Expr",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Expr.html",
        "fct-type": "module",
        "title": "Expr"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Expr",
        "module": "CSPM.TypeChecker.Expr",
        "name": "Expr",
        "normalized": "",
        "package": "libcspm",
        "partial": "Expr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-File.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.File",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-File.html",
        "fct-type": "module",
        "title": "File"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker File",
        "module": "CSPM.TypeChecker.File",
        "name": "File",
        "normalized": "",
        "package": "libcspm",
        "partial": "File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-InteractiveStmt.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.InteractiveStmt",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-InteractiveStmt.html",
        "fct-type": "module",
        "title": "InteractiveStmt"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker InteractiveStmt",
        "module": "CSPM.TypeChecker.InteractiveStmt",
        "name": "InteractiveStmt",
        "normalized": "",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Monad.html",
        "fct-type": "module",
        "title": "Monad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "Monad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#t:ErrorContext",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#ErrorContext",
        "fct-type": "type",
        "title": "ErrorContext"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "ErrorContext",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#t:TypeCheckMonad",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeCheckMonad",
        "fct-type": "type",
        "title": "TypeCheckMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "TypeCheckMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Check Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#t:TypeInferenceState",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "data",
        "title": "TypeInferenceState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "TypeInferenceState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Inference State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:TypeInferenceState",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeInferenceState",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "TypeInferenceState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "TypeInferenceState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Inference State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:addDefinitionName",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#addDefinitionName",
        "fct-type": "function",
        "title": "addDefinitionName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "addDefinitionName",
        "normalized": "Name-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Definition Name",
        "signature": "Name-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:addErrorContext",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ErrorContext -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#addErrorContext",
        "fct-type": "function",
        "title": "addErrorContext"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "addErrorContext",
        "normalized": "ErrorContext-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Error Context",
        "signature": "ErrorContext-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:addUnificationPair",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(Type, Type) -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#addUnificationPair",
        "fct-type": "function",
        "title": "addUnificationPair"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "addUnificationPair",
        "normalized": "(Type,Type)-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Unification Pair",
        "signature": "(Type,Type)-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:addWarning",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(ErrorOptions -\u003e Bool) -\u003e Warning -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#addWarning",
        "fct-type": "function",
        "title": "addWarning"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "addWarning",
        "normalized": "(ErrorOptions-\u003eBool)-\u003eWarning-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Warning",
        "signature": "(ErrorOptions-\u003eBool)-\u003eWarning-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:comparableForEqualityDataTypes",
      "description": {
        "fct-descr": "\u003cp\u003eThe set of datatypes that can be compared for equality.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[Name]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "comparableForEqualityDataTypes"
      },
      "index": {
        "description": "The set of datatypes that can be compared for equality",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "comparableForEqualityDataTypes",
        "normalized": "[Name]",
        "package": "libcspm",
        "partial": "For Equality Data Types",
        "signature": "[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:compress",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a type and compresses the type by reading all type variables and\n if they point to another type, it returns that type instead.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#compress",
        "fct-type": "function",
        "title": "compress"
      },
      "index": {
        "description": "Takes type and compresses the type by reading all type variables and if they point to another type it returns that type instead",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "compress",
        "normalized": "Type-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "",
        "signature": "Type-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:compressTypeScheme",
      "description": {
        "fct-descr": "\u003cp\u003eApply compress to the type of a type scheme.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeScheme -\u003e TypeCheckMonad TypeScheme",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#compressTypeScheme",
        "fct-type": "function",
        "title": "compressTypeScheme"
      },
      "index": {
        "description": "Apply compress to the type of type scheme",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "compressTypeScheme",
        "normalized": "TypeScheme-\u003eTypeCheckMonad TypeScheme",
        "package": "libcspm",
        "partial": "Type Scheme",
        "signature": "TypeScheme-\u003eTypeCheckMonad TypeScheme"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:datatypeIsComparableForEquality",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#datatypeIsComparableForEquality",
        "fct-type": "function",
        "title": "datatypeIsComparableForEquality"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "datatypeIsComparableForEquality",
        "normalized": "Name-\u003eTypeCheckMonad Bool",
        "package": "libcspm",
        "partial": "Is Comparable For Equality",
        "signature": "Name-\u003eTypeCheckMonad Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:definitionStack",
      "description": {
        "fct-descr": "\u003cp\u003eThe stack of names that we are currently type-checking.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[Name]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "definitionStack"
      },
      "index": {
        "description": "The stack of names that we are currently type-checking",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "definitionStack",
        "normalized": "[Name]",
        "package": "libcspm",
        "partial": "Stack",
        "signature": "[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:disallowSymmetricUnification",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#disallowSymmetricUnification",
        "fct-type": "function",
        "title": "disallowSymmetricUnification"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "disallowSymmetricUnification",
        "normalized": "TypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Symmetric Unification",
        "signature": "TypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:environment",
      "description": {
        "fct-descr": "\u003cp\u003eThe type environment, which is a map from names to types.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Environment",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "environment"
      },
      "index": {
        "description": "The type environment which is map from names to types",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "environment",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:errorContexts",
      "description": {
        "fct-descr": "\u003cp\u003eError stack - provides context information for any\n errors that might be raised\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[ErrorContext]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "errorContexts"
      },
      "index": {
        "description": "Error stack provides context information for any errors that might be raised",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "errorContexts",
        "normalized": "[ErrorContext]",
        "package": "libcspm",
        "partial": "Contexts",
        "signature": "[ErrorContext]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:errorIfFalse",
      "description": {
        "fct-descr": "\u003cp\u003eReport the error if first parameter is False.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool -\u003e Error -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#errorIfFalse",
        "fct-type": "function",
        "title": "errorIfFalse"
      },
      "index": {
        "description": "Report the error if first parameter is False",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "errorIfFalse",
        "normalized": "Bool-\u003eError-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "If False",
        "signature": "Bool-\u003eError-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:errorIfFalseM",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad Bool -\u003e Error -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#errorIfFalseM",
        "fct-type": "function",
        "title": "errorIfFalseM"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "errorIfFalseM",
        "normalized": "TypeCheckMonad Bool-\u003eError-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "If False",
        "signature": "TypeCheckMonad Bool-\u003eError-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:errorOptions",
      "description": {
        "fct-descr": "\u003cp\u003eThe error options to use\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "ErrorOptions",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "errorOptions"
      },
      "index": {
        "description": "The error options to use",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "errorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:errors",
      "description": {
        "fct-descr": "\u003cp\u003eErrors that have occured\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[ErrorMessage]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "errors"
      },
      "index": {
        "description": "Errors that have occured",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "errors",
        "normalized": "[ErrorMessage]",
        "package": "libcspm",
        "partial": "",
        "signature": "[ErrorMessage]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:failM",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#failM",
        "fct-type": "function",
        "title": "failM"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "failM",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:freshTypeVar",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "m Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshTypeVar",
        "fct-type": "function",
        "title": "freshTypeVar"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "freshTypeVar",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Var",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:freshTypeVarWithConstraints",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[Constraint] -\u003e m Type",
        "fct-source": "src/CSPM-DataStructures-Types.html#freshTypeVarWithConstraints",
        "fct-type": "function",
        "title": "freshTypeVarWithConstraints"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "freshTypeVarWithConstraints",
        "normalized": "[Constraint]-\u003ea Type",
        "package": "libcspm",
        "partial": "Type Var With Constraints",
        "signature": "[Constraint]-\u003em Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getDefinitionStack",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad [Name]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getDefinitionStack",
        "fct-type": "function",
        "title": "getDefinitionStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getDefinitionStack",
        "normalized": "TypeCheckMonad[Name]",
        "package": "libcspm",
        "partial": "Definition Stack",
        "signature": "TypeCheckMonad[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getEnvironment",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad Environment",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getEnvironment",
        "fct-type": "function",
        "title": "getEnvironment"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getEnvironment",
        "normalized": "",
        "package": "libcspm",
        "partial": "Environment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getErrorContexts",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad [ErrorContext]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getErrorContexts",
        "fct-type": "function",
        "title": "getErrorContexts"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getErrorContexts",
        "normalized": "TypeCheckMonad[ErrorContext]",
        "package": "libcspm",
        "partial": "Error Contexts",
        "signature": "TypeCheckMonad[ErrorContext]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getInError",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getInError",
        "fct-type": "function",
        "title": "getInError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getInError",
        "normalized": "",
        "package": "libcspm",
        "partial": "In Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getSrcSpan",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad SrcSpan",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getSrcSpan",
        "fct-type": "function",
        "title": "getSrcSpan"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getSrcSpan",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Span",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getState",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad TypeInferenceState",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getState",
        "fct-type": "function",
        "title": "getState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getState",
        "normalized": "",
        "package": "libcspm",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getType",
      "description": {
        "fct-descr": "\u003cp\u003eGet the type of \u003ccode\u003en\u003c/code\u003e and throw an exception if it doesn't exist.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad TypeScheme",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getType",
        "fct-type": "function",
        "title": "getType"
      },
      "index": {
        "description": "Get the type of and throw an exception if it doesn exist",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getType",
        "normalized": "Name-\u003eTypeCheckMonad TypeScheme",
        "package": "libcspm",
        "partial": "Type",
        "signature": "Name-\u003eTypeCheckMonad TypeScheme"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getUnificationStack",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad [(Type, Type)]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getUnificationStack",
        "fct-type": "function",
        "title": "getUnificationStack"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getUnificationStack",
        "normalized": "TypeCheckMonad[(Type,Type)]",
        "package": "libcspm",
        "partial": "Unification Stack",
        "signature": "TypeCheckMonad[(Type,Type)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:getWarnings",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad [ErrorMessage]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#getWarnings",
        "fct-type": "function",
        "title": "getWarnings"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "getWarnings",
        "normalized": "TypeCheckMonad[ErrorMessage]",
        "package": "libcspm",
        "partial": "Warnings",
        "signature": "TypeCheckMonad[ErrorMessage]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:inError",
      "description": {
        "fct-descr": "\u003cp\u003eAre we currently in an error state\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "inError"
      },
      "index": {
        "description": "Are we currently in an error state",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "inError",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:isDeprecated",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#isDeprecated",
        "fct-type": "function",
        "title": "isDeprecated"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "isDeprecated",
        "normalized": "Name-\u003eTypeCheckMonad Bool",
        "package": "libcspm",
        "partial": "Deprecated",
        "signature": "Name-\u003eTypeCheckMonad Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:isTypeUnsafe",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#isTypeUnsafe",
        "fct-type": "function",
        "title": "isTypeUnsafe"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "isTypeUnsafe",
        "normalized": "Name-\u003eTypeCheckMonad Bool",
        "package": "libcspm",
        "partial": "Type Unsafe",
        "signature": "Name-\u003eTypeCheckMonad Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:local",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[Name] -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#local",
        "fct-type": "function",
        "title": "local"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "local",
        "normalized": "[Name]-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "",
        "signature": "[Name]-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:manyErrorsIfFalse",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool -\u003e [Error] -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#manyErrorsIfFalse",
        "fct-type": "function",
        "title": "manyErrorsIfFalse"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "manyErrorsIfFalse",
        "normalized": "Bool-\u003e[Error]-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Errors If False",
        "signature": "Bool-\u003e[Error]-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:markAsDeprecated",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e Maybe Name -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#markAsDeprecated",
        "fct-type": "function",
        "title": "markAsDeprecated"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "markAsDeprecated",
        "normalized": "Name-\u003eMaybe Name-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "As Deprecated",
        "signature": "Name-\u003eMaybe Name-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:markDatatypeAsComparableForEquality",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#markDatatypeAsComparableForEquality",
        "fct-type": "function",
        "title": "markDatatypeAsComparableForEquality"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "markDatatypeAsComparableForEquality",
        "normalized": "Name-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Datatype As Comparable For Equality",
        "signature": "Name-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:markTypeAsUnsafe",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#markTypeAsUnsafe",
        "fct-type": "function",
        "title": "markTypeAsUnsafe"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "markTypeAsUnsafe",
        "normalized": "Name-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Type As Unsafe",
        "signature": "Name-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:modifyErrorOptions",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(ErrorOptions -\u003e ErrorOptions) -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#modifyErrorOptions",
        "fct-type": "function",
        "title": "modifyErrorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "modifyErrorOptions",
        "normalized": "(ErrorOptions-\u003eErrorOptions)-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Error Options",
        "signature": "(ErrorOptions-\u003eErrorOptions)-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:newTypeInferenceState",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeInferenceState",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#newTypeInferenceState",
        "fct-type": "function",
        "title": "newTypeInferenceState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "newTypeInferenceState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Inference State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:panic",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a string causes a \u003ccode\u003e\u003ca\u003ePanic\u003c/a\u003e\u003c/code\u003e to be thrown.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e a",
        "fct-source": "src/Util-Exception.html#panic",
        "fct-type": "function",
        "title": "panic"
      },
      "index": {
        "description": "Given string causes Panic to be thrown",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "panic",
        "normalized": "String-\u003ea",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:raiseMessageAsError",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Error -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#raiseMessageAsError",
        "fct-type": "function",
        "title": "raiseMessageAsError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "raiseMessageAsError",
        "normalized": "Error-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Message As Error",
        "signature": "Error-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:raiseMessagesAsError",
      "description": {
        "fct-descr": "\u003cp\u003eReport a message as an error\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[Error] -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#raiseMessagesAsError",
        "fct-type": "function",
        "title": "raiseMessagesAsError"
      },
      "index": {
        "description": "Report message as an error",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "raiseMessagesAsError",
        "normalized": "[Error]-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Messages As Error",
        "signature": "[Error]-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:readTypeRef",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeVarRef -\u003e TypeCheckMonad (Either (TypeVar, [Constraint]) Type)",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#readTypeRef",
        "fct-type": "function",
        "title": "readTypeRef"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "readTypeRef",
        "normalized": "TypeVarRef-\u003eTypeCheckMonad(Either(TypeVar,[Constraint])Type)",
        "package": "libcspm",
        "partial": "Type Ref",
        "signature": "TypeVarRef-\u003eTypeCheckMonad(Either(TypeVar,[Constraint])Type)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:replacementForDeprecatedName",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad (Maybe Name)",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#replacementForDeprecatedName",
        "fct-type": "function",
        "title": "replacementForDeprecatedName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "replacementForDeprecatedName",
        "normalized": "Name-\u003eTypeCheckMonad(Maybe Name)",
        "package": "libcspm",
        "partial": "For Deprecated Name",
        "signature": "Name-\u003eTypeCheckMonad(Maybe Name)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:resetWarnings",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#resetWarnings",
        "fct-type": "function",
        "title": "resetWarnings"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "resetWarnings",
        "normalized": "TypeCheckMonad()",
        "package": "libcspm",
        "partial": "Warnings",
        "signature": "TypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:runTypeChecker",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the typechecker, starting from state \u003ccode\u003est\u003c/code\u003e. If any errors are\n encountered then a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e will be thrown with the relevent\n error messages.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeInferenceState -\u003e TypeCheckMonad a -\u003e IO a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#runTypeChecker",
        "fct-type": "function",
        "title": "runTypeChecker"
      },
      "index": {
        "description": "Runs the typechecker starting from state st If any errors are encountered then SourceError will be thrown with the relevent error messages",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "runTypeChecker",
        "normalized": "TypeInferenceState-\u003eTypeCheckMonad a-\u003eIO a",
        "package": "libcspm",
        "partial": "Type Checker",
        "signature": "TypeInferenceState-\u003eTypeCheckMonad a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:setInError",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#setInError",
        "fct-type": "function",
        "title": "setInError"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "setInError",
        "normalized": "Bool-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "In Error",
        "signature": "Bool-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:setSrcSpan",
      "description": {
        "fct-descr": "\u003cp\u003eSets the SrcSpan only within prog.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#setSrcSpan",
        "fct-type": "function",
        "title": "setSrcSpan"
      },
      "index": {
        "description": "Sets the SrcSpan only within prog",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "setSrcSpan",
        "normalized": "SrcSpan-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Src Span",
        "signature": "SrcSpan-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:setType",
      "description": {
        "fct-descr": "\u003cp\u003eSets the type of n to be t in the current scope only. No unification is \n performed.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeScheme -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#setType",
        "fct-type": "function",
        "title": "setType"
      },
      "index": {
        "description": "Sets the type of to be in the current scope only No unification is performed",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "setType",
        "normalized": "Name-\u003eTypeScheme-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Type",
        "signature": "Name-\u003eTypeScheme-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:srcSpan",
      "description": {
        "fct-descr": "\u003cp\u003eLocation of the current AST element - used for error\n pretty printing\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "srcSpan"
      },
      "index": {
        "description": "Location of the current AST element used for error pretty printing",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "srcSpan",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:symUnificationAllowed",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "symUnificationAllowed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "symUnificationAllowed",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unification Allowed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:symmetricUnificationAllowed",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad Bool",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#symmetricUnificationAllowed",
        "fct-type": "function",
        "title": "symmetricUnificationAllowed"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "symmetricUnificationAllowed",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unification Allowed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:tryAndRecover",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Bool -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#tryAndRecover",
        "fct-type": "function",
        "title": "tryAndRecover"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "tryAndRecover",
        "normalized": "Bool-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "And Recover",
        "signature": "Bool-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:unificationStack",
      "description": {
        "fct-descr": "\u003cp\u003eStack of attempted unifications - the current one\n is at the front. In the form (expected, actual).\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[(Type, Type)]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "unificationStack"
      },
      "index": {
        "description": "Stack of attempted unifications the current one is at the front In the form expected actual",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "unificationStack",
        "normalized": "[(Type,Type)]",
        "package": "libcspm",
        "partial": "Stack",
        "signature": "[(Type,Type)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:unmarkDatatypeAsComparableForEquality",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#unmarkDatatypeAsComparableForEquality",
        "fct-type": "function",
        "title": "unmarkDatatypeAsComparableForEquality"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "unmarkDatatypeAsComparableForEquality",
        "normalized": "Name-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Datatype As Comparable For Equality",
        "signature": "Name-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:warnings",
      "description": {
        "fct-descr": "\u003cp\u003eList of warnings that have occured\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[ErrorMessage]",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "function",
        "title": "warnings"
      },
      "index": {
        "description": "List of warnings that have occured",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "warnings",
        "normalized": "[ErrorMessage]",
        "package": "libcspm",
        "partial": "",
        "signature": "[ErrorMessage]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Monad.html#v:writeTypeRef",
      "description": {
        "fct-module": "CSPM.TypeChecker.Monad",
        "fct-package": "libcspm",
        "fct-signature": "TypeVarRef -\u003e Type -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#writeTypeRef",
        "fct-type": "function",
        "title": "writeTypeRef"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Monad",
        "module": "CSPM.TypeChecker.Monad",
        "name": "writeTypeRef",
        "normalized": "TypeVarRef-\u003eType-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Type Ref",
        "signature": "TypeVarRef-\u003eType-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Pat.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Pat",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Pat.html",
        "fct-type": "module",
        "title": "Pat"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Pat",
        "module": "CSPM.TypeChecker.Pat",
        "name": "Pat",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker-Unification.html",
        "fct-type": "module",
        "title": "Unification"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "Unification",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unification",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:dotableToDotList",
      "description": {
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e TypeCheckMonad ([Type], Type)",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#dotableToDotList",
        "fct-type": "function",
        "title": "dotableToDotList"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "dotableToDotList",
        "normalized": "Type-\u003eTypeCheckMonad([Type],Type)",
        "package": "libcspm",
        "partial": "To Dot List",
        "signature": "Type-\u003eTypeCheckMonad([Type],Type)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:evaluateDots",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a type and attempts to simplify all TDots inside\n by combining TDotable t1 t2 and arguments.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#evaluateDots",
        "fct-type": "function",
        "title": "evaluateDots"
      },
      "index": {
        "description": "Takes type and attempts to simplify all TDots inside by combining TDotable t1 t2 and arguments",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "evaluateDots",
        "normalized": "Type-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "Dots",
        "signature": "Type-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:generaliseGroup",
      "description": {
        "fct-descr": "\u003cp\u003eGeneralise the types of the declarations. The parameter \u003ccode\u003enames\u003c/code\u003e gives the \n names that were bound by all the declarations that we are interested in. This\n is done because we convert a type T into forall vs T where \n      vs = fvts (T) - fvts(Env)\n where Env does not contain the function whose type we are generalizing\n (this is because when we type a declaration we are really typing a \n lambda function).\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "[Name] -\u003e [TypeCheckMonad [(Name, Type)]] -\u003e TypeCheckMonad [[(Name, TypeScheme)]]",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#generaliseGroup",
        "fct-type": "function",
        "title": "generaliseGroup"
      },
      "index": {
        "description": "Generalise the types of the declarations The parameter names gives the names that were bound by all the declarations that we are interested in This is done because we convert type into forall vs where vs fvts fvts Env where Env does not contain the function whose type we are generalizing this is because when we type declaration we are really typing lambda function",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "generaliseGroup",
        "normalized": "[Name]-\u003e[TypeCheckMonad[(Name,Type)]]-\u003eTypeCheckMonad[[(Name,TypeScheme)]]",
        "package": "libcspm",
        "partial": "Group",
        "signature": "[Name]-\u003e[TypeCheckMonad[(Name,Type)]]-\u003eTypeCheckMonad[[(Name,TypeScheme)]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:instantiate",
      "description": {
        "fct-descr": "\u003cp\u003eInstantiates the typescheme with some fresh type variables.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "TypeScheme -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#instantiate",
        "fct-type": "function",
        "title": "instantiate"
      },
      "index": {
        "description": "Instantiates the typescheme with some fresh type variables",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "instantiate",
        "normalized": "TypeScheme-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "",
        "signature": "TypeScheme-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:instantiate-39-",
      "description": {
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "TypeScheme -\u003e TypeCheckMonad (Type, [(TypeVar, Type)])",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#instantiate%27",
        "fct-type": "function",
        "title": "instantiate'"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "instantiate'",
        "normalized": "TypeScheme-\u003eTypeCheckMonad(Type,[(TypeVar,Type)])",
        "package": "libcspm",
        "partial": "",
        "signature": "TypeScheme-\u003eTypeCheckMonad(Type,[(TypeVar,Type)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:substituteTypes",
      "description": {
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "[(TypeVar, Type)] -\u003e Type -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#substituteTypes",
        "fct-type": "function",
        "title": "substituteTypes"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "substituteTypes",
        "normalized": "[(TypeVar,Type)]-\u003eType-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "Types",
        "signature": "[(TypeVar,Type)]-\u003eType-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:typeToDotList",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a type and converts TDot t1 t2 to [t1, t2].\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e TypeCheckMonad [Type]",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#typeToDotList",
        "fct-type": "function",
        "title": "typeToDotList"
      },
      "index": {
        "description": "Takes type and converts TDot t1 t2 to t1 t2",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "typeToDotList",
        "normalized": "Type-\u003eTypeCheckMonad[Type]",
        "package": "libcspm",
        "partial": "To Dot List",
        "signature": "Type-\u003eTypeCheckMonad[Type]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:unify",
      "description": {
        "fct-descr": "\u003cp\u003eThe main type unification algorithm. This adds values to the unification \n stack in order to ensure error messages are helpful.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e Type -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#unify",
        "fct-type": "function",
        "title": "unify"
      },
      "index": {
        "description": "The main type unification algorithm This adds values to the unification stack in order to ensure error messages are helpful",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "unify",
        "normalized": "Type-\u003eType-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "",
        "signature": "Type-\u003eType-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker-Unification.html#v:unifyAll",
      "description": {
        "fct-descr": "\u003cp\u003eUnifys all types to a single type. The first type is  used as the \n expected Type in error messages.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker.Unification",
        "fct-package": "libcspm",
        "fct-signature": "[Type] -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker-Unification.html#unifyAll",
        "fct-type": "function",
        "title": "unifyAll"
      },
      "index": {
        "description": "Unifys all types to single type The first type is used as the expected Type in error messages",
        "hierarchy": "CSPM TypeChecker Unification",
        "module": "CSPM.TypeChecker.Unification",
        "name": "unifyAll",
        "normalized": "[Type]-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "All",
        "signature": "[Type]-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM-TypeChecker.html",
        "fct-type": "module",
        "title": "TypeChecker"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "TypeChecker",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Checker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#t:ErrorOptions",
      "description": {
        "fct-descr": "\u003cp\u003eA datatype used to hold which errors and warnings to actually emit.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-TypeChecker-Exceptions.html#ErrorOptions",
        "fct-type": "data",
        "title": "ErrorOptions"
      },
      "index": {
        "description": "datatype used to hold which errors and warnings to actually emit",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "ErrorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#t:TypeCheckMonad",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeCheckMonad",
        "fct-type": "type",
        "title": "TypeCheckMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "TypeCheckMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Check Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#t:TypeInferenceState",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#TypeInferenceState",
        "fct-type": "data",
        "title": "TypeInferenceState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "TypeInferenceState",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Inference State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:initTypeChecker",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "IO TypeInferenceState",
        "fct-source": "src/CSPM-TypeChecker.html#initTypeChecker",
        "fct-type": "function",
        "title": "initTypeChecker"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "initTypeChecker",
        "normalized": "",
        "package": "libcspm",
        "partial": "Type Checker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:modifyErrorOptions",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "(ErrorOptions -\u003e ErrorOptions) -\u003e TypeCheckMonad ()",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#modifyErrorOptions",
        "fct-type": "function",
        "title": "modifyErrorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "modifyErrorOptions",
        "normalized": "(ErrorOptions-\u003eErrorOptions)-\u003eTypeCheckMonad()",
        "package": "libcspm",
        "partial": "Error Options",
        "signature": "(ErrorOptions-\u003eErrorOptions)-\u003eTypeCheckMonad()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:runFromStateToState",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "TypeInferenceState -\u003e TypeCheckMonad a -\u003e IO (a, [ErrorMessage], TypeInferenceState)",
        "fct-source": "src/CSPM-TypeChecker.html#runFromStateToState",
        "fct-type": "function",
        "title": "runFromStateToState"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "runFromStateToState",
        "normalized": "TypeInferenceState-\u003eTypeCheckMonad a-\u003eIO(a,[ErrorMessage],TypeInferenceState)",
        "package": "libcspm",
        "partial": "From State To State",
        "signature": "TypeInferenceState-\u003eTypeCheckMonad a-\u003eIO(a,[ErrorMessage],TypeInferenceState)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:runTypeChecker",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the typechecker, starting from state \u003ccode\u003est\u003c/code\u003e. If any errors are\n encountered then a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e will be thrown with the relevent\n error messages.\n\u003c/p\u003e",
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "TypeInferenceState -\u003e TypeCheckMonad a -\u003e IO a",
        "fct-source": "src/CSPM-TypeChecker-Monad.html#runTypeChecker",
        "fct-type": "function",
        "title": "runTypeChecker"
      },
      "index": {
        "description": "Runs the typechecker starting from state st If any errors are encountered then SourceError will be thrown with the relevent error messages",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "runTypeChecker",
        "normalized": "TypeInferenceState-\u003eTypeCheckMonad a-\u003eIO a",
        "package": "libcspm",
        "partial": "Type Checker",
        "signature": "TypeInferenceState-\u003eTypeCheckMonad a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:typeCheck",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker.html#typeCheck",
        "fct-type": "function",
        "title": "typeCheck"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "typeCheck",
        "normalized": "a-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Check",
        "signature": "a-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:typeCheckExpect",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e a -\u003e TypeCheckMonad a",
        "fct-source": "src/CSPM-TypeChecker.html#typeCheckExpect",
        "fct-type": "function",
        "title": "typeCheckExpect"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "typeCheckExpect",
        "normalized": "Type-\u003ea-\u003eTypeCheckMonad a",
        "package": "libcspm",
        "partial": "Check Expect",
        "signature": "Type-\u003ea-\u003eTypeCheckMonad a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:typeOfExp",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "TCExp -\u003e TypeCheckMonad Type",
        "fct-source": "src/CSPM-TypeChecker.html#typeOfExp",
        "fct-type": "function",
        "title": "typeOfExp"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "typeOfExp",
        "normalized": "TCExp-\u003eTypeCheckMonad Type",
        "package": "libcspm",
        "partial": "Of Exp",
        "signature": "TCExp-\u003eTypeCheckMonad Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM-TypeChecker.html#v:typeOfName",
      "description": {
        "fct-module": "CSPM.TypeChecker",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e TypeCheckMonad TypeScheme",
        "fct-source": "src/CSPM-TypeChecker.html#typeOfName",
        "fct-type": "function",
        "title": "typeOfName"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM TypeChecker",
        "module": "CSPM.TypeChecker",
        "name": "typeOfName",
        "normalized": "Name-\u003eTypeCheckMonad TypeScheme",
        "package": "libcspm",
        "partial": "Of Name",
        "signature": "Name-\u003eTypeCheckMonad TypeScheme"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides the main high-level interface to the library \n functionality. It does this through a monadic interface, mainly due to the\n fact that several of the components require the use of the IO monad. It is\n highly recommended that users of this library use a monad and then implement\n the \u003ccode\u003e\u003ca\u003eCSPMMonad\u003c/a\u003e\u003c/code\u003e class on their own custom monad. An example of this is shown\n by the basic implementation of the \u003ccode\u003e\u003ca\u003eCSPM\u003c/a\u003e\u003c/code\u003e monad.\n\u003c/p\u003e\u003cp\u003eThe main library datatype is exported by \u003ccode\u003e\u003ca\u003eSyntax\u003c/a\u003e\u003c/code\u003e, which\n provides an AST representation of machine CSP. Most of the pieces of syntax,\n like expressions (\u003ccode\u003e\u003ca\u003eExp\u003c/a\u003e\u003c/code\u003e), are parametrised by the type of the variables that\n it contains. For more information see the comment at the top of the above\n module.\n\u003c/p\u003e\u003cp\u003eThe library exports several APIs which, in likely order of usage, are:\n\u003c/p\u003e\u003cdl\u003e\u003cdt\u003e\u003ccode\u003eParser\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e Parses strings or files and produces an AST, parametrised\n        by \u003ccode\u003e\u003ca\u003eUnRenamedName\u003c/a\u003e\u003c/code\u003e, which are simply pieces of text.\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eRenamer\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e Renames the AST and produces an equivalent AST, but \n        parametrised by \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e, which uniquely identify the binding instance\n        of each variable (see documentation of \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e).\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eType Checker\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e Type checks an AST, in the process annotating it with\n        types.\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eDesugarer\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e Desugars an AST, remove syntactic sugar and prepares it for\n        evaluation. The AST produced by this phase should not be pretty \n        printed as it parenthesis have been removed, potentially making it not\n        equivalent.\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eEvaluator\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e Evaluates an AST, returning a \u003ccode\u003e\u003ca\u003eValue\u003c/a\u003e\u003c/code\u003e. Note that the \n        evaluator is lazy, meaning that the resulting Value will be generated\n        as it is consumed, making it suitable for streaming to subsequent\n        compilation phases.\n\u003c/dd\u003e\u003c/dl\u003e\u003cp\u003eFor example, suppose we wish to evaluate the expression \u003ccode\u003etest(1,2,3)\u003c/code\u003e within\n the context of the file \u003ccode\u003etest.csp\u003c/code\u003e we could use the following segment of\n code:\n\u003c/p\u003e\u003cpre\u003e    main :: IO ()\n    main = do\n        session \u003c- newCSPMSession False\n        (value, resultingSession) \u003c- unCSPM session $ do\n            -- Parse the file, returning something of type PCSPMFile.\n            parsedFile \u003c- parseFile \"test.csp\"\n            -- Rename the file, returning something of type TCCSPMFile.\n            renamedFile \u003c- renameFile parsedFile\n            -- Typecheck the file, annotating it with types.\n            typeCheckedFile \u003c- typeCheckFile renamedFile\n            -- Desugar the file, returning the version ready for evaluation.\n            desugaredFile \u003c- desugarFile typeCheckedFile\n            -- Bind the file, making all functions and patterns available.\n            bindFile desugaredFile\n            \n            -- The file is now ready for use, so now we build the expression\n            -- to be evaluated.\n            parsedExpression \u003c- parseExpression \"test(1,2,3)\"\n            renamedExpression \u003c- renameExpression parsedExpression\n            typeCheckedExpression \u003c- typeCheckExpression renamedExpression\n            desugaredExpression \u003c- desugarExpression typeCheckedExpression\n\n            -- Evaluate the expression in the current context.\n            value \u003c- evaluateExpression desugaredExpression\n            return value\n        putStrLn (show (prettyPrint value))\n        return ()\n\u003c/pre\u003e\u003cp\u003eThis would pretty print the value of the expression to stdout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/CSPM.html",
        "fct-type": "module",
        "title": "CSPM"
      },
      "index": {
        "description": "This module provides the main high-level interface to the library functionality It does this through monadic interface mainly due to the fact that several of the components require the use of the IO monad It is highly recommended that users of this library use monad and then implement the CSPMMonad class on their own custom monad An example of this is shown by the basic implementation of the CSPM monad The main library datatype is exported by Syntax which provides an AST representation of machine CSP Most of the pieces of syntax like expressions Exp are parametrised by the type of the variables that it contains For more information see the comment at the top of the above module The library exports several APIs which in likely order of usage are Parser Parses strings or files and produces an AST parametrised by UnRenamedName which are simply pieces of text Renamer Renames the AST and produces an equivalent AST but parametrised by Name which uniquely identify the binding instance of each variable see documentation of Name Type Checker Type checks an AST in the process annotating it with types Desugarer Desugars an AST remove syntactic sugar and prepares it for evaluation The AST produced by this phase should not be pretty printed as it parenthesis have been removed potentially making it not equivalent Evaluator Evaluates an AST returning Value Note that the evaluator is lazy meaning that the resulting Value will be generated as it is consumed making it suitable for streaming to subsequent compilation phases For example suppose we wish to evaluate the expression test within the context of the file test.csp we could use the following segment of code main IO main do session newCSPMSession False value resultingSession unCSPM session do Parse the file returning something of type PCSPMFile parsedFile parseFile test.csp Rename the file returning something of type TCCSPMFile renamedFile renameFile parsedFile Typecheck the file annotating it with types typeCheckedFile typeCheckFile renamedFile Desugar the file returning the version ready for evaluation desugaredFile desugarFile typeCheckedFile Bind the file making all functions and patterns available bindFile desugaredFile The file is now ready for use so now we build the expression to be evaluated parsedExpression parseExpression test renamedExpression renameExpression parsedExpression typeCheckedExpression typeCheckExpression renamedExpression desugaredExpression desugarExpression typeCheckedExpression Evaluate the expression in the current context value evaluateExpression desugaredExpression return value putStrLn show prettyPrint value return This would pretty print the value of the expression to stdout",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "CSPM",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#t:CSPM",
      "description": {
        "fct-descr": "\u003cp\u003eA basic implementation of \u003ccode\u003e\u003ca\u003eCSPMMonad\u003c/a\u003e\u003c/code\u003e, using the \u003ccode\u003eStateT\u003c/code\u003e monad. This\n prints out any warnings to stdout.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/CSPM.html#CSPM",
        "fct-type": "type",
        "title": "CSPM"
      },
      "index": {
        "description": "basic implementation of CSPMMonad using the StateT monad This prints out any warnings to stdout",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "CSPM",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#t:CSPMMonad",
      "description": {
        "fct-descr": "\u003cp\u003eThe CSPMMonad is the main monad in which all functions must be called.\n Whilst there is a build in representation (see \u003ccode\u003e\u003ca\u003eCSPM\u003c/a\u003e\u003c/code\u003e) it is recommended\n that you define an instance of \u003ccode\u003e\u003ca\u003eCSPMMonad\u003c/a\u003e\u003c/code\u003e over whatever monad you use.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/CSPM.html#CSPMMonad",
        "fct-type": "class",
        "title": "CSPMMonad"
      },
      "index": {
        "description": "The CSPMMonad is the main monad in which all functions must be called Whilst there is build in representation see CSPM it is recommended that you define an instance of CSPMMonad over whatever monad you use",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "CSPMMonad",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPMMonad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#t:CSPMSession",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCSPMSession\u003c/a\u003e\u003c/code\u003e represents the internal states of all the various\n components.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM.html#CSPMSession",
        "fct-type": "data",
        "title": "CSPMSession"
      },
      "index": {
        "description": "CSPMSession represents the internal states of all the various components",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "CSPMSession",
        "normalized": "",
        "package": "libcspm",
        "partial": "CSPMSession",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#t:EvaluatorOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "data",
        "title": "EvaluatorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "EvaluatorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#t:ProfilerOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "data",
        "title": "ProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "ProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:EvaluatorOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "EvaluatorOptions",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "function",
        "title": "EvaluatorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "EvaluatorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:ProfilerOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "ProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "ProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:bindDeclaration",
      "description": {
        "fct-descr": "\u003cp\u003eTakes a declaration and adds it to the current environment. Requires the\n declaration to be desugared.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCDecl -\u003e m ()",
        "fct-source": "src/CSPM.html#bindDeclaration",
        "fct-type": "function",
        "title": "bindDeclaration"
      },
      "index": {
        "description": "Takes declaration and adds it to the current environment Requires the declaration to be desugared",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "bindDeclaration",
        "normalized": "TCDecl-\u003ea()",
        "package": "libcspm",
        "partial": "Declaration",
        "signature": "TCDecl-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:bindFile",
      "description": {
        "fct-descr": "\u003cp\u003eBinds all the declarations that are in a particular file. Requires the\n file to be desugared.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCCSPMFile -\u003e m ()",
        "fct-source": "src/CSPM.html#bindFile",
        "fct-type": "function",
        "title": "bindFile"
      },
      "index": {
        "description": "Binds all the declarations that are in particular file Requires the file to be desugared",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "bindFile",
        "normalized": "TCCSPMFile-\u003ea()",
        "package": "libcspm",
        "partial": "File",
        "signature": "TCCSPMFile-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:boundProcessNames",
      "description": {
        "fct-descr": "\u003cp\u003eReturns all currently bound process names, optionally including functions\n that evaluate to processes\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Bool-\u003e m [Name]",
        "fct-type": "function",
        "title": "boundProcessNames"
      },
      "index": {
        "description": "Returns all currently bound process names optionally including functions that evaluate to processes",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "boundProcessNames",
        "normalized": "Bool-\u003ea[Name]",
        "package": "libcspm",
        "partial": "Process Names",
        "signature": "Bool-\u003em[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:defaultEvaluatorOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "EvaluatorOptions",
        "fct-source": "src/CSPM-Evaluator.html#defaultEvaluatorOptions",
        "fct-type": "function",
        "title": "defaultEvaluatorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "defaultEvaluatorOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Evaluator Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:defaultProfilerOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#defaultProfilerOptions",
        "fct-type": "function",
        "title": "defaultProfilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "defaultProfilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Profiler Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:desugarExpression",
      "description": {
        "fct-descr": "\u003cp\u003eDesugars an expression.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCExp -\u003e m TCExp",
        "fct-source": "src/CSPM.html#desugarExpression",
        "fct-type": "function",
        "title": "desugarExpression"
      },
      "index": {
        "description": "Desugars an expression",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "desugarExpression",
        "normalized": "TCExp-\u003ea TCExp",
        "package": "libcspm",
        "partial": "Expression",
        "signature": "TCExp-\u003em TCExp"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:desugarFile",
      "description": {
        "fct-descr": "\u003cp\u003eDesugar a file, preparing it for evaulation.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCCSPMFile -\u003e m TCCSPMFile",
        "fct-source": "src/CSPM.html#desugarFile",
        "fct-type": "function",
        "title": "desugarFile"
      },
      "index": {
        "description": "Desugar file preparing it for evaulation",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "desugarFile",
        "normalized": "TCCSPMFile-\u003ea TCCSPMFile",
        "package": "libcspm",
        "partial": "File",
        "signature": "TCCSPMFile-\u003em TCCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:desugarInteractiveStmt",
      "description": {
        "fct-descr": "\u003cp\u003eDesugars an interactive statement.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCInteractiveStmt -\u003e m TCInteractiveStmt",
        "fct-source": "src/CSPM.html#desugarInteractiveStmt",
        "fct-type": "function",
        "title": "desugarInteractiveStmt"
      },
      "index": {
        "description": "Desugars an interactive statement",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "desugarInteractiveStmt",
        "normalized": "TCInteractiveStmt-\u003ea TCInteractiveStmt",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": "TCInteractiveStmt-\u003em TCInteractiveStmt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:ensureExpressionIsOfType",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a \u003ccode\u003e\u003ca\u003eType\u003c/a\u003e\u003c/code\u003e, ensures that the \u003ccode\u003e\u003ca\u003ePExp\u003c/a\u003e\u003c/code\u003e is of that type. It returns the\n annoated and desugared expression.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e TCExp -\u003e m TCExp",
        "fct-source": "src/CSPM.html#ensureExpressionIsOfType",
        "fct-type": "function",
        "title": "ensureExpressionIsOfType"
      },
      "index": {
        "description": "Given Type ensures that the PExp is of that type It returns the annoated and desugared expression",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "ensureExpressionIsOfType",
        "normalized": "Type-\u003eTCExp-\u003ea TCExp",
        "package": "libcspm",
        "partial": "Expression Is Of Type",
        "signature": "Type-\u003eTCExp-\u003em TCExp"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:evaluateExpression",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluates the expression in the current context. Requires the expression\n to be desugared.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCExp -\u003e m Value",
        "fct-source": "src/CSPM.html#evaluateExpression",
        "fct-type": "function",
        "title": "evaluateExpression"
      },
      "index": {
        "description": "Evaluates the expression in the current context Requires the expression to be desugared",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "evaluateExpression",
        "normalized": "TCExp-\u003ea Value",
        "package": "libcspm",
        "partial": "Expression",
        "signature": "TCExp-\u003em Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:flattenRecursiveCalls",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "flattenRecursiveCalls"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "flattenRecursiveCalls",
        "normalized": "",
        "package": "libcspm",
        "partial": "Recursive Calls",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:getBoundNames",
      "description": {
        "fct-descr": "\u003cp\u003eGet a list of currently bound names in the environment.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "m [Name]",
        "fct-source": "src/CSPM.html#getBoundNames",
        "fct-type": "function",
        "title": "getBoundNames"
      },
      "index": {
        "description": "Get list of currently bound names in the environment",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "getBoundNames",
        "normalized": "a[Name]",
        "package": "libcspm",
        "partial": "Bound Names",
        "signature": "m[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:getLibCSPMVersion",
      "description": {
        "fct-descr": "\u003cp\u003eReturn the version of libcspm that is being used.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Version",
        "fct-source": "src/CSPM.html#getLibCSPMVersion",
        "fct-type": "function",
        "title": "getLibCSPMVersion"
      },
      "index": {
        "description": "Return the version of libcspm that is being used",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "getLibCSPMVersion",
        "normalized": "",
        "package": "libcspm",
        "partial": "Lib CSPMVersion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:getSession",
      "description": {
        "fct-descr": "\u003cp\u003eGet the current session.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "m CSPMSession",
        "fct-source": "src/CSPM.html#getSession",
        "fct-type": "method",
        "title": "getSession"
      },
      "index": {
        "description": "Get the current session",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "getSession",
        "normalized": "",
        "package": "libcspm",
        "partial": "Session",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:handleWarnings",
      "description": {
        "fct-descr": "\u003cp\u003eThis is called whenever warnings are emitted.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "[ErrorMessage] -\u003e m ()",
        "fct-source": "src/CSPM.html#handleWarnings",
        "fct-type": "method",
        "title": "handleWarnings"
      },
      "index": {
        "description": "This is called whenever warnings are emitted",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "handleWarnings",
        "normalized": "[ErrorMessage]-\u003ea()",
        "package": "libcspm",
        "partial": "Warnings",
        "signature": "[ErrorMessage]-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:isActive",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator-Profiler.html#ProfilerOptions",
        "fct-type": "function",
        "title": "isActive"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "isActive",
        "normalized": "",
        "package": "libcspm",
        "partial": "Active",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:maybeProcessNameToProcess",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a process name, attempts to convert the name into a process. This\n is only possible for top-level function applications.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "ProcName -\u003e m (Maybe UProc)",
        "fct-source": "src/CSPM.html#maybeProcessNameToProcess",
        "fct-type": "function",
        "title": "maybeProcessNameToProcess"
      },
      "index": {
        "description": "Given process name attempts to convert the name into process This is only possible for top-level function applications",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "maybeProcessNameToProcess",
        "normalized": "ProcName-\u003ea(Maybe UProc)",
        "package": "libcspm",
        "partial": "Process Name To Process",
        "signature": "ProcName-\u003em(Maybe UProc)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:modifyTypeCheckerErrorOptions",
      "description": {
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "(ErrorOptions -\u003e ErrorOptions) -\u003e m ()",
        "fct-source": "src/CSPM.html#modifyTypeCheckerErrorOptions",
        "fct-type": "function",
        "title": "modifyTypeCheckerErrorOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "modifyTypeCheckerErrorOptions",
        "normalized": "(ErrorOptions-\u003eErrorOptions)-\u003ea()",
        "package": "libcspm",
        "partial": "Type Checker Error Options",
        "signature": "(ErrorOptions-\u003eErrorOptions)-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:newCSPMSession",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a new \u003ccode\u003e\u003ca\u003eCSPMSession\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "EvaluatorOptions -\u003e m CSPMSession",
        "fct-source": "src/CSPM.html#newCSPMSession",
        "fct-type": "function",
        "title": "newCSPMSession"
      },
      "index": {
        "description": "Create new CSPMSession",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "newCSPMSession",
        "normalized": "EvaluatorOptions-\u003ea CSPMSession",
        "package": "libcspm",
        "partial": "CSPMSession",
        "signature": "EvaluatorOptions-\u003em CSPMSession"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:parseExpression",
      "description": {
        "fct-descr": "\u003cp\u003eParses an \u003ccode\u003e\u003ca\u003eExp\u003c/a\u003e\u003c/code\u003e. Throws a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e on any parse error.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e m PExp",
        "fct-source": "src/CSPM.html#parseExpression",
        "fct-type": "function",
        "title": "parseExpression"
      },
      "index": {
        "description": "Parses an Exp Throws SourceError on any parse error",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "parseExpression",
        "normalized": "String-\u003ea PExp",
        "package": "libcspm",
        "partial": "Expression",
        "signature": "String-\u003em PExp"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:parseFile",
      "description": {
        "fct-descr": "\u003cp\u003eParse a file \u003ccode\u003efp\u003c/code\u003e. Throws a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e on any parse error.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "FilePath -\u003e m PCSPMFile",
        "fct-source": "src/CSPM.html#parseFile",
        "fct-type": "function",
        "title": "parseFile"
      },
      "index": {
        "description": "Parse file fp Throws SourceError on any parse error",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "parseFile",
        "normalized": "FilePath-\u003ea PCSPMFile",
        "package": "libcspm",
        "partial": "File",
        "signature": "FilePath-\u003em PCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:parseInteractiveStmt",
      "description": {
        "fct-descr": "\u003cp\u003eParses a \u003ccode\u003e\u003ca\u003ePInteractiveStmt\u003c/a\u003e\u003c/code\u003e. Throws a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e on any parse error.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e m PInteractiveStmt",
        "fct-source": "src/CSPM.html#parseInteractiveStmt",
        "fct-type": "function",
        "title": "parseInteractiveStmt"
      },
      "index": {
        "description": "Parses PInteractiveStmt Throws SourceError on any parse error",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "parseInteractiveStmt",
        "normalized": "String-\u003ea PInteractiveStmt",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": "String-\u003em PInteractiveStmt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:parseStringAsFile",
      "description": {
        "fct-descr": "\u003cp\u003eParses a string, treating it as though it were a file. Throws a \n \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e on any parse error.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e m PCSPMFile",
        "fct-source": "src/CSPM.html#parseStringAsFile",
        "fct-type": "function",
        "title": "parseStringAsFile"
      },
      "index": {
        "description": "Parses string treating it as though it were file Throws SourceError on any parse error",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "parseStringAsFile",
        "normalized": "String-\u003ea PCSPMFile",
        "package": "libcspm",
        "partial": "String As File",
        "signature": "String-\u003em PCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:profilerOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "ProfilerOptions",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "function",
        "title": "profilerOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "profilerOptions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:profilingData",
      "description": {
        "fct-descr": "\u003cp\u003eObtains the profiling data that the evaluator has produced so far.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "m ProfilingData",
        "fct-source": "src/CSPM.html#profilingData",
        "fct-type": "function",
        "title": "profilingData"
      },
      "index": {
        "description": "Obtains the profiling data that the evaluator has produced so far",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "profilingData",
        "normalized": "",
        "package": "libcspm",
        "partial": "Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:renameExpression",
      "description": {
        "fct-descr": "\u003cp\u003eRenames an expression.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "PExp -\u003e m TCExp",
        "fct-source": "src/CSPM.html#renameExpression",
        "fct-type": "function",
        "title": "renameExpression"
      },
      "index": {
        "description": "Renames an expression",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "renameExpression",
        "normalized": "PExp-\u003ea TCExp",
        "package": "libcspm",
        "partial": "Expression",
        "signature": "PExp-\u003em TCExp"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:renameFile",
      "description": {
        "fct-descr": "\u003cp\u003eRenames a file.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "PCSPMFile -\u003e m TCCSPMFile",
        "fct-source": "src/CSPM.html#renameFile",
        "fct-type": "function",
        "title": "renameFile"
      },
      "index": {
        "description": "Renames file",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "renameFile",
        "normalized": "PCSPMFile-\u003ea TCCSPMFile",
        "package": "libcspm",
        "partial": "File",
        "signature": "PCSPMFile-\u003em TCCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:renameInteractiveStmt",
      "description": {
        "fct-descr": "\u003cp\u003eRename ian interactive statement.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "PInteractiveStmt -\u003e m TCInteractiveStmt",
        "fct-source": "src/CSPM.html#renameInteractiveStmt",
        "fct-type": "function",
        "title": "renameInteractiveStmt"
      },
      "index": {
        "description": "Rename ian interactive statement",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "renameInteractiveStmt",
        "normalized": "PInteractiveStmt-\u003ea TCInteractiveStmt",
        "package": "libcspm",
        "partial": "Interactive Stmt",
        "signature": "PInteractiveStmt-\u003em TCInteractiveStmt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:reportWarnings",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a program that can return warnings, runs the program and raises\n any warnings found using \u003ccode\u003e\u003ca\u003ehandleWarnings\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "m (a, [ErrorMessage]) -\u003e m a",
        "fct-source": "src/CSPM.html#reportWarnings",
        "fct-type": "function",
        "title": "reportWarnings"
      },
      "index": {
        "description": "Given program that can return warnings runs the program and raises any warnings found using handleWarnings",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "reportWarnings",
        "normalized": "a(b,[ErrorMessage])-\u003ea b",
        "package": "libcspm",
        "partial": "Warnings",
        "signature": "m(a,[ErrorMessage])-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:runEvaluatorInCurrentState",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the evaluator in the current state, saving the resulting state.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "EvaluationMonad a -\u003e m a",
        "fct-source": "src/CSPM.html#runEvaluatorInCurrentState",
        "fct-type": "function",
        "title": "runEvaluatorInCurrentState"
      },
      "index": {
        "description": "Runs the evaluator in the current state saving the resulting state",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "runEvaluatorInCurrentState",
        "normalized": "EvaluationMonad a-\u003eb a",
        "package": "libcspm",
        "partial": "Evaluator In Current State",
        "signature": "EvaluationMonad a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:runParserInCurrentState",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the parser.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "FilePath -\u003e ParseMonad a -\u003e m a",
        "fct-source": "src/CSPM.html#runParserInCurrentState",
        "fct-type": "function",
        "title": "runParserInCurrentState"
      },
      "index": {
        "description": "Runs the parser",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "runParserInCurrentState",
        "normalized": "FilePath-\u003eParseMonad a-\u003eb a",
        "package": "libcspm",
        "partial": "Parser In Current State",
        "signature": "FilePath-\u003eParseMonad a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:runRenamerInCurrentState",
      "description": {
        "fct-descr": "\u003cp\u003eRuns renamer in the current state.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "RenamerMonad a -\u003e m a",
        "fct-source": "src/CSPM.html#runRenamerInCurrentState",
        "fct-type": "function",
        "title": "runRenamerInCurrentState"
      },
      "index": {
        "description": "Runs renamer in the current state",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "runRenamerInCurrentState",
        "normalized": "RenamerMonad a-\u003eb a",
        "package": "libcspm",
        "partial": "Renamer In Current State",
        "signature": "RenamerMonad a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:runTypeCheckerInCurrentState",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the typechecker in the current state, saving the resulting state and\n returning any warnings encountered.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TypeCheckMonad a -\u003e m (a, [ErrorMessage])",
        "fct-source": "src/CSPM.html#runTypeCheckerInCurrentState",
        "fct-type": "function",
        "title": "runTypeCheckerInCurrentState"
      },
      "index": {
        "description": "Runs the typechecker in the current state saving the resulting state and returning any warnings encountered",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "runTypeCheckerInCurrentState",
        "normalized": "TypeCheckMonad a-\u003eb(a,[ErrorMessage])",
        "package": "libcspm",
        "partial": "Type Checker In Current State",
        "signature": "TypeCheckMonad a-\u003em(a,[ErrorMessage])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:runtimeRangeChecks",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Bool",
        "fct-source": "src/CSPM-Evaluator.html#EvaluatorOptions",
        "fct-type": "function",
        "title": "runtimeRangeChecks"
      },
      "index": {
        "description": "",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "runtimeRangeChecks",
        "normalized": "",
        "package": "libcspm",
        "partial": "Range Checks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:setSession",
      "description": {
        "fct-descr": "\u003cp\u003eUpdate the current session.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "CSPMSession -\u003e m ()",
        "fct-source": "src/CSPM.html#setSession",
        "fct-type": "method",
        "title": "setSession"
      },
      "index": {
        "description": "Update the current session",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "setSession",
        "normalized": "CSPMSession-\u003ea()",
        "package": "libcspm",
        "partial": "Session",
        "signature": "CSPMSession-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:stringToValue",
      "description": {
        "fct-descr": "\u003cp\u003eTakes an expression string and a type and evaluates the expression,\n providing the expression is of the correct type.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Type -\u003e String -\u003e m Value",
        "fct-source": "src/CSPM.html#stringToValue",
        "fct-type": "function",
        "title": "stringToValue"
      },
      "index": {
        "description": "Takes an expression string and type and evaluates the expression providing the expression is of the correct type",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "stringToValue",
        "normalized": "Type-\u003eString-\u003ea Value",
        "package": "libcspm",
        "partial": "To Value",
        "signature": "Type-\u003eString-\u003em Value"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:typeCheckExpression",
      "description": {
        "fct-descr": "\u003cp\u003eType checkes a \u003ccode\u003e\u003ca\u003ePExp\u003c/a\u003e\u003c/code\u003e, returning the desugared and annotated version.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCExp -\u003e m TCExp",
        "fct-source": "src/CSPM.html#typeCheckExpression",
        "fct-type": "function",
        "title": "typeCheckExpression"
      },
      "index": {
        "description": "Type checkes PExp returning the desugared and annotated version",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "typeCheckExpression",
        "normalized": "TCExp-\u003ea TCExp",
        "package": "libcspm",
        "partial": "Check Expression",
        "signature": "TCExp-\u003em TCExp"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:typeCheckFile",
      "description": {
        "fct-descr": "\u003cp\u003eType checks a file, also desugaring and annotating it. Throws a \n \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e if an error is encountered and will call \u003ccode\u003e\u003ca\u003ehandleWarnings\u003c/a\u003e\u003c/code\u003e on \n any warnings. This also performs desugaraing.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCCSPMFile -\u003e m TCCSPMFile",
        "fct-source": "src/CSPM.html#typeCheckFile",
        "fct-type": "function",
        "title": "typeCheckFile"
      },
      "index": {
        "description": "Type checks file also desugaring and annotating it Throws SourceError if an error is encountered and will call handleWarnings on any warnings This also performs desugaraing",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "typeCheckFile",
        "normalized": "TCCSPMFile-\u003ea TCCSPMFile",
        "package": "libcspm",
        "partial": "Check File",
        "signature": "TCCSPMFile-\u003em TCCSPMFile"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:typeCheckInteractiveStmt",
      "description": {
        "fct-descr": "\u003cp\u003eType checks a \u003ccode\u003e\u003ca\u003ePInteractiveStmt\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCInteractiveStmt -\u003e m TCInteractiveStmt",
        "fct-source": "src/CSPM.html#typeCheckInteractiveStmt",
        "fct-type": "function",
        "title": "typeCheckInteractiveStmt"
      },
      "index": {
        "description": "Type checks PInteractiveStmt",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "typeCheckInteractiveStmt",
        "normalized": "TCInteractiveStmt-\u003ea TCInteractiveStmt",
        "package": "libcspm",
        "partial": "Check Interactive Stmt",
        "signature": "TCInteractiveStmt-\u003em TCInteractiveStmt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:typeOfExpression",
      "description": {
        "fct-descr": "\u003cp\u003eGets the type of the expression in the current context.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "TCExp -\u003e m Type",
        "fct-source": "src/CSPM.html#typeOfExpression",
        "fct-type": "function",
        "title": "typeOfExpression"
      },
      "index": {
        "description": "Gets the type of the expression in the current context",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "typeOfExpression",
        "normalized": "TCExp-\u003ea Type",
        "package": "libcspm",
        "partial": "Of Expression",
        "signature": "TCExp-\u003em Type"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:typeOfName",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the type of the given name in the current context.\n\u003c/p\u003e\u003cp\u003eThe file in which this name has been bound must have been typechecked using\n typeCheckFile.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "Name -\u003e m TypeScheme",
        "fct-source": "src/CSPM.html#typeOfName",
        "fct-type": "function",
        "title": "typeOfName"
      },
      "index": {
        "description": "Returns the type of the given name in the current context The file in which this name has been bound must have been typechecked using typeCheckFile",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "typeOfName",
        "normalized": "Name-\u003ea TypeScheme",
        "package": "libcspm",
        "partial": "Of Name",
        "signature": "Name-\u003em TypeScheme"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:unCSPM",
      "description": {
        "fct-descr": "\u003cp\u003eRuns a \u003ccode\u003e\u003ca\u003eCSPM\u003c/a\u003e\u003c/code\u003e function, returning the result and the resulting session.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "CSPMSession -\u003e CSPM a -\u003e IO (a, CSPMSession)",
        "fct-source": "src/CSPM.html#unCSPM",
        "fct-type": "function",
        "title": "unCSPM"
      },
      "index": {
        "description": "Runs CSPM function returning the result and the resulting session",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "unCSPM",
        "normalized": "CSPMSession-\u003eCSPM a-\u003eIO(a,CSPMSession)",
        "package": "libcspm",
        "partial": "CSPM",
        "signature": "CSPMSession-\u003eCSPM a-\u003eIO(a,CSPMSession)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/CSPM.html#v:withSession",
      "description": {
        "fct-descr": "\u003cp\u003eExecutes an operation giving it access to the current \u003ccode\u003e\u003ca\u003eCSPMSession\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "CSPM",
        "fct-package": "libcspm",
        "fct-signature": "(CSPMSession -\u003e m a) -\u003e m a",
        "fct-source": "src/CSPM.html#withSession",
        "fct-type": "function",
        "title": "withSession"
      },
      "index": {
        "description": "Executes an operation giving it access to the current CSPMSession",
        "hierarchy": "CSPM",
        "module": "CSPM",
        "name": "withSession",
        "normalized": "(CSPMSession-\u003ea b)-\u003ea b",
        "package": "libcspm",
        "partial": "Session",
        "signature": "(CSPMSession-\u003em a)-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eGraph algorithms in the ST monad.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Data-Graph-ST.html",
        "fct-type": "module",
        "title": "ST"
      },
      "index": {
        "description": "Graph algorithms in the ST monad",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "ST",
        "normalized": "",
        "package": "libcspm",
        "partial": "ST",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#t:Graph",
      "description": {
        "fct-descr": "\u003cp\u003eA graph of \u003ccode\u003ea\u003c/code\u003es in the state thread s.\n\u003c/p\u003e\u003cp\u003eWe store the successors in an unboxed array and store indexes into the\n array for the index at which at a node's successors start. This is very\n memory efficient and cache friendly.\n\u003c/p\u003e",
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Data-Graph-ST.html#Graph",
        "fct-type": "data",
        "title": "Graph"
      },
      "index": {
        "description": "graph of in the state thread We store the successors in an unboxed array and store indexes into the array for the index at which at node successors start This is very memory efficient and cache friendly",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "Graph",
        "normalized": "",
        "package": "libcspm",
        "partial": "Graph",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#t:SCC",
      "description": {
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Data-Graph-ST.html#SCC",
        "fct-type": "data",
        "title": "SCC"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "SCC",
        "normalized": "",
        "package": "libcspm",
        "partial": "SCC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:AcyclicSCC",
      "description": {
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "AcyclicSCC a",
        "fct-source": "src/Data-Graph-ST.html#SCC",
        "fct-type": "function",
        "title": "AcyclicSCC"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "AcyclicSCC",
        "normalized": "",
        "package": "libcspm",
        "partial": "Acyclic SCC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:CyclicSCC",
      "description": {
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "CyclicSCC [a]",
        "fct-source": "src/Data-Graph-ST.html#SCC",
        "fct-type": "function",
        "title": "CyclicSCC"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "CyclicSCC",
        "normalized": "CyclicSCC[a]",
        "package": "libcspm",
        "partial": "Cyclic SCC",
        "signature": "CyclicSCC[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:newGraph",
      "description": {
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e [(a, a)] -\u003e ST s (Graph s a)",
        "fct-source": "src/Data-Graph-ST.html#newGraph",
        "fct-type": "function",
        "title": "newGraph"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "newGraph",
        "normalized": "[a]-\u003e[(a,a)]-\u003eST b(Graph b a)",
        "package": "libcspm",
        "partial": "Graph",
        "signature": "[a]-\u003e[(a,a)]-\u003eST s(Graph s a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:newGraphNoDupeNodes",
      "description": {
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e [(a, a)] -\u003e ST s (Graph s a)",
        "fct-source": "src/Data-Graph-ST.html#newGraphNoDupeNodes",
        "fct-type": "function",
        "title": "newGraphNoDupeNodes"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "newGraphNoDupeNodes",
        "normalized": "[a]-\u003e[(a,a)]-\u003eST b(Graph b a)",
        "package": "libcspm",
        "partial": "Graph No Dupe Nodes",
        "signature": "[a]-\u003e[(a,a)]-\u003eST s(Graph s a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:nonReflexiveRepresentativesForNodes",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a graph, computes the transitive (but not reflexive) closure of the\n graph and then returns the relation (a,b) such that b is the representative\n member for a. Note, no pairs of the form a == b are returned, even if there\n is an edge from a to b. This is to minimise the size of the transitive\n closure.\n\u003c/p\u003e",
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "Graph s a -\u003e ST s [(a, a)]",
        "fct-source": "src/Data-Graph-ST.html#nonReflexiveRepresentativesForNodes",
        "fct-type": "function",
        "title": "nonReflexiveRepresentativesForNodes"
      },
      "index": {
        "description": "Given graph computes the transitive but not reflexive closure of the graph and then returns the relation such that is the representative member for Note no pairs of the form are returned even if there is an edge from to This is to minimise the size of the transitive closure",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "nonReflexiveRepresentativesForNodes",
        "normalized": "Graph a b-\u003eST a[(b,b)]",
        "package": "libcspm",
        "partial": "Reflexive Representatives For Nodes",
        "signature": "Graph s a-\u003eST s[(a,a)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:sccs",
      "description": {
        "fct-descr": "\u003cp\u003eAn optimised implementation of Tarjan's SCC algorithm.\n\u003c/p\u003e",
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "Graph s a -\u003e ST s [SCC a]",
        "fct-source": "src/Data-Graph-ST.html#sccs",
        "fct-type": "function",
        "title": "sccs"
      },
      "index": {
        "description": "An optimised implementation of Tarjan SCC algorithm",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "sccs",
        "normalized": "Graph a b-\u003eST a[SCC b]",
        "package": "libcspm",
        "partial": "",
        "signature": "Graph s a-\u003eST s[SCC a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Graph-ST.html#v:successorNodes",
      "description": {
        "fct-module": "Data.Graph.ST",
        "fct-package": "libcspm",
        "fct-signature": "Graph s a -\u003e a -\u003e ST s [a]",
        "fct-source": "src/Data-Graph-ST.html#successorNodes",
        "fct-type": "function",
        "title": "successorNodes"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Graph ST",
        "module": "Data.Graph.ST",
        "name": "successorNodes",
        "normalized": "Graph a b-\u003eb-\u003eST a[b]",
        "package": "libcspm",
        "partial": "Nodes",
        "signature": "Graph s a-\u003ea-\u003eST s[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Set-MutableBit.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eBit sets represent sets of integers by setting bit i to 1 iff i is in the\n set. This means they can effeciently support many operations, like union\n (bitwise or), intersection (bitwise and) etc. However, they obviously\n can only represent sets of relatively small integers, as they require\n O(max(S)) bits.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Set.MutableBit",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Data-Set-MutableBit.html",
        "fct-type": "module",
        "title": "MutableBit"
      },
      "index": {
        "description": "Bit sets represent sets of integers by setting bit to iff is in the set This means they can effeciently support many operations like union bitwise or intersection bitwise and etc However they obviously can only represent sets of relatively small integers as they require max bits",
        "hierarchy": "Data Set MutableBit",
        "module": "Data.Set.MutableBit",
        "name": "MutableBit",
        "normalized": "",
        "package": "libcspm",
        "partial": "Mutable Bit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Set-MutableBit.html#t:Set",
      "description": {
        "fct-module": "Data.Set.MutableBit",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/Data-Set-MutableBit.html#Set",
        "fct-type": "type",
        "title": "Set"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Set MutableBit",
        "module": "Data.Set.MutableBit",
        "name": "Set",
        "normalized": "",
        "package": "libcspm",
        "partial": "Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Set-MutableBit.html#v:insert",
      "description": {
        "fct-module": "Data.Set.MutableBit",
        "fct-package": "libcspm",
        "fct-signature": "Set s -\u003e Int -\u003e ST s ()",
        "fct-source": "src/Data-Set-MutableBit.html#insert",
        "fct-type": "function",
        "title": "insert"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Set MutableBit",
        "module": "Data.Set.MutableBit",
        "name": "insert",
        "normalized": "Set a-\u003eInt-\u003eST a()",
        "package": "libcspm",
        "partial": "",
        "signature": "Set s-\u003eInt-\u003eST s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Set-MutableBit.html#v:member",
      "description": {
        "fct-module": "Data.Set.MutableBit",
        "fct-package": "libcspm",
        "fct-signature": "Set s -\u003e Int -\u003e ST s Bool",
        "fct-source": "src/Data-Set-MutableBit.html#member",
        "fct-type": "function",
        "title": "member"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Set MutableBit",
        "module": "Data.Set.MutableBit",
        "name": "member",
        "normalized": "Set a-\u003eInt-\u003eST a Bool",
        "package": "libcspm",
        "partial": "",
        "signature": "Set s-\u003eInt-\u003eST s Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Set-MutableBit.html#v:newSized",
      "description": {
        "fct-module": "Data.Set.MutableBit",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e ST s (Set s)",
        "fct-source": "src/Data-Set-MutableBit.html#newSized",
        "fct-type": "function",
        "title": "newSized"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Set MutableBit",
        "module": "Data.Set.MutableBit",
        "name": "newSized",
        "normalized": "Int-\u003eST a(Set a)",
        "package": "libcspm",
        "partial": "Sized",
        "signature": "Int-\u003eST s(Set s)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Data-Set-MutableBit.html#v:remove",
      "description": {
        "fct-module": "Data.Set.MutableBit",
        "fct-package": "libcspm",
        "fct-signature": "Set s -\u003e Int -\u003e ST s ()",
        "fct-source": "src/Data-Set-MutableBit.html#remove",
        "fct-type": "function",
        "title": "remove"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Set MutableBit",
        "module": "Data.Set.MutableBit",
        "name": "remove",
        "normalized": "Set a-\u003eInt-\u003eST a()",
        "package": "libcspm",
        "partial": "",
        "signature": "Set s-\u003eInt-\u003eST s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-Annotated.html",
        "fct-type": "module",
        "title": "Annotated"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "Annotated",
        "normalized": "",
        "package": "libcspm",
        "partial": "Annotated",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#t:Annotated",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Annotated.html#Annotated",
        "fct-type": "data",
        "title": "Annotated"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "Annotated",
        "normalized": "",
        "package": "libcspm",
        "partial": "Annotated",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#t:Located",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Annotated.html#Located",
        "fct-type": "data",
        "title": "Located"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "Located",
        "normalized": "",
        "package": "libcspm",
        "partial": "Located",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#t:SrcLoc",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Annotated.html#SrcLoc",
        "fct-type": "data",
        "title": "SrcLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "SrcLoc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#t:SrcSpan",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "data",
        "title": "SrcSpan"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "SrcSpan",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Span",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:An",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "An",
        "fct-source": "src/Util-Annotated.html#Annotated",
        "fct-type": "function",
        "title": "An"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "An",
        "normalized": "",
        "package": "libcspm",
        "partial": "An",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:BuiltIn",
      "description": {
        "fct-descr": "\u003cp\u003eA builtin thing\n\u003c/p\u003e",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "BuiltIn",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "BuiltIn"
      },
      "index": {
        "description": "builtin thing",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "BuiltIn",
        "normalized": "",
        "package": "libcspm",
        "partial": "Built In",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:L",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "L",
        "fct-source": "src/Util-Annotated.html#Located",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "L",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:NoLoc",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "NoLoc",
        "fct-source": "src/Util-Annotated.html#SrcLoc",
        "fct-type": "function",
        "title": "NoLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "NoLoc",
        "normalized": "",
        "package": "libcspm",
        "partial": "No Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:SrcLoc",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcLoc",
        "fct-source": "src/Util-Annotated.html#SrcLoc",
        "fct-type": "function",
        "title": "SrcLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "SrcLoc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:SrcSpanMultiLine",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpanMultiLine",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "SrcSpanMultiLine"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "SrcSpanMultiLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Span Multi Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:SrcSpanOneLine",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpanOneLine",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "SrcSpanOneLine"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "SrcSpanOneLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Span One Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:SrcSpanPoint",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpanPoint",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "SrcSpanPoint"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "SrcSpanPoint",
        "normalized": "",
        "package": "libcspm",
        "partial": "Src Span Point",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:Unknown",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "Unknown",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "Unknown"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "Unknown",
        "normalized": "",
        "package": "libcspm",
        "partial": "Unknown",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:annotation",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "a",
        "fct-source": "src/Util-Annotated.html#Annotated",
        "fct-type": "function",
        "title": "annotation"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "annotation",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:combineSpans",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e SrcSpan -\u003e SrcSpan",
        "fct-source": "src/Util-Annotated.html#combineSpans",
        "fct-type": "function",
        "title": "combineSpans"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "combineSpans",
        "normalized": "SrcSpan-\u003eSrcSpan-\u003eSrcSpan",
        "package": "libcspm",
        "partial": "Spans",
        "signature": "SrcSpan-\u003eSrcSpan-\u003eSrcSpan"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:dummyAnnotation",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "a",
        "fct-source": "src/Util-Annotated.html#dummyAnnotation",
        "fct-type": "function",
        "title": "dummyAnnotation"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "dummyAnnotation",
        "normalized": "",
        "package": "libcspm",
        "partial": "Annotation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:inner",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "b",
        "fct-source": "src/Util-Annotated.html#Annotated",
        "fct-type": "function",
        "title": "inner"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "inner",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:loc",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan",
        "fct-source": "src/Util-Annotated.html#Annotated",
        "fct-type": "function",
        "title": "loc"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "loc",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:locatedInner",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "a",
        "fct-source": "src/Util-Annotated.html#Located",
        "fct-type": "function",
        "title": "locatedInner"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "locatedInner",
        "normalized": "",
        "package": "libcspm",
        "partial": "Inner",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:locatedLoc",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan",
        "fct-source": "src/Util-Annotated.html#Located",
        "fct-type": "function",
        "title": "locatedLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "locatedLoc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcLocCol",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcLoc",
        "fct-type": "function",
        "title": "srcLocCol"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcLocCol",
        "normalized": "",
        "package": "libcspm",
        "partial": "Loc Col",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcLocFile",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "String",
        "fct-source": "src/Util-Annotated.html#SrcLoc",
        "fct-type": "function",
        "title": "srcLocFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcLocFile",
        "normalized": "",
        "package": "libcspm",
        "partial": "Loc File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcLocLine",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcLoc",
        "fct-type": "function",
        "title": "srcLocLine"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcLocLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Loc Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanCol",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanCol"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanCol",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span Col",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanECol",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanECol"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanECol",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span ECol",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanELine",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanELine"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanELine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span ELine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanEnd",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e SrcLoc",
        "fct-source": "src/Util-Annotated.html#srcSpanEnd",
        "fct-type": "function",
        "title": "srcSpanEnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanEnd",
        "normalized": "SrcSpan-\u003eSrcLoc",
        "package": "libcspm",
        "partial": "Span End",
        "signature": "SrcSpan-\u003eSrcLoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanFile",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "String",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanFile",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanLine",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanLine"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanSCol",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanSCol"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanSCol",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span SCol",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanSLine",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "!Int",
        "fct-source": "src/Util-Annotated.html#SrcSpan",
        "fct-type": "function",
        "title": "srcSpanSLine"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanSLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Span SLine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:srcSpanStart",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e SrcLoc",
        "fct-source": "src/Util-Annotated.html#srcSpanStart",
        "fct-type": "function",
        "title": "srcSpanStart"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "srcSpanStart",
        "normalized": "SrcSpan-\u003eSrcLoc",
        "package": "libcspm",
        "partial": "Span Start",
        "signature": "SrcSpan-\u003eSrcLoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Annotated.html#v:unAnnotate",
      "description": {
        "fct-module": "Util.Annotated",
        "fct-package": "libcspm",
        "fct-signature": "Annotated a b -\u003e b",
        "fct-source": "src/Util-Annotated.html#unAnnotate",
        "fct-type": "function",
        "title": "unAnnotate"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Annotated",
        "module": "Util.Annotated",
        "name": "unAnnotate",
        "normalized": "Annotated a b-\u003eb",
        "package": "libcspm",
        "partial": "Annotate",
        "signature": "Annotated a b-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#",
      "description": {
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-Exception.html",
        "fct-type": "module",
        "title": "Exception"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "Exception",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exception",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#t:ErrorMessage",
      "description": {
        "fct-descr": "\u003cp\u003eAn error message that resulted from something in the user's input.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Exception.html#ErrorMessage",
        "fct-type": "data",
        "title": "ErrorMessage"
      },
      "index": {
        "description": "An error message that resulted from something in the user input",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "ErrorMessage",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#t:ErrorMessages",
      "description": {
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/Util-Exception.html#ErrorMessages",
        "fct-type": "type",
        "title": "ErrorMessages"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "ErrorMessages",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Messages",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#t:Exception",
      "description": {
        "fct-descr": "\u003cp\u003eAny type that you wish to throw or catch as an exception must be an\ninstance of the \u003ccode\u003eException\u003c/code\u003e class. The simplest case is a new exception\ntype directly below the root:\n\u003c/p\u003e\u003cpre\u003e data MyException = ThisException | ThatException\n     deriving (Show, Typeable)\n\n instance Exception MyException\n\u003c/pre\u003e\u003cp\u003eThe default method definitions in the \u003ccode\u003eException\u003c/code\u003e class do what we need\nin this case. You can now throw and catch \u003ccode\u003eThisException\u003c/code\u003e and\n\u003ccode\u003eThatException\u003c/code\u003e as exceptions:\n\u003c/p\u003e\u003cpre\u003e\n*Main\u003e throw ThisException `catch` \\e -\u003e putStrLn (\"Caught \" ++ show (e :: MyException))\nCaught ThisException\n\u003c/pre\u003e\u003cp\u003eIn more complicated examples, you may wish to define a whole hierarchy\nof exceptions:\n\u003c/p\u003e\u003cpre\u003e ---------------------------------------------------------------------\n -- Make the root exception type for all the exceptions in a compiler\n\n data SomeCompilerException = forall e . Exception e =\u003e SomeCompilerException e\n     deriving Typeable\n\n instance Show SomeCompilerException where\n     show (SomeCompilerException e) = show e\n\n instance Exception SomeCompilerException\n\n compilerExceptionToException :: Exception e =\u003e e -\u003e SomeException\n compilerExceptionToException = toException . SomeCompilerException\n\n compilerExceptionFromException :: Exception e =\u003e SomeException -\u003e Maybe e\n compilerExceptionFromException x = do\n     SomeCompilerException a \u003c- fromException x\n     cast a\n\n ---------------------------------------------------------------------\n -- Make a subhierarchy for exceptions in the frontend of the compiler\n\n data SomeFrontendException = forall e . Exception e =\u003e SomeFrontendException e\n     deriving Typeable\n\n instance Show SomeFrontendException where\n     show (SomeFrontendException e) = show e\n\n instance Exception SomeFrontendException where\n     toException = compilerExceptionToException\n     fromException = compilerExceptionFromException\n\n frontendExceptionToException :: Exception e =\u003e e -\u003e SomeException\n frontendExceptionToException = toException . SomeFrontendException\n\n frontendExceptionFromException :: Exception e =\u003e SomeException -\u003e Maybe e\n frontendExceptionFromException x = do\n     SomeFrontendException a \u003c- fromException x\n     cast a\n\n ---------------------------------------------------------------------\n -- Make an exception type for a particular frontend compiler exception\n\n data MismatchedParentheses = MismatchedParentheses\n     deriving (Typeable, Show)\n\n instance Exception MismatchedParentheses where\n     toException   = frontendExceptionToException\n     fromException = frontendExceptionFromException\n\u003c/pre\u003e\u003cp\u003eWe can now catch a \u003ccode\u003eMismatchedParentheses\u003c/code\u003e exception as\n\u003ccode\u003eMismatchedParentheses\u003c/code\u003e, \u003ccode\u003eSomeFrontendException\u003c/code\u003e or\n\u003ccode\u003eSomeCompilerException\u003c/code\u003e, but not other types, e.g. \u003ccode\u003eIOException\u003c/code\u003e:\n\u003c/p\u003e\u003cpre\u003e\n*Main\u003e throw MismatchedParentheses \u003ccode\u003ecatch\u003c/code\u003e e -\u003e putStrLn (\"Caught \" ++ show (e :: MismatchedParentheses))\nCaught MismatchedParentheses\n*Main\u003e throw MismatchedParentheses \u003ccode\u003ecatch\u003c/code\u003e e -\u003e putStrLn (\"Caught \" ++ show (e :: SomeFrontendException))\nCaught MismatchedParentheses\n*Main\u003e throw MismatchedParentheses \u003ccode\u003ecatch\u003c/code\u003e e -\u003e putStrLn (\"Caught \" ++ show (e :: SomeCompilerException))\nCaught MismatchedParentheses\n*Main\u003e throw MismatchedParentheses \u003ccode\u003ecatch\u003c/code\u003e e -\u003e putStrLn (\"Caught \" ++ show (e :: IOException))\n*** Exception: MismatchedParentheses\n\u003c/pre\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-type": "class",
        "title": "Exception"
      },
      "index": {
        "description": "Any type that you wish to throw or catch as an exception must be an instance of the Exception class The simplest case is new exception type directly below the root data MyException ThisException ThatException deriving Show Typeable instance Exception MyException The default method definitions in the Exception class do what we need in this case You can now throw and catch ThisException and ThatException as exceptions Main throw ThisException catch putStrLn Caught show MyException Caught ThisException In more complicated examples you may wish to define whole hierarchy of exceptions Make the root exception type for all the exceptions in compiler data SomeCompilerException forall Exception SomeCompilerException deriving Typeable instance Show SomeCompilerException where show SomeCompilerException show instance Exception SomeCompilerException compilerExceptionToException Exception SomeException compilerExceptionToException toException SomeCompilerException compilerExceptionFromException Exception SomeException Maybe compilerExceptionFromException do SomeCompilerException fromException cast Make subhierarchy for exceptions in the frontend of the compiler data SomeFrontendException forall Exception SomeFrontendException deriving Typeable instance Show SomeFrontendException where show SomeFrontendException show instance Exception SomeFrontendException where toException compilerExceptionToException fromException compilerExceptionFromException frontendExceptionToException Exception SomeException frontendExceptionToException toException SomeFrontendException frontendExceptionFromException Exception SomeException Maybe frontendExceptionFromException do SomeFrontendException fromException cast Make an exception type for particular frontend compiler exception data MismatchedParentheses MismatchedParentheses deriving Typeable Show instance Exception MismatchedParentheses where toException frontendExceptionToException fromException frontendExceptionFromException We can now catch MismatchedParentheses exception as MismatchedParentheses SomeFrontendException or SomeCompilerException but not other types e.g IOException Main throw MismatchedParentheses catch putStrLn Caught show MismatchedParentheses Caught MismatchedParentheses Main throw MismatchedParentheses catch putStrLn Caught show SomeFrontendException Caught MismatchedParentheses Main throw MismatchedParentheses catch putStrLn Caught show SomeCompilerException Caught MismatchedParentheses Main throw MismatchedParentheses catch putStrLn Caught show IOException Exception MismatchedParentheses",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "Exception",
        "normalized": "",
        "package": "libcspm",
        "partial": "Exception",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#t:LibCSPMException",
      "description": {
        "fct-descr": "\u003cp\u003eExceptions that cause LibCSPM to abort whatever it is doing. \n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Exception.html#LibCSPMException",
        "fct-type": "data",
        "title": "LibCSPMException"
      },
      "index": {
        "description": "Exceptions that cause LibCSPM to abort whatever it is doing",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "LibCSPMException",
        "normalized": "",
        "package": "libcspm",
        "partial": "Lib CSPMException",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#t:MonadIOException",
      "description": {
        "fct-descr": "\u003cp\u003eA class to allow catching of SourceErrors in arbitrary monads.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/Util-Exception.html#MonadIOException",
        "fct-type": "class",
        "title": "MonadIOException"
      },
      "index": {
        "description": "class to allow catching of SourceErrors in arbitrary monads",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "MonadIOException",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monad IOException",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:ErrorMessage",
      "description": {
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "ErrorMessage",
        "fct-source": "src/Util-Exception.html#ErrorMessage",
        "fct-type": "function",
        "title": "ErrorMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "ErrorMessage",
        "normalized": "",
        "package": "libcspm",
        "partial": "Error Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:Panic",
      "description": {
        "fct-descr": "\u003cp\u003eAn unexpected internal error\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "Panic String",
        "fct-source": "src/Util-Exception.html#LibCSPMException",
        "fct-type": "function",
        "title": "Panic"
      },
      "index": {
        "description": "An unexpected internal error",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "Panic",
        "normalized": "",
        "package": "libcspm",
        "partial": "Panic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:SourceError",
      "description": {
        "fct-descr": "\u003cp\u003eAn error in the user's input occured\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "SourceError ErrorMessages",
        "fct-source": "src/Util-Exception.html#LibCSPMException",
        "fct-type": "function",
        "title": "SourceError"
      },
      "index": {
        "description": "An error in the user input occured",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "SourceError",
        "normalized": "",
        "package": "libcspm",
        "partial": "Source Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:UserError",
      "description": {
        "fct-descr": "\u003cp\u003eAn error occured. Normally this is caught by the application and \n then turned into a SourceError.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "UserError",
        "fct-source": "src/Util-Exception.html#LibCSPMException",
        "fct-type": "function",
        "title": "UserError"
      },
      "index": {
        "description": "An error occured Normally this is caught by the application and then turned into SourceError",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "UserError",
        "normalized": "",
        "package": "libcspm",
        "partial": "User Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:WarningMessage",
      "description": {
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "WarningMessage",
        "fct-source": "src/Util-Exception.html#ErrorMessage",
        "fct-type": "function",
        "title": "WarningMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "WarningMessage",
        "normalized": "",
        "package": "libcspm",
        "partial": "Warning Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:convertExceptionsToPanics",
      "description": {
        "fct-descr": "\u003cp\u003eConverts arbitrary exceptions to panics, rethrowing them.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "m a -\u003e m a",
        "fct-source": "src/Util-Exception.html#convertExceptionsToPanics",
        "fct-type": "method",
        "title": "convertExceptionsToPanics"
      },
      "index": {
        "description": "Converts arbitrary exceptions to panics rethrowing them",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "convertExceptionsToPanics",
        "normalized": "a b-\u003ea b",
        "package": "libcspm",
        "partial": "Exceptions To Panics",
        "signature": "m a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:finally",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the action, running the finaliser if an exception is thrown. The\n exception is always rethrown.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "m a -\u003e m () -\u003e m a",
        "fct-source": "src/Util-Exception.html#finally",
        "fct-type": "method",
        "title": "finally"
      },
      "index": {
        "description": "Runs the action running the finaliser if an exception is thrown The exception is always rethrown",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "finally",
        "normalized": "a b-\u003ea()-\u003ea b",
        "package": "libcspm",
        "partial": "",
        "signature": "m a-\u003em()-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:location",
      "description": {
        "fct-descr": "\u003cp\u003eUsed for sorting into order.\n\u003c/p\u003e\u003cp\u003eUsed for sorting into order.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan",
        "fct-source": "src/Util-Exception.html#ErrorMessage",
        "fct-type": "function",
        "title": "location"
      },
      "index": {
        "description": "Used for sorting into order Used for sorting into order",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "location",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:message",
      "description": {
        "fct-descr": "\u003cp\u003eThe message.\n\u003c/p\u003e\u003cp\u003eThe message.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "Doc",
        "fct-source": "src/Util-Exception.html#ErrorMessage",
        "fct-type": "function",
        "title": "message"
      },
      "index": {
        "description": "The message The message",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "message",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:mkErrorMessage",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a \u003ccode\u003e\u003ca\u003eSrcSpan\u003c/a\u003e\u003c/code\u003e and a pretty printed \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e creates an \u003ccode\u003e\u003ca\u003eErrorMessage\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Doc -\u003e ErrorMessage",
        "fct-source": "src/Util-Exception.html#mkErrorMessage",
        "fct-type": "function",
        "title": "mkErrorMessage"
      },
      "index": {
        "description": "Given SrcSpan and pretty printed Doc creates an ErrorMessage",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "mkErrorMessage",
        "normalized": "SrcSpan-\u003eDoc-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Error Message",
        "signature": "SrcSpan-\u003eDoc-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:mkWarningMessage",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a warning from a \u003ccode\u003e\u003ca\u003eSrcSpan\u003c/a\u003e\u003c/code\u003e and a pretty printed \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e,\n prepending \u003ccode\u003eWarning: \u003c/code\u003e to the \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "SrcSpan -\u003e Doc -\u003e ErrorMessage",
        "fct-source": "src/Util-Exception.html#mkWarningMessage",
        "fct-type": "function",
        "title": "mkWarningMessage"
      },
      "index": {
        "description": "Constructs warning from SrcSpan and pretty printed Doc prepending Warning to the Doc",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "mkWarningMessage",
        "normalized": "SrcSpan-\u003eDoc-\u003eErrorMessage",
        "package": "libcspm",
        "partial": "Warning Message",
        "signature": "SrcSpan-\u003eDoc-\u003eErrorMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:panic",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a string causes a \u003ccode\u003e\u003ca\u003ePanic\u003c/a\u003e\u003c/code\u003e to be thrown.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e a",
        "fct-source": "src/Util-Exception.html#panic",
        "fct-type": "function",
        "title": "panic"
      },
      "index": {
        "description": "Given string causes Panic to be thrown",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "panic",
        "normalized": "String-\u003ea",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:throwException",
      "description": {
        "fct-descr": "\u003cp\u003eThrows an arbitrary \u003ccode\u003e\u003ca\u003eException\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "e -\u003e a",
        "fct-source": "src/Util-Exception.html#throwException",
        "fct-type": "function",
        "title": "throwException"
      },
      "index": {
        "description": "Throws an arbitrary Exception",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "throwException",
        "normalized": "a-\u003eb",
        "package": "libcspm",
        "partial": "Exception",
        "signature": "e-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:throwSourceError",
      "description": {
        "fct-descr": "\u003cp\u003eThrow an error message as a \u003ccode\u003e\u003ca\u003eSourceError\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "ErrorMessages -\u003e a",
        "fct-source": "src/Util-Exception.html#throwSourceError",
        "fct-type": "function",
        "title": "throwSourceError"
      },
      "index": {
        "description": "Throw an error message as SourceError",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "throwSourceError",
        "normalized": "ErrorMessages-\u003ea",
        "package": "libcspm",
        "partial": "Source Error",
        "signature": "ErrorMessages-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:tryM",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the action, catching any non-fatal LibCSPMExecptions (i.e. non-\n Panic).\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "m a -\u003e m (Either LibCSPMException a)",
        "fct-source": "src/Util-Exception.html#tryM",
        "fct-type": "method",
        "title": "tryM"
      },
      "index": {
        "description": "Runs the action catching any non-fatal LibCSPMExecptions i.e non Panic",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "tryM",
        "normalized": "a b-\u003ea(Either LibCSPMException b)",
        "package": "libcspm",
        "partial": "",
        "signature": "m a-\u003em(Either LibCSPMException a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Exception.html#v:tryM-39-",
      "description": {
        "fct-descr": "\u003cp\u003eRuns the action, catching all exceptions including panics.\n\u003c/p\u003e",
        "fct-module": "Util.Exception",
        "fct-package": "libcspm",
        "fct-signature": "m a -\u003e m (Either LibCSPMException a)",
        "fct-source": "src/Util-Exception.html#tryM%27",
        "fct-type": "method",
        "title": "tryM'"
      },
      "index": {
        "description": "Runs the action catching all exceptions including panics",
        "hierarchy": "Util Exception",
        "module": "Util.Exception",
        "name": "tryM'",
        "normalized": "a b-\u003ea(Either LibCSPMException b)",
        "package": "libcspm",
        "partial": "M'",
        "signature": "m a-\u003em(Either LibCSPMException a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-FuzzyLookup.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides fuzzy string matching.\n\u003c/p\u003e\u003cp\u003eTaken from GHC (which is BSD licensed and thus compatible). Copyright\n reproduced below:\n\u003c/p\u003e\u003cp\u003e(c) The University of Glasgow 2006\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Util.FuzzyLookup",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-FuzzyLookup.html",
        "fct-type": "module",
        "title": "FuzzyLookup"
      },
      "index": {
        "description": "Provides fuzzy string matching Taken from GHC which is BSD licensed and thus compatible Copyright reproduced below The University of Glasgow",
        "hierarchy": "Util FuzzyLookup",
        "module": "Util.FuzzyLookup",
        "name": "FuzzyLookup",
        "normalized": "",
        "package": "libcspm",
        "partial": "Fuzzy Lookup",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-FuzzyLookup.html#v:fuzzyLookup",
      "description": {
        "fct-descr": "\u003cp\u003eSearch for possible matches to the users input in the given list,\n returning a small number of ranked results\n\u003c/p\u003e",
        "fct-module": "Util.FuzzyLookup",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e [(String, a)] -\u003e [a]",
        "fct-source": "src/Util-FuzzyLookup.html#fuzzyLookup",
        "fct-type": "function",
        "title": "fuzzyLookup"
      },
      "index": {
        "description": "Search for possible matches to the users input in the given list returning small number of ranked results",
        "hierarchy": "Util FuzzyLookup",
        "module": "Util.FuzzyLookup",
        "name": "fuzzyLookup",
        "normalized": "String-\u003e[(String,a)]-\u003e[a]",
        "package": "libcspm",
        "partial": "Lookup",
        "signature": "String-\u003e[(String,a)]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-FuzzyLookup.html#v:fuzzyMatch",
      "description": {
        "fct-module": "Util.FuzzyLookup",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e [String] -\u003e [String]",
        "fct-source": "src/Util-FuzzyLookup.html#fuzzyMatch",
        "fct-type": "function",
        "title": "fuzzyMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Util FuzzyLookup",
        "module": "Util.FuzzyLookup",
        "name": "fuzzyMatch",
        "normalized": "String-\u003e[String]-\u003e[String]",
        "package": "libcspm",
        "partial": "Match",
        "signature": "String-\u003e[String]-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-HierarchicalMap.html",
        "fct-type": "module",
        "title": "HierarchicalMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "HierarchicalMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "Hierarchical Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#t:HierarchicalMap",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-HierarchicalMap.html#HierarchicalMap",
        "fct-type": "data",
        "title": "HierarchicalMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "HierarchicalMap",
        "normalized": "",
        "package": "libcspm",
        "partial": "Hierarchical Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#t:HierarchicalMapException",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-HierarchicalMap.html#HierarchicalMapException",
        "fct-type": "data",
        "title": "HierarchicalMapException"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "HierarchicalMapException",
        "normalized": "",
        "package": "libcspm",
        "partial": "Hierarchical Map Exception",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:HierarchicalMap",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap [Map a b]",
        "fct-source": "src/Util-HierarchicalMap.html#HierarchicalMap",
        "fct-type": "function",
        "title": "HierarchicalMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "HierarchicalMap",
        "normalized": "HierarchicalMap[Map a b]",
        "package": "libcspm",
        "partial": "Hierarchical Map",
        "signature": "HierarchicalMap[Map a b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:ValueNotFoundException",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "ValueNotFoundException a",
        "fct-source": "src/Util-HierarchicalMap.html#HierarchicalMapException",
        "fct-type": "function",
        "title": "ValueNotFoundException"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "ValueNotFoundException",
        "normalized": "",
        "package": "libcspm",
        "partial": "Value Not Found Exception",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:flatten",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e [(a, b)]",
        "fct-source": "src/Util-HierarchicalMap.html#flatten",
        "fct-type": "function",
        "title": "flatten"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "flatten",
        "normalized": "HierarchicalMap a b-\u003e[(a,b)]",
        "package": "libcspm",
        "partial": "",
        "signature": "HierarchicalMap a b-\u003e[(a,b)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:lookup",
      "description": {
        "fct-descr": "\u003cp\u003eLooks up a key in any map, starting from the top\n\u003c/p\u003e",
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap k a -\u003e k -\u003e a",
        "fct-source": "src/Util-HierarchicalMap.html#lookup",
        "fct-type": "function",
        "title": "lookup"
      },
      "index": {
        "description": "Looks up key in any map starting from the top",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "lookup",
        "normalized": "HierarchicalMap a b-\u003ea-\u003eb",
        "package": "libcspm",
        "partial": "",
        "signature": "HierarchicalMap k a-\u003ek-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:map",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "(k -\u003e a -\u003e b) -\u003e HierarchicalMap k a -\u003e HierarchicalMap k b",
        "fct-source": "src/Util-HierarchicalMap.html#map",
        "fct-type": "function",
        "title": "map"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "map",
        "normalized": "(a-\u003eb-\u003ec)-\u003eHierarchicalMap a b-\u003eHierarchicalMap a c",
        "package": "libcspm",
        "partial": "",
        "signature": "(k-\u003ea-\u003eb)-\u003eHierarchicalMap k a-\u003eHierarchicalMap k b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:maybeLookup",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap k a -\u003e k -\u003e Maybe a",
        "fct-source": "src/Util-HierarchicalMap.html#maybeLookup",
        "fct-type": "function",
        "title": "maybeLookup"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "maybeLookup",
        "normalized": "HierarchicalMap a b-\u003ea-\u003eMaybe b",
        "package": "libcspm",
        "partial": "Lookup",
        "signature": "HierarchicalMap k a-\u003ek-\u003eMaybe a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:maybeLookupInTopLayer",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap k a -\u003e k -\u003e Maybe a",
        "fct-source": "src/Util-HierarchicalMap.html#maybeLookupInTopLayer",
        "fct-type": "function",
        "title": "maybeLookupInTopLayer"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "maybeLookupInTopLayer",
        "normalized": "HierarchicalMap a b-\u003ea-\u003eMaybe b",
        "package": "libcspm",
        "partial": "Lookup In Top Layer",
        "signature": "HierarchicalMap k a-\u003ek-\u003eMaybe a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:new",
      "description": {
        "fct-descr": "\u003cp\u003eCreates a new map\n\u003c/p\u003e",
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#new",
        "fct-type": "function",
        "title": "new"
      },
      "index": {
        "description": "Creates new map",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "new",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:newLayer",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#newLayer",
        "fct-type": "function",
        "title": "newLayer"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "newLayer",
        "normalized": "HierarchicalMap a b-\u003eHierarchicalMap a b",
        "package": "libcspm",
        "partial": "Layer",
        "signature": "HierarchicalMap a b-\u003eHierarchicalMap a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:newLayerAndBind",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e [(a, b)] -\u003e HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#newLayerAndBind",
        "fct-type": "function",
        "title": "newLayerAndBind"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "newLayerAndBind",
        "normalized": "HierarchicalMap a b-\u003e[(a,b)]-\u003eHierarchicalMap a b",
        "package": "libcspm",
        "partial": "Layer And Bind",
        "signature": "HierarchicalMap a b-\u003e[(a,b)]-\u003eHierarchicalMap a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:newRecursiveLayerAndBind",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e [HierarchicalMap a b -\u003e (a, b)] -\u003e HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#newRecursiveLayerAndBind",
        "fct-type": "function",
        "title": "newRecursiveLayerAndBind"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "newRecursiveLayerAndBind",
        "normalized": "HierarchicalMap a b-\u003e[HierarchicalMap a b-\u003e(a,b)]-\u003eHierarchicalMap a b",
        "package": "libcspm",
        "partial": "Recursive Layer And Bind",
        "signature": "HierarchicalMap a b-\u003e[HierarchicalMap a b-\u003e(a,b)]-\u003eHierarchicalMap a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:popLayer",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#popLayer",
        "fct-type": "function",
        "title": "popLayer"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "popLayer",
        "normalized": "HierarchicalMap a b-\u003eHierarchicalMap a b",
        "package": "libcspm",
        "partial": "Layer",
        "signature": "HierarchicalMap a b-\u003eHierarchicalMap a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:update",
      "description": {
        "fct-descr": "\u003cp\u003eCreates/updates a key in the top level map.\n\u003c/p\u003e",
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e a -\u003e b -\u003e HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#update",
        "fct-type": "function",
        "title": "update"
      },
      "index": {
        "description": "Creates updates key in the top level map",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "update",
        "normalized": "HierarchicalMap a b-\u003ea-\u003eb-\u003eHierarchicalMap a b",
        "package": "libcspm",
        "partial": "",
        "signature": "HierarchicalMap a b-\u003ea-\u003eb-\u003eHierarchicalMap a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-HierarchicalMap.html#v:updateMulti",
      "description": {
        "fct-module": "Util.HierarchicalMap",
        "fct-package": "libcspm",
        "fct-signature": "HierarchicalMap a b -\u003e [(a, b)] -\u003e HierarchicalMap a b",
        "fct-source": "src/Util-HierarchicalMap.html#updateMulti",
        "fct-type": "function",
        "title": "updateMulti"
      },
      "index": {
        "description": "",
        "hierarchy": "Util HierarchicalMap",
        "module": "Util.HierarchicalMap",
        "name": "updateMulti",
        "normalized": "HierarchicalMap a b-\u003e[(a,b)]-\u003eHierarchicalMap a b",
        "package": "libcspm",
        "partial": "Multi",
        "signature": "HierarchicalMap a b-\u003e[(a,b)]-\u003eHierarchicalMap a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-List.html#",
      "description": {
        "fct-module": "Util.List",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-List.html",
        "fct-type": "module",
        "title": "List"
      },
      "index": {
        "description": "",
        "hierarchy": "Util List",
        "module": "Util.List",
        "name": "List",
        "normalized": "",
        "package": "libcspm",
        "partial": "List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-List.html#v:cartesianProduct",
      "description": {
        "fct-module": "Util.List",
        "fct-package": "libcspm",
        "fct-signature": "[[a]] -\u003e [[a]]",
        "fct-source": "src/Util-List.html#cartesianProduct",
        "fct-type": "function",
        "title": "cartesianProduct"
      },
      "index": {
        "description": "",
        "hierarchy": "Util List",
        "module": "Util.List",
        "name": "cartesianProduct",
        "normalized": "[[a]]-\u003e[[a]]",
        "package": "libcspm",
        "partial": "Product",
        "signature": "[[a]]-\u003e[[a]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-List.html#v:noDups",
      "description": {
        "fct-descr": "\u003cp\u003eReturns true iff the list has no duplicates.\n\u003c/p\u003e",
        "fct-module": "Util.List",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e Bool",
        "fct-source": "src/Util-List.html#noDups",
        "fct-type": "function",
        "title": "noDups"
      },
      "index": {
        "description": "Returns true iff the list has no duplicates",
        "hierarchy": "Util List",
        "module": "Util.List",
        "name": "noDups",
        "normalized": "[a]-\u003eBool",
        "package": "libcspm",
        "partial": "Dups",
        "signature": "[a]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-List.html#v:replaceLast",
      "description": {
        "fct-descr": "\u003cp\u003eReplaces the last item in a list. Assumes the list is non empty.\n\u003c/p\u003e",
        "fct-module": "Util.List",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e a -\u003e [a]",
        "fct-source": "src/Util-List.html#replaceLast",
        "fct-type": "function",
        "title": "replaceLast"
      },
      "index": {
        "description": "Replaces the last item in list Assumes the list is non empty",
        "hierarchy": "Util List",
        "module": "Util.List",
        "name": "replaceLast",
        "normalized": "[a]-\u003ea-\u003e[a]",
        "package": "libcspm",
        "partial": "Last",
        "signature": "[a]-\u003ea-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Monad.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMisc utility functions that are defined on monads.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Util.Monad",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-Monad.html",
        "fct-type": "module",
        "title": "Monad"
      },
      "index": {
        "description": "Misc utility functions that are defined on monads",
        "hierarchy": "Util Monad",
        "module": "Util.Monad",
        "name": "Monad",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Monad.html#v:-36--36-",
      "description": {
        "fct-module": "Util.Monad",
        "fct-package": "libcspm",
        "fct-signature": "m (a -\u003e b) -\u003e m a -\u003e m b",
        "fct-source": "src/Util-Monad.html#%24%24",
        "fct-type": "function",
        "title": "($$)"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Monad",
        "module": "Util.Monad",
        "name": "($$) $$",
        "normalized": "a(b-\u003ec)-\u003ea b-\u003ea c",
        "package": "libcspm",
        "partial": "",
        "signature": "m(a-\u003eb)-\u003em a-\u003em b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Monad.html#v:andM",
      "description": {
        "fct-module": "Util.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[m Bool] -\u003e m Bool",
        "fct-source": "src/Util-Monad.html#andM",
        "fct-type": "function",
        "title": "andM"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Monad",
        "module": "Util.Monad",
        "name": "andM",
        "normalized": "[a Bool]-\u003ea Bool",
        "package": "libcspm",
        "partial": "",
        "signature": "[m Bool]-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Monad.html#v:concatMapM",
      "description": {
        "fct-module": "Util.Monad",
        "fct-package": "libcspm",
        "fct-signature": "(a -\u003e m [b]) -\u003e [a] -\u003e m [b]",
        "fct-source": "src/Util-Monad.html#concatMapM",
        "fct-type": "function",
        "title": "concatMapM"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Monad",
        "module": "Util.Monad",
        "name": "concatMapM",
        "normalized": "(a-\u003eb[c])-\u003e[a]-\u003eb[c]",
        "package": "libcspm",
        "partial": "Map",
        "signature": "(a-\u003em[b])-\u003e[a]-\u003em[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Monad.html#v:orM",
      "description": {
        "fct-module": "Util.Monad",
        "fct-package": "libcspm",
        "fct-signature": "[m Bool] -\u003e m Bool",
        "fct-source": "src/Util-Monad.html#orM",
        "fct-type": "function",
        "title": "orM"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Monad",
        "module": "Util.Monad",
        "name": "orM",
        "normalized": "[a Bool]-\u003ea Bool",
        "package": "libcspm",
        "partial": "",
        "signature": "[m Bool]-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Monad.html#v:whenM",
      "description": {
        "fct-module": "Util.Monad",
        "fct-package": "libcspm",
        "fct-signature": "m Bool -\u003e m () -\u003e m ()",
        "fct-source": "src/Util-Monad.html#whenM",
        "fct-type": "function",
        "title": "whenM"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Monad",
        "module": "Util.Monad",
        "name": "whenM",
        "normalized": "a Bool-\u003ea()-\u003ea()",
        "package": "libcspm",
        "partial": "",
        "signature": "m Bool-\u003em()-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-MonadicPrettyPrint.html",
        "fct-type": "module",
        "title": "MonadicPrettyPrint"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "MonadicPrettyPrint",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monadic Pretty Print",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#t:MonadicPrettyPrintable",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/Util-MonadicPrettyPrint.html#MonadicPrettyPrintable",
        "fct-type": "class",
        "title": "MonadicPrettyPrintable"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "MonadicPrettyPrintable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monadic Pretty Printable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:angles",
      "description": {
        "fct-descr": "\u003cp\u003eSurrounds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003e\u003ca\u003e\u003c\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003e\u003e\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#angles",
        "fct-type": "function",
        "title": "angles"
      },
      "index": {
        "description": "Surrounds Doc with and",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "angles",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:bars",
      "description": {
        "fct-descr": "\u003cp\u003eSurrounds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e with '|'.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#bars",
        "fct-type": "function",
        "title": "bars"
      },
      "index": {
        "description": "Surrounds Doc with",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "bars",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:commaSeparatedInt",
      "description": {
        "fct-descr": "\u003cp\u003ePretty prints an integer and separates it into groups of 3, separated by\n commas.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#commaSeparatedInt",
        "fct-type": "function",
        "title": "commaSeparatedInt"
      },
      "index": {
        "description": "Pretty prints an integer and separates it into groups of separated by commas",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "commaSeparatedInt",
        "normalized": "Int-\u003ea Doc",
        "package": "libcspm",
        "partial": "Separated Int",
        "signature": "Int-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:dotSep",
      "description": {
        "fct-descr": "\u003cp\u003eSeparates a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es by \u003ccode\u003e\u003ca\u003e.\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#dotSep",
        "fct-type": "function",
        "title": "dotSep"
      },
      "index": {
        "description": "Separates list of Doc by",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "dotSep",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "Sep",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:ellipsis",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#ellipsis",
        "fct-type": "function",
        "title": "ellipsis"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "ellipsis",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:list",
      "description": {
        "fct-descr": "\u003cp\u003eSeparates a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es by ','.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#list",
        "fct-type": "function",
        "title": "list"
      },
      "index": {
        "description": "Separates list of Doc by",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "list",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:ppBinaryOp",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e m Doc -\u003e a -\u003e a -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#ppBinaryOp",
        "fct-type": "function",
        "title": "ppBinaryOp"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "ppBinaryOp",
        "normalized": "a-\u003eb Doc-\u003ea-\u003ea-\u003eb Doc",
        "package": "libcspm",
        "partial": "Binary Op",
        "signature": "a-\u003em Doc-\u003ea-\u003ea-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:ppBinaryOp-39-",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e m Doc -\u003e a -\u003e a -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#ppBinaryOp%27",
        "fct-type": "function",
        "title": "ppBinaryOp'"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "ppBinaryOp'",
        "normalized": "a-\u003eb Doc-\u003ea-\u003ea-\u003eb Doc",
        "package": "libcspm",
        "partial": "Binary Op'",
        "signature": "a-\u003em Doc-\u003ea-\u003ea-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:prettyPrint",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#prettyPrint",
        "fct-type": "method",
        "title": "prettyPrint"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "prettyPrint",
        "normalized": "a-\u003eb Doc",
        "package": "libcspm",
        "partial": "Print",
        "signature": "a-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:prettyPrintBrief",
      "description": {
        "fct-descr": "\u003cp\u003eAs prettyPrint, but yields a briefer description.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#prettyPrintBrief",
        "fct-type": "method",
        "title": "prettyPrintBrief"
      },
      "index": {
        "description": "As prettyPrint but yields briefer description",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "prettyPrintBrief",
        "normalized": "a-\u003eb Doc",
        "package": "libcspm",
        "partial": "Print Brief",
        "signature": "a-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:prettyPrintBriefPrec",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e a -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#prettyPrintBriefPrec",
        "fct-type": "function",
        "title": "prettyPrintBriefPrec"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "prettyPrintBriefPrec",
        "normalized": "Int-\u003ea-\u003eb Doc",
        "package": "libcspm",
        "partial": "Print Brief Prec",
        "signature": "Int-\u003ea-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:prettyPrintPrec",
      "description": {
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e a -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#prettyPrintPrec",
        "fct-type": "function",
        "title": "prettyPrintPrec"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "prettyPrintPrec",
        "normalized": "a-\u003ea-\u003eb Doc",
        "package": "libcspm",
        "partial": "Print Prec",
        "signature": "a-\u003ea-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:punctuateFront",
      "description": {
        "fct-descr": "\u003cp\u003eEquivalent to [d1, sep \u003ca/\u003e d2, sep \u003ca/\u003e d3, ...].\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m [Doc] -\u003e m [Doc]",
        "fct-source": "src/Util-MonadicPrettyPrint.html#punctuateFront",
        "fct-type": "function",
        "title": "punctuateFront"
      },
      "index": {
        "description": "Equivalent to d1 sep d2 sep d3",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "punctuateFront",
        "normalized": "a Doc-\u003ea[Doc]-\u003ea[Doc]",
        "package": "libcspm",
        "partial": "Front",
        "signature": "m Doc-\u003em[Doc]-\u003em[Doc]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:shortDouble",
      "description": {
        "fct-descr": "\u003cp\u003eShow a double \u003ccode\u003ed\u003c/code\u003e printing only \u003ccode\u003eplaces\u003c/code\u003e places after the decimal place.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e Double -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#shortDouble",
        "fct-type": "function",
        "title": "shortDouble"
      },
      "index": {
        "description": "Show double printing only places places after the decimal place",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "shortDouble",
        "normalized": "Int-\u003eDouble-\u003ea Doc",
        "package": "libcspm",
        "partial": "Double",
        "signature": "Int-\u003eDouble-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:speakNth",
      "description": {
        "fct-descr": "\u003cp\u003eConverts a number into \u003ccode\u003efirst\u003c/code\u003e, \u003ccode\u003esecond\u003c/code\u003e etc.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#speakNth",
        "fct-type": "function",
        "title": "speakNth"
      },
      "index": {
        "description": "Converts number into first second etc",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "speakNth",
        "normalized": "Int-\u003ea Doc",
        "package": "libcspm",
        "partial": "Nth",
        "signature": "Int-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:tabIndent",
      "description": {
        "fct-descr": "\u003cp\u003eIndent a document by \u003ccode\u003e\u003ca\u003etabWidth\u003c/a\u003e\u003c/code\u003e characters, on each line\n (uses \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrint.html#tabIndent",
        "fct-type": "function",
        "title": "tabIndent"
      },
      "index": {
        "description": "Indent document by tabWidth characters on each line uses nest",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "tabIndent",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "Indent",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrint.html#v:tabWidth",
      "description": {
        "fct-descr": "\u003cp\u003eThe width, in spaces, of a tab character.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int",
        "fct-source": "src/Util-MonadicPrettyPrint.html#tabWidth",
        "fct-type": "function",
        "title": "tabWidth"
      },
      "index": {
        "description": "The width in spaces of tab character",
        "hierarchy": "Util MonadicPrettyPrint",
        "module": "Util.MonadicPrettyPrint",
        "name": "tabWidth",
        "normalized": "",
        "package": "libcspm",
        "partial": "Width",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA wrapper around the John Hughes's and Simon Peyton Jones's Pretty\n Printer combinators based on the ReaderT monad transformer, allowing\n lookups to be performed during the pretty-printing process.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html",
        "fct-type": "module",
        "title": "MonadicPrettyPrintInternal"
      },
      "index": {
        "description": "wrapper around the John Hughes and Simon Peyton Jones Pretty Printer combinators based on the ReaderT monad transformer allowing lookups to be performed during the pretty-printing process",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "MonadicPrettyPrintInternal",
        "normalized": "",
        "package": "libcspm",
        "partial": "Monadic Pretty Print Internal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#t:Doc",
      "description": {
        "fct-descr": "\u003cp\u003eThe abstract type of documents.\n A Doc represents a *set* of layouts. A Doc with\n no occurrences of Union or NoDoc represents just one layout.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-type": "data",
        "title": "Doc"
      },
      "index": {
        "description": "The abstract type of documents Doc represents set of layouts Doc with no occurrences of Union or NoDoc represents just one layout",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "Doc",
        "normalized": "",
        "package": "libcspm",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#t:Mode",
      "description": {
        "fct-descr": "\u003cp\u003eRendering mode.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-type": "data",
        "title": "Mode"
      },
      "index": {
        "description": "Rendering mode",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "Mode",
        "normalized": "",
        "package": "libcspm",
        "partial": "Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#t:Style",
      "description": {
        "fct-descr": "\u003cp\u003eA rendering style.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-type": "data",
        "title": "Style"
      },
      "index": {
        "description": "rendering style",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "Style",
        "normalized": "",
        "package": "libcspm",
        "partial": "Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#t:TextDetails",
      "description": {
        "fct-descr": "\u003cp\u003eThe TextDetails data type\n\u003c/p\u003e\u003cp\u003eA TextDetails represents a fragment of text that will be\n output at some point.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-type": "data",
        "title": "TextDetails"
      },
      "index": {
        "description": "The TextDetails data type TextDetails represents fragment of text that will be output at some point",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "TextDetails",
        "normalized": "",
        "package": "libcspm",
        "partial": "Text Details",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:-36--36-",
      "description": {
        "fct-descr": "\u003cp\u003eAbove, except that if the last line of the first argument stops\n at least one position before the first line of the second begins,\n these two lines are overlapped.  For example:\n\u003c/p\u003e\u003cpre\u003e    text \"hi\" $$ nest 5 (text \"there\")\n\u003c/pre\u003e\u003cp\u003elays out as\n\u003c/p\u003e\u003cpre\u003e    hi   there\n\u003c/pre\u003e\u003cp\u003erather than\n\u003c/p\u003e\u003cpre\u003e    hi\n         there\n\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e is associative, with identity \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e, and also satisfies\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003e(x \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e y) \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e z = x \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e (y \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e z)\u003c/code\u003e, if \u003ccode\u003ey\u003c/code\u003e non-empty.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#%24%24",
        "fct-type": "function",
        "title": "($$)"
      },
      "index": {
        "description": "Above except that if the last line of the first argument stops at least one position before the first line of the second begins these two lines are overlapped For example text hi nest text there lays out as hi there rather than hi there is associative with identity empty and also satisfies if non-empty",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "($$) $$",
        "normalized": "a Doc-\u003ea Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:-36--43--36-",
      "description": {
        "fct-descr": "\u003cp\u003eAbove, with no overlapping.\n \u003ccode\u003e\u003ca\u003e$+$\u003c/a\u003e\u003c/code\u003e is associative, with identity \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#%24%2B%24",
        "fct-type": "function",
        "title": "($+$)"
      },
      "index": {
        "description": "Above with no overlapping is associative with identity empty",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "($+$) $+$",
        "normalized": "a Doc-\u003ea Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:-60--43--62-",
      "description": {
        "fct-descr": "\u003cp\u003eBeside, separated by space, unless one of the arguments is \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e.\n \u003ccode\u003e\u003ca\u003e\u003c+\u003e\u003c/a\u003e\u003c/code\u003e is associative, with identity \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#%3C%2B%3E",
        "fct-type": "function",
        "title": "(\u003c+\u003e)"
      },
      "index": {
        "description": "Beside separated by space unless one of the arguments is empty is associative with identity empty",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "(\u003c+\u003e) \u003c+\u003e",
        "normalized": "a Doc-\u003ea Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:-60--62-",
      "description": {
        "fct-descr": "\u003cp\u003eBeside.\n \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e is associative, with identity \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#%3C%3E",
        "fct-type": "function",
        "title": "(\u003c\u003e)"
      },
      "index": {
        "description": "Beside is associative with identity empty",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "(\u003c\u003e) \u003c\u003e",
        "normalized": "a Doc-\u003ea Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:Chr",
      "description": {
        "fct-descr": "\u003cp\u003eA single Char fragment\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Chr !Char",
        "fct-type": "function",
        "title": "Chr"
      },
      "index": {
        "description": "single Char fragment",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "Chr",
        "normalized": "",
        "package": "libcspm",
        "partial": "Chr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:LeftMode",
      "description": {
        "fct-descr": "\u003cp\u003eNo indentation, infinitely long lines\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "LeftMode",
        "fct-type": "function",
        "title": "LeftMode"
      },
      "index": {
        "description": "No indentation infinitely long lines",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "LeftMode",
        "normalized": "",
        "package": "libcspm",
        "partial": "Left Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:OneLineMode",
      "description": {
        "fct-descr": "\u003cp\u003eAll on one line\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "OneLineMode",
        "fct-type": "function",
        "title": "OneLineMode"
      },
      "index": {
        "description": "All on one line",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "OneLineMode",
        "normalized": "",
        "package": "libcspm",
        "partial": "One Line Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:PStr",
      "description": {
        "fct-descr": "\u003cp\u003eUsed to represent a Fast String fragment\n   but now deprecated and identical to the\n   Str constructor.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "PStr String",
        "fct-type": "function",
        "title": "PStr"
      },
      "index": {
        "description": "Used to represent Fast String fragment but now deprecated and identical to the Str constructor",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "PStr",
        "normalized": "",
        "package": "libcspm",
        "partial": "PStr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:PageMode",
      "description": {
        "fct-descr": "\u003cp\u003eNormal\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "PageMode",
        "fct-type": "function",
        "title": "PageMode"
      },
      "index": {
        "description": "Normal",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "PageMode",
        "normalized": "",
        "package": "libcspm",
        "partial": "Page Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:Str",
      "description": {
        "fct-descr": "\u003cp\u003eA whole String fragment\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Str String",
        "fct-type": "function",
        "title": "Str"
      },
      "index": {
        "description": "whole String fragment",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "Str",
        "normalized": "",
        "package": "libcspm",
        "partial": "Str",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:Style",
      "description": {
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Style",
        "fct-type": "function",
        "title": "Style"
      },
      "index": {
        "description": "",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "Style",
        "normalized": "",
        "package": "libcspm",
        "partial": "Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:ZigZagMode",
      "description": {
        "fct-descr": "\u003cp\u003eWith zig-zag cuts\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "ZigZagMode",
        "fct-type": "function",
        "title": "ZigZagMode"
      },
      "index": {
        "description": "With zig-zag cuts",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "ZigZagMode",
        "normalized": "",
        "package": "libcspm",
        "partial": "Zig Zag Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:braces",
      "description": {
        "fct-descr": "\u003cp\u003eWrap document in \u003ccode\u003e{...}\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#braces",
        "fct-type": "function",
        "title": "braces"
      },
      "index": {
        "description": "Wrap document in",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "braces",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:brackets",
      "description": {
        "fct-descr": "\u003cp\u003eWrap document in \u003ccode\u003e[...]\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#brackets",
        "fct-type": "function",
        "title": "brackets"
      },
      "index": {
        "description": "Wrap document in",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "brackets",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:cat",
      "description": {
        "fct-descr": "\u003cp\u003eEither \u003ccode\u003e\u003ca\u003ehcat\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003evcat\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#cat",
        "fct-type": "function",
        "title": "cat"
      },
      "index": {
        "description": "Either hcat or vcat",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "cat",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:char",
      "description": {
        "fct-descr": "\u003cp\u003eA document of height and width 1, containing a literal character.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Char -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#char",
        "fct-type": "function",
        "title": "char"
      },
      "index": {
        "description": "document of height and width containing literal character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "char",
        "normalized": "Char-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Char-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:colon",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e:\u003c/code\u003e character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#colon",
        "fct-type": "function",
        "title": "colon"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "colon",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:comma",
      "description": {
        "fct-descr": "\u003cp\u003eA ',' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#comma",
        "fct-type": "function",
        "title": "comma"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "comma",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:double",
      "description": {
        "fct-descr": "\u003cpre\u003edouble n = text (show n)\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Double -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#double",
        "fct-type": "function",
        "title": "double"
      },
      "index": {
        "description": "double text show",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "double",
        "normalized": "Double-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Double-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:doubleQuotes",
      "description": {
        "fct-descr": "\u003cp\u003eWrap document in \u003ccode\u003e\"...\"\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#doubleQuotes",
        "fct-type": "function",
        "title": "doubleQuotes"
      },
      "index": {
        "description": "Wrap document in",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "doubleQuotes",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "Quotes",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:empty",
      "description": {
        "fct-descr": "\u003cp\u003eThe empty document, with no height and no width.\n \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e is the identity for \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e\u003c+\u003e\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003e$+$\u003c/a\u003e\u003c/code\u003e, and anywhere\n in the argument list for \u003ccode\u003e\u003ca\u003esep\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ehcat\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ehsep\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003evcat\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003efcat\u003c/a\u003e\u003c/code\u003e etc.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#empty",
        "fct-type": "function",
        "title": "empty"
      },
      "index": {
        "description": "The empty document with no height and no width empty is the identity for and and anywhere in the argument list for sep hcat hsep vcat fcat etc",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "empty",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:equals",
      "description": {
        "fct-descr": "\u003cp\u003eA '=' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#equals",
        "fct-type": "function",
        "title": "equals"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "equals",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:fcat",
      "description": {
        "fct-descr": "\u003cp\u003e\"Paragraph fill\" version of \u003ccode\u003e\u003ca\u003ecat\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#fcat",
        "fct-type": "function",
        "title": "fcat"
      },
      "index": {
        "description": "Paragraph fill version of cat",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "fcat",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:float",
      "description": {
        "fct-descr": "\u003cpre\u003efloat n = text (show n)\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Float -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#float",
        "fct-type": "function",
        "title": "float"
      },
      "index": {
        "description": "float text show",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "float",
        "normalized": "Float-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Float-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:fsep",
      "description": {
        "fct-descr": "\u003cp\u003e\"Paragraph fill\" version of \u003ccode\u003e\u003ca\u003esep\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#fsep",
        "fct-type": "function",
        "title": "fsep"
      },
      "index": {
        "description": "Paragraph fill version of sep",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "fsep",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:fullRender",
      "description": {
        "fct-descr": "\u003cp\u003eThe general rendering interface.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Mode-\u003e Int-\u003e Float-\u003e (TextDetails -\u003e a -\u003e a)-\u003e a-\u003e m Doc-\u003e m a",
        "fct-type": "function",
        "title": "fullRender"
      },
      "index": {
        "description": "The general rendering interface",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "fullRender",
        "normalized": "Mode-\u003eInt-\u003eFloat-\u003e(TextDetails-\u003ea-\u003ea)-\u003ea-\u003eb Doc-\u003eb a",
        "package": "libcspm",
        "partial": "Render",
        "signature": "Mode-\u003eInt-\u003eFloat-\u003e(TextDetails-\u003ea-\u003ea)-\u003ea-\u003em Doc-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:hang",
      "description": {
        "fct-descr": "\u003cpre\u003ehang d1 n d2 = sep [d1, nest n d2]\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e Int -\u003e m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#hang",
        "fct-type": "function",
        "title": "hang"
      },
      "index": {
        "description": "hang d1 d2 sep d1 nest d2",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "hang",
        "normalized": "a Doc-\u003eInt-\u003ea Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003eInt-\u003em Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:hcat",
      "description": {
        "fct-descr": "\u003cp\u003eList version of \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#hcat",
        "fct-type": "function",
        "title": "hcat"
      },
      "index": {
        "description": "List version of",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "hcat",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:hsep",
      "description": {
        "fct-descr": "\u003cp\u003eList version of \u003ccode\u003e\u003ca\u003e\u003c+\u003e\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#hsep",
        "fct-type": "function",
        "title": "hsep"
      },
      "index": {
        "description": "List version of",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "hsep",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:int",
      "description": {
        "fct-descr": "\u003cpre\u003eint n = text (show n)\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#int",
        "fct-type": "function",
        "title": "int"
      },
      "index": {
        "description": "int text show",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "int",
        "normalized": "Int-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Int-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:integer",
      "description": {
        "fct-descr": "\u003cpre\u003einteger n = text (show n)\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Integer -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#integer",
        "fct-type": "function",
        "title": "integer"
      },
      "index": {
        "description": "integer text show",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "integer",
        "normalized": "Integer-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Integer-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:isEmpty",
      "description": {
        "fct-descr": "\u003cp\u003eReturns \u003ccode\u003e\u003ca\u003eTrue\u003c/a\u003e\u003c/code\u003e if the document is empty\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Bool",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#isEmpty",
        "fct-type": "function",
        "title": "isEmpty"
      },
      "index": {
        "description": "Returns True if the document is empty",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "isEmpty",
        "normalized": "a Doc-\u003ea Bool",
        "package": "libcspm",
        "partial": "Empty",
        "signature": "m Doc-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:lbrace",
      "description": {
        "fct-descr": "\u003cp\u003eA '{' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#lbrace",
        "fct-type": "function",
        "title": "lbrace"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "lbrace",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:lbrack",
      "description": {
        "fct-descr": "\u003cp\u003eA '[' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#lbrack",
        "fct-type": "function",
        "title": "lbrack"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "lbrack",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:lineLength",
      "description": {
        "fct-descr": "\u003cp\u003eLength of line, in chars\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Int",
        "fct-type": "function",
        "title": "lineLength"
      },
      "index": {
        "description": "Length of line in chars",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "lineLength",
        "normalized": "",
        "package": "libcspm",
        "partial": "Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:lparen",
      "description": {
        "fct-descr": "\u003cp\u003eA '(' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#lparen",
        "fct-type": "function",
        "title": "lparen"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "lparen",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:mode",
      "description": {
        "fct-descr": "\u003cp\u003eThe rendering mode\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Mode",
        "fct-type": "function",
        "title": "mode"
      },
      "index": {
        "description": "The rendering mode",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "mode",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:nest",
      "description": {
        "fct-descr": "\u003cp\u003eNest (or indent) a document by a given number of positions\n (which may also be negative).  \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e satisfies the laws:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cpre\u003e\u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e 0 x = x\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003e\u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k (\u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k' x) = \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e (k+k') x\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003e\u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k (x \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e y) = \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k z \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k y\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003e\u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k (x \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e y) = \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k x \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k y\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003e\u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e = \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e \u003ccode\u003ex \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e k y = x \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e y\u003c/code\u003e, if \u003ccode\u003ex\u003c/code\u003e non-empty\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThe side condition on the last law is needed because\n \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e is a left identity for \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#nest",
        "fct-type": "function",
        "title": "nest"
      },
      "index": {
        "description": "Nest or indent document by given number of positions which may also be negative nest satisfies the laws nest nest nest nest nest nest nest nest nest nest nest empty empty nest if non-empty The side condition on the last law is needed because empty is left identity for",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "nest",
        "normalized": "Int-\u003ea Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Int-\u003em Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:parens",
      "description": {
        "fct-descr": "\u003cp\u003eWrap document in \u003ccode\u003e(...)\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#parens",
        "fct-type": "function",
        "title": "parens"
      },
      "index": {
        "description": "Wrap document in",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "parens",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:ptext",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003etext\u003c/code\u003e. Used to be used for Bytestrings.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#ptext",
        "fct-type": "function",
        "title": "ptext"
      },
      "index": {
        "description": "Same as text Used to be used for Bytestrings",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "ptext",
        "normalized": "String-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:punctuate",
      "description": {
        "fct-descr": "\u003cpre\u003epunctuate p [d1, ... dn] = [d1 \u003c\u003e p, d2 \u003c\u003e p, ... dn-1 \u003c\u003e p, dn]\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m [Doc] -\u003e m [Doc]",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#punctuate",
        "fct-type": "function",
        "title": "punctuate"
      },
      "index": {
        "description": "punctuate d1 dn d1 d2 dn-1 dn",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "punctuate",
        "normalized": "a Doc-\u003ea[Doc]-\u003ea[Doc]",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em[Doc]-\u003em[Doc]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:quotes",
      "description": {
        "fct-descr": "\u003cp\u003eWrap document in \u003ccode\u003e'...'\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#quotes",
        "fct-type": "function",
        "title": "quotes"
      },
      "index": {
        "description": "Wrap document in",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "quotes",
        "normalized": "a Doc-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:rational",
      "description": {
        "fct-descr": "\u003cpre\u003erational n = text (show n)\u003c/pre\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Rational -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#rational",
        "fct-type": "function",
        "title": "rational"
      },
      "index": {
        "description": "rational text show",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "rational",
        "normalized": "Rational-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "Rational-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:rbrace",
      "description": {
        "fct-descr": "\u003cp\u003eA '}' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#rbrace",
        "fct-type": "function",
        "title": "rbrace"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "rbrace",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:rbrack",
      "description": {
        "fct-descr": "\u003cp\u003eA ']' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#rbrack",
        "fct-type": "function",
        "title": "rbrack"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "rbrack",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:render",
      "description": {
        "fct-descr": "\u003cp\u003eRender the \u003ccode\u003eDoc\u003c/code\u003e to a String using the default \u003ccode\u003eStyle\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc -\u003e m String",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#render",
        "fct-type": "function",
        "title": "render"
      },
      "index": {
        "description": "Render the Doc to String using the default Style",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "render",
        "normalized": "a Doc-\u003ea String",
        "package": "libcspm",
        "partial": "",
        "signature": "m Doc-\u003em String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:renderStyle",
      "description": {
        "fct-descr": "\u003cp\u003eRender the \u003ccode\u003eDoc\u003c/code\u003e to a String using the given \u003ccode\u003eStyle\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Style -\u003e m Doc -\u003e m String",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#renderStyle",
        "fct-type": "function",
        "title": "renderStyle"
      },
      "index": {
        "description": "Render the Doc to String using the given Style",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "renderStyle",
        "normalized": "Style-\u003ea Doc-\u003ea String",
        "package": "libcspm",
        "partial": "Style",
        "signature": "Style-\u003em Doc-\u003em String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:ribbonsPerLine",
      "description": {
        "fct-descr": "\u003cp\u003eRatio of ribbon length to line length\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Float",
        "fct-type": "function",
        "title": "ribbonsPerLine"
      },
      "index": {
        "description": "Ratio of ribbon length to line length",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "ribbonsPerLine",
        "normalized": "",
        "package": "libcspm",
        "partial": "Per Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:rparen",
      "description": {
        "fct-descr": "\u003cp\u003eA ')' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#rparen",
        "fct-type": "function",
        "title": "rparen"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "rparen",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:semi",
      "description": {
        "fct-descr": "\u003cp\u003eA ';' character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#semi",
        "fct-type": "function",
        "title": "semi"
      },
      "index": {
        "description": "character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "semi",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:sep",
      "description": {
        "fct-descr": "\u003cp\u003eEither \u003ccode\u003e\u003ca\u003ehsep\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003evcat\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#sep",
        "fct-type": "function",
        "title": "sep"
      },
      "index": {
        "description": "Either hsep or vcat",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "sep",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:sizedText",
      "description": {
        "fct-descr": "\u003cp\u003eSome text with any width. (\u003ccode\u003etext s = sizedText (length s) s\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e String -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#sizedText",
        "fct-type": "function",
        "title": "sizedText"
      },
      "index": {
        "description": "Some text with any width text sizedText length",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "sizedText",
        "normalized": "Int-\u003eString-\u003ea Doc",
        "package": "libcspm",
        "partial": "Text",
        "signature": "Int-\u003eString-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:space",
      "description": {
        "fct-descr": "\u003cp\u003eA space character\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#space",
        "fct-type": "function",
        "title": "space"
      },
      "index": {
        "description": "space character",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "space",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:style",
      "description": {
        "fct-descr": "\u003cp\u003eThe default style (\u003ccode\u003emode=PageMode, lineLength=100, ribbonsPerLine=1.5\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "Style",
        "fct-type": "function",
        "title": "style"
      },
      "index": {
        "description": "The default style mode PageMode lineLength ribbonsPerLine",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "style",
        "normalized": "",
        "package": "libcspm",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:text",
      "description": {
        "fct-descr": "\u003cp\u003eA document of height 1 containing a literal string.\n \u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e satisfies the following laws:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cpre\u003e\u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e s \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e t = \u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e (s\u003ccode\u003e\u003ca\u003e++\u003c/a\u003e\u003c/code\u003et)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e \"\" \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e x = x\u003c/code\u003e, if \u003ccode\u003ex\u003c/code\u003e non-empty\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThe side condition on the last law is necessary because \u003ccode\u003e\u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e \"\"\u003c/code\u003e\n has height 1, while \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e has no height.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#text",
        "fct-type": "function",
        "title": "text"
      },
      "index": {
        "description": "document of height containing literal string text satisfies the following laws text text text text if non-empty The side condition on the last law is necessary because text has height while empty has no height",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "text",
        "normalized": "String-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:vcat",
      "description": {
        "fct-descr": "\u003cp\u003eList version of \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "m [Doc] -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#vcat",
        "fct-type": "function",
        "title": "vcat"
      },
      "index": {
        "description": "List version of",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "vcat",
        "normalized": "a[Doc]-\u003ea Doc",
        "package": "libcspm",
        "partial": "",
        "signature": "m[Doc]-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-MonadicPrettyPrintInternal.html#v:zeroWidthText",
      "description": {
        "fct-descr": "\u003cp\u003eSome text, but without any width. Use for non-printing text\n such as a HTML or Latex tags\n\u003c/p\u003e",
        "fct-module": "Util.MonadicPrettyPrintInternal",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e m Doc",
        "fct-source": "src/Util-MonadicPrettyPrintInternal.html#zeroWidthText",
        "fct-type": "function",
        "title": "zeroWidthText"
      },
      "index": {
        "description": "Some text but without any width Use for non-printing text such as HTML or Latex tags",
        "hierarchy": "Util MonadicPrettyPrintInternal",
        "module": "Util.MonadicPrettyPrintInternal",
        "name": "zeroWidthText",
        "normalized": "String-\u003ea Doc",
        "package": "libcspm",
        "partial": "Width Text",
        "signature": "String-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-PartialFunctions.html",
        "fct-type": "module",
        "title": "PartialFunctions"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "PartialFunctions",
        "normalized": "",
        "package": "libcspm",
        "partial": "Partial Functions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#t:PartialFunction",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "type",
        "fct-source": "src/Util-PartialFunctions.html#PartialFunction",
        "fct-type": "type",
        "title": "PartialFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "PartialFunction",
        "normalized": "",
        "package": "libcspm",
        "partial": "Partial Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:apply",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e a -\u003e b",
        "fct-source": "src/Util-PartialFunctions.html#apply",
        "fct-type": "function",
        "title": "apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "apply",
        "normalized": "PartialFunction a b-\u003ea-\u003eb",
        "package": "libcspm",
        "partial": "",
        "signature": "PartialFunction a b-\u003ea-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:applyRelation",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e a -\u003e [b]",
        "fct-source": "src/Util-PartialFunctions.html#applyRelation",
        "fct-type": "function",
        "title": "applyRelation"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "applyRelation",
        "normalized": "PartialFunction a b-\u003ea-\u003e[b]",
        "package": "libcspm",
        "partial": "Relation",
        "signature": "PartialFunction a b-\u003ea-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:composeFunctions",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction b c -\u003e PartialFunction a b -\u003e PartialFunction a c",
        "fct-source": "src/Util-PartialFunctions.html#composeFunctions",
        "fct-type": "function",
        "title": "composeFunctions"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "composeFunctions",
        "normalized": "PartialFunction a b-\u003ePartialFunction c a-\u003ePartialFunction c b",
        "package": "libcspm",
        "partial": "Functions",
        "signature": "PartialFunction b c-\u003ePartialFunction a b-\u003ePartialFunction a c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:functionDomain",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e [a]",
        "fct-source": "src/Util-PartialFunctions.html#functionDomain",
        "fct-type": "function",
        "title": "functionDomain"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "functionDomain",
        "normalized": "PartialFunction a b-\u003e[a]",
        "package": "libcspm",
        "partial": "Domain",
        "signature": "PartialFunction a b-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:functionImage",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e [b]",
        "fct-source": "src/Util-PartialFunctions.html#functionImage",
        "fct-type": "function",
        "title": "functionImage"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "functionImage",
        "normalized": "PartialFunction a b-\u003e[b]",
        "package": "libcspm",
        "partial": "Image",
        "signature": "PartialFunction a b-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:identityFunction",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "[a] -\u003e PartialFunction a a",
        "fct-source": "src/Util-PartialFunctions.html#identityFunction",
        "fct-type": "function",
        "title": "identityFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "identityFunction",
        "normalized": "[a]-\u003ePartialFunction a a",
        "package": "libcspm",
        "partial": "Function",
        "signature": "[a]-\u003ePartialFunction a a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:invert",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e PartialFunction b a",
        "fct-source": "src/Util-PartialFunctions.html#invert",
        "fct-type": "function",
        "title": "invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "invert",
        "normalized": "PartialFunction a b-\u003ePartialFunction b a",
        "package": "libcspm",
        "partial": "",
        "signature": "PartialFunction a b-\u003ePartialFunction b a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:mapPF",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e [a] -\u003e [b]",
        "fct-source": "src/Util-PartialFunctions.html#mapPF",
        "fct-type": "function",
        "title": "mapPF"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "mapPF",
        "normalized": "PartialFunction a b-\u003e[a]-\u003e[b]",
        "package": "libcspm",
        "partial": "PF",
        "signature": "PartialFunction a b-\u003e[a]-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:removeEntry",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e a -\u003e PartialFunction a b",
        "fct-source": "src/Util-PartialFunctions.html#removeEntry",
        "fct-type": "function",
        "title": "removeEntry"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "removeEntry",
        "normalized": "PartialFunction a b-\u003ea-\u003ePartialFunction a b",
        "package": "libcspm",
        "partial": "Entry",
        "signature": "PartialFunction a b-\u003ea-\u003ePartialFunction a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:safeApply",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e a -\u003e Maybe b",
        "fct-source": "src/Util-PartialFunctions.html#safeApply",
        "fct-type": "function",
        "title": "safeApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "safeApply",
        "normalized": "PartialFunction a b-\u003ea-\u003eMaybe b",
        "package": "libcspm",
        "partial": "Apply",
        "signature": "PartialFunction a b-\u003ea-\u003eMaybe b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:safeMapPF",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e [a] -\u003e [b]",
        "fct-source": "src/Util-PartialFunctions.html#safeMapPF",
        "fct-type": "function",
        "title": "safeMapPF"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "safeMapPF",
        "normalized": "PartialFunction a b-\u003e[a]-\u003e[b]",
        "package": "libcspm",
        "partial": "Map PF",
        "signature": "PartialFunction a b-\u003e[a]-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PartialFunctions.html#v:updatePF",
      "description": {
        "fct-module": "Util.PartialFunctions",
        "fct-package": "libcspm",
        "fct-signature": "PartialFunction a b -\u003e a -\u003e b -\u003e PartialFunction a b",
        "fct-source": "src/Util-PartialFunctions.html#updatePF",
        "fct-type": "function",
        "title": "updatePF"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PartialFunctions",
        "module": "Util.PartialFunctions",
        "name": "updatePF",
        "normalized": "PartialFunction a b-\u003ea-\u003eb-\u003ePartialFunction a b",
        "package": "libcspm",
        "partial": "PF",
        "signature": "PartialFunction a b-\u003ea-\u003eb-\u003ePartialFunction a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#",
      "description": {
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-Precedence.html",
        "fct-type": "module",
        "title": "Precedence"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "Precedence",
        "normalized": "",
        "package": "libcspm",
        "partial": "Precedence",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#t:Associativity",
      "description": {
        "fct-descr": "\u003cp\u003eThe associativity of an operator\n\u003c/p\u003e",
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "data",
        "fct-source": "src/Util-Precedence.html#Associativity",
        "fct-type": "data",
        "title": "Associativity"
      },
      "index": {
        "description": "The associativity of an operator",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "Associativity",
        "normalized": "",
        "package": "libcspm",
        "partial": "Associativity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#t:Precedence",
      "description": {
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/Util-Precedence.html#Precedence",
        "fct-type": "class",
        "title": "Precedence"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "Precedence",
        "normalized": "",
        "package": "libcspm",
        "partial": "Precedence",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#v:AssocLeft",
      "description": {
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "AssocLeft",
        "fct-source": "src/Util-Precedence.html#Associativity",
        "fct-type": "function",
        "title": "AssocLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "AssocLeft",
        "normalized": "",
        "package": "libcspm",
        "partial": "Assoc Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#v:AssocNone",
      "description": {
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "AssocNone",
        "fct-source": "src/Util-Precedence.html#Associativity",
        "fct-type": "function",
        "title": "AssocNone"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "AssocNone",
        "normalized": "",
        "package": "libcspm",
        "partial": "Assoc None",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#v:AssocRight",
      "description": {
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "AssocRight",
        "fct-source": "src/Util-Precedence.html#Associativity",
        "fct-type": "function",
        "title": "AssocRight"
      },
      "index": {
        "description": "",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "AssocRight",
        "normalized": "",
        "package": "libcspm",
        "partial": "Assoc Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#v:associativity",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the associativity of the operator.\n\u003c/p\u003e",
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Associativity",
        "fct-source": "src/Util-Precedence.html#associativity",
        "fct-type": "method",
        "title": "associativity"
      },
      "index": {
        "description": "Returns the associativity of the operator",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "associativity",
        "normalized": "a-\u003eAssociativity",
        "package": "libcspm",
        "partial": "",
        "signature": "a-\u003eAssociativity"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#v:precedence",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the binding strength of the operator. Higher numbers bind more\n loosely.\n\u003c/p\u003e",
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Int",
        "fct-source": "src/Util-Precedence.html#precedence",
        "fct-type": "method",
        "title": "precedence"
      },
      "index": {
        "description": "Returns the binding strength of the operator Higher numbers bind more loosely",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "precedence",
        "normalized": "a-\u003eInt",
        "package": "libcspm",
        "partial": "",
        "signature": "a-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Precedence.html#v:sameOperator",
      "description": {
        "fct-descr": "\u003cp\u003eTrue if the two items are the same operator. This is used to decide\n when to paranthesise.\n\u003c/p\u003e",
        "fct-module": "Util.Precedence",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e a -\u003e Bool",
        "fct-source": "src/Util-Precedence.html#sameOperator",
        "fct-type": "method",
        "title": "sameOperator"
      },
      "index": {
        "description": "True if the two items are the same operator This is used to decide when to paranthesise",
        "hierarchy": "Util Precedence",
        "module": "Util.Precedence",
        "name": "sameOperator",
        "normalized": "a-\u003ea-\u003eBool",
        "package": "libcspm",
        "partial": "Operator",
        "signature": "a-\u003ea-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Prelude.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVarious miscellaneous functions utility functions.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Util.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-Prelude.html",
        "fct-type": "module",
        "title": "Prelude"
      },
      "index": {
        "description": "Various miscellaneous functions utility functions",
        "hierarchy": "Util Prelude",
        "module": "Util.Prelude",
        "name": "Prelude",
        "normalized": "",
        "package": "libcspm",
        "partial": "Prelude",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Prelude.html#v:cartProduct",
      "description": {
        "fct-descr": "\u003cp\u003eCompute the Cartesian product of a list of lists.\n\u003c/p\u003e",
        "fct-module": "Util.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "[[a]] -\u003e [[a]]",
        "fct-source": "src/Util-Prelude.html#cartProduct",
        "fct-type": "function",
        "title": "cartProduct"
      },
      "index": {
        "description": "Compute the Cartesian product of list of lists",
        "hierarchy": "Util Prelude",
        "module": "Util.Prelude",
        "name": "cartProduct",
        "normalized": "[[a]]-\u003e[[a]]",
        "package": "libcspm",
        "partial": "Product",
        "signature": "[[a]]-\u003e[[a]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Prelude.html#v:expandPathIO",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a file path, if the first character is a ~ then\n expands the ~ to the users' home directory.\n\u003c/p\u003e",
        "fct-module": "Util.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e IO String",
        "fct-source": "src/Util-Prelude.html#expandPathIO",
        "fct-type": "function",
        "title": "expandPathIO"
      },
      "index": {
        "description": "Given file path if the first character is then expands the to the users home directory",
        "hierarchy": "Util Prelude",
        "module": "Util.Prelude",
        "name": "expandPathIO",
        "normalized": "String-\u003eIO String",
        "package": "libcspm",
        "partial": "Path IO",
        "signature": "String-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Prelude.html#v:thenCmp",
      "description": {
        "fct-descr": "\u003cp\u003eGiven two orderings, returns the second if the first is \n \u003ccode\u003e\u003ca\u003eEQ\u003c/a\u003e\u003c/code\u003e and returns the first otherwise.\n\u003c/p\u003e",
        "fct-module": "Util.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "Ordering -\u003e Ordering -\u003e Ordering",
        "fct-source": "src/Util-Prelude.html#thenCmp",
        "fct-type": "function",
        "title": "thenCmp"
      },
      "index": {
        "description": "Given two orderings returns the second if the first is EQ and returns the first otherwise",
        "hierarchy": "Util Prelude",
        "module": "Util.Prelude",
        "name": "thenCmp",
        "normalized": "Ordering-\u003eOrdering-\u003eOrdering",
        "package": "libcspm",
        "partial": "Cmp",
        "signature": "Ordering-\u003eOrdering-\u003eOrdering"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-Prelude.html#v:trim",
      "description": {
        "fct-descr": "\u003cp\u003eRemove whitespace from the beginning and end of a string.\n\u003c/p\u003e",
        "fct-module": "Util.Prelude",
        "fct-package": "libcspm",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Util-Prelude.html#trim",
        "fct-type": "function",
        "title": "trim"
      },
      "index": {
        "description": "Remove whitespace from the beginning and end of string",
        "hierarchy": "Util Prelude",
        "module": "Util.Prelude",
        "name": "trim",
        "normalized": "String-\u003eString",
        "package": "libcspm",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#",
      "description": {
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "module",
        "fct-source": "src/Util-PrettyPrint.html",
        "fct-type": "module",
        "title": "PrettyPrint"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "PrettyPrint",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pretty Print",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#t:PrettyPrintable",
      "description": {
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "class",
        "fct-source": "src/Util-PrettyPrint.html#PrettyPrintable",
        "fct-type": "class",
        "title": "PrettyPrintable"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "PrettyPrintable",
        "normalized": "",
        "package": "libcspm",
        "partial": "Pretty Printable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:angles",
      "description": {
        "fct-descr": "\u003cp\u003eSurrounds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003e\u003ca\u003e\u003c\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003e\u003e\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Doc -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#angles",
        "fct-type": "function",
        "title": "angles"
      },
      "index": {
        "description": "Surrounds Doc with and",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "angles",
        "normalized": "Doc-\u003eDoc",
        "package": "libcspm",
        "partial": "",
        "signature": "Doc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:bars",
      "description": {
        "fct-descr": "\u003cp\u003eSurrounds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e with '|'.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Doc -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#bars",
        "fct-type": "function",
        "title": "bars"
      },
      "index": {
        "description": "Surrounds Doc with",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "bars",
        "normalized": "Doc-\u003eDoc",
        "package": "libcspm",
        "partial": "",
        "signature": "Doc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:commaSeparatedInt",
      "description": {
        "fct-descr": "\u003cp\u003ePretty prints an integer and separates it into groups of 3, separated by\n commas.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#commaSeparatedInt",
        "fct-type": "function",
        "title": "commaSeparatedInt"
      },
      "index": {
        "description": "Pretty prints an integer and separates it into groups of separated by commas",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "commaSeparatedInt",
        "normalized": "Int-\u003eDoc",
        "package": "libcspm",
        "partial": "Separated Int",
        "signature": "Int-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:dotSep",
      "description": {
        "fct-descr": "\u003cp\u003eSeparates a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es by \u003ccode\u003e\u003ca\u003e.\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "[Doc] -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#dotSep",
        "fct-type": "function",
        "title": "dotSep"
      },
      "index": {
        "description": "Separates list of Doc by",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "dotSep",
        "normalized": "[Doc]-\u003eDoc",
        "package": "libcspm",
        "partial": "Sep",
        "signature": "[Doc]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:list",
      "description": {
        "fct-descr": "\u003cp\u003eSeparates a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es by ','.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "[Doc] -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#list",
        "fct-type": "function",
        "title": "list"
      },
      "index": {
        "description": "Separates list of Doc by",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "list",
        "normalized": "[Doc]-\u003eDoc",
        "package": "libcspm",
        "partial": "",
        "signature": "[Doc]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:prettyPrint",
      "description": {
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "a -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#prettyPrint",
        "fct-type": "method",
        "title": "prettyPrint"
      },
      "index": {
        "description": "",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "prettyPrint",
        "normalized": "a-\u003eDoc",
        "package": "libcspm",
        "partial": "Print",
        "signature": "a-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:punctuateFront",
      "description": {
        "fct-descr": "\u003cp\u003eEquivalent to [d1, sep \u003ca/\u003e d2, sep \u003ca/\u003e d3, ...].\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Doc -\u003e [Doc] -\u003e [Doc]",
        "fct-source": "src/Util-PrettyPrint.html#punctuateFront",
        "fct-type": "function",
        "title": "punctuateFront"
      },
      "index": {
        "description": "Equivalent to d1 sep d2 sep d3",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "punctuateFront",
        "normalized": "Doc-\u003e[Doc]-\u003e[Doc]",
        "package": "libcspm",
        "partial": "Front",
        "signature": "Doc-\u003e[Doc]-\u003e[Doc]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:shortDouble",
      "description": {
        "fct-descr": "\u003cp\u003eShow a double \u003ccode\u003ed\u003c/code\u003e printing only \u003ccode\u003eplaces\u003c/code\u003e places after the decimal place.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e Double -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#shortDouble",
        "fct-type": "function",
        "title": "shortDouble"
      },
      "index": {
        "description": "Show double printing only places places after the decimal place",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "shortDouble",
        "normalized": "Int-\u003eDouble-\u003eDoc",
        "package": "libcspm",
        "partial": "Double",
        "signature": "Int-\u003eDouble-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:speakNth",
      "description": {
        "fct-descr": "\u003cp\u003eConverts a number into \u003ccode\u003e\u003ca\u003efirst\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003esecond\u003c/code\u003e etc.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#speakNth",
        "fct-type": "function",
        "title": "speakNth"
      },
      "index": {
        "description": "Converts number into first second etc",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "speakNth",
        "normalized": "Int-\u003eDoc",
        "package": "libcspm",
        "partial": "Nth",
        "signature": "Int-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:tabIndent",
      "description": {
        "fct-descr": "\u003cp\u003eIndent a document by \u003ccode\u003e\u003ca\u003etabWidth\u003c/a\u003e\u003c/code\u003e characters, on each line\n (uses \u003ccode\u003e\u003ca\u003enest\u003c/a\u003e\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Doc -\u003e Doc",
        "fct-source": "src/Util-PrettyPrint.html#tabIndent",
        "fct-type": "function",
        "title": "tabIndent"
      },
      "index": {
        "description": "Indent document by tabWidth characters on each line uses nest",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "tabIndent",
        "normalized": "Doc-\u003eDoc",
        "package": "libcspm",
        "partial": "Indent",
        "signature": "Doc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/libcspm/docs/Util-PrettyPrint.html#v:tabWidth",
      "description": {
        "fct-descr": "\u003cp\u003eThe width, in spaces, of a tab character.\n\u003c/p\u003e",
        "fct-module": "Util.PrettyPrint",
        "fct-package": "libcspm",
        "fct-signature": "Int",
        "fct-source": "src/Util-PrettyPrint.html#tabWidth",
        "fct-type": "function",
        "title": "tabWidth"
      },
      "index": {
        "description": "The width in spaces of tab character",
        "hierarchy": "Util PrettyPrint",
        "module": "Util.PrettyPrint",
        "name": "tabWidth",
        "normalized": "",
        "package": "libcspm",
        "partial": "Width",
        "signature": ""
      }
    }
  }
]