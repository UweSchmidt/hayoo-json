[
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-BluetileCommands.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a list of selected commands that can be made available using\n \u003ca\u003eXMonad.Hooks.ServerMode\u003c/a\u003e to allow external programs to control\n the window manager. Bluetile (\u003ca\u003ehttp://projects.haskell.org/bluetile/\u003c/a\u003e)\n uses this to enable its dock application to do things like changing\n workspaces and layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.BluetileCommands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-BluetileCommands.html",
        "fct-type": "module",
        "title": "BluetileCommands"
      },
      "index": {
        "description": "This is list of selected commands that can be made available using XMonad.Hooks.ServerMode to allow external programs to control the window manager Bluetile http projects.haskell.org bluetile uses this to enable its dock application to do things like changing workspaces and layouts",
        "hierarchy": "XMonad Actions BluetileCommands",
        "module": "XMonad.Actions.BluetileCommands",
        "name": "BluetileCommands",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bluetile Commands",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-BluetileCommands.html#v:bluetileCommands",
      "description": {
        "fct-module": "XMonad.Actions.BluetileCommands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [(String, X ())]",
        "fct-source": "src/XMonad-Actions-BluetileCommands.html#bluetileCommands",
        "fct-type": "function",
        "title": "bluetileCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions BluetileCommands",
        "module": "XMonad.Actions.BluetileCommands",
        "name": "bluetileCommands",
        "normalized": "X[(String,X())]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Commands",
        "signature": "X[(String,X())]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAllows you to run internal xmonad commands (X () actions) using\n a dmenu menu in addition to key bindings.  Requires dmenu and\n the Dmenu XMonad.Actions module.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-Commands.html",
        "fct-type": "module",
        "title": "Commands"
      },
      "index": {
        "description": "Allows you to run internal xmonad commands actions using dmenu menu in addition to key bindings Requires dmenu and the Dmenu XMonad.Actions module",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "Commands",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Commands",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#v:commandMap",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a \u003ccode\u003eData.Map.Map\u003c/code\u003e from \u003ccode\u003eString\u003c/code\u003es to xmonad actions from a\n   list of pairs.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, X ())] -\u003e Map String (X ())",
        "fct-source": "src/XMonad-Actions-Commands.html#commandMap",
        "fct-type": "function",
        "title": "commandMap"
      },
      "index": {
        "description": "Create Data.Map.Map from String to xmonad actions from list of pairs",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "commandMap",
        "normalized": "[(String,X())]-\u003eMap String(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Map",
        "signature": "[(String,X())]-\u003eMap String(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#v:defaultCommands",
      "description": {
        "fct-descr": "\u003cp\u003eA nice pre-defined list of commands.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [(String, X ())]",
        "fct-source": "src/XMonad-Actions-Commands.html#defaultCommands",
        "fct-type": "function",
        "title": "defaultCommands"
      },
      "index": {
        "description": "nice pre-defined list of commands",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "defaultCommands",
        "normalized": "X[(String,X())]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Commands",
        "signature": "X[(String,X())]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#v:runCommand",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a list of command/action pairs, prompt the user to choose a\n   command and return the corresponding action.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, X ())] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Commands.html#runCommand",
        "fct-type": "function",
        "title": "runCommand"
      },
      "index": {
        "description": "Given list of command action pairs prompt the user to choose command and return the corresponding action",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "runCommand",
        "normalized": "[(String,X())]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Command",
        "signature": "[(String,X())]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#v:runCommand-39-",
      "description": {
        "fct-descr": "\u003cp\u003eGiven the name of a command from \u003ccode\u003e\u003ca\u003edefaultCommands\u003c/a\u003e\u003c/code\u003e, return the\n   corresponding action (or the null action if the command is not\n   found).\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Commands.html#runCommand%27",
        "fct-type": "function",
        "title": "runCommand'"
      },
      "index": {
        "description": "Given the name of command from defaultCommands return the corresponding action or the null action if the command is not found",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "runCommand'",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Command'",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#v:screenCommands",
      "description": {
        "fct-descr": "\u003cp\u003eGenerate a list of commands dealing with multiple screens.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, X ())]",
        "fct-source": "src/XMonad-Actions-Commands.html#screenCommands",
        "fct-type": "function",
        "title": "screenCommands"
      },
      "index": {
        "description": "Generate list of commands dealing with multiple screens",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "screenCommands",
        "normalized": "[(String,X())]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Commands",
        "signature": "[(String,X())]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Commands.html#v:workspaceCommands",
      "description": {
        "fct-descr": "\u003cp\u003eGenerate a list of commands to switch to/send windows to workspaces.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Commands",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [(String, X ())]",
        "fct-source": "src/XMonad-Actions-Commands.html#workspaceCommands",
        "fct-type": "function",
        "title": "workspaceCommands"
      },
      "index": {
        "description": "Generate list of commands to switch to send windows to workspaces",
        "hierarchy": "XMonad Actions Commands",
        "module": "XMonad.Actions.Commands",
        "name": "workspaceCommands",
        "normalized": "X[(String,X())]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Commands",
        "signature": "X[(String,X())]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-ConstrainedResize.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLets you constrain the aspect ratio of a floating\n window (by, say, holding shift while you resize).\n\u003c/p\u003e\u003cp\u003eUseful for making a nice circular XClock window.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.ConstrainedResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-ConstrainedResize.html",
        "fct-type": "module",
        "title": "ConstrainedResize"
      },
      "index": {
        "description": "Lets you constrain the aspect ratio of floating window by say holding shift while you resize Useful for making nice circular XClock window",
        "hierarchy": "XMonad Actions ConstrainedResize",
        "module": "XMonad.Actions.ConstrainedResize",
        "name": "ConstrainedResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Constrained Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-ConstrainedResize.html#v:mouseResizeWindow",
      "description": {
        "fct-descr": "\u003cp\u003eResize (floating) window with optional aspect ratio constraints.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.ConstrainedResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-ConstrainedResize.html#mouseResizeWindow",
        "fct-type": "function",
        "title": "mouseResizeWindow"
      },
      "index": {
        "description": "Resize floating window with optional aspect ratio constraints",
        "hierarchy": "XMonad Actions ConstrainedResize",
        "module": "XMonad.Actions.ConstrainedResize",
        "name": "mouseResizeWindow",
        "normalized": "Window-\u003eBool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Window",
        "signature": "Window-\u003eBool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides bindings to duplicate a window on multiple workspaces,\n providing dwm-like tagging functionality.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-CopyWindow.html",
        "fct-type": "module",
        "title": "CopyWindow"
      },
      "index": {
        "description": "Provides bindings to duplicate window on multiple workspaces providing dwm-like tagging functionality",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "CopyWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Copy Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:copy",
      "description": {
        "fct-descr": "\u003cp\u003eCopy the focused window to a workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "i -\u003e StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#copy",
        "fct-type": "function",
        "title": "copy"
      },
      "index": {
        "description": "Copy the focused window to workspace",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "copy",
        "normalized": "a-\u003eStackSet a b c d e-\u003eStackSet a b c d e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "i-\u003eStackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:copyToAll",
      "description": {
        "fct-descr": "\u003cp\u003eCopy the focused window to all workspaces.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#copyToAll",
        "fct-type": "function",
        "title": "copyToAll"
      },
      "index": {
        "description": "Copy the focused window to all workspaces",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "copyToAll",
        "normalized": "StackSet a b c d e-\u003eStackSet a b c d e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To All",
        "signature": "StackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:copyWindow",
      "description": {
        "fct-descr": "\u003cp\u003eCopy an arbitrary window to a workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e i -\u003e StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#copyWindow",
        "fct-type": "function",
        "title": "copyWindow"
      },
      "index": {
        "description": "Copy an arbitrary window to workspace",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "copyWindow",
        "normalized": "a-\u003eb-\u003eStackSet b c a d e-\u003eStackSet b c a d e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "a-\u003ei-\u003eStackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:kill1",
      "description": {
        "fct-descr": "\u003cp\u003eRemove the focused window from this workspace.  If it's present in no\n other workspace, then kill it instead. If we do kill it, we'll get a\n delete notify back from X.\n\u003c/p\u003e\u003cp\u003eThere are two ways to delete a window. Either just kill it, or if it\n supports the delete protocol, send a delete event (e.g. firefox).\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#kill1",
        "fct-type": "function",
        "title": "kill1"
      },
      "index": {
        "description": "Remove the focused window from this workspace If it present in no other workspace then kill it instead If we do kill it we ll get delete notify back from There are two ways to delete window Either just kill it or if it supports the delete protocol send delete event e.g firefox",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "kill1",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:killAllOtherCopies",
      "description": {
        "fct-descr": "\u003cp\u003eKill all other copies of focused window (if they're present).\n 'All other' means here 'copies which are not on the current workspace'.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#killAllOtherCopies",
        "fct-type": "function",
        "title": "killAllOtherCopies"
      },
      "index": {
        "description": "Kill all other copies of focused window if they re present All other means here copies which are not on the current workspace",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "killAllOtherCopies",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All Other Copies",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:runOrCopy",
      "description": {
        "fct-descr": "\u003cp\u003erunOrCopy will run the provided shell command unless it can\n  find a specified window in which case it will copy the window to\n  the current workspace.  Similar to (i.e., stolen from) \u003ca\u003eXMonad.Actions.WindowGo\u003c/a\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#runOrCopy",
        "fct-type": "function",
        "title": "runOrCopy"
      },
      "index": {
        "description": "runOrCopy will run the provided shell command unless it can find specified window in which case it will copy the window to the current workspace Similar to i.e stolen from XMonad.Actions.WindowGo",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "runOrCopy",
        "normalized": "String-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Copy",
        "signature": "String-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CopyWindow.html#v:wsContainingCopies",
      "description": {
        "fct-descr": "\u003cp\u003eA list of hidden workspaces containing a copy of the focused window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CopyWindow",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [WorkspaceId]",
        "fct-source": "src/XMonad-Actions-CopyWindow.html#wsContainingCopies",
        "fct-type": "function",
        "title": "wsContainingCopies"
      },
      "index": {
        "description": "list of hidden workspaces containing copy of the focused window",
        "hierarchy": "XMonad Actions CopyWindow",
        "module": "XMonad.Actions.CopyWindow",
        "name": "wsContainingCopies",
        "normalized": "X[WorkspaceId]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Containing Copies",
        "signature": "X[WorkspaceId]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleRecentWS.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides bindings to cycle through most recently used workspaces\n with repeated presses of a single key (as long as modifier key is\n held down). This is similar to how many window managers handle\n window switching.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.CycleRecentWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-CycleRecentWS.html",
        "fct-type": "module",
        "title": "CycleRecentWS"
      },
      "index": {
        "description": "Provides bindings to cycle through most recently used workspaces with repeated presses of single key as long as modifier key is held down This is similar to how many window managers handle window switching",
        "hierarchy": "XMonad Actions CycleRecentWS",
        "module": "XMonad.Actions.CycleRecentWS",
        "name": "CycleRecentWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cycle Recent WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleRecentWS.html#v:cycleRecentWS",
      "description": {
        "fct-descr": "\u003cp\u003eCycle through most recent workspaces with repeated presses of a key, while\n   a modifier key is held down. The recency of workspaces previewed while browsing\n   to the target workspace is not affected. That way a stack of most recently used\n   workspaces is maintained, similarly to how many window managers handle window\n   switching. For best effects use the same modkey+key combination as the one used\n   to invoke this action.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleRecentWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[KeySym]-\u003e KeySym-\u003e KeySym-\u003e X ()",
        "fct-type": "function",
        "title": "cycleRecentWS"
      },
      "index": {
        "description": "Cycle through most recent workspaces with repeated presses of key while modifier key is held down The recency of workspaces previewed while browsing to the target workspace is not affected That way stack of most recently used workspaces is maintained similarly to how many window managers handle window switching For best effects use the same modkey key combination as the one used to invoke this action",
        "hierarchy": "XMonad Actions CycleRecentWS",
        "module": "XMonad.Actions.CycleRecentWS",
        "name": "cycleRecentWS",
        "normalized": "[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Recent WS",
        "signature": "[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleRecentWS.html#v:cycleWindowSets",
      "description": {
        "fct-descr": "\u003cp\u003eCycle through a finite list of WindowSets with repeated presses of a key, while\n   a modifier key is held down. For best effects use the same modkey+key combination\n   as the one used to invoke this action.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleRecentWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(WindowSet -\u003e [WindowSet])-\u003e [KeySym]-\u003e KeySym-\u003e KeySym-\u003e X ()",
        "fct-type": "function",
        "title": "cycleWindowSets"
      },
      "index": {
        "description": "Cycle through finite list of WindowSets with repeated presses of key while modifier key is held down For best effects use the same modkey key combination as the one used to invoke this action",
        "hierarchy": "XMonad Actions CycleRecentWS",
        "module": "XMonad.Actions.CycleRecentWS",
        "name": "cycleWindowSets",
        "normalized": "(WindowSet-\u003e[WindowSet])-\u003e[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Sets",
        "signature": "(WindowSet-\u003e[WindowSet])-\u003e[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleSelectedLayouts.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module allows to cycle through the given subset of layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.CycleSelectedLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-CycleSelectedLayouts.html",
        "fct-type": "module",
        "title": "CycleSelectedLayouts"
      },
      "index": {
        "description": "This module allows to cycle through the given subset of layouts",
        "hierarchy": "XMonad Actions CycleSelectedLayouts",
        "module": "XMonad.Actions.CycleSelectedLayouts",
        "name": "CycleSelectedLayouts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cycle Selected Layouts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleSelectedLayouts.html#v:cycleThroughLayouts",
      "description": {
        "fct-descr": "\u003cp\u003eIf the current layout is in the list, cycle to the next layout. Otherwise,\n   apply the first layout from list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleSelectedLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CycleSelectedLayouts.html#cycleThroughLayouts",
        "fct-type": "function",
        "title": "cycleThroughLayouts"
      },
      "index": {
        "description": "If the current layout is in the list cycle to the next layout Otherwise apply the first layout from list",
        "hierarchy": "XMonad Actions CycleSelectedLayouts",
        "module": "XMonad.Actions.CycleSelectedLayouts",
        "name": "cycleThroughLayouts",
        "normalized": "[String]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Through Layouts",
        "signature": "[String]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides bindings to cycle forward or backward through the list of\n workspaces, to move windows between workspaces, and to cycle\n between screens.  More general combinators provide ways to cycle\n through workspaces in various orders, to only cycle through some\n subset of workspaces, and to cycle by more than one workspace at a\n time.\n\u003c/p\u003e\u003cp\u003eNote that this module now subsumes the functionality of the former\n \u003ccode\u003eXMonad.Actions.RotView\u003c/code\u003e.  Former users of \u003ccode\u003erotView\u003c/code\u003e can simply replace\n \u003ccode\u003erotView True\u003c/code\u003e with \u003ccode\u003emoveTo Next NonEmptyWS\u003c/code\u003e, and so on.\n\u003c/p\u003e\u003cp\u003eIf you want to exactly replicate the action of \u003ccode\u003erotView\u003c/code\u003e (cycling\n through workspace in order lexicographically by tag, instead of in\n the order specified in the config), it can be implemented as:\n\u003c/p\u003e\u003cpre\u003e rotView b  = do t \u003c- findWorkspace getSortByTag (bToDir b) NonEmptyWS 1\n                 windows . greedyView $ t\n   where bToDir True  = Next\n         bToDir False = Prev\n\u003c/pre\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-CycleWS.html",
        "fct-type": "module",
        "title": "CycleWS"
      },
      "index": {
        "description": "Provides bindings to cycle forward or backward through the list of workspaces to move windows between workspaces and to cycle between screens More general combinators provide ways to cycle through workspaces in various orders to only cycle through some subset of workspaces and to cycle by more than one workspace at time Note that this module now subsumes the functionality of the former XMonad.Actions.RotView Former users of rotView can simply replace rotView True with moveTo Next NonEmptyWS and so on If you want to exactly replicate the action of rotView cycling through workspace in order lexicographically by tag instead of in the order specified in the config it can be implemented as rotView do findWorkspace getSortByTag bToDir NonEmptyWS windows greedyView where bToDir True Next bToDir False Prev",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "CycleWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cycle WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#t:Direction1D",
      "description": {
        "fct-descr": "\u003cp\u003eOne-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "data",
        "title": "Direction1D"
      },
      "index": {
        "description": "One-dimensional directions",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "Direction1D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#t:WSType",
      "description": {
        "fct-descr": "\u003cp\u003eWhat type of workspaces should be included in the cycle?\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "data",
        "title": "WSType"
      },
      "index": {
        "description": "What type of workspaces should be included in the cycle",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "WSType",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:AnyWS",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through all workspaces\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "AnyWS",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "AnyWS"
      },
      "index": {
        "description": "cycle through all workspaces",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "AnyWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Any WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:EmptyWS",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through empty workspaces\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "EmptyWS",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "EmptyWS"
      },
      "index": {
        "description": "cycle through empty workspaces",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "EmptyWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Empty WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:HiddenNonEmptyWS",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through non-empty non-visible workspaces\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HiddenNonEmptyWS",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "HiddenNonEmptyWS"
      },
      "index": {
        "description": "cycle through non-empty non-visible workspaces",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "HiddenNonEmptyWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hidden Non Empty WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:HiddenWS",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through non-visible workspaces\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HiddenWS",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "HiddenWS"
      },
      "index": {
        "description": "cycle through non-visible workspaces",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "HiddenWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hidden WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:Next",
      "description": {
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Next",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Next"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "Next",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:NonEmptyWS",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through non-empty workspaces\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NonEmptyWS",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "NonEmptyWS"
      },
      "index": {
        "description": "cycle through non-empty workspaces",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "NonEmptyWS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Non Empty WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:Prev",
      "description": {
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Prev",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Prev"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "Prev",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:WSIs",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through workspaces satisfying\n   an arbitrary predicate\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WSIs (X (WindowSpace -\u003e Bool))",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "WSIs"
      },
      "index": {
        "description": "cycle through workspaces satisfying an arbitrary predicate",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "WSIs",
        "normalized": "WSIs(X(WindowSpace-\u003eBool))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSIs",
        "signature": "WSIs(X(WindowSpace-\u003eBool))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:WSTagGroup",
      "description": {
        "fct-descr": "\u003cp\u003ecycle through workspaces in the same group, the\n   group name is all characters up to the first\n   separator character or the end of the tag\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WSTagGroup Char",
        "fct-source": "src/XMonad-Actions-CycleWS.html#WSType",
        "fct-type": "function",
        "title": "WSTagGroup"
      },
      "index": {
        "description": "cycle through workspaces in the same group the group name is all characters up to the first separator character or the end of the tag",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "WSTagGroup",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSTag Group",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:doTo",
      "description": {
        "fct-descr": "\u003cp\u003eUsing the given sort, find the next workspace in the given\n direction of the given type, and perform the given action on it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X WorkspaceSort -\u003e (WorkspaceId -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#doTo",
        "fct-type": "function",
        "title": "doTo"
      },
      "index": {
        "description": "Using the given sort find the next workspace in the given direction of the given type and perform the given action on it",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "doTo",
        "normalized": "Direction D-\u003eWSType-\u003eX WorkspaceSort-\u003e(WorkspaceId-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eWSType-\u003eX WorkspaceSort-\u003e(WorkspaceId-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:findWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a function \u003ccode\u003es\u003c/code\u003e to sort workspaces, a direction \u003ccode\u003edir\u003c/code\u003e, a\n   predicate \u003ccode\u003ep\u003c/code\u003e on workspaces, and an integer \u003ccode\u003en\u003c/code\u003e, find the tag of\n   the workspace which is \u003ccode\u003en\u003c/code\u003e away from the current workspace in\n   direction \u003ccode\u003edir\u003c/code\u003e (wrapping around if necessary), among those\n   workspaces, sorted by \u003ccode\u003es\u003c/code\u003e, which satisfy \u003ccode\u003ep\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eFor some useful workspace sorting functions, see\n   \u003ca\u003eXMonad.Util.WorkspaceCompare\u003c/a\u003e.\n\u003c/p\u003e\u003cp\u003eFor ideas of what to do with a workspace tag once obtained, note\n   that \u003ccode\u003e\u003ca\u003emoveTo\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eshiftTo\u003c/a\u003e\u003c/code\u003e are implemented by applying \u003ccode\u003e(\u003e\u003e=\n   (windows . greedyView))\u003c/code\u003e and \u003ccode\u003e(\u003e\u003e= (windows . shift))\u003c/code\u003e, respectively,\n   to the output of \u003ccode\u003e\u003ca\u003efindWorkspace\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceSort -\u003e Direction1D -\u003e WSType -\u003e Int -\u003e X WorkspaceId",
        "fct-source": "src/XMonad-Actions-CycleWS.html#findWorkspace",
        "fct-type": "function",
        "title": "findWorkspace"
      },
      "index": {
        "description": "Given function to sort workspaces direction dir predicate on workspaces and an integer find the tag of the workspace which is away from the current workspace in direction dir wrapping around if necessary among those workspaces sorted by which satisfy For some useful workspace sorting functions see XMonad.Util.WorkspaceCompare For ideas of what to do with workspace tag once obtained note that moveTo and shiftTo are implemented by applying windows greedyView and windows shift respectively to the output of findWorkspace",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "findWorkspace",
        "normalized": "X WorkspaceSort-\u003eDirection D-\u003eWSType-\u003eInt-\u003eX WorkspaceId",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "X WorkspaceSort-\u003eDirection D-\u003eWSType-\u003eInt-\u003eX WorkspaceId"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:moveTo",
      "description": {
        "fct-descr": "\u003cp\u003eView the next workspace in the given direction that satisfies\n   the given condition.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#moveTo",
        "fct-type": "function",
        "title": "moveTo"
      },
      "index": {
        "description": "View the next workspace in the given direction that satisfies the given condition",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "moveTo",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:nextScreen",
      "description": {
        "fct-descr": "\u003cp\u003eView next screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#nextScreen",
        "fct-type": "function",
        "title": "nextScreen"
      },
      "index": {
        "description": "View next screen",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "nextScreen",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:nextWS",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to the next workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#nextWS",
        "fct-type": "function",
        "title": "nextWS"
      },
      "index": {
        "description": "Switch to the next workspace",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "nextWS",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WS",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:prevScreen",
      "description": {
        "fct-descr": "\u003cp\u003eView prev screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#prevScreen",
        "fct-type": "function",
        "title": "prevScreen"
      },
      "index": {
        "description": "View prev screen",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "prevScreen",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:prevWS",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to the previous workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#prevWS",
        "fct-type": "function",
        "title": "prevWS"
      },
      "index": {
        "description": "Switch to the previous workspace",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "prevWS",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WS",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:shiftNextScreen",
      "description": {
        "fct-descr": "\u003cp\u003eMove focused window to workspace on next screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#shiftNextScreen",
        "fct-type": "function",
        "title": "shiftNextScreen"
      },
      "index": {
        "description": "Move focused window to workspace on next screen",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "shiftNextScreen",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Screen",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:shiftPrevScreen",
      "description": {
        "fct-descr": "\u003cp\u003eMove focused window to workspace on prev screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#shiftPrevScreen",
        "fct-type": "function",
        "title": "shiftPrevScreen"
      },
      "index": {
        "description": "Move focused window to workspace on prev screen",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "shiftPrevScreen",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev Screen",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:shiftTo",
      "description": {
        "fct-descr": "\u003cp\u003eMove the currently focused window to the next workspace in the\n   given direction that satisfies the given condition.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#shiftTo",
        "fct-type": "function",
        "title": "shiftTo"
      },
      "index": {
        "description": "Move the currently focused window to the next workspace in the given direction that satisfies the given condition",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "shiftTo",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:shiftToNext",
      "description": {
        "fct-descr": "\u003cp\u003eMove the focused window to the next workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#shiftToNext",
        "fct-type": "function",
        "title": "shiftToNext"
      },
      "index": {
        "description": "Move the focused window to the next workspace",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "shiftToNext",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Next",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:shiftToPrev",
      "description": {
        "fct-descr": "\u003cp\u003eMove the focused window to the previous workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#shiftToPrev",
        "fct-type": "function",
        "title": "shiftToPrev"
      },
      "index": {
        "description": "Move the focused window to the previous workspace",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "shiftToPrev",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Prev",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:skipTags",
      "description": {
        "fct-descr": "\u003cp\u003eList difference (\u003ccode\u003e\\\\\u003c/code\u003e) for workspaces and tags. Removes workspaces\n matching listed tags from the given workspace list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Workspace i l a] -\u003e [i] -\u003e [Workspace i l a]",
        "fct-source": "src/XMonad-Actions-CycleWS.html#skipTags",
        "fct-type": "function",
        "title": "skipTags"
      },
      "index": {
        "description": "List difference for workspaces and tags Removes workspaces matching listed tags from the given workspace list",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "skipTags",
        "normalized": "[Workspace a b c]-\u003e[a]-\u003e[Workspace a b c]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tags",
        "signature": "[Workspace i l a]-\u003e[i]-\u003e[Workspace i l a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:swapNextScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSwap current screen with next screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#swapNextScreen",
        "fct-type": "function",
        "title": "swapNextScreen"
      },
      "index": {
        "description": "Swap current screen with next screen",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "swapNextScreen",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Screen",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:swapPrevScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSwap current screen with previous screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#swapPrevScreen",
        "fct-type": "function",
        "title": "swapPrevScreen"
      },
      "index": {
        "description": "Swap current screen with previous screen",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "swapPrevScreen",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev Screen",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:toggleOrDoSkip",
      "description": {
        "fct-descr": "\u003cp\u003eAllows ignoring listed workspace tags (such as scratchpad's \"NSP\") while\n finding the previously displayed workspace, or choice of different actions,\n like view, shift, etc.  For example:\n\u003c/p\u003e\u003cpre\u003e import qualified XMonad.StackSet as W\n import XMonad.Actions.CycleWS\n\n -- toggleOrView for people who prefer view to greedyView\n toggleOrView' = toggleOrDoSkip [] W.view\n\n -- toggleOrView ignoring scratchpad and named scratchpad workspace\n toggleOrViewNoSP = toggleOrDoSkip [\"NSP\"] W.greedyView\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[WorkspaceId] -\u003e (WorkspaceId -\u003e WindowSet -\u003e WindowSet) -\u003e WorkspaceId -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#toggleOrDoSkip",
        "fct-type": "function",
        "title": "toggleOrDoSkip"
      },
      "index": {
        "description": "Allows ignoring listed workspace tags such as scratchpad NSP while finding the previously displayed workspace or choice of different actions like view shift etc For example import qualified XMonad.StackSet as import XMonad.Actions.CycleWS toggleOrView for people who prefer view to greedyView toggleOrView toggleOrDoSkip W.view toggleOrView ignoring scratchpad and named scratchpad workspace toggleOrViewNoSP toggleOrDoSkip NSP W.greedyView",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "toggleOrDoSkip",
        "normalized": "[WorkspaceId]-\u003e(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eWorkspaceId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Do Skip",
        "signature": "[WorkspaceId]-\u003e(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eWorkspaceId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:toggleOrView",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egreedyView\u003c/a\u003e\u003c/code\u003e a workspace, or if already there, view\n the previously displayed workspace ala weechat. Change \u003ccode\u003egreedyView\u003c/code\u003e to\n \u003ccode\u003etoggleOrView\u003c/code\u003e in your workspace bindings as in the \u003ccode\u003e\u003ca\u003eview\u003c/a\u003e\u003c/code\u003e\n faq at \u003ca\u003ehttp://haskell.org/haskellwiki/Xmonad/Frequently_asked_questions\u003c/a\u003e.\n For more flexibility see \u003ccode\u003e\u003ca\u003etoggleOrDoSkip\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#toggleOrView",
        "fct-type": "function",
        "title": "toggleOrView"
      },
      "index": {
        "description": "greedyView workspace or if already there view the previously displayed workspace ala weechat Change greedyView to toggleOrView in your workspace bindings as in the view faq at http haskell.org haskellwiki Xmonad Frequently asked questions For more flexibility see toggleOrDoSkip",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "toggleOrView",
        "normalized": "WorkspaceId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or View",
        "signature": "WorkspaceId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWS.html#v:toggleWS",
      "description": {
        "fct-descr": "\u003cp\u003eToggle to the workspace displayed previously.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWS",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWS.html#toggleWS",
        "fct-type": "function",
        "title": "toggleWS"
      },
      "index": {
        "description": "Toggle to the workspace displayed previously",
        "hierarchy": "XMonad Actions CycleWS",
        "module": "XMonad.Actions.CycleWS",
        "name": "toggleWS",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WS",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides bindings to cycle windows up or down on the current workspace\n stack while maintaining focus in place.\n\u003c/p\u003e\u003cp\u003eBindings are available to:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Cycle nearby or nth windows into the focused frame\n\u003c/li\u003e\u003cli\u003e Cycle a window halfway around the stack\n\u003c/li\u003e\u003cli\u003e Cycle windows through the focused position.\n\u003c/li\u003e\u003cli\u003e Cycle unfocused windows.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThese bindings are especially useful with layouts that hide some of\n the windows in the stack, such as Full, \u003ca\u003eXMonad.Layout.TwoPane\u003c/a\u003e or\n when using \u003ca\u003eXMonad.Layout.LimitWindows\u003c/a\u003e to only show three or four\n panes. See also \u003ca\u003eXMonad.Actions.RotSlaves\u003c/a\u003e for related actions.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-CycleWindows.html",
        "fct-type": "module",
        "title": "CycleWindows"
      },
      "index": {
        "description": "Provides bindings to cycle windows up or down on the current workspace stack while maintaining focus in place Bindings are available to Cycle nearby or nth windows into the focused frame Cycle window halfway around the stack Cycle windows through the focused position Cycle unfocused windows These bindings are especially useful with layouts that hide some of the windows in the stack such as Full XMonad.Layout.TwoPane or when using XMonad.Layout.LimitWindows to only show three or four panes See also XMonad.Actions.RotSlaves for related actions",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "CycleWindows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cycle Windows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:cycleRecentWindows",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[KeySym]-\u003e KeySym-\u003e KeySym-\u003e X ()",
        "fct-type": "function",
        "title": "cycleRecentWindows"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "cycleRecentWindows",
        "normalized": "[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Recent Windows",
        "signature": "[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:cycleStacks-39-",
      "description": {
        "fct-descr": "\u003cp\u003eCycle through a \u003cem\u003efinite\u003c/em\u003e list of window stacks with repeated presses\n   of a key while a modifier key is held down. For best results use the same\n   mod key + key combination as the one used to invoke the \"bring from below\"\n   action. You could use cycleStacks' with a different stack permutations\n   function to, for example, cycle from one below to one above to two below,\n   etc. instead of in order. You are responsible for having it generate a\n   finite list, though, or xmonad may hang seeking its length.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack Window -\u003e [Stack Window])-\u003e [KeySym]-\u003e KeySym-\u003e KeySym-\u003e X ()",
        "fct-type": "function",
        "title": "cycleStacks'"
      },
      "index": {
        "description": "Cycle through finite list of window stacks with repeated presses of key while modifier key is held down For best results use the same mod key key combination as the one used to invoke the bring from below action You could use cycleStacks with different stack permutations function to for example cycle from one below to one above to two below etc instead of in order You are responsible for having it generate finite list though or xmonad may hang seeking its length",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "cycleStacks'",
        "normalized": "(Stack Window-\u003e[Stack Window])-\u003e[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Stacks'",
        "signature": "(Stack Window-\u003e[Stack Window])-\u003e[KeySym]-\u003eKeySym-\u003eKeySym-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotDown",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotDown",
        "fct-type": "function",
        "title": "rotDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotDown",
        "normalized": "[a]-\u003e[a]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Down",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotFocused-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThe focused rotation on a stack.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([a] -\u003e [a]) -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotFocused%27",
        "fct-type": "function",
        "title": "rotFocused'"
      },
      "index": {
        "description": "The focused rotation on stack",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotFocused'",
        "normalized": "([a]-\u003e[a])-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused'",
        "signature": "([a]-\u003e[a])-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotFocusedDown",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotFocusedDown",
        "fct-type": "function",
        "title": "rotFocusedDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotFocusedDown",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused Down",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotFocusedUp",
      "description": {
        "fct-descr": "\u003cp\u003eRotate windows through the focused frame, excluding the \"next\" window.\n With, e.g. TwoPane, this allows cycling windows through either the\n master or slave pane, without changing the other frame. When the master\n is focused, the window below is skipped, when a non-master window is\n focused, the master is skipped.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotFocusedUp",
        "fct-type": "function",
        "title": "rotFocusedUp"
      },
      "index": {
        "description": "Rotate windows through the focused frame excluding the next window With e.g TwoPane this allows cycling windows through either the master or slave pane without changing the other frame When the master is focused the window below is skipped when non-master window is focused the master is skipped",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotFocusedUp",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused Up",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotOpposite",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotOpposite",
        "fct-type": "function",
        "title": "rotOpposite"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotOpposite",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Opposite",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotOpposite-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThe opposite rotation on a Stack.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotOpposite%27",
        "fct-type": "function",
        "title": "rotOpposite'"
      },
      "index": {
        "description": "The opposite rotation on Stack",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotOpposite'",
        "normalized": "Stack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Opposite'",
        "signature": "Stack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotUnfocused-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThe unfocused rotation on a stack.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([a] -\u003e [a]) -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotUnfocused%27",
        "fct-type": "function",
        "title": "rotUnfocused'"
      },
      "index": {
        "description": "The unfocused rotation on stack",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotUnfocused'",
        "normalized": "([a]-\u003e[a])-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Unfocused'",
        "signature": "([a]-\u003e[a])-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotUnfocusedDown",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotUnfocusedDown",
        "fct-type": "function",
        "title": "rotUnfocusedDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotUnfocusedDown",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Unfocused Down",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotUnfocusedUp",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotUnfocusedUp",
        "fct-type": "function",
        "title": "rotUnfocusedUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotUnfocusedUp",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Unfocused Up",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:rotUp",
      "description": {
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#rotUp",
        "fct-type": "function",
        "title": "rotUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "rotUp",
        "normalized": "[a]-\u003e[a]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Up",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-CycleWindows.html#v:shiftToFocus-39-",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a stack element and a stack, shift or insert the element (window)\n   at the currently focused position.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.CycleWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-CycleWindows.html#shiftToFocus%27",
        "fct-type": "function",
        "title": "shiftToFocus'"
      },
      "index": {
        "description": "Given stack element and stack shift or insert the element window at the currently focused position",
        "hierarchy": "XMonad Actions CycleWindows",
        "module": "XMonad.Actions.CycleWindows",
        "name": "shiftToFocus'",
        "normalized": "a-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Focus'",
        "signature": "a-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DeManage.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides a method to cease management of a window\n without unmapping it.  This is especially useful for applications\n like kicker and gnome-panel.  See also \u003ca\u003eXMonad.Hooks.ManageDocks\u003c/a\u003e for\n more a more automated solution.\n\u003c/p\u003e\u003cp\u003eTo make a panel display correctly with xmonad:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Determine the pixel size of the panel, add that value to\n    \u003ccode\u003eXMonad.Core.XConfig.defaultGaps\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e Launch the panel\n\u003c/li\u003e\u003cli\u003e Give the panel window focus, then press \u003ccode\u003emod-d\u003c/code\u003e (or whatever key\n    you have bound \u003ccode\u003e\u003ca\u003edemanage\u003c/a\u003e\u003c/code\u003e to)\n\u003c/li\u003e\u003cli\u003e Convince the panel to move/resize to the correct location.  Changing the\n  panel's position setting several times seems to work.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.DeManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-DeManage.html",
        "fct-type": "module",
        "title": "DeManage"
      },
      "index": {
        "description": "This module provides method to cease management of window without unmapping it This is especially useful for applications like kicker and gnome-panel See also XMonad.Hooks.ManageDocks for more more automated solution To make panel display correctly with xmonad Determine the pixel size of the panel add that value to XMonad.Core.XConfig.defaultGaps Launch the panel Give the panel window focus then press mod-d or whatever key you have bound demanage to Convince the panel to move resize to the correct location Changing the panel position setting several times seems to work",
        "hierarchy": "XMonad Actions DeManage",
        "module": "XMonad.Actions.DeManage",
        "name": "DeManage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "De Manage",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DeManage.html#v:demanage",
      "description": {
        "fct-descr": "\u003cp\u003eStop managing the currently focused window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DeManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DeManage.html#demanage",
        "fct-type": "function",
        "title": "demanage"
      },
      "index": {
        "description": "Stop managing the currently focused window",
        "hierarchy": "XMonad Actions DeManage",
        "module": "XMonad.Actions.DeManage",
        "name": "demanage",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DwmPromote.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDwm-like swap function for xmonad.\n\u003c/p\u003e\u003cp\u003eSwaps focused window with the master window. If focus is in the\n master, swap it with the next window in the stack. Focus stays in the\n master.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.DwmPromote",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-DwmPromote.html",
        "fct-type": "module",
        "title": "DwmPromote"
      },
      "index": {
        "description": "Dwm-like swap function for xmonad Swaps focused window with the master window If focus is in the master swap it with the next window in the stack Focus stays in the master",
        "hierarchy": "XMonad Actions DwmPromote",
        "module": "XMonad.Actions.DwmPromote",
        "name": "DwmPromote",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Promote",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DwmPromote.html#v:dwmpromote",
      "description": {
        "fct-descr": "\u003cp\u003eSwap the focused window with the master window. If focus is in\n   the master, swap it with the next window in the stack. Focus\n   stays in the master.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DwmPromote",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-DwmPromote.html#dwmpromote",
        "fct-type": "function",
        "title": "dwmpromote"
      },
      "index": {
        "description": "Swap the focused window with the master window If focus is in the master swap it with the next window in the stack Focus stays in the master",
        "hierarchy": "XMonad Actions DwmPromote",
        "module": "XMonad.Actions.DwmPromote",
        "name": "dwmpromote",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDynamically manage \"workspace groups\", sets of workspaces being\n used together for some common task or purpose, to allow switching\n between workspace groups in a single action.  Note that this only\n makes sense for multi-head setups.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html",
        "fct-type": "module",
        "title": "DynamicWorkspaceGroups"
      },
      "index": {
        "description": "Dynamically manage workspace groups sets of workspaces being used together for some common task or purpose to allow switching between workspace groups in single action Note that this only makes sense for multi-head setups",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "DynamicWorkspaceGroups",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Workspace Groups",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#t:WSGroupId",
      "description": {
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#WSGroupId",
        "fct-type": "type",
        "title": "WSGroupId"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "WSGroupId",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup Id",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:addCurrentWSGroup",
      "description": {
        "fct-descr": "\u003cp\u003eGive a name to the current workspace group.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WSGroupId -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#addCurrentWSGroup",
        "fct-type": "function",
        "title": "addCurrentWSGroup"
      },
      "index": {
        "description": "Give name to the current workspace group",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "addCurrentWSGroup",
        "normalized": "WSGroupId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Current WSGroup",
        "signature": "WSGroupId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:addWSGroup",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a new workspace group with the given name.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WSGroupId -\u003e [WorkspaceId] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#addWSGroup",
        "fct-type": "function",
        "title": "addWSGroup"
      },
      "index": {
        "description": "Add new workspace group with the given name",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "addWSGroup",
        "normalized": "WSGroupId-\u003e[WorkspaceId]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup",
        "signature": "WSGroupId-\u003e[WorkspaceId]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:forgetWSGroup",
      "description": {
        "fct-descr": "\u003cp\u003eDelete the named workspace group from the list of workspace\n   groups.  Note that this has no effect on the workspaces involved;\n   it simply forgets the given name.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WSGroupId -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#forgetWSGroup",
        "fct-type": "function",
        "title": "forgetWSGroup"
      },
      "index": {
        "description": "Delete the named workspace group from the list of workspace groups Note that this has no effect on the workspaces involved it simply forgets the given name",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "forgetWSGroup",
        "normalized": "WSGroupId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup",
        "signature": "WSGroupId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:promptWSGroupAdd",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt for a name for the current workspace group.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#promptWSGroupAdd",
        "fct-type": "function",
        "title": "promptWSGroupAdd"
      },
      "index": {
        "description": "Prompt for name for the current workspace group",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "promptWSGroupAdd",
        "normalized": "XPConfig-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup Add",
        "signature": "XPConfig-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:promptWSGroupForget",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt for a workspace group to forget.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#promptWSGroupForget",
        "fct-type": "function",
        "title": "promptWSGroupForget"
      },
      "index": {
        "description": "Prompt for workspace group to forget",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "promptWSGroupForget",
        "normalized": "XPConfig-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup Forget",
        "signature": "XPConfig-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:promptWSGroupView",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt for a workspace group to view.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#promptWSGroupView",
        "fct-type": "function",
        "title": "promptWSGroupView"
      },
      "index": {
        "description": "Prompt for workspace group to view",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "promptWSGroupView",
        "normalized": "XPConfig-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup View",
        "signature": "XPConfig-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceGroups.html#v:viewWSGroup",
      "description": {
        "fct-descr": "\u003cp\u003eView the workspace group with the given name.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceGroups",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WSGroupId -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceGroups.html#viewWSGroup",
        "fct-type": "function",
        "title": "viewWSGroup"
      },
      "index": {
        "description": "View the workspace group with the given name",
        "hierarchy": "XMonad Actions DynamicWorkspaceGroups",
        "module": "XMonad.Actions.DynamicWorkspaceGroups",
        "name": "viewWSGroup",
        "normalized": "WSGroupId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WSGroup",
        "signature": "WSGroupId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eRemember a dynamically updateable ordering on workspaces, together\n with tools for using this ordering with \u003ca\u003eXMonad.Actions.CycleWS\u003c/a\u003e\n and \u003ca\u003eXMonad.Hooks.DynamicLog\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html",
        "fct-type": "module",
        "title": "DynamicWorkspaceOrder"
      },
      "index": {
        "description": "Remember dynamically updateable ordering on workspaces together with tools for using this ordering with XMonad.Actions.CycleWS and XMonad.Hooks.DynamicLog",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "DynamicWorkspaceOrder",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Workspace Order",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#v:getSortByOrder",
      "description": {
        "fct-descr": "\u003cp\u003eSort workspaces according to the stored dynamic ordering.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceSort",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html#getSortByOrder",
        "fct-type": "function",
        "title": "getSortByOrder"
      },
      "index": {
        "description": "Sort workspaces according to the stored dynamic ordering",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "getSortByOrder",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort By Order",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#v:getWsCompareByOrder",
      "description": {
        "fct-descr": "\u003cp\u003eA comparison function which orders workspaces according to the\n stored dynamic ordering.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceCompare",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html#getWsCompareByOrder",
        "fct-type": "function",
        "title": "getWsCompareByOrder"
      },
      "index": {
        "description": "comparison function which orders workspaces according to the stored dynamic ordering",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "getWsCompareByOrder",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws Compare By Order",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#v:moveTo",
      "description": {
        "fct-descr": "\u003cp\u003eView the next workspace of the given type in the given direction,\n where \"next\" is determined using the dynamic workspace order.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html#moveTo",
        "fct-type": "function",
        "title": "moveTo"
      },
      "index": {
        "description": "View the next workspace of the given type in the given direction where next is determined using the dynamic workspace order",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "moveTo",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#v:moveToGreedy",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003emoveTo\u003c/a\u003e\u003c/code\u003e, but using \u003ccode\u003egreedyView\u003c/code\u003e instead of \u003ccode\u003eview\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html#moveToGreedy",
        "fct-type": "function",
        "title": "moveToGreedy"
      },
      "index": {
        "description": "Same as moveTo but using greedyView instead of view",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "moveToGreedy",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Greedy",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#v:shiftTo",
      "description": {
        "fct-descr": "\u003cp\u003eShift the currently focused window to the next workspace of the\n given type in the given direction, using the dynamic workspace order.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html#shiftTo",
        "fct-type": "function",
        "title": "shiftTo"
      },
      "index": {
        "description": "Shift the currently focused window to the next workspace of the given type in the given direction using the dynamic workspace order",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "shiftTo",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaceOrder.html#v:swapWith",
      "description": {
        "fct-descr": "\u003cp\u003eSwap the current workspace with another workspace in the stored\n dynamic order.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaceOrder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaceOrder.html#swapWith",
        "fct-type": "function",
        "title": "swapWith"
      },
      "index": {
        "description": "Swap the current workspace with another workspace in the stored dynamic order",
        "hierarchy": "XMonad Actions DynamicWorkspaceOrder",
        "module": "XMonad.Actions.DynamicWorkspaceOrder",
        "name": "swapWith",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides bindings to add and delete workspaces.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html",
        "fct-type": "module",
        "title": "DynamicWorkspaces"
      },
      "index": {
        "description": "Provides bindings to add and delete workspaces",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "DynamicWorkspaces",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Workspaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:addHiddenWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a new hidden workspace with the given name, or do nothing if\n   a workspace with the given name already exists.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#addHiddenWorkspace",
        "fct-type": "function",
        "title": "addHiddenWorkspace"
      },
      "index": {
        "description": "Add new hidden workspace with the given name or do nothing if workspace with the given name already exists",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "addHiddenWorkspace",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hidden Workspace",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:addWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a new workspace with the given name, or do nothing if a\n   workspace with the given name already exists; then switch to the\n   newly created workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#addWorkspace",
        "fct-type": "function",
        "title": "addWorkspace"
      },
      "index": {
        "description": "Add new workspace with the given name or do nothing if workspace with the given name already exists then switch to the newly created workspace",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "addWorkspace",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:addWorkspacePrompt",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt for the name of a new workspace, add it if it does not\n   already exist, and switch to it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#addWorkspacePrompt",
        "fct-type": "function",
        "title": "addWorkspacePrompt"
      },
      "index": {
        "description": "Prompt for the name of new workspace add it if it does not already exist and switch to it",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "addWorkspacePrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:removeEmptyWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eRemove the current workspace if it contains no windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#removeEmptyWorkspace",
        "fct-type": "function",
        "title": "removeEmptyWorkspace"
      },
      "index": {
        "description": "Remove the current workspace if it contains no windows",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "removeEmptyWorkspace",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Empty Workspace",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:removeEmptyWorkspaceAfter",
      "description": {
        "fct-descr": "\u003cp\u003eRemove the current workspace after an operation if it is empty and hidden.\n   Can be used to remove a workspace if it is empty when leaving it. The\n   operation may only change workspace once, otherwise the workspace will not\n   be removed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#removeEmptyWorkspaceAfter",
        "fct-type": "function",
        "title": "removeEmptyWorkspaceAfter"
      },
      "index": {
        "description": "Remove the current workspace after an operation if it is empty and hidden Can be used to remove workspace if it is empty when leaving it The operation may only change workspace once otherwise the workspace will not be removed",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "removeEmptyWorkspaceAfter",
        "normalized": "X()-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Empty Workspace After",
        "signature": "X()-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:removeEmptyWorkspaceAfterExcept",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003eremoveEmptyWorkspaceAfter\u003c/a\u003e\u003c/code\u003e but use a list of sticky workspaces,\n   whose entries will never be removed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e X () -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#removeEmptyWorkspaceAfterExcept",
        "fct-type": "function",
        "title": "removeEmptyWorkspaceAfterExcept"
      },
      "index": {
        "description": "Like removeEmptyWorkspaceAfter but use list of sticky workspaces whose entries will never be removed",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "removeEmptyWorkspaceAfterExcept",
        "normalized": "[String]-\u003eX()-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Empty Workspace After Except",
        "signature": "[String]-\u003eX()-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:removeWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eRemove the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#removeWorkspace",
        "fct-type": "function",
        "title": "removeWorkspace"
      },
      "index": {
        "description": "Remove the current workspace",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "removeWorkspace",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:renameWorkspace",
      "description": {
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#renameWorkspace",
        "fct-type": "function",
        "title": "renameWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "renameWorkspace",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:selectWorkspace",
      "description": {
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#selectWorkspace",
        "fct-type": "function",
        "title": "selectWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "selectWorkspace",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:toNthWorkspace",
      "description": {
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e X ()) -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#toNthWorkspace",
        "fct-type": "function",
        "title": "toNthWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "toNthWorkspace",
        "normalized": "(String-\u003eX())-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth Workspace",
        "signature": "(String-\u003eX())-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:withNthWorkspace",
      "description": {
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e WindowSet -\u003e WindowSet) -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#withNthWorkspace",
        "fct-type": "function",
        "title": "withNthWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "withNthWorkspace",
        "normalized": "(String-\u003eWindowSet-\u003eWindowSet)-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth Workspace",
        "signature": "(String-\u003eWindowSet-\u003eWindowSet)-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-DynamicWorkspaces.html#v:withWorkspace",
      "description": {
        "fct-module": "XMonad.Actions.DynamicWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e (String -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-DynamicWorkspaces.html#withWorkspace",
        "fct-type": "function",
        "title": "withWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions DynamicWorkspaces",
        "module": "XMonad.Actions.DynamicWorkspaces",
        "name": "withWorkspace",
        "normalized": "XPConfig-\u003e(String-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "XPConfig-\u003e(String-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FindEmptyWorkspace.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFind an empty workspace.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.FindEmptyWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-FindEmptyWorkspace.html",
        "fct-type": "module",
        "title": "FindEmptyWorkspace"
      },
      "index": {
        "description": "Find an empty workspace",
        "hierarchy": "XMonad Actions FindEmptyWorkspace",
        "module": "XMonad.Actions.FindEmptyWorkspace",
        "name": "FindEmptyWorkspace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Find Empty Workspace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FindEmptyWorkspace.html#v:tagToEmptyWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eTag current window to an empty workspace and view it. Do nothing if\n all workspaces are in use.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FindEmptyWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-FindEmptyWorkspace.html#tagToEmptyWorkspace",
        "fct-type": "function",
        "title": "tagToEmptyWorkspace"
      },
      "index": {
        "description": "Tag current window to an empty workspace and view it Do nothing if all workspaces are in use",
        "hierarchy": "XMonad Actions FindEmptyWorkspace",
        "module": "XMonad.Actions.FindEmptyWorkspace",
        "name": "tagToEmptyWorkspace",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Empty Workspace",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FindEmptyWorkspace.html#v:viewEmptyWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eFind and view an empty workspace. Do nothing if all workspaces are\n in use.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FindEmptyWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-FindEmptyWorkspace.html#viewEmptyWorkspace",
        "fct-type": "function",
        "title": "viewEmptyWorkspace"
      },
      "index": {
        "description": "Find and view an empty workspace Do nothing if all workspaces are in use",
        "hierarchy": "XMonad Actions FindEmptyWorkspace",
        "module": "XMonad.Actions.FindEmptyWorkspace",
        "name": "viewEmptyWorkspace",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Empty Workspace",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleManipulate.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMove and resize floating windows without warping the mouse.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.FlexibleManipulate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-FlexibleManipulate.html",
        "fct-type": "module",
        "title": "FlexibleManipulate"
      },
      "index": {
        "description": "Move and resize floating windows without warping the mouse",
        "hierarchy": "XMonad Actions FlexibleManipulate",
        "module": "XMonad.Actions.FlexibleManipulate",
        "name": "FlexibleManipulate",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Flexible Manipulate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleManipulate.html#v:discrete",
      "description": {
        "fct-module": "XMonad.Actions.FlexibleManipulate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e Double",
        "fct-source": "src/XMonad-Actions-FlexibleManipulate.html#discrete",
        "fct-type": "function",
        "title": "discrete"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions FlexibleManipulate",
        "module": "XMonad.Actions.FlexibleManipulate",
        "name": "discrete",
        "normalized": "Double-\u003eDouble",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Double-\u003eDouble"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleManipulate.html#v:linear",
      "description": {
        "fct-module": "XMonad.Actions.FlexibleManipulate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e Double",
        "fct-source": "src/XMonad-Actions-FlexibleManipulate.html#linear",
        "fct-type": "function",
        "title": "linear"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions FlexibleManipulate",
        "module": "XMonad.Actions.FlexibleManipulate",
        "name": "linear",
        "normalized": "Double-\u003eDouble",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Double-\u003eDouble"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleManipulate.html#v:mouseWindow",
      "description": {
        "fct-descr": "\u003cp\u003eManipulate the window based on discrete pick regions; the window\n   is divided into regions by thirds along each axis.\n\u003c/p\u003e\u003cp\u003eScale/reposition the window by factors obtained from the mouse\n   position by linear interpolation. Dragging precisely on a corner\n   resizes that corner; dragging precisely in the middle moves the\n   window without resizing; anything else is an interpolation\n   between the two.\n\u003c/p\u003e\u003cp\u003eOnly resize the window, based on the window quadrant the mouse is in.\n\u003c/p\u003e\u003cp\u003eOnly reposition the window.\n\u003c/p\u003e\u003cp\u003eGiven an interpolation function, implement an appropriate window\n   manipulation action.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FlexibleManipulate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Double -\u003e Double) -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-FlexibleManipulate.html#mouseWindow",
        "fct-type": "function",
        "title": "mouseWindow"
      },
      "index": {
        "description": "Manipulate the window based on discrete pick regions the window is divided into regions by thirds along each axis Scale reposition the window by factors obtained from the mouse position by linear interpolation Dragging precisely on corner resizes that corner dragging precisely in the middle moves the window without resizing anything else is an interpolation between the two Only resize the window based on the window quadrant the mouse is in Only reposition the window Given an interpolation function implement an appropriate window manipulation action",
        "hierarchy": "XMonad Actions FlexibleManipulate",
        "module": "XMonad.Actions.FlexibleManipulate",
        "name": "mouseWindow",
        "normalized": "(Double-\u003eDouble)-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "(Double-\u003eDouble)-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleManipulate.html#v:position",
      "description": {
        "fct-module": "XMonad.Actions.FlexibleManipulate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e Double",
        "fct-source": "src/XMonad-Actions-FlexibleManipulate.html#position",
        "fct-type": "function",
        "title": "position"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions FlexibleManipulate",
        "module": "XMonad.Actions.FlexibleManipulate",
        "name": "position",
        "normalized": "Double-\u003eDouble",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Double-\u003eDouble"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleManipulate.html#v:resize",
      "description": {
        "fct-module": "XMonad.Actions.FlexibleManipulate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e Double",
        "fct-source": "src/XMonad-Actions-FlexibleManipulate.html#resize",
        "fct-type": "function",
        "title": "resize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions FlexibleManipulate",
        "module": "XMonad.Actions.FlexibleManipulate",
        "name": "resize",
        "normalized": "Double-\u003eDouble",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Double-\u003eDouble"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleResize.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eResize floating windows from any corner.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.FlexibleResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-FlexibleResize.html",
        "fct-type": "module",
        "title": "FlexibleResize"
      },
      "index": {
        "description": "Resize floating windows from any corner",
        "hierarchy": "XMonad Actions FlexibleResize",
        "module": "XMonad.Actions.FlexibleResize",
        "name": "FlexibleResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Flexible Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleResize.html#v:mouseResizeEdgeWindow",
      "description": {
        "fct-descr": "\u003cp\u003eResize a floating window from whichever corner or edge the mouse is\n   closest to.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FlexibleResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "mouseResizeEdgeWindow"
      },
      "index": {
        "description": "Resize floating window from whichever corner or edge the mouse is closest to",
        "hierarchy": "XMonad Actions FlexibleResize",
        "module": "XMonad.Actions.FlexibleResize",
        "name": "mouseResizeEdgeWindow",
        "normalized": "Rational-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Edge Window",
        "signature": "Rational-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FlexibleResize.html#v:mouseResizeWindow",
      "description": {
        "fct-descr": "\u003cp\u003eResize a floating window from whichever corner the mouse is\n   closest to.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FlexibleResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window-\u003e X ()",
        "fct-type": "function",
        "title": "mouseResizeWindow"
      },
      "index": {
        "description": "Resize floating window from whichever corner the mouse is closest to",
        "hierarchy": "XMonad Actions FlexibleResize",
        "module": "XMonad.Actions.FlexibleResize",
        "name": "mouseResizeWindow",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Window",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatKeys.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMove and resize floating windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.FloatKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-FloatKeys.html",
        "fct-type": "module",
        "title": "FloatKeys"
      },
      "index": {
        "description": "Move and resize floating windows",
        "hierarchy": "XMonad Actions FloatKeys",
        "module": "XMonad.Actions.FloatKeys",
        "name": "FloatKeys",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Keys",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatKeys.html#v:keysAbsResizeWindow",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ekeysAbsResizeWindow (dx, dy) (ax, ay)\u003c/code\u003e changes the width by \u003ccode\u003edx\u003c/code\u003e\n   and the height by \u003ccode\u003edy\u003c/code\u003e, leaving the screen absolute point \u003ccode\u003e(ax,\n   ay)\u003c/code\u003e fixed.\n\u003c/p\u003e\u003cp\u003eFor example:\n\u003c/p\u003e\u003cpre\u003e keysAbsResizeWindow (10, 10) (0, 0)   -- enlarge the window; if it is not in the top-left corner it will also be moved down and to the right.\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.FloatKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D -\u003e D -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-FloatKeys.html#keysAbsResizeWindow",
        "fct-type": "function",
        "title": "keysAbsResizeWindow"
      },
      "index": {
        "description": "keysAbsResizeWindow dx dy ax ay changes the width by dx and the height by dy leaving the screen absolute point ax ay fixed For example keysAbsResizeWindow enlarge the window if it is not in the top-left corner it will also be moved down and to the right",
        "hierarchy": "XMonad Actions FloatKeys",
        "module": "XMonad.Actions.FloatKeys",
        "name": "keysAbsResizeWindow",
        "normalized": "D-\u003eD-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Abs Resize Window",
        "signature": "D-\u003eD-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatKeys.html#v:keysMoveWindow",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ekeysMoveWindow (dx, dy)\u003c/code\u003e moves the window by \u003ccode\u003edx\u003c/code\u003e pixels to the\n   right and \u003ccode\u003edy\u003c/code\u003e pixels down.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-FloatKeys.html#keysMoveWindow",
        "fct-type": "function",
        "title": "keysMoveWindow"
      },
      "index": {
        "description": "keysMoveWindow dx dy moves the window by dx pixels to the right and dy pixels down",
        "hierarchy": "XMonad Actions FloatKeys",
        "module": "XMonad.Actions.FloatKeys",
        "name": "keysMoveWindow",
        "normalized": "D-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Window",
        "signature": "D-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatKeys.html#v:keysMoveWindowTo",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ekeysMoveWindowTo (x, y) (gx, gy)\u003c/code\u003e moves the window relative\n   point \u003ccode\u003e(gx, gy)\u003c/code\u003e to the point \u003ccode\u003e(x,y)\u003c/code\u003e, where \u003ccode\u003e(gx,gy)\u003c/code\u003e gives a\n   position relative to the window border, i.e.  \u003ccode\u003egx = 0\u003c/code\u003e is the left\n   border, \u003ccode\u003egx = 1\u003c/code\u003e is the right border, \u003ccode\u003egy = 0\u003c/code\u003e is the top border, and\n   \u003ccode\u003egy = 1\u003c/code\u003e the bottom border.\n\u003c/p\u003e\u003cp\u003eFor example, on a 1024x768 screen:\n\u003c/p\u003e\u003cpre\u003e keysMoveWindowTo (512,384) (1%2, 1%2) -- center the window on screen\n keysMoveWindowTo (1024,0) (1, 0)      -- put window in the top right corner\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.FloatKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "P -\u003e G -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-FloatKeys.html#keysMoveWindowTo",
        "fct-type": "function",
        "title": "keysMoveWindowTo"
      },
      "index": {
        "description": "keysMoveWindowTo gx gy moves the window relative point gx gy to the point where gx gy gives position relative to the window border i.e gx is the left border gx is the right border gy is the top border and gy the bottom border For example on x768 screen keysMoveWindowTo center the window on screen keysMoveWindowTo put window in the top right corner",
        "hierarchy": "XMonad Actions FloatKeys",
        "module": "XMonad.Actions.FloatKeys",
        "name": "keysMoveWindowTo",
        "normalized": "P-\u003eG-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Window To",
        "signature": "P-\u003eG-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatKeys.html#v:keysResizeWindow",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ekeysResizeWindow (dx, dy) (gx, gy)\u003c/code\u003e changes the width by \u003ccode\u003edx\u003c/code\u003e\n   and the height by \u003ccode\u003edy\u003c/code\u003e, leaving the window-relative point \u003ccode\u003e(gx,\n   gy)\u003c/code\u003e fixed.\n\u003c/p\u003e\u003cp\u003eFor example:\n\u003c/p\u003e\u003cpre\u003e keysResizeWindow (10, 0) (0, 0)      -- make the window 10 pixels larger to the right\n keysResizeWindow (10, 0) (0, 1%2)    -- does the same, unless sizeHints are applied\n keysResizeWindow (10, 10) (1%2, 1%2) -- add 5 pixels on each side\n keysResizeWindow (-10, -10) (0, 1)   -- shrink the window in direction of the bottom-left corner\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.FloatKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D -\u003e G -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-FloatKeys.html#keysResizeWindow",
        "fct-type": "function",
        "title": "keysResizeWindow"
      },
      "index": {
        "description": "keysResizeWindow dx dy gx gy changes the width by dx and the height by dy leaving the window-relative point gx gy fixed For example keysResizeWindow make the window pixels larger to the right keysResizeWindow does the same unless sizeHints are applied keysResizeWindow add pixels on each side keysResizeWindow shrink the window in direction of the bottom-left corner",
        "hierarchy": "XMonad Actions FloatKeys",
        "module": "XMonad.Actions.FloatKeys",
        "name": "keysResizeWindow",
        "normalized": "D-\u003eG-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Window",
        "signature": "D-\u003eG-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMove and resize floating windows using other windows and the edge of the\n screen as guidelines.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-FloatSnap.html",
        "fct-type": "module",
        "title": "FloatSnap"
      },
      "index": {
        "description": "Move and resize floating windows using other windows and the edge of the screen as guidelines",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "FloatSnap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Snap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#t:Direction2D",
      "description": {
        "fct-descr": "\u003cp\u003eTwo-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "data",
        "title": "Direction2D"
      },
      "index": {
        "description": "Two-dimensional directions",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "Direction2D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:D",
      "description": {
        "fct-descr": "\u003cp\u003eDown\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "D"
      },
      "index": {
        "description": "Down",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:L",
      "description": {
        "fct-descr": "\u003cp\u003eLeft\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "Left",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:R",
      "description": {
        "fct-descr": "\u003cp\u003eRight\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "Right",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:U",
      "description": {
        "fct-descr": "\u003cp\u003eUp\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "U",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "U"
      },
      "index": {
        "description": "Up",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "U",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:snapGrow",
      "description": {
        "fct-descr": "\u003cp\u003eGrow the specified edge of a window until it snaps against another window or the edge of the screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D-\u003e Maybe Int-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "snapGrow"
      },
      "index": {
        "description": "Grow the specified edge of window until it snaps against another window or the edge of the screen",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "snapGrow",
        "normalized": "Direction D-\u003eMaybe Int-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grow",
        "signature": "Direction D-\u003eMaybe Int-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:snapMagicMouseResize",
      "description": {
        "fct-descr": "\u003cp\u003eResize the window by each edge independently to snap against the closest part of other windows or the edge of the screen. Use the location of the\n   mouse over the window to decide which edges to snap. In corners, the two adjoining edges will be snapped, along the middle of an edge only that edge\n   will be snapped. In the center of the window all edges will snap. Intended to be used together with \u003ca\u003eXMonad.Actions.FlexibleResize\u003c/a\u003e or\n   \u003ca\u003eXMonad.Actions.FlexibleManipulate\u003c/a\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Maybe Int-\u003e Maybe Int-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "snapMagicMouseResize"
      },
      "index": {
        "description": "Resize the window by each edge independently to snap against the closest part of other windows or the edge of the screen Use the location of the mouse over the window to decide which edges to snap In corners the two adjoining edges will be snapped along the middle of an edge only that edge will be snapped In the center of the window all edges will snap Intended to be used together with XMonad.Actions.FlexibleResize or XMonad.Actions.FlexibleManipulate",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "snapMagicMouseResize",
        "normalized": "Rational-\u003eMaybe Int-\u003eMaybe Int-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magic Mouse Resize",
        "signature": "Rational-\u003eMaybe Int-\u003eMaybe Int-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:snapMagicMove",
      "description": {
        "fct-descr": "\u003cp\u003eMove a window by both axises in any direction to snap against the closest part of other windows or the edge of the screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Maybe Int-\u003e Maybe Int-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "snapMagicMove"
      },
      "index": {
        "description": "Move window by both axises in any direction to snap against the closest part of other windows or the edge of the screen",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "snapMagicMove",
        "normalized": "Maybe Int-\u003eMaybe Int-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magic Move",
        "signature": "Maybe Int-\u003eMaybe Int-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:snapMagicResize",
      "description": {
        "fct-descr": "\u003cp\u003eResize the window by each edge independently to snap against the closest part of other windows or the edge of the screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Direction2D]-\u003e Maybe Int-\u003e Maybe Int-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "snapMagicResize"
      },
      "index": {
        "description": "Resize the window by each edge independently to snap against the closest part of other windows or the edge of the screen",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "snapMagicResize",
        "normalized": "[Direction D]-\u003eMaybe Int-\u003eMaybe Int-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magic Resize",
        "signature": "[Direction D]-\u003eMaybe Int-\u003eMaybe Int-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:snapMove",
      "description": {
        "fct-descr": "\u003cp\u003eMove a window in the specified direction until it snaps against another window or the edge of the screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D-\u003e Maybe Int-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "snapMove"
      },
      "index": {
        "description": "Move window in the specified direction until it snaps against another window or the edge of the screen",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "snapMove",
        "normalized": "Direction D-\u003eMaybe Int-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move",
        "signature": "Direction D-\u003eMaybe Int-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FloatSnap.html#v:snapShrink",
      "description": {
        "fct-descr": "\u003cp\u003eShrink the specified edge of a window until it snaps against another window or the edge of the screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FloatSnap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D-\u003e Maybe Int-\u003e Window-\u003e X ()",
        "fct-type": "function",
        "title": "snapShrink"
      },
      "index": {
        "description": "Shrink the specified edge of window until it snaps against another window or the edge of the screen",
        "hierarchy": "XMonad Actions FloatSnap",
        "module": "XMonad.Actions.FloatSnap",
        "name": "snapShrink",
        "normalized": "Direction D-\u003eMaybe Int-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrink",
        "signature": "Direction D-\u003eMaybe Int-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FocusNth.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFocus the nth window of the current workspace.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.FocusNth",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-FocusNth.html",
        "fct-type": "module",
        "title": "FocusNth"
      },
      "index": {
        "description": "Focus the nth window of the current workspace",
        "hierarchy": "XMonad Actions FocusNth",
        "module": "XMonad.Actions.FocusNth",
        "name": "FocusNth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus Nth",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FocusNth.html#v:focusNth",
      "description": {
        "fct-descr": "\u003cp\u003eGive focus to the nth window of the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.FocusNth",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-FocusNth.html#focusNth",
        "fct-type": "function",
        "title": "focusNth"
      },
      "index": {
        "description": "Give focus to the nth window of the current workspace",
        "hierarchy": "XMonad Actions FocusNth",
        "module": "XMonad.Actions.FocusNth",
        "name": "focusNth",
        "normalized": "Int-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth",
        "signature": "Int-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-FocusNth.html#v:focusNth-39-",
      "description": {
        "fct-module": "XMonad.Actions.FocusNth",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-FocusNth.html#focusNth%27",
        "fct-type": "function",
        "title": "focusNth'"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions FocusNth",
        "module": "XMonad.Actions.FocusNth",
        "name": "focusNth'",
        "normalized": "Int-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth'",
        "signature": "Int-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eGridSelect displays items(e.g. the opened windows) in a 2D grid and lets\n the user select from it with the cursor/hjkl keys or the mouse.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-GridSelect.html",
        "fct-type": "module",
        "title": "GridSelect"
      },
      "index": {
        "description": "GridSelect displays items e.g the opened windows in grid and lets the user select from it with the cursor hjkl keys or the mouse",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "GridSelect",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid Select",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#t:GSConfig",
      "description": {
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "data",
        "title": "GSConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "GSConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "GSConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#t:HasColorizer",
      "description": {
        "fct-descr": "\u003cp\u003eThat is \u003ccode\u003e\u003ca\u003efromClassName\u003c/a\u003e\u003c/code\u003e if you are selecting a \u003ccode\u003e\u003ca\u003eWindow\u003c/a\u003e\u003c/code\u003e, or\n \u003ccode\u003e\u003ca\u003edefaultColorizer\u003c/a\u003e\u003c/code\u003e if you are selecting a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e. The catch-all instance\n \u003ccode\u003eHasColorizer a\u003c/code\u003e uses the \u003ccode\u003e\u003ca\u003efocusedBorderColor\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003enormalBorderColor\u003c/a\u003e\u003c/code\u003e\n colors.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Actions-GridSelect.html#HasColorizer",
        "fct-type": "class",
        "title": "HasColorizer"
      },
      "index": {
        "description": "That is fromClassName if you are selecting Window or defaultColorizer if you are selecting String The catch-all instance HasColorizer uses the focusedBorderColor and normalBorderColor colors",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "HasColorizer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Has Colorizer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#t:NavigateMap",
      "description": {
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Actions-GridSelect.html#NavigateMap",
        "fct-type": "type",
        "title": "NavigateMap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "NavigateMap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Navigate Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#t:TwoDPosition",
      "description": {
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Actions-GridSelect.html#TwoDPosition",
        "fct-type": "type",
        "title": "TwoDPosition"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "TwoDPosition",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Two DPosition",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:GSConfig",
      "description": {
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "GSConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "GSConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "GSConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:bringSelected",
      "description": {
        "fct-descr": "\u003cp\u003eBrings selected window to the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-GridSelect.html#bringSelected",
        "fct-type": "function",
        "title": "bringSelected"
      },
      "index": {
        "description": "Brings selected window to the current workspace",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "bringSelected",
        "normalized": "GSConfig Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selected",
        "signature": "GSConfig Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:buildDefaultGSConfig",
      "description": {
        "fct-descr": "\u003cp\u003eBuilds a default gs config from a colorizer function.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(a -\u003e Bool -\u003e X (String, String)) -\u003e GSConfig a",
        "fct-source": "src/XMonad-Actions-GridSelect.html#buildDefaultGSConfig",
        "fct-type": "function",
        "title": "buildDefaultGSConfig"
      },
      "index": {
        "description": "Builds default gs config from colorizer function",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "buildDefaultGSConfig",
        "normalized": "(a-\u003eBool-\u003eX(String,String))-\u003eGSConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default GSConfig",
        "signature": "(a-\u003eBool-\u003eX(String,String))-\u003eGSConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:colorRangeFromClassName",
      "description": {
        "fct-descr": "\u003cp\u003eA colorizer that picks a color inside a range,\n and depending on the window's class.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Word8, Word8, Word8)-\u003e (Word8, Word8, Word8)-\u003e (Word8, Word8, Word8)-\u003e (Word8, Word8, Word8)-\u003e (Word8, Word8, Word8)-\u003e Window-\u003e Bool-\u003e X (String, String)",
        "fct-type": "function",
        "title": "colorRangeFromClassName"
      },
      "index": {
        "description": "colorizer that picks color inside range and depending on the window class",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "colorRangeFromClassName",
        "normalized": "(Word,Word,Word)-\u003e(Word,Word,Word)-\u003e(Word,Word,Word)-\u003e(Word,Word,Word)-\u003e(Word,Word,Word)-\u003eWindow-\u003eBool-\u003eX(String,String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Range From Class Name",
        "signature": "(Word,Word,Word)-\u003e(Word,Word,Word)-\u003e(Word,Word,Word)-\u003e(Word,Word,Word)-\u003e(Word,Word,Word)-\u003eWindow-\u003eBool-\u003eX(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:defaultColorizer",
      "description": {
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e Bool -\u003e X (String, String)",
        "fct-source": "src/XMonad-Actions-GridSelect.html#defaultColorizer",
        "fct-type": "method",
        "title": "defaultColorizer"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "defaultColorizer",
        "normalized": "a-\u003eBool-\u003eX(String,String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Colorizer",
        "signature": "a-\u003eBool-\u003eX(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:defaultGSConfig",
      "description": {
        "fct-descr": "\u003cp\u003eA basic configuration for \u003ccode\u003e\u003ca\u003egridselect\u003c/a\u003e\u003c/code\u003e, with the colorizer chosen based on the type.\n\u003c/p\u003e\u003cp\u003eIf you want to replace the \u003ccode\u003e\u003ca\u003egs_colorizer\u003c/a\u003e\u003c/code\u003e field, use \u003ccode\u003e\u003ca\u003ebuildDefaultGSConfig\u003c/a\u003e\u003c/code\u003e\n instead, to avoid ambiguous type variables.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig a",
        "fct-source": "src/XMonad-Actions-GridSelect.html#defaultGSConfig",
        "fct-type": "function",
        "title": "defaultGSConfig"
      },
      "index": {
        "description": "basic configuration for gridselect with the colorizer chosen based on the type If you want to replace the gs colorizer field use buildDefaultGSConfig instead to avoid ambiguous type variables",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "defaultGSConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "GSConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:fromClassName",
      "description": {
        "fct-descr": "\u003cp\u003eColorize a window depending on it's className.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e Bool -\u003e X (String, String)",
        "fct-source": "src/XMonad-Actions-GridSelect.html#fromClassName",
        "fct-type": "function",
        "title": "fromClassName"
      },
      "index": {
        "description": "Colorize window depending on it className",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "fromClassName",
        "normalized": "Window-\u003eBool-\u003eX(String,String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Class Name",
        "signature": "Window-\u003eBool-\u003eX(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:goToSelected",
      "description": {
        "fct-descr": "\u003cp\u003eSwitches to selected window's workspace and focuses that window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-GridSelect.html#goToSelected",
        "fct-type": "function",
        "title": "goToSelected"
      },
      "index": {
        "description": "Switches to selected window workspace and focuses that window",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "goToSelected",
        "normalized": "GSConfig Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Selected",
        "signature": "GSConfig Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gridselect",
      "description": {
        "fct-descr": "\u003cp\u003eBrings up a 2D grid of elements in the center of the screen, and one can\n select an element with cursors keys. The selected element is returned.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig a -\u003e [(String, a)] -\u003e X (Maybe a)",
        "fct-source": "src/XMonad-Actions-GridSelect.html#gridselect",
        "fct-type": "function",
        "title": "gridselect"
      },
      "index": {
        "description": "Brings up grid of elements in the center of the screen and one can select an element with cursors keys The selected element is returned",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gridselect",
        "normalized": "GSConfig a-\u003e[(String,a)]-\u003eX(Maybe a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "GSConfig a-\u003e[(String,a)]-\u003eX(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gridselectWindow",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003egridSelect\u003c/code\u003e but with the current windows and their titles as elements\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig Window -\u003e X (Maybe Window)",
        "fct-source": "src/XMonad-Actions-GridSelect.html#gridselectWindow",
        "fct-type": "function",
        "title": "gridselectWindow"
      },
      "index": {
        "description": "Like gridSelect but with the current windows and their titles as elements",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gridselectWindow",
        "normalized": "GSConfig Window-\u003eX(Maybe Window)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "GSConfig Window-\u003eX(Maybe Window)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gridselectWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eSelect a workspace and view it using the given function\n (normally \u003ccode\u003e\u003ca\u003eview\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003egreedyView\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e\u003cp\u003eAnother option is to shift the current window to the selected workspace:\n\u003c/p\u003e\u003cpre\u003e gridselectWorkspace (\\ws -\u003e W.greedyView ws . W.shift ws)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig WorkspaceId -\u003e (WorkspaceId -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-GridSelect.html#gridselectWorkspace",
        "fct-type": "function",
        "title": "gridselectWorkspace"
      },
      "index": {
        "description": "Select workspace and view it using the given function normally view or greedyView Another option is to shift the current window to the selected workspace gridselectWorkspace ws W.greedyView ws W.shift ws",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gridselectWorkspace",
        "normalized": "GSConfig WorkspaceId-\u003e(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "GSConfig WorkspaceId-\u003e(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_cellheight",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Integer",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_cellheight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_cellheight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_cellpadding",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Integer",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_cellpadding"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_cellpadding",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_cellwidth",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Integer",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_cellwidth"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_cellwidth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_colorizer",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e Bool -\u003e X (String, String)",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_colorizer"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_colorizer",
        "normalized": "a-\u003eBool-\u003eX(String,String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eBool-\u003eX(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_font",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_font"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_font",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_navigate",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NavigateMap",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_navigate"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_navigate",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_originFractX",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_originFractX"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_originFractX",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fract",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:gs_originFractY",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double",
        "fct-source": "src/XMonad-Actions-GridSelect.html#GSConfig",
        "fct-type": "function",
        "title": "gs_originFractY"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "gs_originFractY",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fract",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:runSelectedAction",
      "description": {
        "fct-descr": "\u003cp\u003eSelect an action and run it in the X monad\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig (X ()) -\u003e [(String, X ())] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-GridSelect.html#runSelectedAction",
        "fct-type": "function",
        "title": "runSelectedAction"
      },
      "index": {
        "description": "Select an action and run it in the monad",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "runSelectedAction",
        "normalized": "GSConfig(X())-\u003e[(String,X())]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selected Action",
        "signature": "GSConfig(X())-\u003e[(String,X())]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:spawnSelected",
      "description": {
        "fct-descr": "\u003cp\u003eSelect an application to spawn from a given list\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GSConfig String -\u003e [String] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-GridSelect.html#spawnSelected",
        "fct-type": "function",
        "title": "spawnSelected"
      },
      "index": {
        "description": "Select an application to spawn from given list",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "spawnSelected",
        "normalized": "GSConfig String-\u003e[String]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selected",
        "signature": "GSConfig String-\u003e[String]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:stringColorizer",
      "description": {
        "fct-descr": "\u003cp\u003eDefault colorizer for Strings\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Bool -\u003e X (String, String)",
        "fct-source": "src/XMonad-Actions-GridSelect.html#stringColorizer",
        "fct-type": "function",
        "title": "stringColorizer"
      },
      "index": {
        "description": "Default colorizer for Strings",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "stringColorizer",
        "normalized": "String-\u003eBool-\u003eX(String,String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Colorizer",
        "signature": "String-\u003eBool-\u003eX(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-GridSelect.html#v:withSelectedWindow",
      "description": {
        "fct-descr": "\u003cp\u003eBrings up a 2D grid of windows in the center of the screen, and one can\n select a window with cursors keys. The selected window is then passed to\n a callback function.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.GridSelect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Window -\u003e X ()) -\u003e GSConfig Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-GridSelect.html#withSelectedWindow",
        "fct-type": "function",
        "title": "withSelectedWindow"
      },
      "index": {
        "description": "Brings up grid of windows in the center of the screen and one can select window with cursors keys The selected window is then passed to callback function",
        "hierarchy": "XMonad Actions GridSelect",
        "module": "XMonad.Actions.GridSelect",
        "name": "withSelectedWindow",
        "normalized": "(Window-\u003eX())-\u003eGSConfig Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selected Window",
        "signature": "(Window-\u003eX())-\u003eGSConfig Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAlternative to \u003ccode\u003eXMonad.Operations.sendMessage\u003c/code\u003e that provides knowledge\n of whether the message was handled, and utility functions based on\n this facility.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html",
        "fct-type": "module",
        "title": "MessageFeedback"
      },
      "index": {
        "description": "Alternative to XMonad.Operations.sendMessage that provides knowledge of whether the message was handled and utility functions based on this facility",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "MessageFeedback",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Message Feedback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:send",
      "description": {
        "fct-descr": "\u003cp\u003eBehaves like \u003ccode\u003eXMonad.Operations.sendMessage\u003c/code\u003e, but returns True of the\n message was handled by the layout, False otherwise.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e X Bool",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#send",
        "fct-type": "function",
        "title": "send"
      },
      "index": {
        "description": "Behaves like XMonad.Operations.sendMessage but returns True of the message was handled by the layout False otherwise",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "send",
        "normalized": "a-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:sendSM",
      "description": {
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SomeMessage -\u003e X Bool",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#sendSM",
        "fct-type": "function",
        "title": "sendSM"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "sendSM",
        "normalized": "SomeMessage-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SM",
        "signature": "SomeMessage-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:sendSM_",
      "description": {
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SomeMessage -\u003e X ()",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#sendSM_",
        "fct-type": "function",
        "title": "sendSM_"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "sendSM_",
        "normalized": "SomeMessage-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SM",
        "signature": "SomeMessage-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:sm",
      "description": {
        "fct-descr": "\u003cp\u003eConvenience shorthand for \u003ccode\u003e\u003ca\u003eSomeMessage\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e SomeMessage",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#sm",
        "fct-type": "function",
        "title": "sm"
      },
      "index": {
        "description": "Convenience shorthand for SomeMessage",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "sm",
        "normalized": "a-\u003eSomeMessage",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eSomeMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:tryInOrder",
      "description": {
        "fct-descr": "\u003cp\u003eTries sending every message of the list in order until one of them\n is handled. Returns True if one of the messages was handled, False otherwise.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[SomeMessage] -\u003e X Bool",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#tryInOrder",
        "fct-type": "function",
        "title": "tryInOrder"
      },
      "index": {
        "description": "Tries sending every message of the list in order until one of them is handled Returns True if one of the messages was handled False otherwise",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "tryInOrder",
        "normalized": "[SomeMessage]-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In Order",
        "signature": "[SomeMessage]-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:tryInOrder_",
      "description": {
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[SomeMessage] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#tryInOrder_",
        "fct-type": "function",
        "title": "tryInOrder_"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "tryInOrder_",
        "normalized": "[SomeMessage]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In Order",
        "signature": "[SomeMessage]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:tryMessage",
      "description": {
        "fct-descr": "\u003cp\u003eSends the first message, and if it was not handled, sends the second.\n Returns True if either message was handled, False otherwise.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e b -\u003e X Bool",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#tryMessage",
        "fct-type": "function",
        "title": "tryMessage"
      },
      "index": {
        "description": "Sends the first message and if it was not handled sends the second Returns True if either message was handled False otherwise",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "tryMessage",
        "normalized": "a-\u003eb-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Message",
        "signature": "a-\u003eb-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MessageFeedback.html#v:tryMessage_",
      "description": {
        "fct-module": "XMonad.Actions.MessageFeedback",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e b -\u003e X ()",
        "fct-source": "src/XMonad-Actions-MessageFeedback.html#tryMessage_",
        "fct-type": "function",
        "title": "tryMessage_"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MessageFeedback",
        "module": "XMonad.Actions.MessageFeedback",
        "name": "tryMessage_",
        "normalized": "a-\u003eb-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Message",
        "signature": "a-\u003eb-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSupport for simple mouse gestures.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-MouseGestures.html",
        "fct-type": "module",
        "title": "MouseGestures"
      },
      "index": {
        "description": "Support for simple mouse gestures",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "MouseGestures",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse Gestures",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#t:Direction2D",
      "description": {
        "fct-descr": "\u003cp\u003eTwo-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "data",
        "title": "Direction2D"
      },
      "index": {
        "description": "Two-dimensional directions",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "Direction2D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:D",
      "description": {
        "fct-descr": "\u003cp\u003eDown\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "D"
      },
      "index": {
        "description": "Down",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:L",
      "description": {
        "fct-descr": "\u003cp\u003eLeft\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "Left",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:R",
      "description": {
        "fct-descr": "\u003cp\u003eRight\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "Right",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:U",
      "description": {
        "fct-descr": "\u003cp\u003eUp\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "U",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "U"
      },
      "index": {
        "description": "Up",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "U",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:mkCollect",
      "description": {
        "fct-descr": "\u003cp\u003eA callback generator for \u003ccode\u003e\u003ca\u003emouseGestureH\u003c/a\u003e\u003c/code\u003e. \u003ccode\u003e\u003ca\u003emkCollect\u003c/a\u003e\u003c/code\u003e returns two\n callback functions for passing to \u003ccode\u003e\u003ca\u003emouseGestureH\u003c/a\u003e\u003c/code\u003e. The move hook will\n collect mouse movements (and return the current gesture as a list); the end\n hook will return a list of the completed gesture, which you can access with\n \u003ccode\u003e\u003ca\u003e\u003e\u003e=\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m (Direction2D -\u003e m' [Direction2D], m' [Direction2D])",
        "fct-source": "src/XMonad-Actions-MouseGestures.html#mkCollect",
        "fct-type": "function",
        "title": "mkCollect"
      },
      "index": {
        "description": "callback generator for mouseGestureH mkCollect returns two callback functions for passing to mouseGestureH The move hook will collect mouse movements and return the current gesture as list the end hook will return list of the completed gesture which you can access with",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "mkCollect",
        "normalized": "a(Direction D-\u003eb[Direction D],b[Direction D])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Collect",
        "signature": "m(Direction D-\u003em'[Direction D],m'[Direction D])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:mouseGesture",
      "description": {
        "fct-descr": "\u003cp\u003eA utility function on top of \u003ccode\u003e\u003ca\u003emouseGestureH\u003c/a\u003e\u003c/code\u003e. It uses a \u003ccode\u003e\u003ca\u003eMap\u003c/a\u003e\u003c/code\u003e to\n look up the mouse gesture, then executes the corresponding action (if any).\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map [Direction2D] (Window -\u003e X ()) -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-MouseGestures.html#mouseGesture",
        "fct-type": "function",
        "title": "mouseGesture"
      },
      "index": {
        "description": "utility function on top of mouseGestureH It uses Map to look up the mouse gesture then executes the corresponding action if any",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "mouseGesture",
        "normalized": "Map[Direction D](Window-\u003eX())-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gesture",
        "signature": "Map[Direction D](Window-\u003eX())-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseGestures.html#v:mouseGestureH",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003emouseGestureH\u003c/a\u003e\u003c/code\u003e moveHook endHook\u003c/code\u003e is a mouse button\n event handler. It collects mouse movements, calling \u003ccode\u003emoveHook\u003c/code\u003e for each\n update; when the button is released, it calls \u003ccode\u003eendHook\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.MouseGestures",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Direction2D -\u003e X ()) -\u003e X () -\u003e X ()",
        "fct-source": "src/XMonad-Actions-MouseGestures.html#mouseGestureH",
        "fct-type": "function",
        "title": "mouseGestureH"
      },
      "index": {
        "description": "mouseGestureH moveHook endHook is mouse button event handler It collects mouse movements calling moveHook for each update when the button is released it calls endHook",
        "hierarchy": "XMonad Actions MouseGestures",
        "module": "XMonad.Actions.MouseGestures",
        "name": "mouseGestureH",
        "normalized": "(Direction D-\u003eX())-\u003eX()-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gesture",
        "signature": "(Direction D-\u003eX())-\u003eX()-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseResize.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier to resize windows with the mouse by grabbing the\n window's lower right corner.\n\u003c/p\u003e\u003cp\u003eThis module must be used together with \u003ca\u003eXMonad.Layout.WindowArranger\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.MouseResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-MouseResize.html",
        "fct-type": "module",
        "title": "MouseResize"
      },
      "index": {
        "description": "layout modifier to resize windows with the mouse by grabbing the window lower right corner This module must be used together with XMonad.Layout.WindowArranger",
        "hierarchy": "XMonad Actions MouseResize",
        "module": "XMonad.Actions.MouseResize",
        "name": "MouseResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseResize.html#t:MouseResize",
      "description": {
        "fct-module": "XMonad.Actions.MouseResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-MouseResize.html#MouseResize",
        "fct-type": "data",
        "title": "MouseResize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MouseResize",
        "module": "XMonad.Actions.MouseResize",
        "name": "MouseResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseResize.html#v:MR",
      "description": {
        "fct-module": "XMonad.Actions.MouseResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MR [((a, Rectangle), Maybe a)]",
        "fct-source": "src/XMonad-Actions-MouseResize.html#MouseResize",
        "fct-type": "function",
        "title": "MR"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MouseResize",
        "module": "XMonad.Actions.MouseResize",
        "name": "MR",
        "normalized": "MR[((a,Rectangle),Maybe a)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "MR",
        "signature": "MR[((a,Rectangle),Maybe a)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-MouseResize.html#v:mouseResize",
      "description": {
        "fct-module": "XMonad.Actions.MouseResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout MouseResize l a",
        "fct-source": "src/XMonad-Actions-MouseResize.html#mouseResize",
        "fct-type": "function",
        "title": "mouseResize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions MouseResize",
        "module": "XMonad.Actions.MouseResize",
        "name": "mouseResize",
        "normalized": "a b-\u003eModifiedLayout MouseResize a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize",
        "signature": "l a-\u003eModifiedLayout MouseResize l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-NoBorders.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides helper functions for dealing with window borders.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-NoBorders.html",
        "fct-type": "module",
        "title": "NoBorders"
      },
      "index": {
        "description": "This module provides helper functions for dealing with window borders",
        "hierarchy": "XMonad Actions NoBorders",
        "module": "XMonad.Actions.NoBorders",
        "name": "NoBorders",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "No Borders",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-NoBorders.html#v:toggleBorder",
      "description": {
        "fct-descr": "\u003cp\u003eToggle the border of the currently focused window. To use it, add a\n keybinding like so:\n\u003c/p\u003e\u003cpre\u003e , ((modm,  xK_g ),   withFocused toggleBorder)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-NoBorders.html#toggleBorder",
        "fct-type": "function",
        "title": "toggleBorder"
      },
      "index": {
        "description": "Toggle the border of the currently focused window To use it add keybinding like so modm xK withFocused toggleBorder",
        "hierarchy": "XMonad Actions NoBorders",
        "module": "XMonad.Actions.NoBorders",
        "name": "toggleBorder",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eControl workspaces on different screens (in xinerama mode).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-OnScreen.html",
        "fct-type": "module",
        "title": "OnScreen"
      },
      "index": {
        "description": "Control workspaces on different screens in xinerama mode",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "OnScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#t:Focus",
      "description": {
        "fct-descr": "\u003cp\u003eFocus data definitions\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-OnScreen.html#Focus",
        "fct-type": "data",
        "title": "Focus"
      },
      "index": {
        "description": "Focus data definitions",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "Focus",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:FocusCurrent",
      "description": {
        "fct-descr": "\u003cp\u003ealways keep the focus on the current screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FocusCurrent",
        "fct-source": "src/XMonad-Actions-OnScreen.html#Focus",
        "fct-type": "function",
        "title": "FocusCurrent"
      },
      "index": {
        "description": "always keep the focus on the current screen",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "FocusCurrent",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus Current",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:FocusNew",
      "description": {
        "fct-descr": "\u003cp\u003ealways focus the new screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FocusNew",
        "fct-source": "src/XMonad-Actions-OnScreen.html#Focus",
        "fct-type": "function",
        "title": "FocusNew"
      },
      "index": {
        "description": "always focus the new screen",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "FocusNew",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus New",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:FocusTag",
      "description": {
        "fct-descr": "\u003cp\u003ealways focus tag i on the new stack\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FocusTag WorkspaceId",
        "fct-source": "src/XMonad-Actions-OnScreen.html#Focus",
        "fct-type": "function",
        "title": "FocusTag"
      },
      "index": {
        "description": "always focus tag on the new stack",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "FocusTag",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:FocusTagVisible",
      "description": {
        "fct-descr": "\u003cp\u003efocus tag i only if workspace with tag i is visible on the old stack\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FocusTagVisible WorkspaceId",
        "fct-source": "src/XMonad-Actions-OnScreen.html#Focus",
        "fct-type": "function",
        "title": "FocusTagVisible"
      },
      "index": {
        "description": "focus tag only if workspace with tag is visible on the old stack",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "FocusTagVisible",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus Tag Visible",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:greedyViewOnScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to workspace \u003ccode\u003ei\u003c/code\u003e on screen \u003ccode\u003esc\u003c/code\u003e. If \u003ccode\u003ei\u003c/code\u003e is visible use \u003ccode\u003egreedyView\u003c/code\u003e\n to switch the current workspace with workspace \u003ccode\u003ei\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId-\u003e WorkspaceId-\u003e WindowSet-\u003e WindowSet",
        "fct-type": "function",
        "title": "greedyViewOnScreen"
      },
      "index": {
        "description": "Switch to workspace on screen sc If is visible use greedyView to switch the current workspace with workspace",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "greedyViewOnScreen",
        "normalized": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "View On Screen",
        "signature": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:onScreen",
      "description": {
        "fct-descr": "\u003cp\u003eRun any function that modifies the stack on a given screen. This function\n will also need to know which Screen to focus after the function has been\n run.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(WindowSet -\u003e WindowSet)-\u003e Focus-\u003e ScreenId-\u003e WindowSet-\u003e WindowSet",
        "fct-type": "function",
        "title": "onScreen"
      },
      "index": {
        "description": "Run any function that modifies the stack on given screen This function will also need to know which Screen to focus after the function has been run",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "onScreen",
        "normalized": "(WindowSet-\u003eWindowSet)-\u003eFocus-\u003eScreenId-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "(WindowSet-\u003eWindowSet)-\u003eFocus-\u003eScreenId-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:onScreen-39-",
      "description": {
        "fct-descr": "\u003cp\u003eA variation of \u003ccode\u003eonScreen\u003c/code\u003e which will take any \u003ccode\u003eX ()\u003c/code\u003e function and run it\n on the given screen.\n Warning: This function will change focus even if the function it's supposed\n to run doesn't succeed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()-\u003e Focus-\u003e ScreenId-\u003e X ()",
        "fct-type": "function",
        "title": "onScreen'"
      },
      "index": {
        "description": "variation of onScreen which will take any function and run it on the given screen Warning This function will change focus even if the function it supposed to run doesn succeed",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "onScreen'",
        "normalized": "X()-\u003eFocus-\u003eScreenId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen'",
        "signature": "X()-\u003eFocus-\u003eScreenId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:onlyOnScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to workspace \u003ccode\u003ei\u003c/code\u003e on screen \u003ccode\u003esc\u003c/code\u003e. If \u003ccode\u003ei\u003c/code\u003e is visible do nothing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId-\u003e WorkspaceId-\u003e WindowSet-\u003e WindowSet",
        "fct-type": "function",
        "title": "onlyOnScreen"
      },
      "index": {
        "description": "Switch to workspace on screen sc If is visible do nothing",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "onlyOnScreen",
        "normalized": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On Screen",
        "signature": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:toggleGreedyOnScreen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003etoggleOrView\u003c/code\u003e from \u003ca\u003eXMonad.Actions.CycleWS\u003c/a\u003e for \u003ccode\u003eonScreen\u003c/code\u003e with greedyView\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId-\u003e WorkspaceId-\u003e WindowSet-\u003e WindowSet",
        "fct-type": "function",
        "title": "toggleGreedyOnScreen"
      },
      "index": {
        "description": "toggleOrView from XMonad.Actions.CycleWS for onScreen with greedyView",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "toggleGreedyOnScreen",
        "normalized": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Greedy On Screen",
        "signature": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:toggleOnScreen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003etoggleOrView\u003c/code\u003e as in \u003ca\u003eXMonad.Actions.CycleWS\u003c/a\u003e for \u003ccode\u003eonScreen\u003c/code\u003e with view\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId-\u003e WorkspaceId-\u003e WindowSet-\u003e WindowSet",
        "fct-type": "function",
        "title": "toggleOnScreen"
      },
      "index": {
        "description": "toggleOrView as in XMonad.Actions.CycleWS for onScreen with view",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "toggleOnScreen",
        "normalized": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On Screen",
        "signature": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-OnScreen.html#v:viewOnScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to workspace \u003ccode\u003ei\u003c/code\u003e on screen \u003ccode\u003esc\u003c/code\u003e. If \u003ccode\u003ei\u003c/code\u003e is visible use \u003ccode\u003eview\u003c/code\u003e to\n switch focus to the workspace \u003ccode\u003ei\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.OnScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId-\u003e WorkspaceId-\u003e WindowSet-\u003e WindowSet",
        "fct-type": "function",
        "title": "viewOnScreen"
      },
      "index": {
        "description": "Switch to workspace on screen sc If is visible use view to switch focus to the workspace",
        "hierarchy": "XMonad Actions OnScreen",
        "module": "XMonad.Actions.OnScreen",
        "name": "viewOnScreen",
        "normalized": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On Screen",
        "signature": "ScreenId-\u003eWorkspaceId-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PerWorkspaceKeys.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDefine key-bindings on per-workspace basis.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.PerWorkspaceKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-PerWorkspaceKeys.html",
        "fct-type": "module",
        "title": "PerWorkspaceKeys"
      },
      "index": {
        "description": "Define key-bindings on per-workspace basis",
        "hierarchy": "XMonad Actions PerWorkspaceKeys",
        "module": "XMonad.Actions.PerWorkspaceKeys",
        "name": "PerWorkspaceKeys",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Per Workspace Keys",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PerWorkspaceKeys.html#v:bindOn",
      "description": {
        "fct-descr": "\u003cp\u003eIf current workspace is listed, run appropriate action (only the first match counts!)\n If it isn't listed, then run default action (marked with empty string, \"\"), or do nothing if default isn't supplied.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PerWorkspaceKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, X ())] -\u003e X ()",
        "fct-source": "src/XMonad-Actions-PerWorkspaceKeys.html#bindOn",
        "fct-type": "function",
        "title": "bindOn"
      },
      "index": {
        "description": "If current workspace is listed run appropriate action only the first match counts If it isn listed then run default action marked with empty string or do nothing if default isn supplied",
        "hierarchy": "XMonad Actions PerWorkspaceKeys",
        "module": "XMonad.Actions.PerWorkspaceKeys",
        "name": "bindOn",
        "normalized": "[(String,X())]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On",
        "signature": "[(String,X())]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PerWorkspaceKeys.html#v:chooseAction",
      "description": {
        "fct-descr": "\u003cp\u003eUses supplied function to decide which action to run depending on current workspace name.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PerWorkspaceKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-PerWorkspaceKeys.html#chooseAction",
        "fct-type": "function",
        "title": "chooseAction"
      },
      "index": {
        "description": "Uses supplied function to decide which action to run depending on current workspace name",
        "hierarchy": "XMonad Actions PerWorkspaceKeys",
        "module": "XMonad.Actions.PerWorkspaceKeys",
        "name": "chooseAction",
        "normalized": "(String-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Action",
        "signature": "(String-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eManipulate screens ordered by physical location instead of ID\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html",
        "fct-type": "module",
        "title": "PhysicalScreens"
      },
      "index": {
        "description": "Manipulate screens ordered by physical location instead of ID",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "PhysicalScreens",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Physical Screens",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#t:PhysicalScreen",
      "description": {
        "fct-descr": "\u003cp\u003eThe type of the index of a screen by location\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "newtype",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#PhysicalScreen",
        "fct-type": "newtype",
        "title": "PhysicalScreen"
      },
      "index": {
        "description": "The type of the index of screen by location",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "PhysicalScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Physical Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#v:P",
      "description": {
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "P Int",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#PhysicalScreen",
        "fct-type": "function",
        "title": "P"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "P",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#v:getScreen",
      "description": {
        "fct-descr": "\u003cp\u003eTranslate a physical screen index to a \u003ca\u003eScreenId\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PhysicalScreen -\u003e X (Maybe ScreenId)",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#getScreen",
        "fct-type": "function",
        "title": "getScreen"
      },
      "index": {
        "description": "Translate physical screen index to ScreenId",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "getScreen",
        "normalized": "PhysicalScreen-\u003eX(Maybe ScreenId)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "PhysicalScreen-\u003eX(Maybe ScreenId)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#v:onNextNeighbour",
      "description": {
        "fct-descr": "\u003cp\u003eApply operation on a WindowSet with the WorkspaceId of the next screen in the physical order as parameter.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(WorkspaceId -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#onNextNeighbour",
        "fct-type": "function",
        "title": "onNextNeighbour"
      },
      "index": {
        "description": "Apply operation on WindowSet with the WorkspaceId of the next screen in the physical order as parameter",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "onNextNeighbour",
        "normalized": "(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Neighbour",
        "signature": "(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#v:onPrevNeighbour",
      "description": {
        "fct-descr": "\u003cp\u003eApply operation on a WindowSet with the WorkspaceId of the previous screen in the physical order as parameter.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(WorkspaceId -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#onPrevNeighbour",
        "fct-type": "function",
        "title": "onPrevNeighbour"
      },
      "index": {
        "description": "Apply operation on WindowSet with the WorkspaceId of the previous screen in the physical order as parameter",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "onPrevNeighbour",
        "normalized": "(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev Neighbour",
        "signature": "(WorkspaceId-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#v:sendToScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSend the active window to a given physical screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PhysicalScreen -\u003e X ()",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#sendToScreen",
        "fct-type": "function",
        "title": "sendToScreen"
      },
      "index": {
        "description": "Send the active window to given physical screen",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "sendToScreen",
        "normalized": "PhysicalScreen-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Screen",
        "signature": "PhysicalScreen-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-PhysicalScreens.html#v:viewScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to a given physical screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.PhysicalScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PhysicalScreen -\u003e X ()",
        "fct-source": "src/XMonad-Actions-PhysicalScreens.html#viewScreen",
        "fct-type": "function",
        "title": "viewScreen"
      },
      "index": {
        "description": "Switch to given physical screen",
        "hierarchy": "XMonad Actions PhysicalScreens",
        "module": "XMonad.Actions.PhysicalScreens",
        "name": "viewScreen",
        "normalized": "PhysicalScreen-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "PhysicalScreen-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module has functions to navigate through workspaces in a bidimensional\n manner.  It allows the organization of workspaces in lines, and provides\n functions to move and shift windows in all four directions (left, up, right\n and down) possible in a surface.\n\u003c/p\u003e\u003cp\u003eThis functionality was inspired by GNOME (finite) and KDE (infinite)\n keybindings for workspace navigation, and by \u003ca\u003eXMonad.Actions.CycleWS\u003c/a\u003e for\n the idea of applying this approach to XMonad.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-Plane.html",
        "fct-type": "module",
        "title": "Plane"
      },
      "index": {
        "description": "This module has functions to navigate through workspaces in bidimensional manner It allows the organization of workspaces in lines and provides functions to move and shift windows in all four directions left up right and down possible in surface This functionality was inspired by GNOME finite and KDE infinite keybindings for workspace navigation and by XMonad.Actions.CycleWS for the idea of applying this approach to XMonad",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Plane",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Plane",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#t:Direction",
      "description": {
        "fct-descr": "\u003cp\u003eDirection to go in the plane.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-Plane.html#Direction",
        "fct-type": "data",
        "title": "Direction"
      },
      "index": {
        "description": "Direction to go in the plane",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Direction",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#t:Limits",
      "description": {
        "fct-descr": "\u003cp\u003eDefines the behaviour when you're trying to move out of the limits.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-Plane.html#Limits",
        "fct-type": "data",
        "title": "Limits"
      },
      "index": {
        "description": "Defines the behaviour when you re trying to move out of the limits",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Limits",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Limits",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#t:Lines",
      "description": {
        "fct-descr": "\u003cp\u003eThe number of lines in which the workspaces will be arranged.  It's\n possible to use a number of lines that is not a divisor of the number of\n workspaces, but the results are better when using a divisor.  If it's not a\n divisor, the last line will have the remaining workspaces.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-Plane.html#Lines",
        "fct-type": "data",
        "title": "Lines"
      },
      "index": {
        "description": "The number of lines in which the workspaces will be arranged It possible to use number of lines that is not divisor of the number of workspaces but the results are better when using divisor If it not divisor the last line will have the remaining workspaces",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Lines",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Lines",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:Circular",
      "description": {
        "fct-descr": "\u003cp\u003eGet on the other side, like in the Snake game.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Circular",
        "fct-source": "src/XMonad-Actions-Plane.html#Limits",
        "fct-type": "function",
        "title": "Circular"
      },
      "index": {
        "description": "Get on the other side like in the Snake game",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Circular",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Circular",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:Finite",
      "description": {
        "fct-descr": "\u003cp\u003eIgnore the function call, and keep in the same workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Finite",
        "fct-source": "src/XMonad-Actions-Plane.html#Limits",
        "fct-type": "function",
        "title": "Finite"
      },
      "index": {
        "description": "Ignore the function call and keep in the same workspace",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Finite",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Finite",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:GConf",
      "description": {
        "fct-descr": "\u003cp\u003eUse \u003ccode\u003egconftool-2\u003c/code\u003e to find out the number of lines.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GConf",
        "fct-source": "src/XMonad-Actions-Plane.html#Lines",
        "fct-type": "function",
        "title": "GConf"
      },
      "index": {
        "description": "Use gconftool-2 to find out the number of lines",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "GConf",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "GConf",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:Linear",
      "description": {
        "fct-descr": "\u003cp\u003eThe plan comes as a row, so it goes to the next or prev if\n the workspaces were numbered.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Linear",
        "fct-source": "src/XMonad-Actions-Plane.html#Limits",
        "fct-type": "function",
        "title": "Linear"
      },
      "index": {
        "description": "The plan comes as row so it goes to the next or prev if the workspaces were numbered",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Linear",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Linear",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:Lines",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify the number of lines explicitly.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Lines Int",
        "fct-source": "src/XMonad-Actions-Plane.html#Lines",
        "fct-type": "function",
        "title": "Lines"
      },
      "index": {
        "description": "Specify the number of lines explicitly",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "Lines",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Lines",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:ToDown",
      "description": {
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToDown",
        "fct-source": "src/XMonad-Actions-Plane.html#Direction",
        "fct-type": "function",
        "title": "ToDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "ToDown",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Down",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:ToLeft",
      "description": {
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToLeft",
        "fct-source": "src/XMonad-Actions-Plane.html#Direction",
        "fct-type": "function",
        "title": "ToLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "ToLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:ToRight",
      "description": {
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToRight",
        "fct-source": "src/XMonad-Actions-Plane.html#Direction",
        "fct-type": "function",
        "title": "ToRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "ToRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:ToUp",
      "description": {
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToUp",
        "fct-source": "src/XMonad-Actions-Plane.html#Direction",
        "fct-type": "function",
        "title": "ToUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "ToUp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Up",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:planeKeys",
      "description": {
        "fct-descr": "\u003cp\u003eThis is the way most people would like to use this module.  It attaches the\n \u003ccode\u003e\u003ca\u003eKeyMask\u003c/a\u003e\u003c/code\u003e passed as a parameter with \u003ccode\u003e\u003ca\u003exK_Left\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003exK_Up\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003exK_Right\u003c/a\u003e\u003c/code\u003e and\n \u003ccode\u003e\u003ca\u003exK_Down\u003c/a\u003e\u003c/code\u003e, associating it with \u003ccode\u003e\u003ca\u003eplaneMove\u003c/a\u003e\u003c/code\u003e to the corresponding \u003ccode\u003e\u003ca\u003eDirection\u003c/a\u003e\u003c/code\u003e.\n It also associates these bindings with \u003ccode\u003e\u003ca\u003eshiftMask\u003c/a\u003e\u003c/code\u003e to \u003ccode\u003e\u003ca\u003eplaneShift\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "KeyMask -\u003e Lines -\u003e Limits -\u003e Map (KeyMask, KeySym) (X ())",
        "fct-source": "src/XMonad-Actions-Plane.html#planeKeys",
        "fct-type": "function",
        "title": "planeKeys"
      },
      "index": {
        "description": "This is the way most people would like to use this module It attaches the KeyMask passed as parameter with xK Left xK Up xK Right and xK Down associating it with planeMove to the corresponding Direction It also associates these bindings with shiftMask to planeShift",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "planeKeys",
        "normalized": "KeyMask-\u003eLines-\u003eLimits-\u003eMap(KeyMask,KeySym)(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "KeyMask-\u003eLines-\u003eLimits-\u003eMap(KeyMask,KeySym)(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:planeMove",
      "description": {
        "fct-descr": "\u003cp\u003eMove to the next workspace in \u003ccode\u003e\u003ca\u003eDirection\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Lines -\u003e Limits -\u003e Direction -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Plane.html#planeMove",
        "fct-type": "function",
        "title": "planeMove"
      },
      "index": {
        "description": "Move to the next workspace in Direction",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "planeMove",
        "normalized": "Lines-\u003eLimits-\u003eDirection-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move",
        "signature": "Lines-\u003eLimits-\u003eDirection-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Plane.html#v:planeShift",
      "description": {
        "fct-descr": "\u003cp\u003eShift a window to the next workspace in \u003ccode\u003e\u003ca\u003eDirection\u003c/a\u003e\u003c/code\u003e.  Note that this will\n also move to the next workspace.  It's a good idea to use the same \u003ccode\u003e\u003ca\u003eLines\u003c/a\u003e\u003c/code\u003e\n and \u003ccode\u003e\u003ca\u003eLimits\u003c/a\u003e\u003c/code\u003e for all the bindings.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Plane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Lines -\u003e Limits -\u003e Direction -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Plane.html#planeShift",
        "fct-type": "function",
        "title": "planeShift"
      },
      "index": {
        "description": "Shift window to the next workspace in Direction Note that this will also move to the next workspace It good idea to use the same Lines and Limits for all the bindings",
        "hierarchy": "XMonad Actions Plane",
        "module": "XMonad.Actions.Plane",
        "name": "planeShift",
        "normalized": "Lines-\u003eLimits-\u003eDirection-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shift",
        "signature": "Lines-\u003eLimits-\u003eDirection-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Promote.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAlternate promote function for xmonad.\n\u003c/p\u003e\u003cp\u003eMoves the focused window to the master pane. All other windows\n retain their order. If focus is in the master, swap it with the\n next window in the stack. Focus stays in the master.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.Promote",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-Promote.html",
        "fct-type": "module",
        "title": "Promote"
      },
      "index": {
        "description": "Alternate promote function for xmonad Moves the focused window to the master pane All other windows retain their order If focus is in the master swap it with the next window in the stack Focus stays in the master",
        "hierarchy": "XMonad Actions Promote",
        "module": "XMonad.Actions.Promote",
        "name": "Promote",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Promote",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Promote.html#v:promote",
      "description": {
        "fct-descr": "\u003cp\u003eMove the focused window to the master pane. All other windows\n   retain their order. If focus is in the master, swap it with the\n   next windo in the stack. Focus stays in the master.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Promote",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-Promote.html#promote",
        "fct-type": "function",
        "title": "promote"
      },
      "index": {
        "description": "Move the focused window to the master pane All other windows retain their order If focus is in the master swap it with the next windo in the stack Focus stays in the master",
        "hierarchy": "XMonad Actions Promote",
        "module": "XMonad.Actions.Promote",
        "name": "promote",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RandomBackground.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAn action to start terminals with a random background color\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.RandomBackground",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-RandomBackground.html",
        "fct-type": "module",
        "title": "RandomBackground"
      },
      "index": {
        "description": "An action to start terminals with random background color",
        "hierarchy": "XMonad Actions RandomBackground",
        "module": "XMonad.Actions.RandomBackground",
        "name": "RandomBackground",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Random Background",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RandomBackground.html#t:RandomColor",
      "description": {
        "fct-descr": "\u003cp\u003eRandomColor fixes constraints when generating random colors. All\n parameters should be in the range 0 -- 0xff\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RandomBackground",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-RandomBackground.html#RandomColor",
        "fct-type": "data",
        "title": "RandomColor"
      },
      "index": {
        "description": "RandomColor fixes constraints when generating random colors All parameters should be in the range xff",
        "hierarchy": "XMonad Actions RandomBackground",
        "module": "XMonad.Actions.RandomBackground",
        "name": "RandomColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Random Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RandomBackground.html#v:HSV",
      "description": {
        "fct-descr": "\u003cp\u003especify the saturation and value, leaving the hue random.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RandomBackground",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HSV Double Double",
        "fct-source": "src/XMonad-Actions-RandomBackground.html#RandomColor",
        "fct-type": "function",
        "title": "HSV"
      },
      "index": {
        "description": "specify the saturation and value leaving the hue random",
        "hierarchy": "XMonad Actions RandomBackground",
        "module": "XMonad.Actions.RandomBackground",
        "name": "HSV",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "HSV",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RandomBackground.html#v:RGB",
      "description": {
        "fct-descr": "\u003cp\u003especify the minimum and maximum lowest values for each color channel.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RandomBackground",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RGB Int Int",
        "fct-source": "src/XMonad-Actions-RandomBackground.html#RandomColor",
        "fct-type": "function",
        "title": "RGB"
      },
      "index": {
        "description": "specify the minimum and maximum lowest values for each color channel",
        "hierarchy": "XMonad Actions RandomBackground",
        "module": "XMonad.Actions.RandomBackground",
        "name": "RGB",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "RGB",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RandomBackground.html#v:randomBg",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003erandomBg\u003c/code\u003e starts a terminal with the background color taken from \u003ccode\u003e\u003ca\u003erandomBg'\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eThis depends on the your \u003ccode\u003e\u003ca\u003eterminal\u003c/a\u003e\u003c/code\u003e configuration field accepting an\n argument like \u003ccode\u003e-bg '#ff0023'\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RandomBackground",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RandomColor -\u003e X ()",
        "fct-source": "src/XMonad-Actions-RandomBackground.html#randomBg",
        "fct-type": "function",
        "title": "randomBg"
      },
      "index": {
        "description": "randomBg starts terminal with the background color taken from randomBg This depends on the your terminal configuration field accepting an argument like bg ff0023",
        "hierarchy": "XMonad Actions RandomBackground",
        "module": "XMonad.Actions.RandomBackground",
        "name": "randomBg",
        "normalized": "RandomColor-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bg",
        "signature": "RandomColor-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RandomBackground.html#v:randomBg-39-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003erandomBg'\u003c/code\u003e produces a random hex number in the form \u003ccode\u003e'#xxyyzz'\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RandomBackground",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RandomColor -\u003e m String",
        "fct-source": "src/XMonad-Actions-RandomBackground.html#randomBg%27",
        "fct-type": "function",
        "title": "randomBg'"
      },
      "index": {
        "description": "randomBg produces random hex number in the form xxyyzz",
        "hierarchy": "XMonad Actions RandomBackground",
        "module": "XMonad.Actions.RandomBackground",
        "name": "randomBg'",
        "normalized": "RandomColor-\u003ea String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bg'",
        "signature": "RandomColor-\u003em String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eRotate all windows except the master window and keep the focus in\n place.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-RotSlaves.html",
        "fct-type": "module",
        "title": "RotSlaves"
      },
      "index": {
        "description": "Rotate all windows except the master window and keep the focus in place",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "RotSlaves",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Rot Slaves",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#v:rotAll-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThe actual rotation, as a pure function on the window stack.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([a] -\u003e [a]) -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-RotSlaves.html#rotAll%27",
        "fct-type": "function",
        "title": "rotAll'"
      },
      "index": {
        "description": "The actual rotation as pure function on the window stack",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "rotAll'",
        "normalized": "([a]-\u003e[a])-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All'",
        "signature": "([a]-\u003e[a])-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#v:rotAllDown",
      "description": {
        "fct-descr": "\u003cp\u003eRotate all the windows in the current stack.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-RotSlaves.html#rotAllDown",
        "fct-type": "function",
        "title": "rotAllDown"
      },
      "index": {
        "description": "Rotate all the windows in the current stack",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "rotAllDown",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All Down",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#v:rotAllUp",
      "description": {
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-RotSlaves.html#rotAllUp",
        "fct-type": "function",
        "title": "rotAllUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "rotAllUp",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All Up",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#v:rotSlaves-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThe actual rotation, as a pure function on the window stack.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([a] -\u003e [a]) -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-RotSlaves.html#rotSlaves%27",
        "fct-type": "function",
        "title": "rotSlaves'"
      },
      "index": {
        "description": "The actual rotation as pure function on the window stack",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "rotSlaves'",
        "normalized": "([a]-\u003e[a])-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Slaves'",
        "signature": "([a]-\u003e[a])-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#v:rotSlavesDown",
      "description": {
        "fct-descr": "\u003cp\u003eRotate the windows in the current stack, excluding the first one\n   (master).\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-RotSlaves.html#rotSlavesDown",
        "fct-type": "function",
        "title": "rotSlavesDown"
      },
      "index": {
        "description": "Rotate the windows in the current stack excluding the first one master",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "rotSlavesDown",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Slaves Down",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-RotSlaves.html#v:rotSlavesUp",
      "description": {
        "fct-module": "XMonad.Actions.RotSlaves",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-RotSlaves.html#rotSlavesUp",
        "fct-type": "function",
        "title": "rotSlavesUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions RotSlaves",
        "module": "XMonad.Actions.RotSlaves",
        "name": "rotSlavesUp",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Slaves Up",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-Search.html",
        "fct-type": "module",
        "title": "Search"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "Search",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#t:SearchEngine",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-Search.html#SearchEngine",
        "fct-type": "data",
        "title": "SearchEngine"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "SearchEngine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search Engine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:-33--62-",
      "description": {
        "fct-descr": "\u003cp\u003eConnects a few search engines into one. If the search engines' names are\n   \"s1\", \"s2\" and \"s3\", then the resulting engine will use s1 if the query\n   is \u003ccode\u003es1:word\u003c/code\u003e, s2 if you type \u003ccode\u003es2:word\u003c/code\u003e and s3 in all other cases.\n\u003c/p\u003e\u003cp\u003eExample:\n\u003c/p\u003e\u003cpre\u003e multiEngine = intelligent (wikipedia !\u003e mathworld !\u003e (prefixAware google))\n\u003c/pre\u003e\u003cp\u003eNow if you type \"wiki:Haskell\" it will search for \"Haskell\" in Wikipedia,\n  \"mathworld:integral\" will search mathworld, and everything else will fall back to\n  google. The use of intelligent will make sure that URLs are opened directly. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine -\u003e SearchEngine -\u003e SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#%21%3E",
        "fct-type": "function",
        "title": "(!\u003e)"
      },
      "index": {
        "description": "Connects few search engines into one If the search engines names are s1 s2 and s3 then the resulting engine will use s1 if the query is s1 word s2 if you type s2 word and s3 in all other cases Example multiEngine intelligent wikipedia mathworld prefixAware google Now if you type wiki Haskell it will search for Haskell in Wikipedia mathworld integral will search mathworld and everything else will fall back to google The use of intelligent will make sure that URLs are opened directly",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "(!\u003e) !\u003e",
        "normalized": "SearchEngine-\u003eSearchEngine-\u003eSearchEngine",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "SearchEngine-\u003eSearchEngine-\u003eSearchEngine"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:SearchEngine",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine Name Site",
        "fct-source": "src/XMonad-Actions-Search.html#SearchEngine",
        "fct-type": "function",
        "title": "SearchEngine"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "SearchEngine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search Engine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:alpha",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#alpha",
        "fct-type": "function",
        "title": "alpha"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "alpha",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:amazon",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#amazon",
        "fct-type": "function",
        "title": "amazon"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "amazon",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:codesearch",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#codesearch",
        "fct-type": "function",
        "title": "codesearch"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "codesearch",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:deb",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#deb",
        "fct-type": "function",
        "title": "deb"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "deb",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:debbts",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#debbts",
        "fct-type": "function",
        "title": "debbts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "debbts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:debpts",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#debpts",
        "fct-type": "function",
        "title": "debpts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "debpts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:dictionary",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#dictionary",
        "fct-type": "function",
        "title": "dictionary"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "dictionary",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:escape",
      "description": {
        "fct-descr": "\u003cp\u003eEscape the search string so search engines understand it.\n Note that everything is escaped; we could be smarter and use \u003ccode\u003eisAllowedInURI\u003c/code\u003e\n but then that'd be hard enough to copy-and-paste we'd need to depend on \u003ccode\u003enetwork\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Actions-Search.html#escape",
        "fct-type": "function",
        "title": "escape"
      },
      "index": {
        "description": "Escape the search string so search engines understand it Note that everything is escaped we could be smarter and use isAllowedInURI but then that be hard enough to copy-and-paste we need to depend on network",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "escape",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:google",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#google",
        "fct-type": "function",
        "title": "google"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "google",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:hackage",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#hackage",
        "fct-type": "function",
        "title": "hackage"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "hackage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:hoogle",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#hoogle",
        "fct-type": "function",
        "title": "hoogle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "hoogle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:images",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#images",
        "fct-type": "function",
        "title": "images"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "images",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:imdb",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#imdb",
        "fct-type": "function",
        "title": "imdb"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "imdb",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:intelligent",
      "description": {
        "fct-descr": "\u003cp\u003eThis function wraps up a search engine and creates a new one, which works\n   like the argument, but goes directly to a URL if one is given rather than\n   searching.\n\u003c/p\u003e\u003cpre\u003e myIntelligentGoogleEngine = intelligent google\n\u003c/pre\u003e\u003cp\u003eNow if you search for http://xmonad.org it will directly open in your browser\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine -\u003e SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#intelligent",
        "fct-type": "function",
        "title": "intelligent"
      },
      "index": {
        "description": "This function wraps up search engine and creates new one which works like the argument but goes directly to URL if one is given rather than searching myIntelligentGoogleEngine intelligent google Now if you search for http xmonad.org it will directly open in your browser",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "intelligent",
        "normalized": "SearchEngine-\u003eSearchEngine",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "SearchEngine-\u003eSearchEngine"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:isPrefixOf",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003eisPrefixOf\u003c/a\u003e\u003c/code\u003e function takes two lists and returns \u003ccode\u003e\u003ca\u003eTrue\u003c/a\u003e\u003c/code\u003e\n iff the first list is a prefix of the second.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[a] -\u003e [a] -\u003e Bool",
        "fct-type": "function",
        "title": "isPrefixOf"
      },
      "index": {
        "description": "The isPrefixOf function takes two lists and returns True iff the first list is prefix of the second",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "isPrefixOf",
        "normalized": "[a]-\u003e[a]-\u003eBool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prefix Of",
        "signature": "[a]-\u003e[a]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:isohunt",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#isohunt",
        "fct-type": "function",
        "title": "isohunt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "isohunt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:lucky",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#lucky",
        "fct-type": "function",
        "title": "lucky"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "lucky",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:maps",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#maps",
        "fct-type": "function",
        "title": "maps"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "maps",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:mathworld",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#mathworld",
        "fct-type": "function",
        "title": "mathworld"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "mathworld",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:multi",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#multi",
        "fct-type": "function",
        "title": "multi"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "multi",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:namedEngine",
      "description": {
        "fct-descr": "\u003cp\u003eChanges search engine's name \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Name -\u003e SearchEngine -\u003e SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#namedEngine",
        "fct-type": "function",
        "title": "namedEngine"
      },
      "index": {
        "description": "Changes search engine name",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "namedEngine",
        "normalized": "Name-\u003eSearchEngine-\u003eSearchEngine",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Engine",
        "signature": "Name-\u003eSearchEngine-\u003eSearchEngine"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:openstreetmap",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#openstreetmap",
        "fct-type": "function",
        "title": "openstreetmap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "openstreetmap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:prefixAware",
      "description": {
        "fct-descr": "\u003cp\u003eMakes a search engine prefix-aware. Especially useful together with \u003ccode\u003e\u003ca\u003e!\u003e\u003c/a\u003e\u003c/code\u003e.\n   It will automatically remove the prefix from a query so that you don't end\n     up searching for google:xmonad if google is your fallback engine and you\n     explicitly add the prefix. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine -\u003e SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#prefixAware",
        "fct-type": "function",
        "title": "prefixAware"
      },
      "index": {
        "description": "Makes search engine prefix-aware Especially useful together with It will automatically remove the prefix from query so that you don end up searching for google xmonad if google is your fallback engine and you explicitly add the prefix",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "prefixAware",
        "normalized": "SearchEngine-\u003eSearchEngine",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Aware",
        "signature": "SearchEngine-\u003eSearchEngine"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:promptSearch",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003esearch\u003c/a\u003e\u003c/code\u003e, but in this case, the string is not specified but grabbed\n from the user's response to a prompt. Example:\n\u003c/p\u003e\u003cpre\u003e , ((modm, xK_g), promptSearch greenXPConfig google)\n\u003c/pre\u003e\u003cp\u003eThis specializes \u003ca\u003epromptSearchBrowser\u003c/a\u003e by supplying the browser argument as\n   supplied by \u003ccode\u003e\u003ca\u003egetBrowser\u003c/a\u003e\u003c/code\u003e from \u003ca\u003eXMonad.Prompt.Shell\u003c/a\u003e. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e SearchEngine -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Search.html#promptSearch",
        "fct-type": "function",
        "title": "promptSearch"
      },
      "index": {
        "description": "Like search but in this case the string is not specified but grabbed from the user response to prompt Example modm xK promptSearch greenXPConfig google This specializes promptSearchBrowser by supplying the browser argument as supplied by getBrowser from XMonad.Prompt.Shell",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "promptSearch",
        "normalized": "XPConfig-\u003eSearchEngine-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search",
        "signature": "XPConfig-\u003eSearchEngine-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:promptSearchBrowser",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003esearch\u003c/a\u003e\u003c/code\u003e, but for use with the output from a Prompt; it grabs the\n   Prompt's result, passes it to a given searchEngine and opens it in a given\n   browser. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e Browser -\u003e SearchEngine -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Search.html#promptSearchBrowser",
        "fct-type": "function",
        "title": "promptSearchBrowser"
      },
      "index": {
        "description": "Like search but for use with the output from Prompt it grabs the Prompt result passes it to given searchEngine and opens it in given browser",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "promptSearchBrowser",
        "normalized": "XPConfig-\u003eBrowser-\u003eSearchEngine-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search Browser",
        "signature": "XPConfig-\u003eBrowser-\u003eSearchEngine-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:scholar",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#scholar",
        "fct-type": "function",
        "title": "scholar"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "scholar",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:search",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a browser, a search engine's transformation function, and a search term, perform the\n   requested search in the browser.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Browser -\u003e Site -\u003e Query -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Search.html#search",
        "fct-type": "function",
        "title": "search"
      },
      "index": {
        "description": "Given browser search engine transformation function and search term perform the requested search in the browser",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "search",
        "normalized": "Browser-\u003eSite-\u003eQuery-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Browser-\u003eSite-\u003eQuery-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:searchEngine",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a base URL, create the \u003ccode\u003e\u003ca\u003eSearchEngine\u003c/a\u003e\u003c/code\u003e that escapes the query and\n   appends it to the base. You can easily define a new engine locally using\n   exported functions without needing to modify \u003ca\u003eXMonad.Actions.Search\u003c/a\u003e:\n\u003c/p\u003e\u003cpre\u003e myNewEngine = searchEngine \"site\" \"http://site.com/search=\"\n\u003c/pre\u003e\u003cp\u003eThe important thing is that the site has a interface which accepts the escaped query\n   string as part of the URL. Alas, the exact URL to feed searchEngine varies\n   from site to site, often considerably, so there's no general way to cover this.\n\u003c/p\u003e\u003cp\u003eGenerally, examining the resultant URL of a search will allow you to reverse-engineer\n   it if you can't find the necessary URL already described in other projects such as Surfraw. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Name -\u003e String -\u003e SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#searchEngine",
        "fct-type": "function",
        "title": "searchEngine"
      },
      "index": {
        "description": "Given base URL create the SearchEngine that escapes the query and appends it to the base You can easily define new engine locally using exported functions without needing to modify XMonad.Actions.Search myNewEngine searchEngine site http site.com search The important thing is that the site has interface which accepts the escaped query string as part of the URL Alas the exact URL to feed searchEngine varies from site to site often considerably so there no general way to cover this Generally examining the resultant URL of search will allow you to reverse-engineer it if you can find the necessary URL already described in other projects such as Surfraw",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "searchEngine",
        "normalized": "Name-\u003eString-\u003eSearchEngine",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Engine",
        "signature": "Name-\u003eString-\u003eSearchEngine"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:searchEngineF",
      "description": {
        "fct-descr": "\u003cp\u003eIf your search engine is more complex than this (you may want to identify\n   the kind of input and make the search URL dependent on the input or put the query\n   inside of a URL instead of in the end) you can use the alternative \u003ccode\u003e\u003ca\u003esearchEngineF\u003c/a\u003e\u003c/code\u003e function.\n\u003c/p\u003e\u003cpre\u003e searchFunc :: String -\u003e String\n searchFunc s | s `isPrefixOf` \"wiki:\"   = \"http://en.wikipedia.org/wiki/\" ++ (escape $ tail $ snd $ break (==':') s)\n              | s `isPrefixOf` \"http://\" = s\n              | otherwise               = (use google) s\n myNewEngine = searchEngineF \"mymulti\" searchFunc\n\u003c/pre\u003e\u003cp\u003e\u003ccode\u003esearchFunc\u003c/code\u003e here searches for a word in wikipedia if it has a prefix\n   of \"wiki:\" (you can use the \u003ccode\u003e\u003ca\u003eescape\u003c/a\u003e\u003c/code\u003e function to escape any forbidden characters), opens an address\n   directly if it starts with \"http://\" and otherwise uses the provided google search engine.\n   You can use other engines inside of your own through the \u003ccode\u003e\u003ca\u003euse\u003c/a\u003e\u003c/code\u003e function as shown above to make\n   complex searches.\n\u003c/p\u003e\u003cp\u003eThe user input will be automatically escaped in search engines created with \u003ccode\u003e\u003ca\u003esearchEngine\u003c/a\u003e\u003c/code\u003e,\n   \u003ccode\u003e\u003ca\u003esearchEngineF\u003c/a\u003e\u003c/code\u003e, however, completely depends on the transformation function passed to it. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Name -\u003e Site -\u003e SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#searchEngineF",
        "fct-type": "function",
        "title": "searchEngineF"
      },
      "index": {
        "description": "If your search engine is more complex than this you may want to identify the kind of input and make the search URL dependent on the input or put the query inside of URL instead of in the end you can use the alternative searchEngineF function searchFunc String String searchFunc isPrefixOf wiki http en.wikipedia.org wiki escape tail snd break isPrefixOf http otherwise use google myNewEngine searchEngineF mymulti searchFunc searchFunc here searches for word in wikipedia if it has prefix of wiki you can use the escape function to escape any forbidden characters opens an address directly if it starts with http and otherwise uses the provided google search engine You can use other engines inside of your own through the use function as shown above to make complex searches The user input will be automatically escaped in search engines created with searchEngine searchEngineF however completely depends on the transformation function passed to it",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "searchEngineF",
        "normalized": "Name-\u003eSite-\u003eSearchEngine",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Engine",
        "signature": "Name-\u003eSite-\u003eSearchEngine"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:selectSearch",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003esearch\u003c/a\u003e\u003c/code\u003e, but for use with the X selection; it grabs the selection,\n   passes it to a given searchEngine and opens it in the default browser . Example:\n\u003c/p\u003e\u003cpre\u003e , ((modm .|. shiftMask, xK_g), selectSearch google)\n\u003c/pre\u003e\u003cp\u003eThis specializes \u003ca\u003eselectSearchBrowser\u003c/a\u003e by supplying the browser argument as\n   supplied by \u003ccode\u003e\u003ca\u003egetBrowser\u003c/a\u003e\u003c/code\u003e from \u003ca\u003eXMonad.Prompt.Shell\u003c/a\u003e. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Search.html#selectSearch",
        "fct-type": "function",
        "title": "selectSearch"
      },
      "index": {
        "description": "Like search but for use with the selection it grabs the selection passes it to given searchEngine and opens it in the default browser Example modm shiftMask xK selectSearch google This specializes selectSearchBrowser by supplying the browser argument as supplied by getBrowser from XMonad.Prompt.Shell",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "selectSearch",
        "normalized": "SearchEngine-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search",
        "signature": "SearchEngine-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:selectSearchBrowser",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003esearch\u003c/a\u003e\u003c/code\u003e, but for use with the X selection; it grabs the selection,\n   passes it to a given searchEngine and opens it in a given browser.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Browser -\u003e SearchEngine -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Search.html#selectSearchBrowser",
        "fct-type": "function",
        "title": "selectSearchBrowser"
      },
      "index": {
        "description": "Like search but for use with the selection it grabs the selection passes it to given searchEngine and opens it in given browser",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "selectSearchBrowser",
        "normalized": "Browser-\u003eSearchEngine-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Search Browser",
        "signature": "Browser-\u003eSearchEngine-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:thesaurus",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#thesaurus",
        "fct-type": "function",
        "title": "thesaurus"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "thesaurus",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:use",
      "description": {
        "fct-descr": "\u003cp\u003eGiven an already defined search engine, extracts its transformation\n   function, making it easy to create compound search engines.\n   For an instance you can use \u003ccode\u003euse google\u003c/code\u003e to get a function which\n   makes the same transformation as the google search engine would.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine -\u003e Site",
        "fct-source": "src/XMonad-Actions-Search.html#use",
        "fct-type": "function",
        "title": "use"
      },
      "index": {
        "description": "Given an already defined search engine extracts its transformation function making it easy to create compound search engines For an instance you can use use google to get function which makes the same transformation as the google search engine would",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "use",
        "normalized": "SearchEngine-\u003eSite",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "SearchEngine-\u003eSite"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:wayback",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#wayback",
        "fct-type": "function",
        "title": "wayback"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "wayback",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:wikipedia",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#wikipedia",
        "fct-type": "function",
        "title": "wikipedia"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "wikipedia",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:wiktionary",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#wiktionary",
        "fct-type": "function",
        "title": "wiktionary"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "wiktionary",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Search.html#v:youtube",
      "description": {
        "fct-module": "XMonad.Actions.Search",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SearchEngine",
        "fct-source": "src/XMonad-Actions-Search.html#youtube",
        "fct-type": "function",
        "title": "youtube"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Search",
        "module": "XMonad.Actions.Search",
        "name": "youtube",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SimpleDate.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAn example external contrib module for XMonad.\n Provides a simple binding to dzen2 to print the date as a popup menu.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.SimpleDate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-SimpleDate.html",
        "fct-type": "module",
        "title": "SimpleDate"
      },
      "index": {
        "description": "An example external contrib module for XMonad Provides simple binding to dzen2 to print the date as popup menu",
        "hierarchy": "XMonad Actions SimpleDate",
        "module": "XMonad.Actions.SimpleDate",
        "name": "SimpleDate",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SimpleDate.html#v:date",
      "description": {
        "fct-module": "XMonad.Actions.SimpleDate",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-SimpleDate.html#date",
        "fct-type": "function",
        "title": "date"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions SimpleDate",
        "module": "XMonad.Actions.SimpleDate",
        "name": "date",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SinkAll.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides a simple binding that pushes all floating windows on the\n current workspace back into tiling.  Note that the functionality of\n this module has been folded into the more general\n \u003ca\u003eXMonad.Actions.WithAll\u003c/a\u003e; this module simply re-exports the\n \u003ccode\u003e\u003ca\u003esinkAll\u003c/a\u003e\u003c/code\u003e function for backwards compatibility.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.SinkAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-SinkAll.html",
        "fct-type": "module",
        "title": "SinkAll"
      },
      "index": {
        "description": "Provides simple binding that pushes all floating windows on the current workspace back into tiling Note that the functionality of this module has been folded into the more general XMonad.Actions.WithAll this module simply re-exports the sinkAll function for backwards compatibility",
        "hierarchy": "XMonad Actions SinkAll",
        "module": "XMonad.Actions.SinkAll",
        "name": "SinkAll",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sink All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SinkAll.html#v:sinkAll",
      "description": {
        "fct-descr": "\u003cp\u003eUn-float all floating windows on the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SinkAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WithAll.html#sinkAll",
        "fct-type": "function",
        "title": "sinkAll"
      },
      "index": {
        "description": "Un-float all floating windows on the current workspace",
        "hierarchy": "XMonad Actions SinkAll",
        "module": "XMonad.Actions.SinkAll",
        "name": "sinkAll",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides a way to modify a window spawned by a command(e.g shift it to the workspace\n it was launched on) by using the _NET_WM_PID property that most windows set on creation.\n Hence this module won't work on applications that don't set this property.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-SpawnOn.html",
        "fct-type": "module",
        "title": "SpawnOn"
      },
      "index": {
        "description": "Provides way to modify window spawned by command e.g shift it to the workspace it was launched on by using the NET WM PID property that most windows set on creation Hence this module won work on applications that don set this property",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "SpawnOn",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn On",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#t:Spawner",
      "description": {
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#Spawner",
        "fct-type": "data",
        "title": "Spawner"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "Spawner",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawner",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#v:manageSpawn",
      "description": {
        "fct-descr": "\u003cp\u003eProvides a manage hook to react on process spawned with\n \u003ccode\u003e\u003ca\u003espawnOn\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003espawnHere\u003c/a\u003e\u003c/code\u003e etc.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#manageSpawn",
        "fct-type": "function",
        "title": "manageSpawn"
      },
      "index": {
        "description": "Provides manage hook to react on process spawned with spawnOn spawnHere etc",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "manageSpawn",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#v:shellPromptHere",
      "description": {
        "fct-descr": "\u003cp\u003eReplacement for Shell prompt (\u003ca\u003eXMonad.Prompt.Shell\u003c/a\u003e) which launches\n application on current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#shellPromptHere",
        "fct-type": "function",
        "title": "shellPromptHere"
      },
      "index": {
        "description": "Replacement for Shell prompt XMonad.Prompt.Shell which launches application on current workspace",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "shellPromptHere",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt Here",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#v:shellPromptOn",
      "description": {
        "fct-descr": "\u003cp\u003eReplacement for Shell prompt (\u003ca\u003eXMonad.Prompt.Shell\u003c/a\u003e) which launches\n application on given workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#shellPromptOn",
        "fct-type": "function",
        "title": "shellPromptOn"
      },
      "index": {
        "description": "Replacement for Shell prompt XMonad.Prompt.Shell which launches application on given workspace",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "shellPromptOn",
        "normalized": "WorkspaceId-\u003eXPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt On",
        "signature": "WorkspaceId-\u003eXPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#v:spawnAndDo",
      "description": {
        "fct-descr": "\u003cp\u003eSpawn an application and apply the manage hook when it opens.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#spawnAndDo",
        "fct-type": "function",
        "title": "spawnAndDo"
      },
      "index": {
        "description": "Spawn an application and apply the manage hook when it opens",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "spawnAndDo",
        "normalized": "ManageHook-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And Do",
        "signature": "ManageHook-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#v:spawnHere",
      "description": {
        "fct-descr": "\u003cp\u003eReplacement for \u003ccode\u003e\u003ca\u003espawn\u003c/a\u003e\u003c/code\u003e which launches\n application on current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#spawnHere",
        "fct-type": "function",
        "title": "spawnHere"
      },
      "index": {
        "description": "Replacement for spawn which launches application on current workspace",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "spawnHere",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Here",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SpawnOn.html#v:spawnOn",
      "description": {
        "fct-descr": "\u003cp\u003eReplacement for \u003ccode\u003e\u003ca\u003espawn\u003c/a\u003e\u003c/code\u003e which launches\n application on given workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SpawnOn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-SpawnOn.html#spawnOn",
        "fct-type": "function",
        "title": "spawnOn"
      },
      "index": {
        "description": "Replacement for spawn which launches application on given workspace",
        "hierarchy": "XMonad Actions SpawnOn",
        "module": "XMonad.Actions.SpawnOn",
        "name": "spawnOn",
        "normalized": "WorkspaceId-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On",
        "signature": "WorkspaceId-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Submap.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module that allows the user to create a sub-mapping of key bindings.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.Submap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-Submap.html",
        "fct-type": "module",
        "title": "Submap"
      },
      "index": {
        "description": "module that allows the user to create sub-mapping of key bindings",
        "hierarchy": "XMonad Actions Submap",
        "module": "XMonad.Actions.Submap",
        "name": "Submap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Submap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Submap.html#v:submap",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a \u003ccode\u003eData.Map.Map\u003c/code\u003e from key bindings to X () actions, return\n   an action which waits for a user keypress and executes the\n   corresponding action, or does nothing if the key is not found in\n   the map.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Submap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map (KeyMask, KeySym) (X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Submap.html#submap",
        "fct-type": "function",
        "title": "submap"
      },
      "index": {
        "description": "Given Data.Map.Map from key bindings to actions return an action which waits for user keypress and executes the corresponding action or does nothing if the key is not found in the map",
        "hierarchy": "XMonad Actions Submap",
        "module": "XMonad.Actions.Submap",
        "name": "submap",
        "normalized": "Map(KeyMask,KeySym)(X())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Map(KeyMask,KeySym)(X())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Submap.html#v:submapDefault",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003esubmap\u003c/a\u003e\u003c/code\u003e, but executes a default action if the key did not match.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Submap",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e Map (KeyMask, KeySym) (X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Submap.html#submapDefault",
        "fct-type": "function",
        "title": "submapDefault"
      },
      "index": {
        "description": "Like submap but executes default action if the key did not match",
        "hierarchy": "XMonad Actions Submap",
        "module": "XMonad.Actions.Submap",
        "name": "submapDefault",
        "normalized": "X()-\u003eMap(KeyMask,KeySym)(X())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default",
        "signature": "X()-\u003eMap(KeyMask,KeySym)(X())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLets you swap workspace tags, so you can keep related ones next to\n each other, without having to move individual windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-SwapWorkspaces.html",
        "fct-type": "module",
        "title": "SwapWorkspaces"
      },
      "index": {
        "description": "Lets you swap workspace tags so you can keep related ones next to each other without having to move individual windows",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "SwapWorkspaces",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Swap Workspaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#t:Direction1D",
      "description": {
        "fct-descr": "\u003cp\u003eOne-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "data",
        "title": "Direction1D"
      },
      "index": {
        "description": "One-dimensional directions",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "Direction1D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#v:Next",
      "description": {
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Next",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Next"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "Next",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#v:Prev",
      "description": {
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Prev",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Prev"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "Prev",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#v:swapTo",
      "description": {
        "fct-descr": "\u003cp\u003eSay \u003ccode\u003eswapTo Next\u003c/code\u003e or \u003ccode\u003eswapTo Prev\u003c/code\u003e to move your current workspace.\n This is an \u003ccode\u003eX ()\u003c/code\u003e so can be hooked up to your keybindings directly.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e X ()",
        "fct-source": "src/XMonad-Actions-SwapWorkspaces.html#swapTo",
        "fct-type": "function",
        "title": "swapTo"
      },
      "index": {
        "description": "Say swapTo Next or swapTo Prev to move your current workspace This is an so can be hooked up to your keybindings directly",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "swapTo",
        "normalized": "Direction D-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#v:swapWithCurrent",
      "description": {
        "fct-descr": "\u003cp\u003eSwaps the currently focused workspace with the given workspace tag, via\n   \u003ccode\u003eswapWorkspaces\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "i -\u003e StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-SwapWorkspaces.html#swapWithCurrent",
        "fct-type": "function",
        "title": "swapWithCurrent"
      },
      "index": {
        "description": "Swaps the currently focused workspace with the given workspace tag via swapWorkspaces",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "swapWithCurrent",
        "normalized": "a-\u003eStackSet a b c d e-\u003eStackSet a b c d e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With Current",
        "signature": "i-\u003eStackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-SwapWorkspaces.html#v:swapWorkspaces",
      "description": {
        "fct-descr": "\u003cp\u003eTakes two workspace tags and an existing XMonad.StackSet and returns a new\n   one with the two corresponding workspaces' tags swapped.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.SwapWorkspaces",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "i -\u003e i -\u003e StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-SwapWorkspaces.html#swapWorkspaces",
        "fct-type": "function",
        "title": "swapWorkspaces"
      },
      "index": {
        "description": "Takes two workspace tags and an existing XMonad.StackSet and returns new one with the two corresponding workspaces tags swapped",
        "hierarchy": "XMonad Actions SwapWorkspaces",
        "module": "XMonad.Actions.SwapWorkspaces",
        "name": "swapWorkspaces",
        "normalized": "a-\u003ea-\u003eStackSet a b c d e-\u003eStackSet a b c d e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspaces",
        "signature": "i-\u003ei-\u003eStackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFunctions for tagging windows and selecting them by tags.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-TagWindows.html",
        "fct-type": "module",
        "title": "TagWindows"
      },
      "index": {
        "description": "Functions for tagging windows and selecting them by tags",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "TagWindows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tag Windows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:addTag",
      "description": {
        "fct-descr": "\u003cp\u003eadd a tag to the existing ones\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#addTag",
        "fct-type": "function",
        "title": "addTag"
      },
      "index": {
        "description": "add tag to the existing ones",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "addTag",
        "normalized": "String-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tag",
        "signature": "String-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:delTag",
      "description": {
        "fct-descr": "\u003cp\u003eremove a tag from a window, if it exists\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#delTag",
        "fct-type": "function",
        "title": "delTag"
      },
      "index": {
        "description": "remove tag from window if it exists",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "delTag",
        "normalized": "String-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tag",
        "signature": "String-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:focusDownTagged",
      "description": {
        "fct-descr": "\u003cp\u003eMove the focus in a group of windows, which share the same given tag.\n   The Global variants move through all workspaces, whereas the other\n   ones operate only on the current workspace\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#focusDownTagged",
        "fct-type": "function",
        "title": "focusDownTagged"
      },
      "index": {
        "description": "Move the focus in group of windows which share the same given tag The Global variants move through all workspaces whereas the other ones operate only on the current workspace",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "focusDownTagged",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Down Tagged",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:focusDownTaggedGlobal",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#focusDownTaggedGlobal",
        "fct-type": "function",
        "title": "focusDownTaggedGlobal"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "focusDownTaggedGlobal",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Down Tagged Global",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:focusUpTagged",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#focusUpTagged",
        "fct-type": "function",
        "title": "focusUpTagged"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "focusUpTagged",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Up Tagged",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:focusUpTaggedGlobal",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#focusUpTaggedGlobal",
        "fct-type": "function",
        "title": "focusUpTaggedGlobal"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "focusUpTaggedGlobal",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Up Tagged Global",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:getTags",
      "description": {
        "fct-descr": "\u003cp\u003eread all tags of a window\n   reads from the \"_XMONAD_TAGS\" window property\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X [String]",
        "fct-source": "src/XMonad-Actions-TagWindows.html#getTags",
        "fct-type": "function",
        "title": "getTags"
      },
      "index": {
        "description": "read all tags of window reads from the XMONAD TAGS window property",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "getTags",
        "normalized": "Window-\u003eX[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tags",
        "signature": "Window-\u003eX[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:hasTag",
      "description": {
        "fct-descr": "\u003cp\u003echeck a window for the given tag\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Window -\u003e X Bool",
        "fct-source": "src/XMonad-Actions-TagWindows.html#hasTag",
        "fct-type": "function",
        "title": "hasTag"
      },
      "index": {
        "description": "check window for the given tag",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "hasTag",
        "normalized": "String-\u003eWindow-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tag",
        "signature": "String-\u003eWindow-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:setTags",
      "description": {
        "fct-descr": "\u003cp\u003eset multiple tags for a window at once (overriding any previous tags)\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#setTags",
        "fct-type": "function",
        "title": "setTags"
      },
      "index": {
        "description": "set multiple tags for window at once overriding any previous tags",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "setTags",
        "normalized": "[String]-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tags",
        "signature": "[String]-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:shiftHere",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-TagWindows.html#shiftHere",
        "fct-type": "function",
        "title": "shiftHere"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "shiftHere",
        "normalized": "a-\u003eStackSet b c a d e-\u003eStackSet b c a d e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Here",
        "signature": "a-\u003eStackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:shiftToScreen",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e a -\u003e StackSet i l a s sd -\u003e StackSet i l a s sd",
        "fct-source": "src/XMonad-Actions-TagWindows.html#shiftToScreen",
        "fct-type": "function",
        "title": "shiftToScreen"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "shiftToScreen",
        "normalized": "a-\u003eb-\u003eStackSet c d b a e-\u003eStackSet c d b a e",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Screen",
        "signature": "s-\u003ea-\u003eStackSet i l a s sd-\u003eStackSet i l a s sd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:tagDelPrompt",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#tagDelPrompt",
        "fct-type": "function",
        "title": "tagDelPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "tagDelPrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Del Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:tagPrompt",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e (String -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#tagPrompt",
        "fct-type": "function",
        "title": "tagPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "tagPrompt",
        "normalized": "XPConfig-\u003e(String-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003e(String-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:unTag",
      "description": {
        "fct-descr": "\u003cp\u003eremove all tags\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#unTag",
        "fct-type": "function",
        "title": "unTag"
      },
      "index": {
        "description": "remove all tags",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "unTag",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tag",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:withFocusedP",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Window -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#withFocusedP",
        "fct-type": "function",
        "title": "withFocusedP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "withFocusedP",
        "normalized": "(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused",
        "signature": "(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:withTagged",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e (Window -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#withTagged",
        "fct-type": "function",
        "title": "withTagged"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "withTagged",
        "normalized": "String-\u003e(Window-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tagged",
        "signature": "String-\u003e(Window-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:withTaggedGlobal",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e (Window -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#withTaggedGlobal",
        "fct-type": "function",
        "title": "withTaggedGlobal"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "withTaggedGlobal",
        "normalized": "String-\u003e(Window-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tagged Global",
        "signature": "String-\u003e(Window-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:withTaggedGlobalP",
      "description": {
        "fct-descr": "\u003cp\u003eapply a pure function to windows with a tag\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e (Window -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#withTaggedGlobalP",
        "fct-type": "function",
        "title": "withTaggedGlobalP"
      },
      "index": {
        "description": "apply pure function to windows with tag",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "withTaggedGlobalP",
        "normalized": "String-\u003e(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tagged Global",
        "signature": "String-\u003e(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TagWindows.html#v:withTaggedP",
      "description": {
        "fct-module": "XMonad.Actions.TagWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e (Window -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TagWindows.html#withTaggedP",
        "fct-type": "function",
        "title": "withTaggedP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TagWindows",
        "module": "XMonad.Actions.TagWindows",
        "name": "withTaggedP",
        "normalized": "String-\u003e(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tagged",
        "signature": "String-\u003e(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eTurns your workspaces into a more topic oriented system.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-TopicSpace.html",
        "fct-type": "module",
        "title": "TopicSpace"
      },
      "index": {
        "description": "Turns your workspaces into more topic oriented system",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "TopicSpace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Space",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#t:Dir",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eDir\u003c/a\u003e\u003c/code\u003e is just an alias for \u003ccode\u003e\u003ca\u003eFilePath\u003c/a\u003e\u003c/code\u003e but should points to a directory.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#Dir",
        "fct-type": "type",
        "title": "Dir"
      },
      "index": {
        "description": "Dir is just an alias for FilePath but should points to directory",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "Dir",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#t:Topic",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eTopic\u003c/a\u003e\u003c/code\u003e is just an alias for \u003ccode\u003e\u003ca\u003eWorkspaceId\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#Topic",
        "fct-type": "type",
        "title": "Topic"
      },
      "index": {
        "description": "Topic is just an alias for WorkspaceId",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "Topic",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#t:TopicConfig",
      "description": {
        "fct-descr": "\u003cp\u003eHere is the topic space configuration area.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "data",
        "title": "TopicConfig"
      },
      "index": {
        "description": "Here is the topic space configuration area",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "TopicConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:-62--42--62-",
      "description": {
        "fct-descr": "\u003cp\u003eAn alias for \u003ccode\u003eflip replicateM_\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e Int -\u003e m ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#%3E%2A%3E",
        "fct-type": "function",
        "title": "(\u003e*\u003e)"
      },
      "index": {
        "description": "An alias for flip replicateM",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "(\u003e*\u003e) \u003e*\u003e",
        "normalized": "a b-\u003eInt-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "m a-\u003eInt-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:TopicConfig",
      "description": {
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "function",
        "title": "TopicConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "TopicConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:checkTopicConfig",
      "description": {
        "fct-descr": "\u003cp\u003eCheck the given topic configuration for duplicates topics or undefined topics.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Topic] -\u003e TopicConfig -\u003e IO ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#checkTopicConfig",
        "fct-type": "function",
        "title": "checkTopicConfig"
      },
      "index": {
        "description": "Check the given topic configuration for duplicates topics or undefined topics",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "checkTopicConfig",
        "normalized": "[Topic]-\u003eTopicConfig-\u003eIO()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Config",
        "signature": "[Topic]-\u003eTopicConfig-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:currentTopicAction",
      "description": {
        "fct-descr": "\u003cp\u003eTrigger the action associated with the current topic.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#currentTopicAction",
        "fct-type": "function",
        "title": "currentTopicAction"
      },
      "index": {
        "description": "Trigger the action associated with the current topic",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "currentTopicAction",
        "normalized": "TopicConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Action",
        "signature": "TopicConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:currentTopicDir",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the directory associated with current topic returns the empty string otherwise.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e X String",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#currentTopicDir",
        "fct-type": "function",
        "title": "currentTopicDir"
      },
      "index": {
        "description": "Returns the directory associated with current topic returns the empty string otherwise",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "currentTopicDir",
        "normalized": "TopicConfig-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Dir",
        "signature": "TopicConfig-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:defaultTopic",
      "description": {
        "fct-descr": "\u003cp\u003eThis is the default topic.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Topic",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "function",
        "title": "defaultTopic"
      },
      "index": {
        "description": "This is the default topic",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "defaultTopic",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:defaultTopicAction",
      "description": {
        "fct-descr": "\u003cp\u003eThis is the default topic action.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Topic -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "function",
        "title": "defaultTopicAction"
      },
      "index": {
        "description": "This is the default topic action",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "defaultTopicAction",
        "normalized": "Topic-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Action",
        "signature": "Topic-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:defaultTopicConfig",
      "description": {
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#defaultTopicConfig",
        "fct-type": "function",
        "title": "defaultTopicConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "defaultTopicConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:getLastFocusedTopics",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the list of last focused workspaces the empty list otherwise.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [String]",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#getLastFocusedTopics",
        "fct-type": "function",
        "title": "getLastFocusedTopics"
      },
      "index": {
        "description": "Returns the list of last focused workspaces the empty list otherwise",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "getLastFocusedTopics",
        "normalized": "X[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Last Focused Topics",
        "signature": "X[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:maxTopicHistory",
      "description": {
        "fct-descr": "\u003cp\u003eThis setups the maximum depth of topic history, usually\n 10 is a good default since we can bind all of them using\n numeric keypad.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "function",
        "title": "maxTopicHistory"
      },
      "index": {
        "description": "This setups the maximum depth of topic history usually is good default since we can bind all of them using numeric keypad",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "maxTopicHistory",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic History",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:pprWindowSet",
      "description": {
        "fct-descr": "\u003cp\u003eThis function is a variant of \u003ccode\u003e\u003ca\u003epprWindowSet\u003c/a\u003e\u003c/code\u003e which takes a topic configuration\n and a pretty-printing record \u003ccode\u003e\u003ca\u003ePP\u003c/a\u003e\u003c/code\u003e. It will show the list of topics sorted historically\n and highlighting topics with urgent windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e PP -\u003e X String",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#pprWindowSet",
        "fct-type": "function",
        "title": "pprWindowSet"
      },
      "index": {
        "description": "This function is variant of pprWindowSet which takes topic configuration and pretty-printing record PP It will show the list of topics sorted historically and highlighting topics with urgent windows",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "pprWindowSet",
        "normalized": "TopicConfig-\u003ePP-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Set",
        "signature": "TopicConfig-\u003ePP-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:setLastFocusedTopic",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a \u003ccode\u003e\u003ca\u003eTopicConfig\u003c/a\u003e\u003c/code\u003e, the last focused topic, and a predicate that will\n select topics that one want to keep, this function will set the property\n of last focused topics.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e Topic -\u003e (Topic -\u003e Bool) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#setLastFocusedTopic",
        "fct-type": "function",
        "title": "setLastFocusedTopic"
      },
      "index": {
        "description": "Given TopicConfig the last focused topic and predicate that will select topics that one want to keep this function will set the property of last focused topics",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "setLastFocusedTopic",
        "normalized": "TopicConfig-\u003eTopic-\u003e(Topic-\u003eBool)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Last Focused Topic",
        "signature": "TopicConfig-\u003eTopic-\u003e(Topic-\u003eBool)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:shiftNthLastFocused",
      "description": {
        "fct-descr": "\u003cp\u003eShift the focused window to the Nth last focused topic, or fallback to doing nothing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#shiftNthLastFocused",
        "fct-type": "function",
        "title": "shiftNthLastFocused"
      },
      "index": {
        "description": "Shift the focused window to the Nth last focused topic or fallback to doing nothing",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "shiftNthLastFocused",
        "normalized": "Int-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth Last Focused",
        "signature": "Int-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:switchNthLastFocused",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to the Nth last focused topic or failback to the \u003ccode\u003e\u003ca\u003edefaultTopic\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#switchNthLastFocused",
        "fct-type": "function",
        "title": "switchNthLastFocused"
      },
      "index": {
        "description": "Switch to the Nth last focused topic or failback to the defaultTopic",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "switchNthLastFocused",
        "normalized": "TopicConfig-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth Last Focused",
        "signature": "TopicConfig-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:switchTopic",
      "description": {
        "fct-descr": "\u003cp\u003eSwitch to the given topic.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e Topic -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#switchTopic",
        "fct-type": "function",
        "title": "switchTopic"
      },
      "index": {
        "description": "Switch to the given topic",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "switchTopic",
        "normalized": "TopicConfig-\u003eTopic-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Topic",
        "signature": "TopicConfig-\u003eTopic-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:topicAction",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a configuration and a topic, triggers the action associated with the given topic.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopicConfig -\u003e Topic -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#topicAction",
        "fct-type": "function",
        "title": "topicAction"
      },
      "index": {
        "description": "Given configuration and topic triggers the action associated with the given topic",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "topicAction",
        "normalized": "TopicConfig-\u003eTopic-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Action",
        "signature": "TopicConfig-\u003eTopic-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:topicActionWithPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a prompt configuration and a topic configuration, triggers the action associated with\n the topic given in prompt.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e TopicConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#topicActionWithPrompt",
        "fct-type": "function",
        "title": "topicActionWithPrompt"
      },
      "index": {
        "description": "Given prompt configuration and topic configuration triggers the action associated with the topic given in prompt",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "topicActionWithPrompt",
        "normalized": "XPConfig-\u003eTopicConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Action With Prompt",
        "signature": "XPConfig-\u003eTopicConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:topicActions",
      "description": {
        "fct-descr": "\u003cp\u003eThis mapping associate an action to trigger when\n switching to a given topic which workspace is empty.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map Topic (X ())",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "function",
        "title": "topicActions"
      },
      "index": {
        "description": "This mapping associate an action to trigger when switching to given topic which workspace is empty",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "topicActions",
        "normalized": "Map Topic(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Actions",
        "signature": "Map Topic(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-TopicSpace.html#v:topicDirs",
      "description": {
        "fct-descr": "\u003cp\u003eThis mapping associate a directory to each topic.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.TopicSpace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map Topic Dir",
        "fct-source": "src/XMonad-Actions-TopicSpace.html#TopicConfig",
        "fct-type": "function",
        "title": "topicDirs"
      },
      "index": {
        "description": "This mapping associate directory to each topic",
        "hierarchy": "XMonad Actions TopicSpace",
        "module": "XMonad.Actions.TopicSpace",
        "name": "topicDirs",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dirs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdateFocus.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUpdates the focus on mouse move in unfocused windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.UpdateFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-UpdateFocus.html",
        "fct-type": "module",
        "title": "UpdateFocus"
      },
      "index": {
        "description": "Updates the focus on mouse move in unfocused windows",
        "hierarchy": "XMonad Actions UpdateFocus",
        "module": "XMonad.Actions.UpdateFocus",
        "name": "UpdateFocus",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Update Focus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdateFocus.html#v:adjustEventInput",
      "description": {
        "fct-descr": "\u003cp\u003eAdjusts the event mask to pick up pointer movements.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.UpdateFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-UpdateFocus.html#adjustEventInput",
        "fct-type": "function",
        "title": "adjustEventInput"
      },
      "index": {
        "description": "Adjusts the event mask to pick up pointer movements",
        "hierarchy": "XMonad Actions UpdateFocus",
        "module": "XMonad.Actions.UpdateFocus",
        "name": "adjustEventInput",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Event Input",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdateFocus.html#v:focusOnMouseMove",
      "description": {
        "fct-descr": "\u003cp\u003eChanges the focus if the mouse is moved within an unfocused window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.UpdateFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Actions-UpdateFocus.html#focusOnMouseMove",
        "fct-type": "function",
        "title": "focusOnMouseMove"
      },
      "index": {
        "description": "Changes the focus if the mouse is moved within an unfocused window",
        "hierarchy": "XMonad Actions UpdateFocus",
        "module": "XMonad.Actions.UpdateFocus",
        "name": "focusOnMouseMove",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On Mouse Move",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdatePointer.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCauses the pointer to follow whichever window focus changes to. Compliments\n the idea of switching focus as the mouse crosses window boundaries to\n keep the mouse near the currently focused window\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.UpdatePointer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-UpdatePointer.html",
        "fct-type": "module",
        "title": "UpdatePointer"
      },
      "index": {
        "description": "Causes the pointer to follow whichever window focus changes to Compliments the idea of switching focus as the mouse crosses window boundaries to keep the mouse near the currently focused window",
        "hierarchy": "XMonad Actions UpdatePointer",
        "module": "XMonad.Actions.UpdatePointer",
        "name": "UpdatePointer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Update Pointer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdatePointer.html#t:PointerPosition",
      "description": {
        "fct-module": "XMonad.Actions.UpdatePointer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-UpdatePointer.html#PointerPosition",
        "fct-type": "data",
        "title": "PointerPosition"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions UpdatePointer",
        "module": "XMonad.Actions.UpdatePointer",
        "name": "PointerPosition",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pointer Position",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdatePointer.html#v:Nearest",
      "description": {
        "fct-module": "XMonad.Actions.UpdatePointer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Nearest",
        "fct-source": "src/XMonad-Actions-UpdatePointer.html#PointerPosition",
        "fct-type": "function",
        "title": "Nearest"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions UpdatePointer",
        "module": "XMonad.Actions.UpdatePointer",
        "name": "Nearest",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nearest",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdatePointer.html#v:Relative",
      "description": {
        "fct-module": "XMonad.Actions.UpdatePointer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Relative Rational Rational",
        "fct-source": "src/XMonad-Actions-UpdatePointer.html#PointerPosition",
        "fct-type": "function",
        "title": "Relative"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions UpdatePointer",
        "module": "XMonad.Actions.UpdatePointer",
        "name": "Relative",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Relative",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdatePointer.html#v:TowardsCentre",
      "description": {
        "fct-module": "XMonad.Actions.UpdatePointer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TowardsCentre Rational Rational",
        "fct-source": "src/XMonad-Actions-UpdatePointer.html#PointerPosition",
        "fct-type": "function",
        "title": "TowardsCentre"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions UpdatePointer",
        "module": "XMonad.Actions.UpdatePointer",
        "name": "TowardsCentre",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Towards Centre",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-UpdatePointer.html#v:updatePointer",
      "description": {
        "fct-descr": "\u003cp\u003eUpdate the pointer's location to the currently focused\n window or empty screen unless it's already there, or unless the user was changing\n focus with the mouse\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.UpdatePointer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PointerPosition -\u003e X ()",
        "fct-source": "src/XMonad-Actions-UpdatePointer.html#updatePointer",
        "fct-type": "function",
        "title": "updatePointer"
      },
      "index": {
        "description": "Update the pointer location to the currently focused window or empty screen unless it already there or unless the user was changing focus with the mouse",
        "hierarchy": "XMonad Actions UpdatePointer",
        "module": "XMonad.Actions.UpdatePointer",
        "name": "updatePointer",
        "normalized": "PointerPosition-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pointer",
        "signature": "PointerPosition-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eWarp the pointer to a given window or screen.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-Warp.html",
        "fct-type": "module",
        "title": "Warp"
      },
      "index": {
        "description": "Warp the pointer to given window or screen",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "Warp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Warp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#t:Corner",
      "description": {
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-Warp.html#Corner",
        "fct-type": "data",
        "title": "Corner"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "Corner",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Corner",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:LowerLeft",
      "description": {
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "LowerLeft",
        "fct-source": "src/XMonad-Actions-Warp.html#Corner",
        "fct-type": "function",
        "title": "LowerLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "LowerLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Lower Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:LowerRight",
      "description": {
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "LowerRight",
        "fct-source": "src/XMonad-Actions-Warp.html#Corner",
        "fct-type": "function",
        "title": "LowerRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "LowerRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Lower Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:UpperLeft",
      "description": {
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UpperLeft",
        "fct-source": "src/XMonad-Actions-Warp.html#Corner",
        "fct-type": "function",
        "title": "UpperLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "UpperLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Upper Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:UpperRight",
      "description": {
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UpperRight",
        "fct-source": "src/XMonad-Actions-Warp.html#Corner",
        "fct-type": "function",
        "title": "UpperRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "UpperRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Upper Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:banish",
      "description": {
        "fct-descr": "\u003cp\u003eMove the mouse cursor to a corner of the focused window. Useful for\n   uncluttering things.\n\u003c/p\u003e\u003cp\u003eInternally, this uses numerical parameters. We parametrize on the \u003ccode\u003e\u003ca\u003eCorner\u003c/a\u003e\u003c/code\u003e\n   type so the user need not see the violence inherent in\n   the system.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u003ca\u003ewarpToScreen\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003ewarpToWindow\u003c/a\u003e\u003c/code\u003e can be used in a variety of\n   ways. Suppose you wanted to emulate Ratpoison's 'banish' command,\n   which moves the mouse pointer to a corner? warpToWindow can do that! \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Corner -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Warp.html#banish",
        "fct-type": "function",
        "title": "banish"
      },
      "index": {
        "description": "Move the mouse cursor to corner of the focused window Useful for uncluttering things Internally this uses numerical parameters We parametrize on the Corner type so the user need not see the violence inherent in the system warpToScreen and warpToWindow can be used in variety of ways Suppose you wanted to emulate Ratpoison banish command which moves the mouse pointer to corner warpToWindow can do that",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "banish",
        "normalized": "Corner-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Corner-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:banishScreen",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003ebanish\u003c/a\u003e\u003c/code\u003e but moves the mouse to the corner of the\n   currently focused screen \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Corner -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Warp.html#banishScreen",
        "fct-type": "function",
        "title": "banishScreen"
      },
      "index": {
        "description": "Same as banish but moves the mouse to the corner of the currently focused screen",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "banishScreen",
        "normalized": "Corner-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "Corner-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:warpToScreen",
      "description": {
        "fct-descr": "\u003cp\u003eWarp the pointer to the given position (top left = (0,0), bottom\n   right = (1,1)) on the given screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId -\u003e Rational -\u003e Rational -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Warp.html#warpToScreen",
        "fct-type": "function",
        "title": "warpToScreen"
      },
      "index": {
        "description": "Warp the pointer to the given position top left bottom right on the given screen",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "warpToScreen",
        "normalized": "ScreenId-\u003eRational-\u003eRational-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Screen",
        "signature": "ScreenId-\u003eRational-\u003eRational-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-Warp.html#v:warpToWindow",
      "description": {
        "fct-descr": "\u003cp\u003eWarp the pointer to a given position relative to the currently\n   focused window.  Top left = (0,0), bottom right = (1,1).\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.Warp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Rational -\u003e X ()",
        "fct-source": "src/XMonad-Actions-Warp.html#warpToWindow",
        "fct-type": "function",
        "title": "warpToWindow"
      },
      "index": {
        "description": "Warp the pointer to given position relative to the currently focused window Top left bottom right",
        "hierarchy": "XMonad Actions Warp",
        "module": "XMonad.Actions.Warp",
        "name": "warpToWindow",
        "normalized": "Rational-\u003eRational-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Window",
        "signature": "Rational-\u003eRational-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowBringer.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003edmenu operations to bring windows to you, and bring you to windows.\n That is to say, it pops up a dmenu with window names, in case you forgot\n where you left your XChat.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WindowBringer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WindowBringer.html",
        "fct-type": "module",
        "title": "WindowBringer"
      },
      "index": {
        "description": "dmenu operations to bring windows to you and bring you to windows That is to say it pops up dmenu with window names in case you forgot where you left your XChat",
        "hierarchy": "XMonad Actions WindowBringer",
        "module": "XMonad.Actions.WindowBringer",
        "name": "WindowBringer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Bringer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowBringer.html#v:bringMenu",
      "description": {
        "fct-descr": "\u003cp\u003ePops open a dmenu with window titles. Choose one, and it will be\n   dragged, kicking and screaming, into your current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowBringer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WindowBringer.html#bringMenu",
        "fct-type": "function",
        "title": "bringMenu"
      },
      "index": {
        "description": "Pops open dmenu with window titles Choose one and it will be dragged kicking and screaming into your current workspace",
        "hierarchy": "XMonad Actions WindowBringer",
        "module": "XMonad.Actions.WindowBringer",
        "name": "bringMenu",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Menu",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowBringer.html#v:bringWindow",
      "description": {
        "fct-descr": "\u003cp\u003eBrings the specified window into the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowBringer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e WindowSet -\u003e WindowSet",
        "fct-source": "src/XMonad-Actions-WindowBringer.html#bringWindow",
        "fct-type": "function",
        "title": "bringWindow"
      },
      "index": {
        "description": "Brings the specified window into the current workspace",
        "hierarchy": "XMonad Actions WindowBringer",
        "module": "XMonad.Actions.WindowBringer",
        "name": "bringWindow",
        "normalized": "Window-\u003eWindowSet-\u003eWindowSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Window-\u003eWindowSet-\u003eWindowSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowBringer.html#v:gotoMenu",
      "description": {
        "fct-descr": "\u003cp\u003ePops open a dmenu with window titles. Choose one, and you will be\n   taken to the corresponding workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowBringer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WindowBringer.html#gotoMenu",
        "fct-type": "function",
        "title": "gotoMenu"
      },
      "index": {
        "description": "Pops open dmenu with window titles Choose one and you will be taken to the corresponding workspace",
        "hierarchy": "XMonad Actions WindowBringer",
        "module": "XMonad.Actions.WindowBringer",
        "name": "gotoMenu",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Menu",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowBringer.html#v:gotoMenu-39-",
      "description": {
        "fct-module": "XMonad.Actions.WindowBringer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowBringer.html#gotoMenu%27",
        "fct-type": "function",
        "title": "gotoMenu'"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowBringer",
        "module": "XMonad.Actions.WindowBringer",
        "name": "gotoMenu'",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Menu'",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowBringer.html#v:windowMap",
      "description": {
        "fct-descr": "\u003cp\u003eA map from window names to Windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowBringer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X (Map String Window)",
        "fct-source": "src/XMonad-Actions-WindowBringer.html#windowMap",
        "fct-type": "function",
        "title": "windowMap"
      },
      "index": {
        "description": "map from window names to Windows",
        "hierarchy": "XMonad Actions WindowBringer",
        "module": "XMonad.Actions.WindowBringer",
        "name": "windowMap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDefines a few convenient operations for raising (traveling to) windows based on XMonad's Query\nmonad, such as \u003ccode\u003e\u003ca\u003erunOrRaise\u003c/a\u003e\u003c/code\u003e. runOrRaise will run a shell command unless it can\nfind a specified window; you would use this to automatically travel to your\nFirefox or Emacs session, or start a new one (for example), instead of trying to\nremember where you left it or whether you still have one running. \n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WindowGo.html",
        "fct-type": "module",
        "title": "WindowGo"
      },
      "index": {
        "description": "Defines few convenient operations for raising traveling to windows based on XMonad Query monad such as runOrRaise runOrRaise will run shell command unless it can find specified window you would use this to automatically travel to your Firefox or Emacs session or start new one for example instead of trying to remember where you left it or whether you still have one running",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "WindowGo",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Go",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:ifWindow",
      "description": {
        "fct-descr": "\u003cp\u003eThe same as ifWindows, but applies a ManageHook to the first match\n instead and discards the other matches\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e ManageHook -\u003e X () -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#ifWindow",
        "fct-type": "function",
        "title": "ifWindow"
      },
      "index": {
        "description": "The same as ifWindows but applies ManageHook to the first match instead and discards the other matches",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "ifWindow",
        "normalized": "Query Bool-\u003eManageHook-\u003eX()-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Query Bool-\u003eManageHook-\u003eX()-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:ifWindows",
      "description": {
        "fct-descr": "\u003cp\u003eIf windows that satisfy the query exist, apply the supplied\n function to them, otherwise run the action given as\n second parameter.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e ([Window] -\u003e X ()) -\u003e X () -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#ifWindows",
        "fct-type": "function",
        "title": "ifWindows"
      },
      "index": {
        "description": "If windows that satisfy the query exist apply the supplied function to them otherwise run the action given as second parameter",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "ifWindows",
        "normalized": "Query Bool-\u003e([Window]-\u003eX())-\u003eX()-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Windows",
        "signature": "Query Bool-\u003e([Window]-\u003eX())-\u003eX()-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raise",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003e\u003ca\u003eraiseMaybe\u003c/a\u003e\u003c/code\u003e. If the Window can't be found, quietly give up and do nothing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raise",
        "fct-type": "function",
        "title": "raise"
      },
      "index": {
        "description": "See raiseMaybe If the Window can be found quietly give up and do nothing",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raise",
        "normalized": "Query Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseAndDo",
      "description": {
        "fct-descr": "\u003cp\u003eIf the window is found the window is focused and the third argument is called\n     otherwise, the first argument is called\n     See \u003ccode\u003e\u003ca\u003eraiseMaster\u003c/a\u003e\u003c/code\u003e for an example. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e Query Bool -\u003e (Window -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseAndDo",
        "fct-type": "function",
        "title": "raiseAndDo"
      },
      "index": {
        "description": "If the window is found the window is focused and the third argument is called otherwise the first argument is called See raiseMaster for an example",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseAndDo",
        "normalized": "X()-\u003eQuery Bool-\u003e(Window-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And Do",
        "signature": "X()-\u003eQuery Bool-\u003e(Window-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseBrowser",
      "description": {
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseBrowser",
        "fct-type": "function",
        "title": "raiseBrowser"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseBrowser",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Browser",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseEditor",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eraiseBrowser\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eraiseEditor\u003c/a\u003e\u003c/code\u003e grab $BROWSER and $EDITOR respectively and they either\n     take you to the specified program's window, or they try to run it. This is most useful\n     if your variables are simple and look like \"firefox\" or \"emacs\". \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseEditor",
        "fct-type": "function",
        "title": "raiseEditor"
      },
      "index": {
        "description": "raiseBrowser and raiseEditor grab BROWSER and EDITOR respectively and they either take you to the specified program window or they try to run it This is most useful if your variables are simple and look like firefox or emacs",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseEditor",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Editor",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseHook",
      "description": {
        "fct-descr": "\u003cp\u003eA manage hook that raises the window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseHook",
        "fct-type": "function",
        "title": "raiseHook"
      },
      "index": {
        "description": "manage hook that raises the window",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseMaster",
      "description": {
        "fct-descr": "\u003cp\u003eif the window is found the window is focused and set to master\n     otherwise, the first argument is called.\n\u003c/p\u003e\u003cpre\u003e raiseMaster (runInTerm \"-title ghci\"  \"zsh -c 'ghci'\") (title =? \"ghci\") \n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseMaster",
        "fct-type": "function",
        "title": "raiseMaster"
      },
      "index": {
        "description": "if the window is found the window is focused and set to master otherwise the first argument is called raiseMaster runInTerm title ghci zsh ghci title ghci",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseMaster",
        "normalized": "X()-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": "X()-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseMaybe",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eraiseMaybe\u003c/a\u003e\u003c/code\u003e queries all Windows based on a boolean provided by the\n   user. Currently, there are 3 such useful booleans defined in\n   \u003ca\u003eXMonad.ManageHook\u003c/a\u003e: \u003ccode\u003e\u003ca\u003etitle\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eresource\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eclassName\u003c/a\u003e\u003c/code\u003e. Each one tests based pretty\n   much as you would think. ManageHook also defines several operators, the most\n   useful of which is (=?). So a useful test might be finding a \u003ccode\u003eWindow\u003c/code\u003e whose\n   class is Firefox. Firefox 3 declares the class \"Firefox\", so you'd want to\n   pass in a boolean like \u003ccode\u003e(className =? \"Firefox\")\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eIf the boolean returns \u003ccode\u003eTrue\u003c/code\u003e on one or more windows, then XMonad will quickly\n   make visible the first result. If no \u003ccode\u003eWindow\u003c/code\u003e meets the criteria, then the\n   first argument comes into play.\n\u003c/p\u003e\u003cp\u003eThe first argument is an arbitrary IO function which will be executed if the\n   tests fail. This is what enables \u003ccode\u003e\u003ca\u003erunOrRaise\u003c/a\u003e\u003c/code\u003e to use \u003ccode\u003e\u003ca\u003eraiseMaybe\u003c/a\u003e\u003c/code\u003e: it simply runs\n   the desired program if it isn't found. But you don't have to do that. Maybe\n   you want to do nothing if the search fails (the definition of \u003ccode\u003e\u003ca\u003eraise\u003c/a\u003e\u003c/code\u003e), or\n   maybe you want to write to a log file, or call some prompt function, or\n   something crazy like that. This hook gives you that flexibility. You can do\n   some cute things with this hook. Suppose you want to do the same thing for\n   Mutt which you just did for Firefox - but Mutt runs inside a terminal window?\n   No problem: you search for a terminal window calling itself \"mutt\", and if\n   there isn't you run a terminal with a command to run Mutt! Here's an example\n   (borrowing \u003ccode\u003erunInTerm\u003c/code\u003e from \u003ca\u003eXMonad.Utils.Run\u003c/a\u003e):\n\u003c/p\u003e\u003cpre\u003e , ((modm, xK_m), raiseMaybe (runInTerm \"-title mutt\" \"mutt\") (title =? \"mutt\"))\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseMaybe",
        "fct-type": "function",
        "title": "raiseMaybe"
      },
      "index": {
        "description": "raiseMaybe queries all Windows based on boolean provided by the user Currently there are such useful booleans defined in XMonad.ManageHook title resource className Each one tests based pretty much as you would think ManageHook also defines several operators the most useful of which is So useful test might be finding Window whose class is Firefox Firefox declares the class Firefox so you want to pass in boolean like className Firefox If the boolean returns True on one or more windows then XMonad will quickly make visible the first result If no Window meets the criteria then the first argument comes into play The first argument is an arbitrary IO function which will be executed if the tests fail This is what enables runOrRaise to use raiseMaybe it simply runs the desired program if it isn found But you don have to do that Maybe you want to do nothing if the search fails the definition of raise or maybe you want to write to log file or call some prompt function or something crazy like that This hook gives you that flexibility You can do some cute things with this hook Suppose you want to do the same thing for Mutt which you just did for Firefox but Mutt runs inside terminal window No problem you search for terminal window calling itself mutt and if there isn you run terminal with command to run Mutt Here an example borrowing runInTerm from XMonad.Utils.Run modm xK raiseMaybe runInTerm title mutt mutt title mutt",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseMaybe",
        "normalized": "X()-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Maybe",
        "signature": "X()-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseNext",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003e\u003ca\u003eraise\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eraiseNextMaybe\u003c/a\u003e\u003c/code\u003e. Version that allows cycling through matches.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseNext",
        "fct-type": "function",
        "title": "raiseNext"
      },
      "index": {
        "description": "See raise and raiseNextMaybe Version that allows cycling through matches",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseNext",
        "normalized": "Query Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next",
        "signature": "Query Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:raiseNextMaybe",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003e\u003ca\u003eraiseMaybe\u003c/a\u003e\u003c/code\u003e.\n     \u003ccode\u003e\u003ca\u003eraiseNextMaybe\u003c/a\u003e\u003c/code\u003e is an alternative version that allows cycling\n     through the matching windows. If the focused window matches the\n     query the next matching window is raised. If no matches are found\n     the function f is executed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#raiseNextMaybe",
        "fct-type": "function",
        "title": "raiseNextMaybe"
      },
      "index": {
        "description": "See raiseMaybe raiseNextMaybe is an alternative version that allows cycling through the matching windows If the focused window matches the query the next matching window is raised If no matches are found the function is executed",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "raiseNextMaybe",
        "normalized": "X()-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Maybe",
        "signature": "X()-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:runOrRaise",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eaction\u003c/code\u003e is an executable to be run via \u003ccode\u003e\u003ca\u003esafeSpawnProg\u003c/a\u003e\u003c/code\u003e (of \u003ca\u003eXMonad.Util.Run\u003c/a\u003e) if the Window cannot be found.\n   Presumably this executable is the same one that you were looking for.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#runOrRaise",
        "fct-type": "function",
        "title": "runOrRaise"
      },
      "index": {
        "description": "action is an executable to be run via safeSpawnProg of XMonad.Util.Run if the Window cannot be found Presumably this executable is the same one that you were looking for",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "runOrRaise",
        "normalized": "String-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Raise",
        "signature": "String-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:runOrRaiseAndDo",
      "description": {
        "fct-descr": "\u003cp\u003eIf a window matching the second arugment is found, the window is focused and the third argument is called;\n     otherwise, the first argument is called. \n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Query Bool -\u003e (Window -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#runOrRaiseAndDo",
        "fct-type": "function",
        "title": "runOrRaiseAndDo"
      },
      "index": {
        "description": "If window matching the second arugment is found the window is focused and the third argument is called otherwise the first argument is called",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "runOrRaiseAndDo",
        "normalized": "String-\u003eQuery Bool-\u003e(Window-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Raise And Do",
        "signature": "String-\u003eQuery Bool-\u003e(Window-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:runOrRaiseMaster",
      "description": {
        "fct-descr": "\u003cp\u003eIf the window is found the window is focused and set to master\n      otherwise, action is run.\n\u003c/p\u003e\u003cpre\u003e runOrRaiseMaster \"firefox\" (className =? \"Firefox\"))\n\u003c/pre\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#runOrRaiseMaster",
        "fct-type": "function",
        "title": "runOrRaiseMaster"
      },
      "index": {
        "description": "If the window is found the window is focused and set to master otherwise action is run runOrRaiseMaster firefox className Firefox",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "runOrRaiseMaster",
        "normalized": "String-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Raise Master",
        "signature": "String-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowGo.html#v:runOrRaiseNext",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003e\u003ca\u003erunOrRaise\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eraiseNextMaybe\u003c/a\u003e\u003c/code\u003e. Version that allows cycling through matches.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowGo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Query Bool -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowGo.html#runOrRaiseNext",
        "fct-type": "function",
        "title": "runOrRaiseNext"
      },
      "index": {
        "description": "See runOrRaise and raiseNextMaybe Version that allows cycling through matches",
        "hierarchy": "XMonad Actions WindowGo",
        "module": "XMonad.Actions.WindowGo",
        "name": "runOrRaiseNext",
        "normalized": "String-\u003eQuery Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Raise Next",
        "signature": "String-\u003eQuery Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowMenu.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUses \u003ca\u003eXMonad.Actions.GridSelect\u003c/a\u003e to display a number of actions related to\n window management in the center of the focused window. Actions include: Closing,\n maximizing, minimizing and shifting the window to another workspace.\n\u003c/p\u003e\u003cp\u003eNote: For maximizing and minimizing to actually work, you will need\n to integrate \u003ca\u003eXMonad.Layout.Maximize\u003c/a\u003e and \u003ca\u003eXMonad.Layout.Minimize\u003c/a\u003e into your\n setup.  See the documentation of those modules for more information.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WindowMenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WindowMenu.html",
        "fct-type": "module",
        "title": "WindowMenu"
      },
      "index": {
        "description": "Uses XMonad.Actions.GridSelect to display number of actions related to window management in the center of the focused window Actions include Closing maximizing minimizing and shifting the window to another workspace Note For maximizing and minimizing to actually work you will need to integrate XMonad.Layout.Maximize and XMonad.Layout.Minimize into your setup See the documentation of those modules for more information",
        "hierarchy": "XMonad Actions WindowMenu",
        "module": "XMonad.Actions.WindowMenu",
        "name": "WindowMenu",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Menu",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowMenu.html#v:windowMenu",
      "description": {
        "fct-module": "XMonad.Actions.WindowMenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WindowMenu.html#windowMenu",
        "fct-type": "function",
        "title": "windowMenu"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowMenu",
        "module": "XMonad.Actions.WindowMenu",
        "name": "windowMenu",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Menu",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLicense     :  BSD3-style (see LICENSE)\n Stability   :  unstable\n Portability :  unportable\n\u003c/p\u003e\u003cp\u003eThis is a rewrite of \u003ca\u003eXMonad.Layout.WindowNavigation\u003c/a\u003e.  WindowNavigation\n lets you assign keys to move up/down/left/right, based on actual cartesian\n window coordinates, rather than just going j/k on the stack.\n\u003c/p\u003e\u003cp\u003eThis module is experimental. You'll have better luck with the original.\n\u003c/p\u003e\u003cp\u003eThis module differs from the other in a few ways:\n\u003c/p\u003e\u003col\u003e\u003cli\u003e You can go up/down/left/right across multiple screens.\n\u003c/li\u003e\u003cli\u003e It doesn't provide little border colors for your neighboring windows.\n\u003c/li\u003e\u003cli\u003e It doesn't provide the 'Move' action, which seems to be related to\n      the XMonad.Layout.Combo extension.\n\u003c/li\u003e\u003cli\u003e It tries to be slightly smarter about tracking your current position.\n\u003c/li\u003e\u003cli\u003e Configuration is different.\n\u003c/li\u003e\u003c/ol\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html",
        "fct-type": "module",
        "title": "WindowNavigation"
      },
      "index": {
        "description": "License BSD3-style see LICENSE Stability unstable Portability unportable This is rewrite of XMonad.Layout.WindowNavigation WindowNavigation lets you assign keys to move up down left right based on actual cartesian window coordinates rather than just going on the stack This module is experimental You ll have better luck with the original This module differs from the other in few ways You can go up down left right across multiple screens It doesn provide little border colors for your neighboring windows It doesn provide the Move action which seems to be related to the XMonad.Layout.Combo extension It tries to be slightly smarter about tracking your current position Configuration is different",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "WindowNavigation",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Navigation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#t:Direction2D",
      "description": {
        "fct-descr": "\u003cp\u003eTwo-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "data",
        "title": "Direction2D"
      },
      "index": {
        "description": "Two-dimensional directions",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "Direction2D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#t:WNAction",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#WNAction",
        "fct-type": "data",
        "title": "WNAction"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "WNAction",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WNAction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:D",
      "description": {
        "fct-descr": "\u003cp\u003eDown\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "D"
      },
      "index": {
        "description": "Down",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:L",
      "description": {
        "fct-descr": "\u003cp\u003eLeft\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "Left",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:R",
      "description": {
        "fct-descr": "\u003cp\u003eRight\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "Right",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:U",
      "description": {
        "fct-descr": "\u003cp\u003eUp\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "U",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "U"
      },
      "index": {
        "description": "Up",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "U",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:WNGo",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WNGo Direction2D",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#WNAction",
        "fct-type": "function",
        "title": "WNGo"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "WNGo",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WNGo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:WNSwap",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WNSwap Direction2D",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#WNAction",
        "fct-type": "function",
        "title": "WNSwap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "WNSwap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WNSwap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:go",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IORef WNState -\u003e Direction2D -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#go",
        "fct-type": "function",
        "title": "go"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "go",
        "normalized": "IORef WNState-\u003eDirection D-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "IORef WNState-\u003eDirection D-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:swap",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IORef WNState -\u003e Direction2D -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#swap",
        "fct-type": "function",
        "title": "swap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "swap",
        "normalized": "IORef WNState-\u003eDirection D-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "IORef WNState-\u003eDirection D-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:withWindowNavigation",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(KeySym, KeySym, KeySym, KeySym) -\u003e XConfig l -\u003e IO (XConfig l)",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#withWindowNavigation",
        "fct-type": "function",
        "title": "withWindowNavigation"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "withWindowNavigation",
        "normalized": "(KeySym,KeySym,KeySym,KeySym)-\u003eXConfig a-\u003eIO(XConfig a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Navigation",
        "signature": "(KeySym,KeySym,KeySym,KeySym)-\u003eXConfig l-\u003eIO(XConfig l)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WindowNavigation.html#v:withWindowNavigationKeys",
      "description": {
        "fct-module": "XMonad.Actions.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[((KeyMask, KeySym), WNAction)] -\u003e XConfig l -\u003e IO (XConfig l)",
        "fct-source": "src/XMonad-Actions-WindowNavigation.html#withWindowNavigationKeys",
        "fct-type": "function",
        "title": "withWindowNavigationKeys"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WindowNavigation",
        "module": "XMonad.Actions.WindowNavigation",
        "name": "withWindowNavigationKeys",
        "normalized": "[((KeyMask,KeySym),WNAction)]-\u003eXConfig a-\u003eIO(XConfig a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Navigation Keys",
        "signature": "[((KeyMask,KeySym),WNAction)]-\u003eXConfig l-\u003eIO(XConfig l)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WithAll.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides functions for performing a given action on all windows of\n the current workspace.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WithAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WithAll.html",
        "fct-type": "module",
        "title": "WithAll"
      },
      "index": {
        "description": "Provides functions for performing given action on all windows of the current workspace",
        "hierarchy": "XMonad Actions WithAll",
        "module": "XMonad.Actions.WithAll",
        "name": "WithAll",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WithAll.html#v:killAll",
      "description": {
        "fct-descr": "\u003cp\u003eKill all the windows on the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WithAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WithAll.html#killAll",
        "fct-type": "function",
        "title": "killAll"
      },
      "index": {
        "description": "Kill all the windows on the current workspace",
        "hierarchy": "XMonad Actions WithAll",
        "module": "XMonad.Actions.WithAll",
        "name": "killAll",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WithAll.html#v:sinkAll",
      "description": {
        "fct-descr": "\u003cp\u003eUn-float all floating windows on the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WithAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Actions-WithAll.html#sinkAll",
        "fct-type": "function",
        "title": "sinkAll"
      },
      "index": {
        "description": "Un-float all floating windows on the current workspace",
        "hierarchy": "XMonad Actions WithAll",
        "module": "XMonad.Actions.WithAll",
        "name": "sinkAll",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WithAll.html#v:withAll",
      "description": {
        "fct-descr": "\u003cp\u003eExecute an \u003ccode\u003e\u003ca\u003eX\u003c/a\u003e\u003c/code\u003e action for each window on the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WithAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Window -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WithAll.html#withAll",
        "fct-type": "function",
        "title": "withAll"
      },
      "index": {
        "description": "Execute an action for each window on the current workspace",
        "hierarchy": "XMonad Actions WithAll",
        "module": "XMonad.Actions.WithAll",
        "name": "withAll",
        "normalized": "(Window-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All",
        "signature": "(Window-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WithAll.html#v:withAll-39-",
      "description": {
        "fct-descr": "\u003cp\u003eApply a function to all windows on the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WithAll",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Window -\u003e WindowSet -\u003e WindowSet) -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WithAll.html#withAll%27",
        "fct-type": "function",
        "title": "withAll'"
      },
      "index": {
        "description": "Apply function to all windows on the current workspace",
        "hierarchy": "XMonad Actions WithAll",
        "module": "XMonad.Actions.WithAll",
        "name": "withAll'",
        "normalized": "(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All'",
        "signature": "(Window-\u003eWindowSet-\u003eWindowSet)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLike \u003ca\u003eXMonad.Actions.Plane\u003c/a\u003e for an arbitrary number of dimensions.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html",
        "fct-type": "module",
        "title": "WorkspaceCursors"
      },
      "index": {
        "description": "Like XMonad.Actions.Plane for an arbitrary number of dimensions",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "WorkspaceCursors",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Cursors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#t:WorkspaceCursors",
      "description": {
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#WorkspaceCursors",
        "fct-type": "data",
        "title": "WorkspaceCursors"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "WorkspaceCursors",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Cursors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:focusDepth",
      "description": {
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Cursors t -\u003e Int",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#focusDepth",
        "fct-type": "function",
        "title": "focusDepth"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "focusDepth",
        "normalized": "Cursors a-\u003eInt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Depth",
        "signature": "Cursors t-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:focusNth-39-",
      "description": {
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Stack a -\u003e Stack a",
        "fct-source": "src/XMonad-Actions-FocusNth.html#focusNth%27",
        "fct-type": "function",
        "title": "focusNth'"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "focusNth'",
        "normalized": "Int-\u003eStack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Nth'",
        "signature": "Int-\u003eStack a-\u003eStack a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:getFocus",
      "description": {
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Cursors b -\u003e b",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#getFocus",
        "fct-type": "function",
        "title": "getFocus"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "getFocus",
        "normalized": "Cursors a-\u003ea",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus",
        "signature": "Cursors b-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:makeCursors",
      "description": {
        "fct-descr": "\u003cp\u003emakeCursors requires a nonempty string, and each sublist must be nonempty\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[[String]] -\u003e Cursors String",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#makeCursors",
        "fct-type": "function",
        "title": "makeCursors"
      },
      "index": {
        "description": "makeCursors requires nonempty string and each sublist must be nonempty",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "makeCursors",
        "normalized": "[[String]]-\u003eCursors String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cursors",
        "signature": "[[String]]-\u003eCursors String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:modifyLayer",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003emodifyLayer\u003c/code\u003e is used to change the focus at a given depth\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack (Cursors String) -\u003e Stack (Cursors String)) -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#modifyLayer",
        "fct-type": "function",
        "title": "modifyLayer"
      },
      "index": {
        "description": "modifyLayer is used to change the focus at given depth",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "modifyLayer",
        "normalized": "(Stack(Cursors String)-\u003eStack(Cursors String))-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layer",
        "signature": "(Stack(Cursors String)-\u003eStack(Cursors String))-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:modifyLayer-39-",
      "description": {
        "fct-descr": "\u003cp\u003eexample usages are \u003ccode\u003e\u003ca\u003eshiftLayer\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eshiftModifyLayer\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack (Cursors String) -\u003e X (Stack (Cursors String))) -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#modifyLayer%27",
        "fct-type": "function",
        "title": "modifyLayer'"
      },
      "index": {
        "description": "example usages are shiftLayer and shiftModifyLayer",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "modifyLayer'",
        "normalized": "(Stack(Cursors String)-\u003eX(Stack(Cursors String)))-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layer'",
        "signature": "(Stack(Cursors String)-\u003eX(Stack(Cursors String)))-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:noWrapDown",
      "description": {
        "fct-descr": "\u003cp\u003enon-wrapping version of \u003ccode\u003e\u003ca\u003efocusDown'\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Stack t -\u003e Stack t",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#noWrapDown",
        "fct-type": "function",
        "title": "noWrapDown"
      },
      "index": {
        "description": "non-wrapping version of focusDown",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "noWrapDown",
        "normalized": "Stack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Wrap Down",
        "signature": "Stack t-\u003eStack t"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:noWrapUp",
      "description": {
        "fct-descr": "\u003cp\u003enon-wrapping version of \u003ccode\u003e\u003ca\u003efocusUp'\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Stack t -\u003e Stack t",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#noWrapUp",
        "fct-type": "function",
        "title": "noWrapUp"
      },
      "index": {
        "description": "non-wrapping version of focusUp",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "noWrapUp",
        "normalized": "Stack a-\u003eStack a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Wrap Up",
        "signature": "Stack t-\u003eStack t"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:shiftLayer",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eshiftLayer\u003c/code\u003e is the same as \u003ccode\u003e\u003ca\u003eshiftModifyLayer\u003c/a\u003e\u003c/code\u003e, but the focus remains on\n the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack (Cursors String) -\u003e Stack (Cursors WorkspaceId)) -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#shiftLayer",
        "fct-type": "function",
        "title": "shiftLayer"
      },
      "index": {
        "description": "shiftLayer is the same as shiftModifyLayer but the focus remains on the current workspace",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "shiftLayer",
        "normalized": "(Stack(Cursors String)-\u003eStack(Cursors WorkspaceId))-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layer",
        "signature": "(Stack(Cursors String)-\u003eStack(Cursors WorkspaceId))-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:shiftModifyLayer",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eshiftModifyLayer\u003c/code\u003e is the same as \u003ccode\u003e\u003ca\u003emodifyLayer\u003c/a\u003e\u003c/code\u003e, but also shifts the\n currently focused window to the new workspace\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack (Cursors String) -\u003e Stack (Cursors WorkspaceId)) -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#shiftModifyLayer",
        "fct-type": "function",
        "title": "shiftModifyLayer"
      },
      "index": {
        "description": "shiftModifyLayer is the same as modifyLayer but also shifts the currently focused window to the new workspace",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "shiftModifyLayer",
        "normalized": "(Stack(Cursors String)-\u003eStack(Cursors WorkspaceId))-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Modify Layer",
        "signature": "(Stack(Cursors String)-\u003eStack(Cursors WorkspaceId))-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:toList",
      "description": {
        "fct-descr": "\u003cp\u003eList of elements of a structure.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t a -\u003e [a]",
        "fct-type": "function",
        "title": "toList"
      },
      "index": {
        "description": "List of elements of structure",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "toList",
        "normalized": "a b-\u003e[b]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "List",
        "signature": "t a-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceCursors.html#v:workspaceCursors",
      "description": {
        "fct-descr": "\u003cp\u003eThe state is stored in the \u003ccode\u003e\u003ca\u003eWorkspaceCursors\u003c/a\u003e\u003c/code\u003e layout modifier. Put this as\n your outermost modifier, unless you want different cursors at different\n times (using \u003ca\u003eXMonad.Layout.MultiToggle\u003c/a\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceCursors",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Cursors String -\u003e l a -\u003e ModifiedLayout WorkspaceCursors l a",
        "fct-source": "src/XMonad-Actions-WorkspaceCursors.html#workspaceCursors",
        "fct-type": "function",
        "title": "workspaceCursors"
      },
      "index": {
        "description": "The state is stored in the WorkspaceCursors layout modifier Put this as your outermost modifier unless you want different cursors at different times using XMonad.Layout.MultiToggle",
        "hierarchy": "XMonad Actions WorkspaceCursors",
        "module": "XMonad.Actions.WorkspaceCursors",
        "name": "workspaceCursors",
        "normalized": "Cursors String-\u003ea b-\u003eModifiedLayout WorkspaceCursors a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cursors",
        "signature": "Cursors String-\u003el a-\u003eModifiedLayout WorkspaceCursors l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides bindings to rename workspaces, show these names in DynamicLog and\n swap workspaces along with their names. These names survive restart.\n Together with \u003ca\u003eXMonad.Layout.WorkspaceDir\u003c/a\u003e this provides for a fully\n dynamic topic space workflow.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html",
        "fct-type": "module",
        "title": "WorkspaceNames"
      },
      "index": {
        "description": "Provides bindings to rename workspaces show these names in DynamicLog and swap workspaces along with their names These names survive restart Together with XMonad.Layout.WorkspaceDir this provides for fully dynamic topic space workflow",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "WorkspaceNames",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Names",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:getWorkspaceNames",
      "description": {
        "fct-descr": "\u003cp\u003eReturns a function that maps workspace tag \u003ccode\u003e\"t\"\u003c/code\u003e to \u003ccode\u003e\"t:name\"\u003c/code\u003e for\n workspaces with a name, and to \u003ccode\u003e\"t\"\u003c/code\u003e otherwise.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X (WorkspaceId -\u003e String)",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#getWorkspaceNames",
        "fct-type": "function",
        "title": "getWorkspaceNames"
      },
      "index": {
        "description": "Returns function that maps workspace tag to name for workspaces with name and to otherwise",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "getWorkspaceNames",
        "normalized": "X(WorkspaceId-\u003eString)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Names",
        "signature": "X(WorkspaceId-\u003eString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:renameWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt for a new name for the current workspace and set it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#renameWorkspace",
        "fct-type": "function",
        "title": "renameWorkspace"
      },
      "index": {
        "description": "Prompt for new name for the current workspace and set it",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "renameWorkspace",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:setCurrentWorkspaceName",
      "description": {
        "fct-descr": "\u003cp\u003eSets the name of the current workspace. See \u003ccode\u003e\u003ca\u003esetWorkspaceName\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#setCurrentWorkspaceName",
        "fct-type": "function",
        "title": "setCurrentWorkspaceName"
      },
      "index": {
        "description": "Sets the name of the current workspace See setWorkspaceName",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "setCurrentWorkspaceName",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Current Workspace Name",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:setWorkspaceName",
      "description": {
        "fct-descr": "\u003cp\u003eSets the name of a workspace. Empty string makes the workspace unnamed\n again.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#setWorkspaceName",
        "fct-type": "function",
        "title": "setWorkspaceName"
      },
      "index": {
        "description": "Sets the name of workspace Empty string makes the workspace unnamed again",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "setWorkspaceName",
        "normalized": "WorkspaceId-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Name",
        "signature": "WorkspaceId-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:swapTo",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003eXMonad.Actions.SwapWorkspaces.swapTo\u003c/code\u003e. This is the same with names.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#swapTo",
        "fct-type": "function",
        "title": "swapTo"
      },
      "index": {
        "description": "See XMonad.Actions.SwapWorkspaces.swapTo This is the same with names",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "swapTo",
        "normalized": "Direction D-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": "Direction D-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:swapTo-39-",
      "description": {
        "fct-descr": "\u003cp\u003eSwap with the previous or next workspace of the given type.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e WSType -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#swapTo%27",
        "fct-type": "function",
        "title": "swapTo'"
      },
      "index": {
        "description": "Swap with the previous or next workspace of the given type",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "swapTo'",
        "normalized": "Direction D-\u003eWSType-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To'",
        "signature": "Direction D-\u003eWSType-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:swapWithCurrent",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003eXMonad.Actions.SwapWorkspaces.swapWithCurrent\u003c/code\u003e. This is almost the\n same with names.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e X ()",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#swapWithCurrent",
        "fct-type": "function",
        "title": "swapWithCurrent"
      },
      "index": {
        "description": "See XMonad.Actions.SwapWorkspaces.swapWithCurrent This is almost the same with names",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "swapWithCurrent",
        "normalized": "WorkspaceId-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With Current",
        "signature": "WorkspaceId-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Actions-WorkspaceNames.html#v:workspaceNamesPP",
      "description": {
        "fct-descr": "\u003cp\u003eModify \u003ca\u003eXMonad.Hooks.DynamicLog\u003c/a\u003e's pretty-printing format to show\n workspace names as well.\n\u003c/p\u003e",
        "fct-module": "XMonad.Actions.WorkspaceNames",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP -\u003e X PP",
        "fct-source": "src/XMonad-Actions-WorkspaceNames.html#workspaceNamesPP",
        "fct-type": "function",
        "title": "workspaceNamesPP"
      },
      "index": {
        "description": "Modify XMonad.Hooks.DynamicLog pretty-printing format to show workspace names as well",
        "hierarchy": "XMonad Actions WorkspaceNames",
        "module": "XMonad.Actions.WorkspaceNames",
        "name": "workspaceNamesPP",
        "normalized": "PP-\u003eX PP",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Names PP",
        "signature": "PP-\u003eX PP"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Arossato.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module specifies my xmonad defaults.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Arossato",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Arossato.html",
        "fct-type": "module",
        "title": "Arossato"
      },
      "index": {
        "description": "This module specifies my xmonad defaults",
        "hierarchy": "XMonad Config Arossato",
        "module": "XMonad.Config.Arossato",
        "name": "Arossato",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Arossato",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Arossato.html#v:arossatoConfig",
      "description": {
        "fct-module": "XMonad.Config.Arossato",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m (XConfig (ModifiedLayout AvoidStruts (NewSelect (ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat))) (NewSelect (ModifiedLayout WithBorder (ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) Simplest)) (ModifiedLayout WindowArranger (NewSelect (ModifiedLayout Magnifier Tall) (NewSelect (ModifiedLayout WithBorder Full) (NewSelect (Mirror Tall) Accordion))))))))",
        "fct-source": "src/XMonad-Config-Arossato.html#arossatoConfig",
        "fct-type": "function",
        "title": "arossatoConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Arossato",
        "module": "XMonad.Config.Arossato",
        "name": "arossatoConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Azerty.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module fixes some of the keybindings for the francophone among you who\n use an AZERTY keyboard layout. Config stolen from TeXitoi's config on the\n wiki.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Azerty",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Azerty.html",
        "fct-type": "module",
        "title": "Azerty"
      },
      "index": {
        "description": "This module fixes some of the keybindings for the francophone among you who use an AZERTY keyboard layout Config stolen from TeXitoi config on the wiki",
        "hierarchy": "XMonad Config Azerty",
        "module": "XMonad.Config.Azerty",
        "name": "Azerty",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Azerty",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Azerty.html#v:azertyConfig",
      "description": {
        "fct-module": "XMonad.Config.Azerty",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (Choose Tall (Choose (Mirror Tall) Full))",
        "fct-source": "src/XMonad-Config-Azerty.html#azertyConfig",
        "fct-type": "function",
        "title": "azertyConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Azerty",
        "module": "XMonad.Config.Azerty",
        "name": "azertyConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Azerty.html#v:azertyKeys",
      "description": {
        "fct-module": "XMonad.Config.Azerty",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig t -\u003e Map (KeyMask, KeySym) (X ())",
        "fct-source": "src/XMonad-Config-Azerty.html#azertyKeys",
        "fct-type": "function",
        "title": "azertyKeys"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Azerty",
        "module": "XMonad.Config.Azerty",
        "name": "azertyKeys",
        "normalized": "XConfig a-\u003eMap(KeyMask,KeySym)(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "XConfig t-\u003eMap(KeyMask,KeySym)(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Bluetile.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is the default configuration of Bluetile\n (\u003ca\u003ehttp://projects.haskell.org/bluetile/\u003c/a\u003e). If you\n are migrating from Bluetile to xmonad or want to create\n a similar setup, then this will give you pretty much\n the same thing, except for Bluetile's helper applications\n such as the dock.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Bluetile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Bluetile.html",
        "fct-type": "module",
        "title": "Bluetile"
      },
      "index": {
        "description": "This is the default configuration of Bluetile http projects.haskell.org bluetile If you are migrating from Bluetile to xmonad or want to create similar setup then this will give you pretty much the same thing except for Bluetile helper applications such as the dock",
        "hierarchy": "XMonad Config Bluetile",
        "module": "XMonad.Config.Bluetile",
        "name": "Bluetile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bluetile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Bluetile.html#v:bluetileConfig",
      "description": {
        "fct-module": "XMonad.Config.Bluetile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (ModifiedLayout Minimize (ModifiedLayout BoringWindows (NewSelect (ModifiedLayout Named (ModifiedLayout (Decoration ButtonDecoration DefaultShrinker) (ModifiedLayout Maximize (ModifiedLayout BorderResize PositionStoreFloat)))) (NewSelect (ModifiedLayout Named (ModifiedLayout (Decoration WindowSwitcherDecoration DefaultShrinker) (ModifiedLayout DraggingVisualizer (ModifiedLayout Maximize MouseResizableTile)))) (NewSelect (ModifiedLayout Named (ModifiedLayout (Decoration WindowSwitcherDecoration DefaultShrinker) (ModifiedLayout DraggingVisualizer (ModifiedLayout Maximize MouseResizableTile)))) (ModifiedLayout Named (ModifiedLayout (Decoration WindowSwitcherDecoration DefaultShrinker) (ModifiedLayout DraggingVisualizer (ModifiedLayout Maximize (ModifiedLayout SmartBorder Full)))))))))))",
        "fct-source": "src/XMonad-Config-Bluetile.html#bluetileConfig",
        "fct-type": "function",
        "title": "bluetileConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Bluetile",
        "module": "XMonad.Config.Bluetile",
        "name": "bluetileConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Desktop.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides a config suitable for use with a desktop\n environment such as KDE or GNOME.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Desktop",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Desktop.html",
        "fct-type": "module",
        "title": "Desktop"
      },
      "index": {
        "description": "This module provides config suitable for use with desktop environment such as KDE or GNOME",
        "hierarchy": "XMonad Config Desktop",
        "module": "XMonad.Config.Desktop",
        "name": "Desktop",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Desktop",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Desktop.html#v:desktopConfig",
      "description": {
        "fct-module": "XMonad.Config.Desktop",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (Choose Tall (Choose (Mirror Tall) Full)))",
        "fct-source": "src/XMonad-Config-Desktop.html#desktopConfig",
        "fct-type": "function",
        "title": "desktopConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Desktop",
        "module": "XMonad.Config.Desktop",
        "name": "desktopConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Desktop.html#v:desktopLayoutModifiers",
      "description": {
        "fct-module": "XMonad.Config.Desktop",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout AvoidStruts l a",
        "fct-source": "src/XMonad-Config-Desktop.html#desktopLayoutModifiers",
        "fct-type": "function",
        "title": "desktopLayoutModifiers"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Desktop",
        "module": "XMonad.Config.Desktop",
        "name": "desktopLayoutModifiers",
        "normalized": "a b-\u003eModifiedLayout AvoidStruts a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Modifiers",
        "signature": "l a-\u003eModifiedLayout AvoidStruts l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Droundy.html#",
      "description": {
        "fct-module": "XMonad.Config.Droundy",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Droundy.html",
        "fct-type": "module",
        "title": "Droundy"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Droundy",
        "module": "XMonad.Config.Droundy",
        "name": "Droundy",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Droundy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Droundy.html#v:config",
      "description": {
        "fct-module": "XMonad.Config.Droundy",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout ShowWName (ModifiedLayout WorkspaceDir (ModifiedLayout BoringWindows (ModifiedLayout SmartBorder (ModifiedLayout WindowNavigation (ModifiedLayout Magnifier (ToggleLayouts Full (ModifiedLayout AvoidStruts (NewSelect (ModifiedLayout Named (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest)) (NewSelect (ModifiedLayout Named (CombineTwo (DragPane ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (CombineTwo (Square ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest)))) (NewSelect (ModifiedLayout Named (CombineTwo (DragPane ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (CombineTwo (DragPane ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (CombineTwo (Square ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest))))) (ModifiedLayout Named (CombineTwo (DragPane ()) (CombineTwo (DragPane ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest)) (CombineTwo (Square ()) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest) (ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest)))))))))))))))",
        "fct-source": "src/XMonad-Config-Droundy.html#config",
        "fct-type": "function",
        "title": "config"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Droundy",
        "module": "XMonad.Config.Droundy",
        "name": "config",
        "normalized": "XConfig(ModifiedLayout ShowWName(ModifiedLayout WorkspaceDir(ModifiedLayout BoringWindows(ModifiedLayout SmartBorder(ModifiedLayout WindowNavigation(ModifiedLayout Magnifier(ToggleLayouts Full(ModifiedLayout AvoidStruts(NewSelect(ModifiedLayout Named(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest))(NewSelect(ModifiedLayout Named(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(CombineTwo(Square())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest))))(NewSelect(ModifiedLayout Named(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(CombineTwo(Square())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)))))(ModifiedLayout Named(CombineTwo(DragPane())(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest))(CombineTwo(Square())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)))))))))))))))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "XConfig(ModifiedLayout ShowWName(ModifiedLayout WorkspaceDir(ModifiedLayout BoringWindows(ModifiedLayout SmartBorder(ModifiedLayout WindowNavigation(ModifiedLayout Magnifier(ToggleLayouts Full(ModifiedLayout AvoidStruts(NewSelect(ModifiedLayout Named(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest))(NewSelect(ModifiedLayout Named(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(CombineTwo(Square())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest))))(NewSelect(ModifiedLayout Named(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(CombineTwo(Square())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)))))(ModifiedLayout Named(CombineTwo(DragPane())(CombineTwo(DragPane())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest))(CombineTwo(Square())(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)(ModifiedLayout(Decoration TabbedDecoration CustomShrink)Simplest)))))))))))))))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Droundy.html#v:mytab",
      "description": {
        "fct-module": "XMonad.Config.Droundy",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabbedDecoration CustomShrink) Simplest Window",
        "fct-source": "src/XMonad-Config-Droundy.html#mytab",
        "fct-type": "function",
        "title": "mytab"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Droundy",
        "module": "XMonad.Config.Droundy",
        "name": "mytab",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Gnome.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides a config suitable for use with the GNOME desktop\n environment.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Gnome",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Gnome.html",
        "fct-type": "module",
        "title": "Gnome"
      },
      "index": {
        "description": "This module provides config suitable for use with the GNOME desktop environment",
        "hierarchy": "XMonad Config Gnome",
        "module": "XMonad.Config.Gnome",
        "name": "Gnome",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gnome",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Gnome.html#v:gnomeConfig",
      "description": {
        "fct-module": "XMonad.Config.Gnome",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (Choose Tall (Choose (Mirror Tall) Full)))",
        "fct-source": "src/XMonad-Config-Gnome.html#gnomeConfig",
        "fct-type": "function",
        "title": "gnomeConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Gnome",
        "module": "XMonad.Config.Gnome",
        "name": "gnomeConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Gnome.html#v:gnomeRegister",
      "description": {
        "fct-descr": "\u003cp\u003eRegister xmonad with gnome. 'dbus-send' must be in the $PATH with which\n xmonad is started.\n\u003c/p\u003e\u003cp\u003eThis action reduces a delay on startup only only if you have configured\n gnome-session\u003e=2.26: to start xmonad with a command as such:\n\u003c/p\u003e\u003cpre\u003e gconftool-2 -s /desktop/gnome/session/required_components/windowmanager xmonad --type string\n\u003c/pre\u003e",
        "fct-module": "XMonad.Config.Gnome",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m ()",
        "fct-source": "src/XMonad-Config-Gnome.html#gnomeRegister",
        "fct-type": "function",
        "title": "gnomeRegister"
      },
      "index": {
        "description": "Register xmonad with gnome dbus-send must be in the PATH with which xmonad is started This action reduces delay on startup only only if you have configured gnome-session to start xmonad with command as such gconftool-2 desktop gnome session required components windowmanager xmonad type string",
        "hierarchy": "XMonad Config Gnome",
        "module": "XMonad.Config.Gnome",
        "name": "gnomeRegister",
        "normalized": "a()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Register",
        "signature": "m()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Gnome.html#v:gnomeRun",
      "description": {
        "fct-descr": "\u003cp\u003eLaunch the \u003ca\u003eRun Application\u003c/a\u003e dialog.  gnome-panel must be running for this\n to work.\n\u003c/p\u003e",
        "fct-module": "XMonad.Config.Gnome",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Config-Gnome.html#gnomeRun",
        "fct-type": "function",
        "title": "gnomeRun"
      },
      "index": {
        "description": "Launch the Run Application dialog gnome-panel must be running for this to work",
        "hierarchy": "XMonad Config Gnome",
        "module": "XMonad.Config.Gnome",
        "name": "gnomeRun",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Run",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Kde.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides a config suitable for use with the KDE desktop\n environment.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Kde",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Kde.html",
        "fct-type": "module",
        "title": "Kde"
      },
      "index": {
        "description": "This module provides config suitable for use with the KDE desktop environment",
        "hierarchy": "XMonad Config Kde",
        "module": "XMonad.Config.Kde",
        "name": "Kde",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Kde",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Kde.html#v:kde4Config",
      "description": {
        "fct-module": "XMonad.Config.Kde",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (Choose Tall (Choose (Mirror Tall) Full)))",
        "fct-source": "src/XMonad-Config-Kde.html#kde4Config",
        "fct-type": "function",
        "title": "kde4Config"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Kde",
        "module": "XMonad.Config.Kde",
        "name": "kde4Config",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Kde.html#v:kdeConfig",
      "description": {
        "fct-module": "XMonad.Config.Kde",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (Choose Tall (Choose (Mirror Tall) Full)))",
        "fct-source": "src/XMonad-Config-Kde.html#kdeConfig",
        "fct-type": "function",
        "title": "kdeConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Kde",
        "module": "XMonad.Config.Kde",
        "name": "kdeConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Sjanssen.html#",
      "description": {
        "fct-module": "XMonad.Config.Sjanssen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Sjanssen.html",
        "fct-type": "module",
        "title": "Sjanssen"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Sjanssen",
        "module": "XMonad.Config.Sjanssen",
        "name": "Sjanssen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sjanssen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Sjanssen.html#v:sjanssenConfig",
      "description": {
        "fct-module": "XMonad.Config.Sjanssen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (ModifiedLayout SmartBorder (Choose (Choose HintedTile (Choose HintedTile Full)) (ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) Simplest))))",
        "fct-source": "src/XMonad-Config-Sjanssen.html#sjanssenConfig",
        "fct-type": "function",
        "title": "sjanssenConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Sjanssen",
        "module": "XMonad.Config.Sjanssen",
        "name": "sjanssenConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Xfce.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides a config suitable for use with the Xfce desktop\n environment.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Config.Xfce",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Config-Xfce.html",
        "fct-type": "module",
        "title": "Xfce"
      },
      "index": {
        "description": "This module provides config suitable for use with the Xfce desktop environment",
        "hierarchy": "XMonad Config Xfce",
        "module": "XMonad.Config.Xfce",
        "name": "Xfce",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Xfce",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Config-Xfce.html#v:xfceConfig",
      "description": {
        "fct-module": "XMonad.Config.Xfce",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig (ModifiedLayout AvoidStruts (Choose Tall (Choose (Mirror Tall) Full)))",
        "fct-source": "src/XMonad-Config-Xfce.html#xfceConfig",
        "fct-type": "function",
        "title": "xfceConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Config Xfce",
        "module": "XMonad.Config.Xfce",
        "name": "xfceConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Doc-Configuring.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a brief tutorial that will teach you how to create a\n basic xmonad configuration.\n\u003c/p\u003e\u003cp\u003eFor more detailed instructions on extending xmonad with the\n xmonad-contrib library, see \u003ca\u003eXMonad.Doc.Extending\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Doc.Configuring",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Doc-Configuring.html",
        "fct-type": "module",
        "title": "Configuring"
      },
      "index": {
        "description": "This is brief tutorial that will teach you how to create basic xmonad configuration For more detailed instructions on extending xmonad with the xmonad-contrib library see XMonad.Doc.Extending",
        "hierarchy": "XMonad Doc Configuring",
        "module": "XMonad.Doc.Configuring",
        "name": "Configuring",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Configuring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Doc-Developing.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module gives a brief overview of the xmonad internals. It is\n intended for advanced users who are curious about the xmonad source\n code and want an brief overview. This document may also be helpful\n for the beginner/intermediate Haskell programmer who is motivated\n to write an xmonad extension as a way to deepen her understanding\n of this powerful functional language; however, there is not space\n here to go into much detail.  For a more comprehensive document\n covering some of the same material in more depth, see the guided\n tour of the xmonad source on the xmonad wiki:\n \u003ca\u003ehttp://haskell.org/haskellwiki/Xmonad/Guided_tour_of_the_xmonad_source\u003c/a\u003e.\n\u003c/p\u003e\u003cp\u003eIf you write an extension module and think it may be useful for\n others, consider releasing it.  Coding guidelines and licensing\n policies are covered at the end of this document, and must be\n followed if you want your code to be included in the official\n repositories.  For a basic tutorial on the nuts and bolts of\n developing a new extension for xmonad, see the tutorial on the\n wiki:\n \u003ca\u003ehttp://haskell.org/haskellwiki/Xmonad/xmonad_development_tutorial\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Doc.Developing",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Doc-Developing.html",
        "fct-type": "module",
        "title": "Developing"
      },
      "index": {
        "description": "This module gives brief overview of the xmonad internals It is intended for advanced users who are curious about the xmonad source code and want an brief overview This document may also be helpful for the beginner intermediate Haskell programmer who is motivated to write an xmonad extension as way to deepen her understanding of this powerful functional language however there is not space here to go into much detail For more comprehensive document covering some of the same material in more depth see the guided tour of the xmonad source on the xmonad wiki http haskell.org haskellwiki Xmonad Guided tour of the xmonad source If you write an extension module and think it may be useful for others consider releasing it Coding guidelines and licensing policies are covered at the end of this document and must be followed if you want your code to be included in the official repositories For basic tutorial on the nuts and bolts of developing new extension for xmonad see the tutorial on the wiki http haskell.org haskellwiki Xmonad xmonad development tutorial",
        "hierarchy": "XMonad Doc Developing",
        "module": "XMonad.Doc.Developing",
        "name": "Developing",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Developing",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Doc-Extending.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module documents the xmonad-contrib library and\n how to use it to extend the capabilities of xmonad.\n\u003c/p\u003e\u003cp\u003eReading this document should not require a deep knowledge of\n Haskell; the examples are intended to be useful and understandable\n for those users who do not know Haskell and don't want to have to\n learn it just to configure xmonad.  You should be able to get by\n just fine by ignoring anything you don't understand and using the\n provided examples as templates.  However, relevant Haskell features\n are discussed when appropriate, so this document will hopefully be\n useful for more advanced Haskell users as well.\n\u003c/p\u003e\u003cp\u003eThose wishing to be totally hardcore and develop their own xmonad\n extensions (it's easier than it sounds, we promise!) should read\n the documentation in \u003ca\u003eXMonad.Doc.Developing\u003c/a\u003e.\n\u003c/p\u003e\u003cp\u003eMore configuration examples may be found on the Haskell wiki:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://haskell.org/haskellwiki/Xmonad/Config_archive\u003c/a\u003e\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Doc.Extending",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Doc-Extending.html",
        "fct-type": "module",
        "title": "Extending"
      },
      "index": {
        "description": "This module documents the xmonad-contrib library and how to use it to extend the capabilities of xmonad Reading this document should not require deep knowledge of Haskell the examples are intended to be useful and understandable for those users who do not know Haskell and don want to have to learn it just to configure xmonad You should be able to get by just fine by ignoring anything you don understand and using the provided examples as templates However relevant Haskell features are discussed when appropriate so this document will hopefully be useful for more advanced Haskell users as well Those wishing to be totally hardcore and develop their own xmonad extensions it easier than it sounds we promise should read the documentation in XMonad.Doc.Developing More configuration examples may be found on the Haskell wiki http haskell.org haskellwiki Xmonad Config archive",
        "hierarchy": "XMonad Doc Extending",
        "module": "XMonad.Doc.Extending",
        "name": "Extending",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Extending",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Doc.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is the main documentation module for the xmonad-contrib\n library. It provides a brief overview of xmonad and a link to\n documentation for configuring and extending xmonad.\n\u003c/p\u003e\u003cp\u003eA link to documentation describing xmonad internals is also provided.\n This module is mainly intended for those wanting to contribute code,\n or for those who are curious to know what's going on behind the scenes.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Doc",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Doc.html",
        "fct-type": "module",
        "title": "Doc"
      },
      "index": {
        "description": "This is the main documentation module for the xmonad-contrib library It provides brief overview of xmonad and link to documentation for configuring and extending xmonad link to documentation describing xmonad internals is also provided This module is mainly intended for those wanting to contribute code or for those who are curious to know what going on behind the scenes",
        "hierarchy": "XMonad Doc",
        "module": "XMonad.Doc",
        "name": "Doc",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-CurrentWorkspaceOnTop.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eEnsures that the windows of the current workspace are always in front\n of windows that are located on other visible screens. This becomes important\n if you use decoration and drag windows from one screen to another. Using this\n module, the dragged window will always be in front of other windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.CurrentWorkspaceOnTop",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-CurrentWorkspaceOnTop.html",
        "fct-type": "module",
        "title": "CurrentWorkspaceOnTop"
      },
      "index": {
        "description": "Ensures that the windows of the current workspace are always in front of windows that are located on other visible screens This becomes important if you use decoration and drag windows from one screen to another Using this module the dragged window will always be in front of other windows",
        "hierarchy": "XMonad Hooks CurrentWorkspaceOnTop",
        "module": "XMonad.Hooks.CurrentWorkspaceOnTop",
        "name": "CurrentWorkspaceOnTop",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Current Workspace On Top",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-CurrentWorkspaceOnTop.html#v:currentWorkspaceOnTop",
      "description": {
        "fct-module": "XMonad.Hooks.CurrentWorkspaceOnTop",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-CurrentWorkspaceOnTop.html#currentWorkspaceOnTop",
        "fct-type": "function",
        "title": "currentWorkspaceOnTop"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks CurrentWorkspaceOnTop",
        "module": "XMonad.Hooks.CurrentWorkspaceOnTop",
        "name": "currentWorkspaceOnTop",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace On Top",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicHooks.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eOne-shot and permanent ManageHooks that can be updated at runtime.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.DynamicHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-DynamicHooks.html",
        "fct-type": "module",
        "title": "DynamicHooks"
      },
      "index": {
        "description": "One-shot and permanent ManageHooks that can be updated at runtime",
        "hierarchy": "XMonad Hooks DynamicHooks",
        "module": "XMonad.Hooks.DynamicHooks",
        "name": "DynamicHooks",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Hooks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicHooks.html#v:addDynamicHook",
      "description": {
        "fct-descr": "\u003cp\u003eAppends the given \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e to the permanent dynamic \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-DynamicHooks.html#addDynamicHook",
        "fct-type": "function",
        "title": "addDynamicHook"
      },
      "index": {
        "description": "Appends the given ManageHook to the permanent dynamic ManageHook",
        "hierarchy": "XMonad Hooks DynamicHooks",
        "module": "XMonad.Hooks.DynamicHooks",
        "name": "addDynamicHook",
        "normalized": "ManageHook-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Hook",
        "signature": "ManageHook-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicHooks.html#v:dynamicMasterHook",
      "description": {
        "fct-descr": "\u003cp\u003eMaster \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e that must be in your \u003ccode\u003exmonad.hs\u003c/code\u003e \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-DynamicHooks.html#dynamicMasterHook",
        "fct-type": "function",
        "title": "dynamicMasterHook"
      },
      "index": {
        "description": "Master ManageHook that must be in your xmonad.hs ManageHook",
        "hierarchy": "XMonad Hooks DynamicHooks",
        "module": "XMonad.Hooks.DynamicHooks",
        "name": "dynamicMasterHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicHooks.html#v:oneShotHook",
      "description": {
        "fct-descr": "\u003cp\u003eCreates a one-shot \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e. Note that you have to specify the two\n parts of the \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e separately. Where you would usually write:\n\u003c/p\u003e\u003cpre\u003e className =? \"example\" --\u003e doFloat\n\u003c/pre\u003e\u003cp\u003eyou must call \u003ccode\u003e\u003ca\u003eoneShotHook\u003c/a\u003e\u003c/code\u003e as\n\u003c/p\u003e\u003cpre\u003e oneShotHook dynHooksRef (className =? \"example) doFloat\n\u003c/pre\u003e",
        "fct-module": "XMonad.Hooks.DynamicHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e ManageHook -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-DynamicHooks.html#oneShotHook",
        "fct-type": "function",
        "title": "oneShotHook"
      },
      "index": {
        "description": "Creates one-shot ManageHook Note that you have to specify the two parts of the ManageHook separately Where you would usually write className example doFloat you must call oneShotHook as oneShotHook dynHooksRef className example doFloat",
        "hierarchy": "XMonad Hooks DynamicHooks",
        "module": "XMonad.Hooks.DynamicHooks",
        "name": "oneShotHook",
        "normalized": "Query Bool-\u003eManageHook-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shot Hook",
        "signature": "Query Bool-\u003eManageHook-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicHooks.html#v:updateDynamicHook",
      "description": {
        "fct-descr": "\u003cp\u003eModifies the permanent \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e with an arbitrary function.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(ManageHook -\u003e ManageHook) -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-DynamicHooks.html#updateDynamicHook",
        "fct-type": "function",
        "title": "updateDynamicHook"
      },
      "index": {
        "description": "Modifies the permanent ManageHook with an arbitrary function",
        "hierarchy": "XMonad Hooks DynamicHooks",
        "module": "XMonad.Hooks.DynamicHooks",
        "name": "updateDynamicHook",
        "normalized": "(ManageHook-\u003eManageHook)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Hook",
        "signature": "(ManageHook-\u003eManageHook)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003exmonad calls the logHook with every internal state update, which is\n useful for (among other things) outputting status information to an\n external status bar program such as xmobar or dzen.  DynamicLog\n provides several drop-in logHooks for this purpose, as well as\n flexible tools for specifying your own formatting.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html",
        "fct-type": "module",
        "title": "DynamicLog"
      },
      "index": {
        "description": "xmonad calls the logHook with every internal state update which is useful for among other things outputting status information to an external status bar program such as xmobar or dzen DynamicLog provides several drop-in logHooks for this purpose as well as flexible tools for specifying your own formatting",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "DynamicLog",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dynamic Log",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#t:PP",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003ePP\u003c/a\u003e\u003c/code\u003e type allows the user to customize the formatting of\n   status information.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "data",
        "title": "PP"
      },
      "index": {
        "description": "The PP type allows the user to customize the formatting of status information",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "PP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:PP",
      "description": {
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "PP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "PP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:byorgeyPP",
      "description": {
        "fct-descr": "\u003cp\u003eThe options that byorgey likes to use with dzen, as another example.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#byorgeyPP",
        "fct-type": "function",
        "title": "byorgeyPP"
      },
      "index": {
        "description": "The options that byorgey likes to use with dzen as another example",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "byorgeyPP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:defaultPP",
      "description": {
        "fct-descr": "\u003cp\u003eThe default pretty printing options, as seen in \u003ccode\u003e\u003ca\u003edynamicLog\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#defaultPP",
        "fct-type": "function",
        "title": "defaultPP"
      },
      "index": {
        "description": "The default pretty printing options as seen in dynamicLog",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "defaultPP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dynamicLog",
      "description": {
        "fct-descr": "\u003cp\u003eAn example log hook, which prints status information to stdout in\n the default format:\n\u003c/p\u003e\u003cpre\u003e 1 2 [3] 4 7 : full : title\n\u003c/pre\u003e\u003cp\u003eThat is, the currently populated workspaces, the current\n workspace layout, and the title of the focused window.\n\u003c/p\u003e\u003cp\u003eTo customize the output format, see \u003ccode\u003e\u003ca\u003edynamicLogWithPP\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dynamicLog",
        "fct-type": "function",
        "title": "dynamicLog"
      },
      "index": {
        "description": "An example log hook which prints status information to stdout in the default format full title That is the currently populated workspaces the current workspace layout and the title of the focused window To customize the output format see dynamicLogWithPP",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dynamicLog",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Log",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dynamicLogString",
      "description": {
        "fct-descr": "\u003cp\u003eThe same as \u003ccode\u003e\u003ca\u003edynamicLogWithPP\u003c/a\u003e\u003c/code\u003e, except it simply returns the status\n   as a formatted string without actually printing it to stdout, to\n   allow for further processing, or use in some application other than\n   a status bar.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP -\u003e X String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dynamicLogString",
        "fct-type": "function",
        "title": "dynamicLogString"
      },
      "index": {
        "description": "The same as dynamicLogWithPP except it simply returns the status as formatted string without actually printing it to stdout to allow for further processing or use in some application other than status bar",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dynamicLogString",
        "normalized": "PP-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Log String",
        "signature": "PP-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dynamicLogWithPP",
      "description": {
        "fct-descr": "\u003cp\u003eFormat the current status using the supplied pretty-printing format,\n   and write it to stdout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dynamicLogWithPP",
        "fct-type": "function",
        "title": "dynamicLogWithPP"
      },
      "index": {
        "description": "Format the current status using the supplied pretty-printing format and write it to stdout",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dynamicLogWithPP",
        "normalized": "PP-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Log With PP",
        "signature": "PP-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dynamicLogXinerama",
      "description": {
        "fct-descr": "\u003cp\u003eWorkspace logger with a format designed for Xinerama:\n\u003c/p\u003e\u003cpre\u003e [1 9 3] 2 7\n\u003c/pre\u003e\u003cp\u003ewhere 1, 9, and 3 are the workspaces on screens 1, 2 and 3, respectively,\n and 2 and 7 are non-visible, non-empty workspaces.\n\u003c/p\u003e\u003cp\u003eUnfortunately, at the present time, the current layout and window title\n are not shown, and there is no way to incorporate the xinerama\n workspace format shown above with \u003ccode\u003e\u003ca\u003edynamicLogWithPP\u003c/a\u003e\u003c/code\u003e.  Hopefully this\n will change soon.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dynamicLogXinerama",
        "fct-type": "function",
        "title": "dynamicLogXinerama"
      },
      "index": {
        "description": "Workspace logger with format designed for Xinerama where and are the workspaces on screens and respectively and and are non-visible non-empty workspaces Unfortunately at the present time the current layout and window title are not shown and there is no way to incorporate the xinerama workspace format shown above with dynamicLogWithPP Hopefully this will change soon",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dynamicLogXinerama",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Log Xinerama",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dzen",
      "description": {
        "fct-descr": "\u003cp\u003eRun xmonad with a dzen status bar set to some nice defaults.\n\u003c/p\u003e\u003cpre\u003e main = xmonad =\u003c\u003c dzen myConfig\n\n myConfig = defaultConfig { ... }\n\u003c/pre\u003e\u003cp\u003eThe intent is that the above config file should provide a nice\n status bar with minimal effort.\n\u003c/p\u003e\u003cp\u003eIf you wish to customize the status bar format at all, you'll have to\n use the \u003ccode\u003e\u003ca\u003estatusBar\u003c/a\u003e\u003c/code\u003e function instead.\n\u003c/p\u003e\u003cp\u003eThe binding uses the XMonad.Hooks.ManageDocks module to automatically\n handle screen placement for dzen, and enables 'mod-b' for toggling\n the menu bar.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e IO (XConfig (ModifiedLayout AvoidStruts l))",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dzen",
        "fct-type": "function",
        "title": "dzen"
      },
      "index": {
        "description": "Run xmonad with dzen status bar set to some nice defaults main xmonad dzen myConfig myConfig defaultConfig The intent is that the above config file should provide nice status bar with minimal effort If you wish to customize the status bar format at all you ll have to use the statusBar function instead The binding uses the XMonad.Hooks.ManageDocks module to automatically handle screen placement for dzen and enables mod-b for toggling the menu bar",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dzen",
        "normalized": "XConfig a-\u003eIO(XConfig(ModifiedLayout AvoidStruts a))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "XConfig l-\u003eIO(XConfig(ModifiedLayout AvoidStruts l))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dzenColor",
      "description": {
        "fct-descr": "\u003cp\u003eUse dzen escape codes to output a string with given foreground\n   and background colors.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String-\u003e String-\u003e String-\u003e String",
        "fct-type": "function",
        "title": "dzenColor"
      },
      "index": {
        "description": "Use dzen escape codes to output string with given foreground and background colors",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dzenColor",
        "normalized": "String-\u003eString-\u003eString-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": "String-\u003eString-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dzenEscape",
      "description": {
        "fct-descr": "\u003cp\u003eEscape any dzen metacharacters.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dzenEscape",
        "fct-type": "function",
        "title": "dzenEscape"
      },
      "index": {
        "description": "Escape any dzen metacharacters",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dzenEscape",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Escape",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dzenPP",
      "description": {
        "fct-descr": "\u003cp\u003eSettings to emulate dwm's statusbar, dzen only.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dzenPP",
        "fct-type": "function",
        "title": "dzenPP"
      },
      "index": {
        "description": "Settings to emulate dwm statusbar dzen only",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dzenPP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:dzenStrip",
      "description": {
        "fct-descr": "\u003cp\u003eStrip dzen formatting or commands.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#dzenStrip",
        "fct-type": "function",
        "title": "dzenStrip"
      },
      "index": {
        "description": "Strip dzen formatting or commands",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "dzenStrip",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Strip",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:pad",
      "description": {
        "fct-descr": "\u003cp\u003ePad a string with a leading and trailing space.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#pad",
        "fct-type": "function",
        "title": "pad"
      },
      "index": {
        "description": "Pad string with leading and trailing space",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "pad",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppCurrent",
      "description": {
        "fct-descr": "\u003cp\u003ehow to print the tag of the currently focused\n workspace\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppCurrent"
      },
      "index": {
        "description": "how to print the tag of the currently focused workspace",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppCurrent",
        "normalized": "WorkspaceId-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Current",
        "signature": "WorkspaceId-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppExtras",
      "description": {
        "fct-descr": "\u003cp\u003eloggers for generating extra information such as\n time and date, system load, battery status, and so\n on.  See \u003ca\u003eXMonad.Util.Loggers\u003c/a\u003e for examples, or create\n your own!\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[X (Maybe String)]",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppExtras"
      },
      "index": {
        "description": "loggers for generating extra information such as time and date system load battery status and so on See XMonad.Util.Loggers for examples or create your own",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppExtras",
        "normalized": "[X(Maybe String)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Extras",
        "signature": "[X(Maybe String)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppHidden",
      "description": {
        "fct-descr": "\u003cp\u003ehow to print tags of hidden workspaces which\n contain windows\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppHidden"
      },
      "index": {
        "description": "how to print tags of hidden workspaces which contain windows",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppHidden",
        "normalized": "WorkspaceId-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hidden",
        "signature": "WorkspaceId-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppHiddenNoWindows",
      "description": {
        "fct-descr": "\u003cp\u003ehow to print tags of empty hidden workspaces\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppHiddenNoWindows"
      },
      "index": {
        "description": "how to print tags of empty hidden workspaces",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppHiddenNoWindows",
        "normalized": "WorkspaceId-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hidden No Windows",
        "signature": "WorkspaceId-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppLayout",
      "description": {
        "fct-descr": "\u003cp\u003elayout name format\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppLayout"
      },
      "index": {
        "description": "layout name format",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppLayout",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppOrder",
      "description": {
        "fct-descr": "\u003cp\u003ehow to order the different log sections. By\n   default, this function receives a list with three\n   formatted strings, representing the workspaces,\n   the layout, and the current window title,\n   respectively. If you have specified any extra\n   loggers in \u003ccode\u003e\u003ca\u003eppExtras\u003c/a\u003e\u003c/code\u003e, their output will also be\n   appended to the list.  To get them in the reverse\n   order, you can just use \u003ccode\u003eppOrder = reverse\u003c/code\u003e.  If\n   you don't want to display the current layout, you\n   could use something like \u003ccode\u003eppOrder = \\(ws:_:t:_) -\u003e\n   [ws,t]\u003c/code\u003e, and so on.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e [String]",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppOrder"
      },
      "index": {
        "description": "how to order the different log sections By default this function receives list with three formatted strings representing the workspaces the layout and the current window title respectively If you have specified any extra loggers in ppExtras their output will also be appended to the list To get them in the reverse order you can just use ppOrder reverse If you don want to display the current layout you could use something like ppOrder ws ws and so on",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppOrder",
        "normalized": "[String]-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Order",
        "signature": "[String]-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppOutput",
      "description": {
        "fct-descr": "\u003cp\u003eapplied to the entire formatted string in order to\n output it.  Can be used to specify an alternative\n output method (e.g. write to a pipe instead of\n stdout), and/or to perform some last-minute\n formatting.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppOutput"
      },
      "index": {
        "description": "applied to the entire formatted string in order to output it Can be used to specify an alternative output method e.g write to pipe instead of stdout and or to perform some last-minute formatting",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppOutput",
        "normalized": "String-\u003eIO()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Output",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppSep",
      "description": {
        "fct-descr": "\u003cp\u003eseparator to use between different log sections\n (window name, layout, workspaces)\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppSep"
      },
      "index": {
        "description": "separator to use between different log sections window name layout workspaces",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppSep",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sep",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppSort",
      "description": {
        "fct-descr": "\u003cp\u003ehow to sort the workspaces.  See\n \u003ca\u003eXMonad.Util.WorkspaceCompare\u003c/a\u003e for some useful\n sorts.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ([WindowSpace] -\u003e [WindowSpace])",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppSort"
      },
      "index": {
        "description": "how to sort the workspaces See XMonad.Util.WorkspaceCompare for some useful sorts",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppSort",
        "normalized": "X([WindowSpace]-\u003e[WindowSpace])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort",
        "signature": "X([WindowSpace]-\u003e[WindowSpace])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppTitle",
      "description": {
        "fct-descr": "\u003cp\u003ewindow title format\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppTitle"
      },
      "index": {
        "description": "window title format",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppTitle",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppUrgent",
      "description": {
        "fct-descr": "\u003cp\u003eformat to be applied to tags of urgent workspaces.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppUrgent"
      },
      "index": {
        "description": "format to be applied to tags of urgent workspaces",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppUrgent",
        "normalized": "WorkspaceId-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgent",
        "signature": "WorkspaceId-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppVisible",
      "description": {
        "fct-descr": "\u003cp\u003ehow to print tags of visible but not focused\n workspaces (xinerama only)\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppVisible"
      },
      "index": {
        "description": "how to print tags of visible but not focused workspaces xinerama only",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppVisible",
        "normalized": "WorkspaceId-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Visible",
        "signature": "WorkspaceId-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:ppWsSep",
      "description": {
        "fct-descr": "\u003cp\u003eseparator to use between workspace tags\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#PP",
        "fct-type": "function",
        "title": "ppWsSep"
      },
      "index": {
        "description": "separator to use between workspace tags",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "ppWsSep",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws Sep",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:pprWindowSet",
      "description": {
        "fct-descr": "\u003cp\u003eFormat the workspace information, given a workspace sorting function,\n   a list of urgent windows, a pretty-printer format, and the current\n   WindowSet.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceSort -\u003e [Window] -\u003e PP -\u003e WindowSet -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#pprWindowSet",
        "fct-type": "function",
        "title": "pprWindowSet"
      },
      "index": {
        "description": "Format the workspace information given workspace sorting function list of urgent windows pretty-printer format and the current WindowSet",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "pprWindowSet",
        "normalized": "WorkspaceSort-\u003e[Window]-\u003ePP-\u003eWindowSet-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Set",
        "signature": "WorkspaceSort-\u003e[Window]-\u003ePP-\u003eWindowSet-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:pprWindowSetXinerama",
      "description": {
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WindowSet -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#pprWindowSetXinerama",
        "fct-type": "function",
        "title": "pprWindowSetXinerama"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "pprWindowSetXinerama",
        "normalized": "WindowSet-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Set Xinerama",
        "signature": "WindowSet-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:shorten",
      "description": {
        "fct-descr": "\u003cp\u003eLimit a string to a certain length, adding \u003ca\u003e...\u003c/a\u003e if truncated.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#shorten",
        "fct-type": "function",
        "title": "shorten"
      },
      "index": {
        "description": "Limit string to certain length adding if truncated",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "shorten",
        "normalized": "Int-\u003eString-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:sjanssenPP",
      "description": {
        "fct-descr": "\u003cp\u003eThe options that sjanssen likes to use with xmobar, as an\n example.  Note the use of \u003ccode\u003e\u003ca\u003exmobarColor\u003c/a\u003e\u003c/code\u003e and the record update on\n \u003ccode\u003e\u003ca\u003edefaultPP\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#sjanssenPP",
        "fct-type": "function",
        "title": "sjanssenPP"
      },
      "index": {
        "description": "The options that sjanssen likes to use with xmobar as an example Note the use of xmobarColor and the record update on defaultPP",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "sjanssenPP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:statusBar",
      "description": {
        "fct-descr": "\u003cp\u003eModifies the given base configuration to launch the given status bar,\n send status information to that bar, and allocate space on the screen edges\n for the bar.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String-\u003e PP-\u003e (XConfig Layout -\u003e (KeyMask, KeySym))-\u003e XConfig l-\u003e IO (XConfig (ModifiedLayout AvoidStruts l))",
        "fct-type": "function",
        "title": "statusBar"
      },
      "index": {
        "description": "Modifies the given base configuration to launch the given status bar send status information to that bar and allocate space on the screen edges for the bar",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "statusBar",
        "normalized": "String-\u003ePP-\u003e(XConfig Layout-\u003e(KeyMask,KeySym))-\u003eXConfig a-\u003eIO(XConfig(ModifiedLayout AvoidStruts a))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bar",
        "signature": "String-\u003ePP-\u003e(XConfig Layout-\u003e(KeyMask,KeySym))-\u003eXConfig l-\u003eIO(XConfig(ModifiedLayout AvoidStruts l))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:trim",
      "description": {
        "fct-descr": "\u003cp\u003eTrim leading and trailing whitespace from a string.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#trim",
        "fct-type": "function",
        "title": "trim"
      },
      "index": {
        "description": "Trim leading and trailing whitespace from string",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "trim",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:wrap",
      "description": {
        "fct-descr": "\u003cp\u003eWrap a string in delimiters, unless it is empty.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String-\u003e String-\u003e String-\u003e String",
        "fct-type": "function",
        "title": "wrap"
      },
      "index": {
        "description": "Wrap string in delimiters unless it is empty",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "wrap",
        "normalized": "String-\u003eString-\u003eString-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:xmobar",
      "description": {
        "fct-descr": "\u003cp\u003eRun xmonad with a xmobar status bar set to some nice defaults.\n\u003c/p\u003e\u003cpre\u003e main = xmonad =\u003c\u003c xmobar myConfig\n\n myConfig = defaultConfig { ... }\n\u003c/pre\u003e\u003cp\u003eThis works pretty much the same as \u003ccode\u003e\u003ca\u003edzen\u003c/a\u003e\u003c/code\u003e function above.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e IO (XConfig (ModifiedLayout AvoidStruts l))",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#xmobar",
        "fct-type": "function",
        "title": "xmobar"
      },
      "index": {
        "description": "Run xmonad with xmobar status bar set to some nice defaults main xmonad xmobar myConfig myConfig defaultConfig This works pretty much the same as dzen function above",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "xmobar",
        "normalized": "XConfig a-\u003eIO(XConfig(ModifiedLayout AvoidStruts a))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "XConfig l-\u003eIO(XConfig(ModifiedLayout AvoidStruts l))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:xmobarColor",
      "description": {
        "fct-descr": "\u003cp\u003eUse xmobar escape codes to output a string with given foreground\n   and background colors.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String-\u003e String-\u003e String-\u003e String",
        "fct-type": "function",
        "title": "xmobarColor"
      },
      "index": {
        "description": "Use xmobar escape codes to output string with given foreground and background colors",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "xmobarColor",
        "normalized": "String-\u003eString-\u003eString-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": "String-\u003eString-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:xmobarPP",
      "description": {
        "fct-descr": "\u003cp\u003eSome nice xmobar defaults.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PP",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#xmobarPP",
        "fct-type": "function",
        "title": "xmobarPP"
      },
      "index": {
        "description": "Some nice xmobar defaults",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "xmobarPP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:xmobarStrip",
      "description": {
        "fct-descr": "\u003cp\u003eStrip xmobar markup.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#xmobarStrip",
        "fct-type": "function",
        "title": "xmobarStrip"
      },
      "index": {
        "description": "Strip xmobar markup",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "xmobarStrip",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Strip",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-DynamicLog.html#v:xmonadPropLog",
      "description": {
        "fct-descr": "\u003cp\u003eWrite a string to the property _XMONAD_LOG on the root window.  This\n property is of type UTF8_STRING. The string must have been processed by\n encodeString (dynamicLogString does this).\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.DynamicLog",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-DynamicLog.html#xmonadPropLog",
        "fct-type": "function",
        "title": "xmonadPropLog"
      },
      "index": {
        "description": "Write string to the property XMONAD LOG on the root window This property is of type UTF8 STRING The string must have been processed by encodeString dynamicLogString does this",
        "hierarchy": "XMonad Hooks DynamicLog",
        "module": "XMonad.Hooks.DynamicLog",
        "name": "xmonadPropLog",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prop Log",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMakes xmonad use the EWMH hints to tell panel applications about its\n workspaces and the windows therein. It also allows the user to interact\n with xmonad by clicking on panels and window lists.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html",
        "fct-type": "module",
        "title": "EwmhDesktops"
      },
      "index": {
        "description": "Makes xmonad use the EWMH hints to tell panel applications about its workspaces and the windows therein It also allows the user to interact with xmonad by clicking on panels and window lists",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "EwmhDesktops",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ewmh Desktops",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#v:ewmh",
      "description": {
        "fct-descr": "\u003cp\u003eAdd EWMH functionality to the given config.  See above for an example.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig a -\u003e XConfig a",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html#ewmh",
        "fct-type": "function",
        "title": "ewmh"
      },
      "index": {
        "description": "Add EWMH functionality to the given config See above for an example",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "ewmh",
        "normalized": "XConfig a-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "XConfig a-\u003eXConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#v:ewmhDesktopsEventHook",
      "description": {
        "fct-descr": "\u003cp\u003eIntercepts messages from pagers and similar applications and reacts on them.\n Currently supports:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e _NET_CURRENT_DESKTOP (switching desktops)\n\u003c/li\u003e\u003cli\u003e _NET_WM_DESKTOP (move windows to other desktops)\n\u003c/li\u003e\u003cli\u003e _NET_ACTIVE_WINDOW (activate another window, changing workspace if needed)\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html#ewmhDesktopsEventHook",
        "fct-type": "function",
        "title": "ewmhDesktopsEventHook"
      },
      "index": {
        "description": "Intercepts messages from pagers and similar applications and reacts on them Currently supports NET CURRENT DESKTOP switching desktops NET WM DESKTOP move windows to other desktops NET ACTIVE WINDOW activate another window changing workspace if needed",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "ewmhDesktopsEventHook",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Desktops Event Hook",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#v:ewmhDesktopsLogHook",
      "description": {
        "fct-descr": "\u003cp\u003eNotifies pagers and window lists, such as those in the gnome-panel\n of the current state of workspaces and windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html#ewmhDesktopsLogHook",
        "fct-type": "function",
        "title": "ewmhDesktopsLogHook"
      },
      "index": {
        "description": "Notifies pagers and window lists such as those in the gnome-panel of the current state of workspaces and windows",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "ewmhDesktopsLogHook",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Desktops Log Hook",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#v:ewmhDesktopsLogHookCustom",
      "description": {
        "fct-descr": "\u003cp\u003eGeneralized version of ewmhDesktopsLogHook that allows an arbitrary\n user-specified function to transform the workspace list (post-sorting)\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([WindowSpace] -\u003e [WindowSpace]) -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html#ewmhDesktopsLogHookCustom",
        "fct-type": "function",
        "title": "ewmhDesktopsLogHookCustom"
      },
      "index": {
        "description": "Generalized version of ewmhDesktopsLogHook that allows an arbitrary user-specified function to transform the workspace list post-sorting",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "ewmhDesktopsLogHookCustom",
        "normalized": "([WindowSpace]-\u003e[WindowSpace])-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Desktops Log Hook Custom",
        "signature": "([WindowSpace]-\u003e[WindowSpace])-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#v:ewmhDesktopsStartup",
      "description": {
        "fct-descr": "\u003cp\u003eInitializes EwmhDesktops and advertises EWMH support to the X\n server\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html#ewmhDesktopsStartup",
        "fct-type": "function",
        "title": "ewmhDesktopsStartup"
      },
      "index": {
        "description": "Initializes EwmhDesktops and advertises EWMH support to the server",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "ewmhDesktopsStartup",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Desktops Startup",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-EwmhDesktops.html#v:fullscreenEventHook",
      "description": {
        "fct-descr": "\u003cp\u003eAn event hook to handle applications that wish to fullscreen using the\n _NET_WM_STATE protocol. This includes users of the gtk_window_fullscreen()\n function, such as Totem, Evince and OpenOffice.org.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.EwmhDesktops",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-EwmhDesktops.html#fullscreenEventHook",
        "fct-type": "function",
        "title": "fullscreenEventHook"
      },
      "index": {
        "description": "An event hook to handle applications that wish to fullscreen using the NET WM STATE protocol This includes users of the gtk window fullscreen function such as Totem Evince and OpenOffice.org",
        "hierarchy": "XMonad Hooks EwmhDesktops",
        "module": "XMonad.Hooks.EwmhDesktops",
        "name": "fullscreenEventHook",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Event Hook",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMakes XMonad set the _NET_WM_WINDOW_OPACITY atom for inactive windows,\n which causes those windows to become slightly translucent if something\n like xcompmgr is running\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html",
        "fct-type": "module",
        "title": "FadeInactive"
      },
      "index": {
        "description": "Makes XMonad set the NET WM WINDOW OPACITY atom for inactive windows which causes those windows to become slightly translucent if something like xcompmgr is running",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "FadeInactive",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fade Inactive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:fadeIf",
      "description": {
        "fct-descr": "\u003cp\u003eFades a window by the specified amount if it satisfies the first query, otherwise\n makes it opaque.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e Rational -\u003e Query Rational",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#fadeIf",
        "fct-type": "function",
        "title": "fadeIf"
      },
      "index": {
        "description": "Fades window by the specified amount if it satisfies the first query otherwise makes it opaque",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "fadeIf",
        "normalized": "Query Bool-\u003eRational-\u003eQuery Rational",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "If",
        "signature": "Query Bool-\u003eRational-\u003eQuery Rational"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:fadeIn",
      "description": {
        "fct-descr": "\u003cp\u003emakes a window completely opaque\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#fadeIn",
        "fct-type": "function",
        "title": "fadeIn"
      },
      "index": {
        "description": "makes window completely opaque",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "fadeIn",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:fadeInactiveLogHook",
      "description": {
        "fct-descr": "\u003cp\u003esets the opacity of inactive windows to the specified amount\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#fadeInactiveLogHook",
        "fct-type": "function",
        "title": "fadeInactiveLogHook"
      },
      "index": {
        "description": "sets the opacity of inactive windows to the specified amount",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "fadeInactiveLogHook",
        "normalized": "Rational-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inactive Log Hook",
        "signature": "Rational-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:fadeOut",
      "description": {
        "fct-descr": "\u003cp\u003efades a window out by setting the opacity\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#fadeOut",
        "fct-type": "function",
        "title": "fadeOut"
      },
      "index": {
        "description": "fades window out by setting the opacity",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "fadeOut",
        "normalized": "Rational-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Out",
        "signature": "Rational-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:fadeOutLogHook",
      "description": {
        "fct-descr": "\u003cp\u003efades out every window by the amount returned by the query.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Rational -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#fadeOutLogHook",
        "fct-type": "function",
        "title": "fadeOutLogHook"
      },
      "index": {
        "description": "fades out every window by the amount returned by the query",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "fadeOutLogHook",
        "normalized": "Query Rational-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Out Log Hook",
        "signature": "Query Rational-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:isUnfocused",
      "description": {
        "fct-descr": "\u003cp\u003ereturns True if the window doesn't have the focus.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#isUnfocused",
        "fct-type": "function",
        "title": "isUnfocused"
      },
      "index": {
        "description": "returns True if the window doesn have the focus",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "isUnfocused",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Unfocused",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FadeInactive.html#v:setOpacity",
      "description": {
        "fct-descr": "\u003cp\u003esets the opacity of a window\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FadeInactive",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e Rational -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FadeInactive.html#setOpacity",
        "fct-type": "function",
        "title": "setOpacity"
      },
      "index": {
        "description": "sets the opacity of window",
        "hierarchy": "XMonad Hooks FadeInactive",
        "module": "XMonad.Hooks.FadeInactive",
        "name": "setOpacity",
        "normalized": "Window-\u003eRational-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Opacity",
        "signature": "Window-\u003eRational-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eHook and keybindings for automatically sending the next\n spawned window(s) to the floating layer.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-FloatNext.html",
        "fct-type": "module",
        "title": "FloatNext"
      },
      "index": {
        "description": "Hook and keybindings for automatically sending the next spawned window to the floating layer",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "FloatNext",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Next",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:floatAllNew",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efloatAllNew True\u003c/code\u003e arranges for new windows to be\n sent to the floating layer, \u003ccode\u003efloatAllNew False\u003c/code\u003e cancels it\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#floatAllNew",
        "fct-type": "function",
        "title": "floatAllNew"
      },
      "index": {
        "description": "floatAllNew True arranges for new windows to be sent to the floating layer floatAllNew False cancels it",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "floatAllNew",
        "normalized": "Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All New",
        "signature": "Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:floatNext",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efloatNext True\u003c/code\u003e arranges for the next spawned window to be\n sent to the floating layer, \u003ccode\u003efloatNext False\u003c/code\u003e cancels it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#floatNext",
        "fct-type": "function",
        "title": "floatNext"
      },
      "index": {
        "description": "floatNext True arranges for the next spawned window to be sent to the floating layer floatNext False cancels it",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "floatNext",
        "normalized": "Bool-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next",
        "signature": "Bool-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:floatNextHook",
      "description": {
        "fct-descr": "\u003cp\u003eThis \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e will selectively float windows as set\n by \u003ccode\u003e\u003ca\u003efloatNext\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003efloatAllNew\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#floatNextHook",
        "fct-type": "function",
        "title": "floatNextHook"
      },
      "index": {
        "description": "This ManageHook will selectively float windows as set by floatNext and floatAllNew",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "floatNextHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:runLogHook",
      "description": {
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#runLogHook",
        "fct-type": "function",
        "title": "runLogHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "runLogHook",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Log Hook",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:toggleFloatAllNew",
      "description": {
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#toggleFloatAllNew",
        "fct-type": "function",
        "title": "toggleFloatAllNew"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "toggleFloatAllNew",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float All New",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:toggleFloatNext",
      "description": {
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#toggleFloatNext",
        "fct-type": "function",
        "title": "toggleFloatNext"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "toggleFloatNext",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Next",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:willFloatAllNew",
      "description": {
        "fct-descr": "\u003cp\u003eWhether new windows will be set floating\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X Bool",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#willFloatAllNew",
        "fct-type": "function",
        "title": "willFloatAllNew"
      },
      "index": {
        "description": "Whether new windows will be set floating",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "willFloatAllNew",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float All New",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:willFloatAllNewPP",
      "description": {
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e String) -\u003e X (Maybe String)",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#willFloatAllNewPP",
        "fct-type": "function",
        "title": "willFloatAllNewPP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "willFloatAllNewPP",
        "normalized": "(String-\u003eString)-\u003eX(Maybe String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float All New PP",
        "signature": "(String-\u003eString)-\u003eX(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:willFloatNext",
      "description": {
        "fct-descr": "\u003cp\u003eWhether the next window will be set floating\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X Bool",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#willFloatNext",
        "fct-type": "function",
        "title": "willFloatNext"
      },
      "index": {
        "description": "Whether the next window will be set floating",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "willFloatNext",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Next",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-FloatNext.html#v:willFloatNextPP",
      "description": {
        "fct-module": "XMonad.Hooks.FloatNext",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e String) -\u003e X (Maybe String)",
        "fct-source": "src/XMonad-Hooks-FloatNext.html#willFloatNextPP",
        "fct-type": "function",
        "title": "willFloatNextPP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks FloatNext",
        "module": "XMonad.Hooks.FloatNext",
        "name": "willFloatNextPP",
        "normalized": "(String-\u003eString)-\u003eX(Maybe String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Next PP",
        "signature": "(String-\u003eString)-\u003eX(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eConfigure where new windows should be added and which window should be\n focused.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html",
        "fct-type": "module",
        "title": "InsertPosition"
      },
      "index": {
        "description": "Configure where new windows should be added and which window should be focused",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "InsertPosition",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Insert Position",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#t:Focus",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Focus",
        "fct-type": "data",
        "title": "Focus"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Focus",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#t:Position",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Position",
        "fct-type": "data",
        "title": "Position"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Position",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Position",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:Above",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Above",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Position",
        "fct-type": "function",
        "title": "Above"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Above",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Above",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:Below",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Below",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Position",
        "fct-type": "function",
        "title": "Below"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Below",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Below",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:End",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "End",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Position",
        "fct-type": "function",
        "title": "End"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "End",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "End",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:Master",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Master",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Position",
        "fct-type": "function",
        "title": "Master"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Master",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:Newer",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Newer",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Focus",
        "fct-type": "function",
        "title": "Newer"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Newer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Newer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:Older",
      "description": {
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Older",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#Focus",
        "fct-type": "function",
        "title": "Older"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "Older",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Older",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-InsertPosition.html#v:insertPosition",
      "description": {
        "fct-descr": "\u003cp\u003einsertPosition. A manage hook for placing new windows. XMonad's default is\n the same as using: \u003ccode\u003einsertPosition Above Newer\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.InsertPosition",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Position -\u003e Focus -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-InsertPosition.html#insertPosition",
        "fct-type": "function",
        "title": "insertPosition"
      },
      "index": {
        "description": "insertPosition manage hook for placing new windows XMonad default is the same as using insertPosition Above Newer",
        "hierarchy": "XMonad Hooks InsertPosition",
        "module": "XMonad.Hooks.InsertPosition",
        "name": "insertPosition",
        "normalized": "Position-\u003eFocus-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Position",
        "signature": "Position-\u003eFocus-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides tools to automatically manage \u003ccode\u003edock\u003c/code\u003e type programs,\n such as gnome-panel, kicker, dzen, and xmobar.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html",
        "fct-type": "module",
        "title": "ManageDocks"
      },
      "index": {
        "description": "This module provides tools to automatically manage dock type programs such as gnome-panel kicker dzen and xmobar",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "ManageDocks",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Manage Docks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#t:AvoidStruts",
      "description": {
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#AvoidStruts",
        "fct-type": "data",
        "title": "AvoidStruts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "AvoidStruts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Avoid Struts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#t:SetStruts",
      "description": {
        "fct-descr": "\u003cp\u003eSetStruts is a message constructor used to set or unset specific struts,\n regardless of whether or not the struts were originally set. Here are some\n example bindings:\n\u003c/p\u003e\u003cp\u003eShow all gaps:\n\u003c/p\u003e\u003cpre\u003e   ,((modm .|. shiftMask  ,xK_b),sendMessage $ SetStruts [minBound .. maxBound] [])\n\u003c/pre\u003e\u003cp\u003eHide all gaps:\n\u003c/p\u003e\u003cpre\u003e   ,((modm .|. controlMask,xK_b),sendMessage $ SetStruts [] [minBound .. maxBound])\n\u003c/pre\u003e\u003cp\u003eShow only upper and left gaps:\n\u003c/p\u003e\u003cpre\u003e   ,((modm .|. controlMask .|. shiftMask,xK_b),sendMessage $ SetStruts [U,L] [minBound .. maxBound])\n\u003c/pre\u003e\u003cp\u003eHide the bottom keeping whatever the other values were:\n\u003c/p\u003e\u003cpre\u003e   ,((modm .|. controlMask .|. shiftMask,xK_g),sendMessage $ SetStruts [] [D])\n\u003c/pre\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#SetStruts",
        "fct-type": "data",
        "title": "SetStruts"
      },
      "index": {
        "description": "SetStruts is message constructor used to set or unset specific struts regardless of whether or not the struts were originally set Here are some example bindings Show all gaps modm shiftMask xK sendMessage SetStruts minBound maxBound Hide all gaps modm controlMask xK sendMessage SetStruts minBound maxBound Show only upper and left gaps modm controlMask shiftMask xK sendMessage SetStruts minBound maxBound Hide the bottom keeping whatever the other values were modm controlMask shiftMask xK sendMessage SetStruts",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "SetStruts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Set Struts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#t:ToggleStruts",
      "description": {
        "fct-descr": "\u003cp\u003eMessage type which can be sent to an \u003ccode\u003e\u003ca\u003eAvoidStruts\u003c/a\u003e\u003c/code\u003e layout\n   modifier to alter its behavior.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#ToggleStruts",
        "fct-type": "data",
        "title": "ToggleStruts"
      },
      "index": {
        "description": "Message type which can be sent to an AvoidStruts layout modifier to alter its behavior",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "ToggleStruts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Struts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:SetStruts",
      "description": {
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SetStruts",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#SetStruts",
        "fct-type": "function",
        "title": "SetStruts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "SetStruts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Set Struts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:ToggleStrut",
      "description": {
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleStrut Direction2D",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#ToggleStruts",
        "fct-type": "function",
        "title": "ToggleStrut"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "ToggleStrut",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Strut",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:ToggleStruts",
      "description": {
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleStruts",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#ToggleStruts",
        "fct-type": "function",
        "title": "ToggleStruts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "ToggleStruts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Struts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:addedStruts",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Direction2D]",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#SetStruts",
        "fct-type": "function",
        "title": "addedStruts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "addedStruts",
        "normalized": "[Direction D]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Struts",
        "signature": "[Direction D]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:avoidStruts",
      "description": {
        "fct-descr": "\u003cp\u003eAdjust layout automagically: don't cover up any docks, status\n   bars, etc.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout AvoidStruts l a",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#avoidStruts",
        "fct-type": "function",
        "title": "avoidStruts"
      },
      "index": {
        "description": "Adjust layout automagically don cover up any docks status bars etc",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "avoidStruts",
        "normalized": "a b-\u003eModifiedLayout AvoidStruts a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Struts",
        "signature": "l a-\u003eModifiedLayout AvoidStruts l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:avoidStrutsOn",
      "description": {
        "fct-descr": "\u003cp\u003eAdjust layout automagically: don't cover up docks, status bars,\n   etc. on the indicated sides of the screen.  Valid sides are U\n   (top), D (bottom), R (right), or L (left).\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Direction2D] -\u003e l a -\u003e ModifiedLayout AvoidStruts l a",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#avoidStrutsOn",
        "fct-type": "function",
        "title": "avoidStrutsOn"
      },
      "index": {
        "description": "Adjust layout automagically don cover up docks status bars etc on the indicated sides of the screen Valid sides are top bottom right or left",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "avoidStrutsOn",
        "normalized": "[Direction D]-\u003ea b-\u003eModifiedLayout AvoidStruts a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Struts On",
        "signature": "[Direction D]-\u003el a-\u003eModifiedLayout AvoidStruts l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:calcGap",
      "description": {
        "fct-descr": "\u003cp\u003eGoes through the list of windows and find the gap so that all\n   STRUT settings are satisfied.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Set Direction2D -\u003e X (Rectangle -\u003e Rectangle)",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#calcGap",
        "fct-type": "function",
        "title": "calcGap"
      },
      "index": {
        "description": "Goes through the list of windows and find the gap so that all STRUT settings are satisfied",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "calcGap",
        "normalized": "Set Direction D-\u003eX(Rectangle-\u003eRectangle)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gap",
        "signature": "Set Direction D-\u003eX(Rectangle-\u003eRectangle)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:checkDock",
      "description": {
        "fct-descr": "\u003cp\u003eChecks if a window is a DOCK or DESKTOP window\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#checkDock",
        "fct-type": "function",
        "title": "checkDock"
      },
      "index": {
        "description": "Checks if window is DOCK or DESKTOP window",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "checkDock",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dock",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:manageDocks",
      "description": {
        "fct-descr": "\u003cp\u003eDetects if the given window is of type DOCK and if so, reveals\n   it, but does not manage it. If the window has the STRUT property\n   set, adjust the gap accordingly.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#manageDocks",
        "fct-type": "function",
        "title": "manageDocks"
      },
      "index": {
        "description": "Detects if the given window is of type DOCK and if so reveals it but does not manage it If the window has the STRUT property set adjust the gap accordingly",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "manageDocks",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Docks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageDocks.html#v:removedStruts",
      "description": {
        "fct-descr": "\u003cp\u003eThese are removed from the currently set struts before \u003ccode\u003e\u003ca\u003eaddedStruts\u003c/a\u003e\u003c/code\u003e are added.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageDocks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Direction2D]",
        "fct-source": "src/XMonad-Hooks-ManageDocks.html#SetStruts",
        "fct-type": "function",
        "title": "removedStruts"
      },
      "index": {
        "description": "These are removed from the currently set struts before addedStruts are added",
        "hierarchy": "XMonad Hooks ManageDocks",
        "module": "XMonad.Hooks.ManageDocks",
        "name": "removedStruts",
        "normalized": "[Direction D]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Struts",
        "signature": "[Direction D]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides helper functions to be used in \u003ccode\u003emanageHook\u003c/code\u003e. Here's\n how you might use this:\n\u003c/p\u003e\u003cpre\u003e import XMonad.Hooks.ManageHelpers\n main =\n     xmonad defaultConfig{\n         ...\n         manageHook = composeOne [\n             isKDETrayWindow -?\u003e doIgnore,\n             transience,\n             isFullscreen -?\u003e doFullFloat,\n             resource =? \"stalonetray\" -?\u003e doIgnore\n         ],\n         ...\n     }\n\u003c/pre\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html",
        "fct-type": "module",
        "title": "ManageHelpers"
      },
      "index": {
        "description": "This module provides helper functions to be used in manageHook Here how you might use this import XMonad.Hooks.ManageHelpers main xmonad defaultConfig manageHook composeOne isKDETrayWindow doIgnore transience isFullscreen doFullFloat resource stalonetray doIgnore",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "ManageHelpers",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Manage Helpers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#t:MaybeManageHook",
      "description": {
        "fct-descr": "\u003cp\u003eA ManageHook that may or may not have been executed; the outcome is embedded in the Maybe\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#MaybeManageHook",
        "fct-type": "type",
        "title": "MaybeManageHook"
      },
      "index": {
        "description": "ManageHook that may or may not have been executed the outcome is embedded in the Maybe",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "MaybeManageHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Maybe Manage Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#t:Side",
      "description": {
        "fct-descr": "\u003cp\u003eDenotes a side of a screen. \u003ccode\u003eS\u003c/code\u003e stands for South, \u003ccode\u003eNE\u003c/code\u003e for Northeast\n etc. \u003ccode\u003eC\u003c/code\u003e stands for Center.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "data",
        "title": "Side"
      },
      "index": {
        "description": "Denotes side of screen stands for South NE for Northeast etc stands for Center",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "Side",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Side",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:-45--45--62--62-",
      "description": {
        "fct-descr": "\u003cp\u003eA helper operator for use in \u003ccode\u003e\u003ca\u003ecomposeAll\u003c/a\u003e\u003c/code\u003e. It takes a condition and a function taking a grouped datum to action.  If \u003ccode\u003ep\u003c/code\u003e is true, it executes the resulting action.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query (Match a) -\u003e (a -\u003e ManageHook) -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#--%3E%3E",
        "fct-type": "function",
        "title": "(--\u003e\u003e)"
      },
      "index": {
        "description": "helper operator for use in composeAll It takes condition and function taking grouped datum to action If is true it executes the resulting action",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "(--\u003e\u003e) --\u003e\u003e",
        "normalized": "Query(Match a)-\u003e(a-\u003eManageHook)-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query(Match a)-\u003e(a-\u003eManageHook)-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:-45--63--62-",
      "description": {
        "fct-descr": "\u003cp\u003eA helper operator for use in \u003ccode\u003e\u003ca\u003ecomposeOne\u003c/a\u003e\u003c/code\u003e. It takes a condition and an action;\n if the condition fails, it returns \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e from the \u003ccode\u003e\u003ca\u003eQuery\u003c/a\u003e\u003c/code\u003e so \u003ccode\u003e\u003ca\u003ecomposeOne\u003c/a\u003e\u003c/code\u003e will\n go on and try the next rule.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool -\u003e ManageHook -\u003e MaybeManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#-%3F%3E",
        "fct-type": "function",
        "title": "(-?\u003e)"
      },
      "index": {
        "description": "helper operator for use in composeOne It takes condition and an action if the condition fails it returns Nothing from the Query so composeOne will go on and try the next rule",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "(-?\u003e) -?\u003e",
        "normalized": "Query Bool-\u003eManageHook-\u003eMaybeManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query Bool-\u003eManageHook-\u003eMaybeManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:-45--63--62--62-",
      "description": {
        "fct-descr": "\u003cp\u003eA helper operator for use in \u003ccode\u003e\u003ca\u003ecomposeOne\u003c/a\u003e\u003c/code\u003e.  It takes a condition and a function taking a groupdatum to action.  If \u003ccode\u003ep\u003c/code\u003e is true, it executes the resulting action.  If it fails, it returns \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e from the \u003ccode\u003e\u003ca\u003eQuery\u003c/a\u003e\u003c/code\u003e so \u003ccode\u003e\u003ca\u003ecomposeOne\u003c/a\u003e\u003c/code\u003e will go on and try the next rule.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query (Match a) -\u003e (a -\u003e ManageHook) -\u003e MaybeManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#-%3F%3E%3E",
        "fct-type": "function",
        "title": "(-?\u003e\u003e)"
      },
      "index": {
        "description": "helper operator for use in composeOne It takes condition and function taking groupdatum to action If is true it executes the resulting action If it fails it returns Nothing from the Query so composeOne will go on and try the next rule",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "(-?\u003e\u003e) -?\u003e\u003e",
        "normalized": "Query(Match a)-\u003e(a-\u003eManageHook)-\u003eMaybeManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query(Match a)-\u003e(a-\u003eManageHook)-\u003eMaybeManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:-47--61--63-",
      "description": {
        "fct-descr": "\u003cp\u003eq /=? x. if the result of q equals x, return False\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query a -\u003e a -\u003e Query Bool",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#%2F%3D%3F",
        "fct-type": "function",
        "title": "(/=?)"
      },
      "index": {
        "description": "if the result of equals return False",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "(/=?) /=?",
        "normalized": "Query a-\u003ea-\u003eQuery Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query a-\u003ea-\u003eQuery Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:-60--47--61--63-",
      "description": {
        "fct-descr": "\u003cp\u003eq \u003c/=? x. if the result of q notequals x, return True grouped with q\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query a -\u003e a -\u003e Query (Match a)",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#%3C%2F%3D%3F",
        "fct-type": "function",
        "title": "(\u003c/=?)"
      },
      "index": {
        "description": "if the result of notequals return True grouped with",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "(\u003c/=?) \u003c/=?",
        "normalized": "Query a-\u003ea-\u003eQuery(Match a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query a-\u003ea-\u003eQuery(Match a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:-60--61--61--63-",
      "description": {
        "fct-descr": "\u003cp\u003eq \u003c==? x. if the result of q equals x, return True grouped with q\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query a -\u003e a -\u003e Query (Match a)",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#%3C%3D%3D%3F",
        "fct-type": "function",
        "title": "(\u003c==?)"
      },
      "index": {
        "description": "if the result of equals return True grouped with",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "(\u003c==?) \u003c==?",
        "normalized": "Query a-\u003ea-\u003eQuery(Match a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Query a-\u003ea-\u003eQuery(Match a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:C",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "C",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "C"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "C",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:CE",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CE",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "CE"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "CE",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "CE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:CW",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CW",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "CW"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "CW",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "CW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:NC",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NC",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "NC"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "NC",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "NC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:NE",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NE",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "NE"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "NE",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "NE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:NW",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NW",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "NW"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "NW",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "NW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:SC",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SC",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "SC"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "SC",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:SE",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SE",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "SE"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "SE",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:SW",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SW",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#Side",
        "fct-type": "function",
        "title": "SW"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "SW",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:composeOne",
      "description": {
        "fct-descr": "\u003cp\u003eAn alternative \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e composer. Unlike \u003ccode\u003e\u003ca\u003ecomposeAll\u003c/a\u003e\u003c/code\u003e it stops as soon as\n a candidate returns a \u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e value, effectively running only the first match\n (whereas \u003ccode\u003e\u003ca\u003ecomposeAll\u003c/a\u003e\u003c/code\u003e continues and executes all matching rules).\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[MaybeManageHook] -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#composeOne",
        "fct-type": "function",
        "title": "composeOne"
      },
      "index": {
        "description": "An alternative ManageHook composer Unlike composeAll it stops as soon as candidate returns Just value effectively running only the first match whereas composeAll continues and executes all matching rules",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "composeOne",
        "normalized": "[MaybeManageHook]-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "One",
        "signature": "[MaybeManageHook]-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:currentWs",
      "description": {
        "fct-descr": "\u003cp\u003eReturn the current workspace\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query WorkspaceId",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#currentWs",
        "fct-type": "function",
        "title": "currentWs"
      },
      "index": {
        "description": "Return the current workspace",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "currentWs",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doCenterFloat",
      "description": {
        "fct-descr": "\u003cp\u003eFloats a new window with its original size, but centered.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doCenterFloat",
        "fct-type": "function",
        "title": "doCenterFloat"
      },
      "index": {
        "description": "Floats new window with its original size but centered",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doCenterFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Center Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doFloatAt",
      "description": {
        "fct-descr": "\u003cp\u003eFloats a new window with its original size, and its top left\n   corner at a specific point on the screen (both coordinates should\n   be in the range 0 to 1).\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Rational -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doFloatAt",
        "fct-type": "function",
        "title": "doFloatAt"
      },
      "index": {
        "description": "Floats new window with its original size and its top left corner at specific point on the screen both coordinates should be in the range to",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doFloatAt",
        "normalized": "Rational-\u003eRational-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float At",
        "signature": "Rational-\u003eRational-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doFloatDep",
      "description": {
        "fct-descr": "\u003cp\u003eFloats a new window using a rectangle computed as a function of\n   the rectangle that it would have used by default.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(RationalRect -\u003e RationalRect) -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doFloatDep",
        "fct-type": "function",
        "title": "doFloatDep"
      },
      "index": {
        "description": "Floats new window using rectangle computed as function of the rectangle that it would have used by default",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doFloatDep",
        "normalized": "(RationalRect-\u003eRationalRect)-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float Dep",
        "signature": "(RationalRect-\u003eRationalRect)-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doFullFloat",
      "description": {
        "fct-descr": "\u003cp\u003eFloats the window and makes it use the whole screen. Equivalent to\n \u003ccode\u003e\u003ccode\u003e\u003ca\u003edoRectFloat\u003c/a\u003e\u003c/code\u003e $ \u003ccode\u003e\u003ca\u003eRationalRect\u003c/a\u003e\u003c/code\u003e 0 0 1 1\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doFullFloat",
        "fct-type": "function",
        "title": "doFullFloat"
      },
      "index": {
        "description": "Floats the window and makes it use the whole screen Equivalent to doRectFloat RationalRect",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doFullFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Full Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doHideIgnore",
      "description": {
        "fct-descr": "\u003cp\u003eHides window and ignores it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doHideIgnore",
        "fct-type": "function",
        "title": "doHideIgnore"
      },
      "index": {
        "description": "Hides window and ignores it",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doHideIgnore",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hide Ignore",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doRectFloat",
      "description": {
        "fct-descr": "\u003cp\u003eFloats the new window in the given rectangle.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RationalRect-\u003e ManageHook",
        "fct-type": "function",
        "title": "doRectFloat"
      },
      "index": {
        "description": "Floats the new window in the given rectangle",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doRectFloat",
        "normalized": "RationalRect-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Rect Float",
        "signature": "RationalRect-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:doSideFloat",
      "description": {
        "fct-descr": "\u003cp\u003eFloats a new window with its original size on the specified side of a\n screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Side -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doSideFloat",
        "fct-type": "function",
        "title": "doSideFloat"
      },
      "index": {
        "description": "Floats new window with its original size on the specified side of screen",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "doSideFloat",
        "normalized": "Side-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Side Float",
        "signature": "Side-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:isDialog",
      "description": {
        "fct-descr": "\u003cp\u003eA predicate to check whether a window is a dialog.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#isDialog",
        "fct-type": "function",
        "title": "isDialog"
      },
      "index": {
        "description": "predicate to check whether window is dialog",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "isDialog",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dialog",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:isFullscreen",
      "description": {
        "fct-descr": "\u003cp\u003eA predicate to check whether a window wants to fill the whole screen.\n See also \u003ccode\u003e\u003ca\u003edoFullFloat\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#isFullscreen",
        "fct-type": "function",
        "title": "isFullscreen"
      },
      "index": {
        "description": "predicate to check whether window wants to fill the whole screen See also doFullFloat",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "isFullscreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fullscreen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:isInProperty",
      "description": {
        "fct-descr": "\u003cp\u003eHelper to check if a window property contains certain value.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e Query Bool",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#isInProperty",
        "fct-type": "function",
        "title": "isInProperty"
      },
      "index": {
        "description": "Helper to check if window property contains certain value",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "isInProperty",
        "normalized": "String-\u003eString-\u003eQuery Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In Property",
        "signature": "String-\u003eString-\u003eQuery Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:isKDETrayWindow",
      "description": {
        "fct-descr": "\u003cp\u003eA predicate to check whether a window is a KDE system tray icon.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#isKDETrayWindow",
        "fct-type": "function",
        "title": "isKDETrayWindow"
      },
      "index": {
        "description": "predicate to check whether window is KDE system tray icon",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "isKDETrayWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "KDETray Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:maybeToDefinite",
      "description": {
        "fct-descr": "\u003cp\u003econverts \u003ccode\u003e\u003ca\u003eMaybeManageHook\u003c/a\u003e\u003c/code\u003es to \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003es\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MaybeManageHook -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#maybeToDefinite",
        "fct-type": "function",
        "title": "maybeToDefinite"
      },
      "index": {
        "description": "converts MaybeManageHook to ManageHook",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "maybeToDefinite",
        "normalized": "MaybeManageHook-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Definite",
        "signature": "MaybeManageHook-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:pid",
      "description": {
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query (Maybe ProcessID)",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#pid",
        "fct-type": "function",
        "title": "pid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "pid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:transience",
      "description": {
        "fct-descr": "\u003cp\u003eA convenience \u003ccode\u003e\u003ca\u003eMaybeManageHook\u003c/a\u003e\u003c/code\u003e that will check to see if a window\n is transient, and then move it to its parent.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MaybeManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#transience",
        "fct-type": "function",
        "title": "transience"
      },
      "index": {
        "description": "convenience MaybeManageHook that will check to see if window is transient and then move it to its parent",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "transience",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:transience-39-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003etransience\u003c/a\u003e\u003c/code\u003e set to a \u003ccode\u003e\u003ca\u003eManageHook\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#transience%27",
        "fct-type": "function",
        "title": "transience'"
      },
      "index": {
        "description": "transience set to ManageHook",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "transience'",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ManageHelpers.html#v:transientTo",
      "description": {
        "fct-descr": "\u003cp\u003eA predicate to check whether a window is Transient.\n It holds the result which might be the window it is transient to\n or it might be \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ManageHelpers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query (Maybe Window)",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#transientTo",
        "fct-type": "function",
        "title": "transientTo"
      },
      "index": {
        "description": "predicate to check whether window is Transient It holds the result which might be the window it is transient to or it might be Nothing",
        "hierarchy": "XMonad Hooks ManageHelpers",
        "module": "XMonad.Hooks.ManageHelpers",
        "name": "transientTo",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAutomatic placement of floating windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-Place.html",
        "fct-type": "module",
        "title": "Place"
      },
      "index": {
        "description": "Automatic placement of floating windows",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "Place",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Place",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#t:Placement",
      "description": {
        "fct-descr": "\u003cp\u003eThe type of placement policies\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-Place.html#Placement",
        "fct-type": "data",
        "title": "Placement"
      },
      "index": {
        "description": "The type of placement policies",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "Placement",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Placement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:fixed",
      "description": {
        "fct-descr": "\u003cp\u003ePlace windows at a fixed position\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Rational, Rational)-\u003e Placement",
        "fct-type": "function",
        "title": "fixed"
      },
      "index": {
        "description": "Place windows at fixed position",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "fixed",
        "normalized": "(Rational,Rational)-\u003ePlacement",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(Rational,Rational)-\u003ePlacement"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:inBounds",
      "description": {
        "fct-descr": "\u003cp\u003eApply the given placement policy, constraining the\n placed windows inside the screen boundaries.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Placement -\u003e Placement",
        "fct-source": "src/XMonad-Hooks-Place.html#inBounds",
        "fct-type": "function",
        "title": "inBounds"
      },
      "index": {
        "description": "Apply the given placement policy constraining the placed windows inside the screen boundaries",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "inBounds",
        "normalized": "Placement-\u003ePlacement",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bounds",
        "signature": "Placement-\u003ePlacement"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:placeFocused",
      "description": {
        "fct-descr": "\u003cp\u003eRepositions the focused window according to a placement policy. Works for\n both \"real\" floating windows and windows in a \u003ccode\u003e\u003ca\u003eWindowArranger\u003c/a\u003e\u003c/code\u003e-based\n layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Placement -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-Place.html#placeFocused",
        "fct-type": "function",
        "title": "placeFocused"
      },
      "index": {
        "description": "Repositions the focused window according to placement policy Works for both real floating windows and windows in WindowArranger based layout",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "placeFocused",
        "normalized": "Placement-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused",
        "signature": "Placement-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:placeHook",
      "description": {
        "fct-descr": "\u003cp\u003eHook to automatically place windows when they are created.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Placement -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-Place.html#placeHook",
        "fct-type": "function",
        "title": "placeHook"
      },
      "index": {
        "description": "Hook to automatically place windows when they are created",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "placeHook",
        "normalized": "Placement-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hook",
        "signature": "Placement-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:purePlaceWindow",
      "description": {
        "fct-descr": "\u003cp\u003eCompute the new position of a window according to a placement policy.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Placement-\u003e Rectangle-\u003e [Rectangle]-\u003e (Position, Position)-\u003e Rectangle-\u003e Rectangle",
        "fct-type": "function",
        "title": "purePlaceWindow"
      },
      "index": {
        "description": "Compute the new position of window according to placement policy",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "purePlaceWindow",
        "normalized": "Placement-\u003eRectangle-\u003e[Rectangle]-\u003e(Position,Position)-\u003eRectangle-\u003eRectangle",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Place Window",
        "signature": "Placement-\u003eRectangle-\u003e[Rectangle]-\u003e(Position,Position)-\u003eRectangle-\u003eRectangle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:simpleSmart",
      "description": {
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Placement",
        "fct-source": "src/XMonad-Hooks-Place.html#simpleSmart",
        "fct-type": "function",
        "title": "simpleSmart"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "simpleSmart",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Smart",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:smart",
      "description": {
        "fct-descr": "\u003cp\u003eTry to place windows with as little overlap as possible\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Rational, Rational)-\u003e Placement",
        "fct-type": "function",
        "title": "smart"
      },
      "index": {
        "description": "Try to place windows with as little overlap as possible",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "smart",
        "normalized": "(Rational,Rational)-\u003ePlacement",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(Rational,Rational)-\u003ePlacement"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:underMouse",
      "description": {
        "fct-descr": "\u003cp\u003ePlace windows under the mouse\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Rational, Rational)-\u003e Placement",
        "fct-type": "function",
        "title": "underMouse"
      },
      "index": {
        "description": "Place windows under the mouse",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "underMouse",
        "normalized": "(Rational,Rational)-\u003ePlacement",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse",
        "signature": "(Rational,Rational)-\u003ePlacement"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Place.html#v:withGaps",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003einBounds\u003c/a\u003e\u003c/code\u003e, but allows specifying gaps along the screen's edges\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Place",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Dimension, Dimension, Dimension, Dimension)-\u003e Placement-\u003e Placement",
        "fct-type": "function",
        "title": "withGaps"
      },
      "index": {
        "description": "Same as inBounds but allows specifying gaps along the screen edges",
        "hierarchy": "XMonad Hooks Place",
        "module": "XMonad.Hooks.Place",
        "name": "withGaps",
        "normalized": "(Dimension,Dimension,Dimension,Dimension)-\u003ePlacement-\u003ePlacement",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gaps",
        "signature": "(Dimension,Dimension,Dimension,Dimension)-\u003ePlacement-\u003ePlacement"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-PositionStoreHooks.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module contains two hooks for the\n PositionStore (see \u003ca\u003eXMonad.Util.PositionStore\u003c/a\u003e) - a ManageHook and\n an EventHook.\n\u003c/p\u003e\u003cp\u003eThe ManageHook can be used to fill the PositionStore with position and size\n information about new windows. The advantage of using this hook is, that the\n information is recorded independent of the currently active layout. So the\n floating shape of the window can later be restored even if it was opened in a\n tiled layout initially.\n\u003c/p\u003e\u003cp\u003eFor windows, that do not request a particular position, a random position will\n be assigned. This prevents windows from piling up exactly on top of each other.\n\u003c/p\u003e\u003cp\u003eThe EventHook makes sure that windows are deleted from the PositionStore\n when they are closed.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.PositionStoreHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-PositionStoreHooks.html",
        "fct-type": "module",
        "title": "PositionStoreHooks"
      },
      "index": {
        "description": "This module contains two hooks for the PositionStore see XMonad.Util.PositionStore ManageHook and an EventHook The ManageHook can be used to fill the PositionStore with position and size information about new windows The advantage of using this hook is that the information is recorded independent of the currently active layout So the floating shape of the window can later be restored even if it was opened in tiled layout initially For windows that do not request particular position random position will be assigned This prevents windows from piling up exactly on top of each other The EventHook makes sure that windows are deleted from the PositionStore when they are closed",
        "hierarchy": "XMonad Hooks PositionStoreHooks",
        "module": "XMonad.Hooks.PositionStoreHooks",
        "name": "PositionStoreHooks",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Position Store Hooks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-PositionStoreHooks.html#v:positionStoreEventHook",
      "description": {
        "fct-module": "XMonad.Hooks.PositionStoreHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-PositionStoreHooks.html#positionStoreEventHook",
        "fct-type": "function",
        "title": "positionStoreEventHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks PositionStoreHooks",
        "module": "XMonad.Hooks.PositionStoreHooks",
        "name": "positionStoreEventHook",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Event Hook",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-PositionStoreHooks.html#v:positionStoreManageHook",
      "description": {
        "fct-module": "XMonad.Hooks.PositionStoreHooks",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-PositionStoreHooks.html#positionStoreManageHook",
        "fct-type": "function",
        "title": "positionStoreManageHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks PositionStoreHooks",
        "module": "XMonad.Hooks.PositionStoreHooks",
        "name": "positionStoreManageHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Manage Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-RestoreMinimized.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLets you restore minimized windows (see \u003ca\u003eXMonad.Layout.Minimize\u003c/a\u003e)\n by selecting them on a taskbar (listens for _NET_ACTIVE_WINDOW\n and WM_CHANGE_STATE).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.RestoreMinimized",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-RestoreMinimized.html",
        "fct-type": "module",
        "title": "RestoreMinimized"
      },
      "index": {
        "description": "Lets you restore minimized windows see XMonad.Layout.Minimize by selecting them on taskbar listens for NET ACTIVE WINDOW and WM CHANGE STATE",
        "hierarchy": "XMonad Hooks RestoreMinimized",
        "module": "XMonad.Hooks.RestoreMinimized",
        "name": "RestoreMinimized",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Restore Minimized",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-RestoreMinimized.html#t:RestoreMinimized",
      "description": {
        "fct-module": "XMonad.Hooks.RestoreMinimized",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-RestoreMinimized.html#RestoreMinimized",
        "fct-type": "data",
        "title": "RestoreMinimized"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks RestoreMinimized",
        "module": "XMonad.Hooks.RestoreMinimized",
        "name": "RestoreMinimized",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Restore Minimized",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-RestoreMinimized.html#v:RestoreMinimized",
      "description": {
        "fct-module": "XMonad.Hooks.RestoreMinimized",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RestoreMinimized",
        "fct-source": "src/XMonad-Hooks-RestoreMinimized.html#RestoreMinimized",
        "fct-type": "function",
        "title": "RestoreMinimized"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks RestoreMinimized",
        "module": "XMonad.Hooks.RestoreMinimized",
        "name": "RestoreMinimized",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Restore Minimized",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-RestoreMinimized.html#v:restoreMinimizedEventHook",
      "description": {
        "fct-module": "XMonad.Hooks.RestoreMinimized",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-RestoreMinimized.html#restoreMinimizedEventHook",
        "fct-type": "function",
        "title": "restoreMinimizedEventHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks RestoreMinimized",
        "module": "XMonad.Hooks.RestoreMinimized",
        "name": "restoreMinimizedEventHook",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Minimized Event Hook",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eRun \u003ccode\u003eX ()\u003c/code\u003e actions by touching the edge of your screen with your mouse.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html",
        "fct-type": "module",
        "title": "ScreenCorners"
      },
      "index": {
        "description": "Run actions by touching the edge of your screen with your mouse",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "ScreenCorners",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen Corners",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#t:ScreenCorner",
      "description": {
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#ScreenCorner",
        "fct-type": "data",
        "title": "ScreenCorner"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "ScreenCorner",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen Corner",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:SCLowerLeft",
      "description": {
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SCLowerLeft",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#ScreenCorner",
        "fct-type": "function",
        "title": "SCLowerLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "SCLowerLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SCLower Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:SCLowerRight",
      "description": {
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SCLowerRight",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#ScreenCorner",
        "fct-type": "function",
        "title": "SCLowerRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "SCLowerRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SCLower Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:SCUpperLeft",
      "description": {
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SCUpperLeft",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#ScreenCorner",
        "fct-type": "function",
        "title": "SCUpperLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "SCUpperLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SCUpper Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:SCUpperRight",
      "description": {
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SCUpperRight",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#ScreenCorner",
        "fct-type": "function",
        "title": "SCUpperRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "SCUpperRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SCUpper Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:addScreenCorner",
      "description": {
        "fct-descr": "\u003cp\u003eAdd one single \u003ccode\u003eX ()\u003c/code\u003e action to a screen corner\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenCorner -\u003e X () -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#addScreenCorner",
        "fct-type": "function",
        "title": "addScreenCorner"
      },
      "index": {
        "description": "Add one single action to screen corner",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "addScreenCorner",
        "normalized": "ScreenCorner-\u003eX()-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen Corner",
        "signature": "ScreenCorner-\u003eX()-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:addScreenCorners",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a list of \u003ccode\u003e(ScreenCorner, X ())\u003c/code\u003e tuples\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(ScreenCorner, X ())] -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#addScreenCorners",
        "fct-type": "function",
        "title": "addScreenCorners"
      },
      "index": {
        "description": "Add list of ScreenCorner tuples",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "addScreenCorners",
        "normalized": "[(ScreenCorner,X())]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen Corners",
        "signature": "[(ScreenCorner,X())]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ScreenCorners.html#v:screenCornerEventHook",
      "description": {
        "fct-descr": "\u003cp\u003eHandle screen corner events\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ScreenCorners",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-ScreenCorners.html#screenCornerEventHook",
        "fct-type": "function",
        "title": "screenCornerEventHook"
      },
      "index": {
        "description": "Handle screen corner events",
        "hierarchy": "XMonad Hooks ScreenCorners",
        "module": "XMonad.Hooks.ScreenCorners",
        "name": "screenCornerEventHook",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Corner Event Hook",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Script.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides a simple interface for running a ~/.xmonad/hooks script with the\n name of a hook.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.Script",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-Script.html",
        "fct-type": "module",
        "title": "Script"
      },
      "index": {
        "description": "Provides simple interface for running xmonad hooks script with the name of hook",
        "hierarchy": "XMonad Hooks Script",
        "module": "XMonad.Hooks.Script",
        "name": "Script",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Script",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-Script.html#v:execScriptHook",
      "description": {
        "fct-descr": "\u003cp\u003eExecute a named script hook\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.Script",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e m ()",
        "fct-source": "src/XMonad-Hooks-Script.html#execScriptHook",
        "fct-type": "function",
        "title": "execScriptHook"
      },
      "index": {
        "description": "Execute named script hook",
        "hierarchy": "XMonad Hooks Script",
        "module": "XMonad.Hooks.Script",
        "name": "execScriptHook",
        "normalized": "String-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Script Hook",
        "signature": "String-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ServerMode.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is an \u003ccode\u003eEventHook\u003c/code\u003e that will receive commands from an external\n client.\n\u003c/p\u003e\u003cp\u003eThis is the example of a client:\n\u003c/p\u003e\u003cpre\u003e import Graphics.X11.Xlib\n import Graphics.X11.Xlib.Extras\n import System.Environment\n import Data.Char\n\n usage :: String -\u003e String\n usage n = \"Usage: \" ++ n ++ \" command number\\nSend a command number to a running instance of XMonad\"\n\n main :: IO ()\n main = do\n   args \u003c- getArgs\n   pn \u003c- getProgName\n   let com = case args of\n               [] -\u003e error $ usage pn\n               w -\u003e (w !! 0)\n   sendCommand com\n\n sendCommand :: String -\u003e IO ()\n sendCommand s = do\n   d   \u003c- openDisplay \"\"\n   rw  \u003c- rootWindow d $ defaultScreen d\n   a \u003c- internAtom d \"XMONAD_COMMAND\" False\n   allocaXEvent $ \\e -\u003e do\n                   setEventType e clientMessage\n                   setClientMessageEvent e rw a 32 (fromIntegral (read s)) currentTime\n                   sendEvent d rw False structureNotifyMask e\n                   sync d False\n\u003c/pre\u003e\u003cp\u003ecompile with: \u003ccode\u003eghc --make sendCommand.hs\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003erun with\n\u003c/p\u003e\u003cpre\u003e sendCommand command number\n\u003c/pre\u003e\u003cp\u003eFor instance:\n\u003c/p\u003e\u003cpre\u003e sendCommand 0\n\u003c/pre\u003e\u003cp\u003ewill ask to xmonad to print the list of command numbers in\n stderr (so you can read it in \u003ccode\u003e~/.xsession-errors\u003c/code\u003e).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.ServerMode",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-ServerMode.html",
        "fct-type": "module",
        "title": "ServerMode"
      },
      "index": {
        "description": "This is an EventHook that will receive commands from an external client This is the example of client import Graphics.X11.Xlib import Graphics.X11.Xlib.Extras import System.Environment import Data.Char usage String String usage Usage command number nSend command number to running instance of XMonad main IO main do args getArgs pn getProgName let com case args of error usage pn sendCommand com sendCommand String IO sendCommand do openDisplay rw rootWindow defaultScreen internAtom XMONAD COMMAND False allocaXEvent do setEventType clientMessage setClientMessageEvent rw fromIntegral read currentTime sendEvent rw False structureNotifyMask sync False compile with ghc make sendCommand.hs run with sendCommand command number For instance sendCommand will ask to xmonad to print the list of command numbers in stderr so you can read it in xsession-errors",
        "hierarchy": "XMonad Hooks ServerMode",
        "module": "XMonad.Hooks.ServerMode",
        "name": "ServerMode",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Server Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ServerMode.html#t:ServerMode",
      "description": {
        "fct-module": "XMonad.Hooks.ServerMode",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-ServerMode.html#ServerMode",
        "fct-type": "data",
        "title": "ServerMode"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ServerMode",
        "module": "XMonad.Hooks.ServerMode",
        "name": "ServerMode",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Server Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ServerMode.html#v:ServerMode",
      "description": {
        "fct-module": "XMonad.Hooks.ServerMode",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ServerMode",
        "fct-source": "src/XMonad-Hooks-ServerMode.html#ServerMode",
        "fct-type": "function",
        "title": "ServerMode"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks ServerMode",
        "module": "XMonad.Hooks.ServerMode",
        "name": "ServerMode",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Server Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ServerMode.html#v:serverModeEventHook",
      "description": {
        "fct-descr": "\u003cp\u003eExecutes a command of the list when receiving its index via a special ClientMessageEvent\n (indexing starts at 1)\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ServerMode",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-ServerMode.html#serverModeEventHook",
        "fct-type": "function",
        "title": "serverModeEventHook"
      },
      "index": {
        "description": "Executes command of the list when receiving its index via special ClientMessageEvent indexing starts at",
        "hierarchy": "XMonad Hooks ServerMode",
        "module": "XMonad.Hooks.ServerMode",
        "name": "serverModeEventHook",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mode Event Hook",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-ServerMode.html#v:serverModeEventHook-39-",
      "description": {
        "fct-descr": "\u003cp\u003eserverModeEventHook' additionally takes an action to generate the list of\n commands.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.ServerMode",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [(String, X ())] -\u003e Event -\u003e X All",
        "fct-source": "src/XMonad-Hooks-ServerMode.html#serverModeEventHook%27",
        "fct-type": "function",
        "title": "serverModeEventHook'"
      },
      "index": {
        "description": "serverModeEventHook additionally takes an action to generate the list of commands",
        "hierarchy": "XMonad Hooks ServerMode",
        "module": "XMonad.Hooks.ServerMode",
        "name": "serverModeEventHook'",
        "normalized": "X[(String,X())]-\u003eEvent-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mode Event Hook'",
        "signature": "X[(String,X())]-\u003eEvent-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-SetWMName.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSets the WM name to a given string, so that it could be detected using\n _NET_SUPPORTING_WM_CHECK protocol.\n\u003c/p\u003e\u003cp\u003eMay be useful for making Java GUI programs work, just set WM name to \u003ca\u003eLG3D\u003c/a\u003e\n and use Java 1.6u1 (1.6.0_01-ea-b03 works for me) or later.\n\u003c/p\u003e\u003cp\u003eTo your \u003ccode\u003e~/.xmonad/xmonad.hs\u003c/code\u003e file, add the following line:\n\u003c/p\u003e\u003cpre\u003e import XMonad.Hooks.SetWMName\n\u003c/pre\u003e\u003cp\u003eThen edit your \u003ccode\u003estartupHook\u003c/code\u003e:\n\u003c/p\u003e\u003cpre\u003e startupHook = setWMName \"LG3D\"\n\u003c/pre\u003e\u003cp\u003eFor details on the problems with running Java GUI programs in non-reparenting\n WMs, see \u003ca\u003ehttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6429775\u003c/a\u003e and\n related bugs.\n\u003c/p\u003e\u003cp\u003eSetting WM name to \u003ca\u003ecompiz\u003c/a\u003e does not solve the problem, because of yet\n another bug in AWT code (related to insets). For LG3D insets are explicitly\n set to 0, while for other WMs the insets are \"guessed\" and the algorithm\n fails miserably by guessing absolutely bogus values.\n\u003c/p\u003e\u003cp\u003eFor detailed instructions on editing your hooks, see\n \u003ca\u003eXMonad.Doc.Extending\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.SetWMName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-SetWMName.html",
        "fct-type": "module",
        "title": "SetWMName"
      },
      "index": {
        "description": "Sets the WM name to given string so that it could be detected using NET SUPPORTING WM CHECK protocol May be useful for making Java GUI programs work just set WM name to LG3D and use Java u1 ea-b03 works for me or later To your xmonad xmonad.hs file add the following line import XMonad.Hooks.SetWMName Then edit your startupHook startupHook setWMName LG3D For details on the problems with running Java GUI programs in non-reparenting WMs see http bugs.sun.com bugdatabase view bug.do bug id and related bugs Setting WM name to compiz does not solve the problem because of yet another bug in AWT code related to insets For LG3D insets are explicitly set to while for other WMs the insets are guessed and the algorithm fails miserably by guessing absolutely bogus values For detailed instructions on editing your hooks see XMonad.Doc.Extending",
        "hierarchy": "XMonad Hooks SetWMName",
        "module": "XMonad.Hooks.SetWMName",
        "name": "SetWMName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Set WMName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-SetWMName.html#v:setWMName",
      "description": {
        "fct-descr": "\u003cp\u003esets WM name\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.SetWMName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-SetWMName.html#setWMName",
        "fct-type": "function",
        "title": "setWMName"
      },
      "index": {
        "description": "sets WM name",
        "hierarchy": "XMonad Hooks SetWMName",
        "module": "XMonad.Hooks.SetWMName",
        "name": "setWMName",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WMName",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUrgencyHook lets you configure an action to occur when a window demands\n your attention. (In traditional WMs, this takes the form of \"flashing\"\n on your \"taskbar.\" Blech.)\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html",
        "fct-type": "module",
        "title": "UrgencyHook"
      },
      "index": {
        "description": "UrgencyHook lets you configure an action to occur when window demands your attention In traditional WMs this takes the form of flashing on your taskbar Blech",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "UrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:DzenUrgencyHook",
      "description": {
        "fct-descr": "\u003cp\u003eYour set of options for configuring a dzenUrgencyHook.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#DzenUrgencyHook",
        "fct-type": "data",
        "title": "DzenUrgencyHook"
      },
      "index": {
        "description": "Your set of options for configuring dzenUrgencyHook",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "DzenUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dzen Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:FocusHook",
      "description": {
        "fct-descr": "\u003cp\u003eA hook which will automatically send you to anything which sets the urgent\n  flag (as opposed to printing some sort of message. You would use this as\n  usual, eg.\n\u003c/p\u003e\u003cpre\u003e withUrgencyHook FocusHook $ myconfig { ...\n\u003c/pre\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#FocusHook",
        "fct-type": "data",
        "title": "FocusHook"
      },
      "index": {
        "description": "hook which will automatically send you to anything which sets the urgent flag as opposed to printing some sort of message You would use this as usual eg withUrgencyHook FocusHook myconfig",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "FocusHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:NoUrgencyHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#NoUrgencyHook",
        "fct-type": "data",
        "title": "NoUrgencyHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "NoUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "No Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:RemindWhen",
      "description": {
        "fct-descr": "\u003cp\u003eA set of choices as to when you want to be re-notified of an urgent\n window. Perhaps you focused on something and you miss the dzen popup bar. Or\n you're AFK. Or you feel the need to be more distracted. I don't care.\n\u003c/p\u003e\u003cp\u003eThe interval arguments are in seconds. See the \u003ccode\u003e\u003ca\u003eminutes\u003c/a\u003e\u003c/code\u003e helper.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#RemindWhen",
        "fct-type": "data",
        "title": "RemindWhen"
      },
      "index": {
        "description": "set of choices as to when you want to be re-notified of an urgent window Perhaps you focused on something and you miss the dzen popup bar Or you re AFK Or you feel the need to be more distracted don care The interval arguments are in seconds See the minutes helper",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "RemindWhen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Remind When",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:SpawnUrgencyHook",
      "description": {
        "fct-descr": "\u003cp\u003eSpawn a commandline thing, appending the window id to the prefix string\n you provide. (Make sure to add a space if you need it.) Do your crazy\n xcompmgr thing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "newtype",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SpawnUrgencyHook",
        "fct-type": "newtype",
        "title": "SpawnUrgencyHook"
      },
      "index": {
        "description": "Spawn commandline thing appending the window id to the prefix string you provide Make sure to add space if you need it Do your crazy xcompmgr thing",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "SpawnUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:StdoutUrgencyHook",
      "description": {
        "fct-descr": "\u003cp\u003eFor debugging purposes, really.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#StdoutUrgencyHook",
        "fct-type": "data",
        "title": "StdoutUrgencyHook"
      },
      "index": {
        "description": "For debugging purposes really",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "StdoutUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Stdout Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:SuppressWhen",
      "description": {
        "fct-descr": "\u003cp\u003eA set of choices as to \u003cem\u003ewhen\u003c/em\u003e you should (or rather, shouldn't) be notified of an urgent window.\n The default is \u003ccode\u003e\u003ca\u003eVisible\u003c/a\u003e\u003c/code\u003e. Prefix each of the following with \"don't bug me when\":\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SuppressWhen",
        "fct-type": "data",
        "title": "SuppressWhen"
      },
      "index": {
        "description": "set of choices as to when you should or rather shouldn be notified of an urgent window The default is Visible Prefix each of the following with don bug me when",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "SuppressWhen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Suppress When",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:UrgencyConfig",
      "description": {
        "fct-descr": "\u003cp\u003eGlobal configuration, applied to all types of \u003ccode\u003e\u003ca\u003eUrgencyHook\u003c/a\u003e\u003c/code\u003e. See\n \u003ccode\u003e\u003ca\u003eurgencyConfig\u003c/a\u003e\u003c/code\u003e for the defaults.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#UrgencyConfig",
        "fct-type": "data",
        "title": "UrgencyConfig"
      },
      "index": {
        "description": "Global configuration applied to all types of UrgencyHook See urgencyConfig for the defaults",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "UrgencyConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#t:UrgencyHook",
      "description": {
        "fct-descr": "\u003cp\u003eThe class definition, and some pre-defined instances.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#UrgencyHook",
        "fct-type": "class",
        "title": "UrgencyHook"
      },
      "index": {
        "description": "The class definition and some pre-defined instances",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "UrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:Dont",
      "description": {
        "fct-descr": "\u003cp\u003etriggering once is enough\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dont",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#RemindWhen",
        "fct-type": "function",
        "title": "Dont"
      },
      "index": {
        "description": "triggering once is enough",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "Dont",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dont",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:DzenUrgencyHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DzenUrgencyHook",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#DzenUrgencyHook",
        "fct-type": "function",
        "title": "DzenUrgencyHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "DzenUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dzen Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:Every",
      "description": {
        "fct-descr": "\u003cp\u003erepeat every \u003ca\u003earg1\u003c/a\u003e until the urgency hint is cleared\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Every Interval",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#RemindWhen",
        "fct-type": "function",
        "title": "Every"
      },
      "index": {
        "description": "repeat every arg1 until the urgency hint is cleared",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "Every",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Every",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:FocusHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FocusHook",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#FocusHook",
        "fct-type": "function",
        "title": "FocusHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "FocusHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:Focused",
      "description": {
        "fct-descr": "\u003cp\u003ethe window is currently focused\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Focused",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SuppressWhen",
        "fct-type": "function",
        "title": "Focused"
      },
      "index": {
        "description": "the window is currently focused",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "Focused",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:Never",
      "description": {
        "fct-descr": "\u003cp\u003e... aww, heck, go ahead and bug me, just in case.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Never",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SuppressWhen",
        "fct-type": "function",
        "title": "Never"
      },
      "index": {
        "description": "aww heck go ahead and bug me just in case",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "Never",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Never",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:NoUrgencyHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NoUrgencyHook",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#NoUrgencyHook",
        "fct-type": "function",
        "title": "NoUrgencyHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "NoUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "No Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:OnScreen",
      "description": {
        "fct-descr": "\u003cp\u003ethe window is on the currently focused physical screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "OnScreen",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SuppressWhen",
        "fct-type": "function",
        "title": "OnScreen"
      },
      "index": {
        "description": "the window is on the currently focused physical screen",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "OnScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "On Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:Repeatedly",
      "description": {
        "fct-descr": "\u003cp\u003erepeat \u003ca\u003earg1\u003c/a\u003e times every \u003ca\u003earg2\u003c/a\u003e seconds\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Repeatedly Int Interval",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#RemindWhen",
        "fct-type": "function",
        "title": "Repeatedly"
      },
      "index": {
        "description": "repeat arg1 times every arg2 seconds",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "Repeatedly",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Repeatedly",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:SpawnUrgencyHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SpawnUrgencyHook String",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SpawnUrgencyHook",
        "fct-type": "function",
        "title": "SpawnUrgencyHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "SpawnUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:StdoutUrgencyHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "StdoutUrgencyHook",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#StdoutUrgencyHook",
        "fct-type": "function",
        "title": "StdoutUrgencyHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "StdoutUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Stdout Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:UrgencyConfig",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UrgencyConfig",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#UrgencyConfig",
        "fct-type": "function",
        "title": "UrgencyConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "UrgencyConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:Visible",
      "description": {
        "fct-descr": "\u003cp\u003ethe window is currently visible\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Visible",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#SuppressWhen",
        "fct-type": "function",
        "title": "Visible"
      },
      "index": {
        "description": "the window is currently visible",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "Visible",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Visible",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:args",
      "description": {
        "fct-descr": "\u003cp\u003elist of extra args (as \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003es) to pass to dzen\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String]",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#DzenUrgencyHook",
        "fct-type": "function",
        "title": "args"
      },
      "index": {
        "description": "list of extra args as String to pass to dzen",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "args",
        "normalized": "[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:clearUrgents",
      "description": {
        "fct-descr": "\u003cp\u003eJust makes the urgents go away.\n Example keybinding:\n\u003c/p\u003e\u003cpre\u003e , ((modm .|. shiftMask, xK_BackSpace), clearUrgents)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#clearUrgents",
        "fct-type": "function",
        "title": "clearUrgents"
      },
      "index": {
        "description": "Just makes the urgents go away Example keybinding modm shiftMask xK BackSpace clearUrgents",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "clearUrgents",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgents",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:duration",
      "description": {
        "fct-descr": "\u003cp\u003enumber of microseconds to display the dzen\n   (hence, you'll probably want to use \u003ccode\u003e\u003ca\u003eseconds\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#DzenUrgencyHook",
        "fct-type": "function",
        "title": "duration"
      },
      "index": {
        "description": "number of microseconds to display the dzen hence you ll probably want to use seconds",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "duration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:dzenUrgencyHook",
      "description": {
        "fct-descr": "\u003cp\u003eFlashes when a window requests your attention and you can't see it.\n Defaults to a duration of five seconds, and no extra args to dzen.\n See \u003ccode\u003e\u003ca\u003eDzenUrgencyHook\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DzenUrgencyHook",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#dzenUrgencyHook",
        "fct-type": "function",
        "title": "dzenUrgencyHook"
      },
      "index": {
        "description": "Flashes when window requests your attention and you can see it Defaults to duration of five seconds and no extra args to dzen See DzenUrgencyHook",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "dzenUrgencyHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:focusUrgent",
      "description": {
        "fct-descr": "\u003cp\u003eFocuses the most recently urgent window. Good for what ails ya -- I mean, your keybindings.\n Example keybinding:\n\u003c/p\u003e\u003cpre\u003e , ((modm              , xK_BackSpace), focusUrgent)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#focusUrgent",
        "fct-type": "function",
        "title": "focusUrgent"
      },
      "index": {
        "description": "Focuses the most recently urgent window Good for what ails ya mean your keybindings Example keybinding modm xK BackSpace focusUrgent",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "focusUrgent",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgent",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:minutes",
      "description": {
        "fct-descr": "\u003cp\u003eA prettified way of multiplying by 60. Use like: \u003ccode\u003e(5 \u003ccode\u003e\u003ca\u003eminutes\u003c/a\u003e\u003c/code\u003e)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Rational",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#minutes",
        "fct-type": "function",
        "title": "minutes"
      },
      "index": {
        "description": "prettified way of multiplying by Use like minutes",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "minutes",
        "normalized": "Rational-\u003eRational",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eRational"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:readUrgents",
      "description": {
        "fct-descr": "\u003cp\u003eX action that returns a list of currently urgent windows. You might use\n it, or \u003ccode\u003e\u003ca\u003ewithUrgents\u003c/a\u003e\u003c/code\u003e, in your custom logHook, to display the workspaces that\n contain urgent windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X [Window]",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#readUrgents",
        "fct-type": "function",
        "title": "readUrgents"
      },
      "index": {
        "description": "action that returns list of currently urgent windows You might use it or withUrgents in your custom logHook to display the workspaces that contain urgent windows",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "readUrgents",
        "normalized": "X[Window]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgents",
        "signature": "X[Window]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:remindWhen",
      "description": {
        "fct-descr": "\u003cp\u003ewhen to re-trigger the urgency hook\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RemindWhen",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#UrgencyConfig",
        "fct-type": "function",
        "title": "remindWhen"
      },
      "index": {
        "description": "when to re-trigger the urgency hook",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "remindWhen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "When",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:seconds",
      "description": {
        "fct-descr": "\u003cp\u003eMultiplies by ONE MILLION, for functions that take microseconds.\n\u003c/p\u003e\u003cp\u003eUse like:\n\u003c/p\u003e\u003cpre\u003e (5.5 `seconds`)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Int",
        "fct-source": "src/XMonad-Util-Run.html#seconds",
        "fct-type": "function",
        "title": "seconds"
      },
      "index": {
        "description": "Multiplies by ONE MILLION for functions that take microseconds Use like seconds",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "seconds",
        "normalized": "Rational-\u003eInt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:suppressWhen",
      "description": {
        "fct-descr": "\u003cp\u003ewhen to trigger the urgency hook\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SuppressWhen",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#UrgencyConfig",
        "fct-type": "function",
        "title": "suppressWhen"
      },
      "index": {
        "description": "when to trigger the urgency hook",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "suppressWhen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "When",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:urgencyConfig",
      "description": {
        "fct-descr": "\u003cp\u003eThe default \u003ccode\u003e\u003ca\u003eUrgencyConfig\u003c/a\u003e\u003c/code\u003e. suppressWhen = Visible, remindWhen = Dont.\n Use a variation of this in your config just as you use a variation of\n defaultConfig for your xmonad definition.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UrgencyConfig",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#urgencyConfig",
        "fct-type": "function",
        "title": "urgencyConfig"
      },
      "index": {
        "description": "The default UrgencyConfig suppressWhen Visible remindWhen Dont Use variation of this in your config just as you use variation of defaultConfig for your xmonad definition",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "urgencyConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:urgencyHook",
      "description": {
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "h -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#urgencyHook",
        "fct-type": "method",
        "title": "urgencyHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "urgencyHook",
        "normalized": "a-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hook",
        "signature": "h-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:withUrgencyHook",
      "description": {
        "fct-descr": "\u003cp\u003eThis is the method to enable an urgency hook. It uses the default\n \u003ccode\u003e\u003ca\u003eurgencyConfig\u003c/a\u003e\u003c/code\u003e to control behavior. To change this, use \u003ccode\u003e\u003ca\u003ewithUrgencyHookC\u003c/a\u003e\u003c/code\u003e\n instead.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "h -\u003e XConfig l -\u003e XConfig l",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#withUrgencyHook",
        "fct-type": "function",
        "title": "withUrgencyHook"
      },
      "index": {
        "description": "This is the method to enable an urgency hook It uses the default urgencyConfig to control behavior To change this use withUrgencyHookC instead",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "withUrgencyHook",
        "normalized": "a-\u003eXConfig b-\u003eXConfig b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Hook",
        "signature": "h-\u003eXConfig l-\u003eXConfig l"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:withUrgencyHookC",
      "description": {
        "fct-descr": "\u003cp\u003eThis lets you modify the defaults set in \u003ccode\u003e\u003ca\u003eurgencyConfig\u003c/a\u003e\u003c/code\u003e. An example:\n\u003c/p\u003e\u003cpre\u003e withUrgencyHookC dzenUrgencyHook { ... } urgencyConfig { suppressWhen = Focused }\n\u003c/pre\u003e\u003cp\u003e(Don't type the \u003ccode\u003e...\u003c/code\u003e, you dolt.) See \u003ccode\u003e\u003ca\u003eUrgencyConfig\u003c/a\u003e\u003c/code\u003e for details on configuration.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "h -\u003e UrgencyConfig -\u003e XConfig l -\u003e XConfig l",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#withUrgencyHookC",
        "fct-type": "function",
        "title": "withUrgencyHookC"
      },
      "index": {
        "description": "This lets you modify the defaults set in urgencyConfig An example withUrgencyHookC dzenUrgencyHook urgencyConfig suppressWhen Focused Don type the you dolt See UrgencyConfig for details on configuration",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "withUrgencyHookC",
        "normalized": "a-\u003eUrgencyConfig-\u003eXConfig b-\u003eXConfig b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgency Hook",
        "signature": "h-\u003eUrgencyConfig-\u003eXConfig l-\u003eXConfig l"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-UrgencyHook.html#v:withUrgents",
      "description": {
        "fct-descr": "\u003cp\u003eAn HOF version of \u003ccode\u003e\u003ca\u003ereadUrgents\u003c/a\u003e\u003c/code\u003e, for those who prefer that sort of thing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Hooks.UrgencyHook",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([Window] -\u003e X a) -\u003e X a",
        "fct-source": "src/XMonad-Hooks-UrgencyHook.html#withUrgents",
        "fct-type": "function",
        "title": "withUrgents"
      },
      "index": {
        "description": "An HOF version of readUrgents for those who prefer that sort of thing",
        "hierarchy": "XMonad Hooks UrgencyHook",
        "module": "XMonad.Hooks.UrgencyHook",
        "name": "withUrgents",
        "normalized": "([Window]-\u003eX a)-\u003eX a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Urgents",
        "signature": "([Window]-\u003eX a)-\u003eX a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-WorkspaceByPos.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUseful in a dual-head setup: Looks at the requested geometry of\n new windows and moves them to the workspace of the non-focused\n screen if necessary.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.WorkspaceByPos",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-WorkspaceByPos.html",
        "fct-type": "module",
        "title": "WorkspaceByPos"
      },
      "index": {
        "description": "Useful in dual-head setup Looks at the requested geometry of new windows and moves them to the workspace of the non-focused screen if necessary",
        "hierarchy": "XMonad Hooks WorkspaceByPos",
        "module": "XMonad.Hooks.WorkspaceByPos",
        "name": "WorkspaceByPos",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace By Pos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-WorkspaceByPos.html#v:workspaceByPos",
      "description": {
        "fct-module": "XMonad.Hooks.WorkspaceByPos",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-WorkspaceByPos.html#workspaceByPos",
        "fct-type": "function",
        "title": "workspaceByPos"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks WorkspaceByPos",
        "module": "XMonad.Hooks.WorkspaceByPos",
        "name": "workspaceByPos",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "By Pos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-XPropManage.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA ManageHook matching on XProperties.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Hooks.XPropManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Hooks-XPropManage.html",
        "fct-type": "module",
        "title": "XPropManage"
      },
      "index": {
        "description": "ManageHook matching on XProperties",
        "hierarchy": "XMonad Hooks XPropManage",
        "module": "XMonad.Hooks.XPropManage",
        "name": "XPropManage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XProp Manage",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-XPropManage.html#t:XPropMatch",
      "description": {
        "fct-module": "XMonad.Hooks.XPropManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Hooks-XPropManage.html#XPropMatch",
        "fct-type": "type",
        "title": "XPropMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks XPropManage",
        "module": "XMonad.Hooks.XPropManage",
        "name": "XPropMatch",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XProp Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-XPropManage.html#v:pmP",
      "description": {
        "fct-module": "XMonad.Hooks.XPropManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(WindowSet -\u003e WindowSet) -\u003e Window -\u003e X (WindowSet -\u003e WindowSet)",
        "fct-source": "src/XMonad-Hooks-XPropManage.html#pmP",
        "fct-type": "function",
        "title": "pmP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks XPropManage",
        "module": "XMonad.Hooks.XPropManage",
        "name": "pmP",
        "normalized": "(WindowSet-\u003eWindowSet)-\u003eWindow-\u003eX(WindowSet-\u003eWindowSet)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(WindowSet-\u003eWindowSet)-\u003eWindow-\u003eX(WindowSet-\u003eWindowSet)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-XPropManage.html#v:pmX",
      "description": {
        "fct-module": "XMonad.Hooks.XPropManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Window -\u003e X ()) -\u003e Window -\u003e X (WindowSet -\u003e WindowSet)",
        "fct-source": "src/XMonad-Hooks-XPropManage.html#pmX",
        "fct-type": "function",
        "title": "pmX"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks XPropManage",
        "module": "XMonad.Hooks.XPropManage",
        "name": "pmX",
        "normalized": "(Window-\u003eX())-\u003eWindow-\u003eX(WindowSet-\u003eWindowSet)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(Window-\u003eX())-\u003eWindow-\u003eX(WindowSet-\u003eWindowSet)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Hooks-XPropManage.html#v:xPropManageHook",
      "description": {
        "fct-module": "XMonad.Hooks.XPropManage",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[XPropMatch] -\u003e ManageHook",
        "fct-source": "src/XMonad-Hooks-XPropManage.html#xPropManageHook",
        "fct-type": "function",
        "title": "xPropManageHook"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Hooks XPropManage",
        "module": "XMonad.Hooks.XPropManage",
        "name": "xPropManageHook",
        "normalized": "[XPropMatch]-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prop Manage Hook",
        "signature": "[XPropMatch]-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Accordion.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLayoutClass that puts non-focused windows in ribbons at the top and bottom\n of the screen.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Accordion",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Accordion.html",
        "fct-type": "module",
        "title": "Accordion"
      },
      "index": {
        "description": "LayoutClass that puts non-focused windows in ribbons at the top and bottom of the screen",
        "hierarchy": "XMonad Layout Accordion",
        "module": "XMonad.Layout.Accordion",
        "name": "Accordion",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Accordion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Accordion.html#t:Accordion",
      "description": {
        "fct-module": "XMonad.Layout.Accordion",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Accordion.html#Accordion",
        "fct-type": "data",
        "title": "Accordion"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Accordion",
        "module": "XMonad.Layout.Accordion",
        "name": "Accordion",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Accordion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Accordion.html#v:Accordion",
      "description": {
        "fct-module": "XMonad.Layout.Accordion",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Accordion",
        "fct-source": "src/XMonad-Layout-Accordion.html#Accordion",
        "fct-type": "function",
        "title": "Accordion"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Accordion",
        "module": "XMonad.Layout.Accordion",
        "name": "Accordion",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Accordion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-AutoMaster.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides layout modifier AutoMaster. It separates screen in two parts -\n master and slave. Size of slave area automatically changes depending on\n number of slave windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.AutoMaster",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-AutoMaster.html",
        "fct-type": "module",
        "title": "AutoMaster"
      },
      "index": {
        "description": "Provides layout modifier AutoMaster It separates screen in two parts master and slave Size of slave area automatically changes depending on number of slave windows",
        "hierarchy": "XMonad Layout AutoMaster",
        "module": "XMonad.Layout.AutoMaster",
        "name": "AutoMaster",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Auto Master",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-AutoMaster.html#v:autoMaster",
      "description": {
        "fct-descr": "\u003cp\u003eUser interface function\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.AutoMaster",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Float -\u003e l a -\u003e ModifiedLayout AutoMaster l a",
        "fct-source": "src/XMonad-Layout-AutoMaster.html#autoMaster",
        "fct-type": "function",
        "title": "autoMaster"
      },
      "index": {
        "description": "User interface function",
        "hierarchy": "XMonad Layout AutoMaster",
        "module": "XMonad.Layout.AutoMaster",
        "name": "autoMaster",
        "normalized": "Int-\u003eFloat-\u003ea b-\u003eModifiedLayout AutoMaster a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": "Int-\u003eFloat-\u003el a-\u003eModifiedLayout AutoMaster l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BorderResize.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis layout modifier will allow to resize windows by dragging their\n borders with the mouse. However, it only works in layouts or modified\n layouts that react to the \u003ccode\u003e\u003ca\u003eSetGeometry\u003c/a\u003e\u003c/code\u003e message.\n \u003ca\u003eXMonad.Layout.WindowArranger\u003c/a\u003e can be used to create such a setup,\n but it is probably must useful in a floating layout such as\n \u003ca\u003eXMonad.Layout.PositionStoreFloat\u003c/a\u003e with which it has been mainly tested.\n See the documentation of PositionStoreFloat for a typical usage example.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.BorderResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-BorderResize.html",
        "fct-type": "module",
        "title": "BorderResize"
      },
      "index": {
        "description": "This layout modifier will allow to resize windows by dragging their borders with the mouse However it only works in layouts or modified layouts that react to the SetGeometry message XMonad.Layout.WindowArranger can be used to create such setup but it is probably must useful in floating layout such as XMonad.Layout.PositionStoreFloat with which it has been mainly tested See the documentation of PositionStoreFloat for typical usage example",
        "hierarchy": "XMonad Layout BorderResize",
        "module": "XMonad.Layout.BorderResize",
        "name": "BorderResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BorderResize.html#t:BorderResize",
      "description": {
        "fct-module": "XMonad.Layout.BorderResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-BorderResize.html#BorderResize",
        "fct-type": "data",
        "title": "BorderResize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BorderResize",
        "module": "XMonad.Layout.BorderResize",
        "name": "BorderResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BorderResize.html#v:BR",
      "description": {
        "fct-module": "XMonad.Layout.BorderResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "BR (Map Window RectWithBorders)",
        "fct-source": "src/XMonad-Layout-BorderResize.html#BorderResize",
        "fct-type": "function",
        "title": "BR"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BorderResize",
        "module": "XMonad.Layout.BorderResize",
        "name": "BR",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "BR",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BorderResize.html#v:borderResize",
      "description": {
        "fct-module": "XMonad.Layout.BorderResize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout BorderResize l a",
        "fct-source": "src/XMonad-Layout-BorderResize.html#borderResize",
        "fct-type": "function",
        "title": "borderResize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BorderResize",
        "module": "XMonad.Layout.BorderResize",
        "name": "borderResize",
        "normalized": "a b-\u003eModifiedLayout BorderResize a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize",
        "signature": "l a-\u003eModifiedLayout BorderResize l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eBoringWindows is an extension to allow windows to be marked boring\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-BoringWindows.html",
        "fct-type": "module",
        "title": "BoringWindows"
      },
      "index": {
        "description": "BoringWindows is an extension to allow windows to be marked boring",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "BoringWindows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Boring Windows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#t:BoringMessage",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#BoringMessage",
        "fct-type": "data",
        "title": "BoringMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "BoringMessage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Boring Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#t:BoringWindows",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#BoringWindows",
        "fct-type": "data",
        "title": "BoringWindows"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "BoringWindows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Boring Windows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#t:UpdateBoring",
      "description": {
        "fct-descr": "\u003cp\u003eUpdateBoring is sent before attempting to view another boring window, so\n that layouts have a chance to mark boring windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#UpdateBoring",
        "fct-type": "data",
        "title": "UpdateBoring"
      },
      "index": {
        "description": "UpdateBoring is sent before attempting to view another boring window so that layouts have chance to mark boring windows",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "UpdateBoring",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Update Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:Merge",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Merge String [Window]",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#BoringMessage",
        "fct-type": "function",
        "title": "Merge"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "Merge",
        "normalized": "Merge String[Window]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Merge",
        "signature": "Merge String[Window]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:Replace",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Replace String [Window]",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#BoringMessage",
        "fct-type": "function",
        "title": "Replace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "Replace",
        "normalized": "Replace String[Window]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Replace",
        "signature": "Replace String[Window]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:UpdateBoring",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UpdateBoring",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#UpdateBoring",
        "fct-type": "function",
        "title": "UpdateBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "UpdateBoring",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Update Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:boringAuto",
      "description": {
        "fct-descr": "\u003cp\u003eMark windows that are not given rectangles as boring\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout BoringWindows l a",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#boringAuto",
        "fct-type": "function",
        "title": "boringAuto"
      },
      "index": {
        "description": "Mark windows that are not given rectangles as boring",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "boringAuto",
        "normalized": "a b-\u003eModifiedLayout BoringWindows a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Auto",
        "signature": "l a-\u003eModifiedLayout BoringWindows l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:boringWindows",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout BoringWindows l a",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#boringWindows",
        "fct-type": "function",
        "title": "boringWindows"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "boringWindows",
        "normalized": "a b-\u003eModifiedLayout BoringWindows a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Windows",
        "signature": "l a-\u003eModifiedLayout BoringWindows l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:clearBoring",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#clearBoring",
        "fct-type": "function",
        "title": "clearBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "clearBoring",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Boring",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:focusDown",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#focusDown",
        "fct-type": "function",
        "title": "focusDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "focusDown",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Down",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:focusMaster",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#focusMaster",
        "fct-type": "function",
        "title": "focusMaster"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "focusMaster",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:focusUp",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#focusUp",
        "fct-type": "function",
        "title": "focusUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "focusUp",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Up",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-BoringWindows.html#v:markBoring",
      "description": {
        "fct-module": "XMonad.Layout.BoringWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-BoringWindows.html#markBoring",
        "fct-type": "function",
        "title": "markBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout BoringWindows",
        "module": "XMonad.Layout.BoringWindows",
        "name": "markBoring",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Boring",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ButtonDecoration.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA decoration that includes small buttons on both ends which invoke\n various actions when clicked on: Show a window menu (see\n \u003ca\u003eXMonad.Actions.WindowMenu\u003c/a\u003e), minimize, maximize or close the window.\n\u003c/p\u003e\u003cp\u003eNote: For maximizing and minimizing to actually work, you will need\n to integrate \u003ca\u003eXMonad.Layout.Maximize\u003c/a\u003e and \u003ca\u003eXMonad.Layout.Minimize\u003c/a\u003e into your\n setup.  See the documentation of those modules for more information.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ButtonDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ButtonDecoration.html",
        "fct-type": "module",
        "title": "ButtonDecoration"
      },
      "index": {
        "description": "decoration that includes small buttons on both ends which invoke various actions when clicked on Show window menu see XMonad.Actions.WindowMenu minimize maximize or close the window Note For maximizing and minimizing to actually work you will need to integrate XMonad.Layout.Maximize and XMonad.Layout.Minimize into your setup See the documentation of those modules for more information",
        "hierarchy": "XMonad Layout ButtonDecoration",
        "module": "XMonad.Layout.ButtonDecoration",
        "name": "ButtonDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Button Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ButtonDecoration.html#v:buttonDeco",
      "description": {
        "fct-module": "XMonad.Layout.ButtonDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration ButtonDecoration s) l a",
        "fct-source": "src/XMonad-Layout-ButtonDecoration.html#buttonDeco",
        "fct-type": "function",
        "title": "buttonDeco"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ButtonDecoration",
        "module": "XMonad.Layout.ButtonDecoration",
        "name": "buttonDeco",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration ButtonDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration ButtonDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-CenteredMaster.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eTwo layout modifiers. centerMaster places master window at center,\n on top of all other windows, which are managed by base layout.\n topRightMaster is similar, but places master window in top right corner\n instead of center.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.CenteredMaster",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-CenteredMaster.html",
        "fct-type": "module",
        "title": "CenteredMaster"
      },
      "index": {
        "description": "Two layout modifiers centerMaster places master window at center on top of all other windows which are managed by base layout topRightMaster is similar but places master window in top right corner instead of center",
        "hierarchy": "XMonad Layout CenteredMaster",
        "module": "XMonad.Layout.CenteredMaster",
        "name": "CenteredMaster",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Centered Master",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-CenteredMaster.html#v:centerMaster",
      "description": {
        "fct-descr": "\u003cp\u003eModifier that puts master window in center, other windows in background\n are managed by given layout\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.CenteredMaster",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout CenteredMaster l a",
        "fct-source": "src/XMonad-Layout-CenteredMaster.html#centerMaster",
        "fct-type": "function",
        "title": "centerMaster"
      },
      "index": {
        "description": "Modifier that puts master window in center other windows in background are managed by given layout",
        "hierarchy": "XMonad Layout CenteredMaster",
        "module": "XMonad.Layout.CenteredMaster",
        "name": "centerMaster",
        "normalized": "a b-\u003eModifiedLayout CenteredMaster a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": "l a-\u003eModifiedLayout CenteredMaster l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-CenteredMaster.html#v:topRightMaster",
      "description": {
        "fct-descr": "\u003cp\u003eModifier that puts master window in top right corner, other windows in background\n are managed by given layout\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.CenteredMaster",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout TopRightMaster l a",
        "fct-source": "src/XMonad-Layout-CenteredMaster.html#topRightMaster",
        "fct-type": "function",
        "title": "topRightMaster"
      },
      "index": {
        "description": "Modifier that puts master window in top right corner other windows in background are managed by given layout",
        "hierarchy": "XMonad Layout CenteredMaster",
        "module": "XMonad.Layout.CenteredMaster",
        "name": "topRightMaster",
        "normalized": "a b-\u003eModifiedLayout TopRightMaster a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Right Master",
        "signature": "l a-\u003eModifiedLayout TopRightMaster l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Circle.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCircle is an elliptical, overlapping layout, by Peter De Wachter\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Circle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Circle.html",
        "fct-type": "module",
        "title": "Circle"
      },
      "index": {
        "description": "Circle is an elliptical overlapping layout by Peter De Wachter",
        "hierarchy": "XMonad Layout Circle",
        "module": "XMonad.Layout.Circle",
        "name": "Circle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Circle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Circle.html#t:Circle",
      "description": {
        "fct-module": "XMonad.Layout.Circle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Circle.html#Circle",
        "fct-type": "data",
        "title": "Circle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Circle",
        "module": "XMonad.Layout.Circle",
        "name": "Circle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Circle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Circle.html#v:Circle",
      "description": {
        "fct-module": "XMonad.Layout.Circle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Circle",
        "fct-source": "src/XMonad-Layout-Circle.html#Circle",
        "fct-type": "function",
        "title": "Circle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Circle",
        "module": "XMonad.Layout.Circle",
        "name": "Circle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Circle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Column.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides Column layout that places all windows in one column. Windows\n heights are calculated from equation: H1\u003cem\u003eH2 = H2\u003c/em\u003eH3 = ... = q, where q is\n given. With Shrink/Expand messages you can change the q value.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Column",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Column.html",
        "fct-type": "module",
        "title": "Column"
      },
      "index": {
        "description": "Provides Column layout that places all windows in one column Windows heights are calculated from equation H1 H2 H2 H3 where is given With Shrink Expand messages you can change the value",
        "hierarchy": "XMonad Layout Column",
        "module": "XMonad.Layout.Column",
        "name": "Column",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Column",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Column.html#t:Column",
      "description": {
        "fct-module": "XMonad.Layout.Column",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Column.html#Column",
        "fct-type": "data",
        "title": "Column"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Column",
        "module": "XMonad.Layout.Column",
        "name": "Column",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Column",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Column.html#v:Column",
      "description": {
        "fct-module": "XMonad.Layout.Column",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Column Float",
        "fct-source": "src/XMonad-Layout-Column.html#Column",
        "fct-type": "function",
        "title": "Column"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Column",
        "module": "XMonad.Layout.Column",
        "name": "Column",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Column",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Combo.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout that combines multiple layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Combo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Combo.html",
        "fct-type": "module",
        "title": "Combo"
      },
      "index": {
        "description": "layout that combines multiple layouts",
        "hierarchy": "XMonad Layout Combo",
        "module": "XMonad.Layout.Combo",
        "name": "Combo",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Combo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Combo.html#t:CombineTwo",
      "description": {
        "fct-module": "XMonad.Layout.Combo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Combo.html#CombineTwo",
        "fct-type": "data",
        "title": "CombineTwo"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Combo",
        "module": "XMonad.Layout.Combo",
        "name": "CombineTwo",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Combine Two",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Combo.html#v:combineTwo",
      "description": {
        "fct-module": "XMonad.Layout.Combo",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "super () -\u003e l1 a -\u003e l2 a -\u003e CombineTwo (super ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-Combo.html#combineTwo",
        "fct-type": "function",
        "title": "combineTwo"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Combo",
        "module": "XMonad.Layout.Combo",
        "name": "combineTwo",
        "normalized": "a()-\u003eb c-\u003eb c-\u003eCombineTwo(a())b b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Two",
        "signature": "super()-\u003el a-\u003el a-\u003eCombineTwo(super())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout that combines multiple layouts and allows to specify where to put\n new windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ComboP.html",
        "fct-type": "module",
        "title": "ComboP"
      },
      "index": {
        "description": "layout that combines multiple layouts and allows to specify where to put new windows",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "ComboP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Combo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#t:CombineTwoP",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ComboP.html#CombineTwoP",
        "fct-type": "data",
        "title": "CombineTwoP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "CombineTwoP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Combine Two",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#t:Property",
      "description": {
        "fct-descr": "\u003cp\u003eMost of the property constructors are quite self-explaining.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "data",
        "title": "Property"
      },
      "index": {
        "description": "Most of the property constructors are quite self-explaining",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Property",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#t:SwapWindow",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ComboP.html#SwapWindow",
        "fct-type": "data",
        "title": "SwapWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "SwapWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Swap Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:And",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "And Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "And"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "And",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:ClassName",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ClassName String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "ClassName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "ClassName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Class Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Const",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Const Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Const"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Const",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Const",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Machine",
      "description": {
        "fct-descr": "\u003cp\u003eWM_CLIENT_MACHINE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Machine String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Machine"
      },
      "index": {
        "description": "WM CLIENT MACHINE property",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Machine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Machine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Not",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Not Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Not"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Not",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Or",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Or Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Or"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Or",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Resource",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Resource String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Resource"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Resource",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resource",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Role",
      "description": {
        "fct-descr": "\u003cp\u003eWM_WINDOW_ROLE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Role String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Role"
      },
      "index": {
        "description": "WM WINDOW ROLE property",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Role",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Role",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:SwapWindow",
      "description": {
        "fct-descr": "\u003cp\u003eSwap window between panes\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SwapWindow",
        "fct-source": "src/XMonad-Layout-ComboP.html#SwapWindow",
        "fct-type": "function",
        "title": "SwapWindow"
      },
      "index": {
        "description": "Swap window between panes",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "SwapWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Swap Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:SwapWindowN",
      "description": {
        "fct-descr": "\u003cp\u003eSwap window between panes in the N-th nested ComboP. \u003ccode\u003eSwapWindowN 0\u003c/code\u003e equals to SwapWindow\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SwapWindowN Int",
        "fct-source": "src/XMonad-Layout-ComboP.html#SwapWindow",
        "fct-type": "function",
        "title": "SwapWindowN"
      },
      "index": {
        "description": "Swap window between panes in the N-th nested ComboP SwapWindowN equals to SwapWindow",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "SwapWindowN",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Swap Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:Title",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Title String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Title"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "Title",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ComboP.html#v:combineTwoP",
      "description": {
        "fct-module": "XMonad.Layout.ComboP",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "super () -\u003e l1 Window -\u003e l2 Window -\u003e Property -\u003e CombineTwoP (super ()) l1 l2 Window",
        "fct-source": "src/XMonad-Layout-ComboP.html#combineTwoP",
        "fct-type": "function",
        "title": "combineTwoP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ComboP",
        "module": "XMonad.Layout.ComboP",
        "name": "combineTwoP",
        "normalized": "a()-\u003eb Window-\u003eb Window-\u003eProperty-\u003eCombineTwoP(a())b b Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Two",
        "signature": "super()-\u003el Window-\u003el Window-\u003eProperty-\u003eCombineTwoP(super())l l Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Cross.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA Cross Layout with the main window in the center.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Cross",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Cross.html",
        "fct-type": "module",
        "title": "Cross"
      },
      "index": {
        "description": "Cross Layout with the main window in the center",
        "hierarchy": "XMonad Layout Cross",
        "module": "XMonad.Layout.Cross",
        "name": "Cross",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cross",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Cross.html#t:Cross",
      "description": {
        "fct-descr": "\u003cp\u003eThe Cross Layout draws the focused window in the center of the screen\n   and part of the other windows on the sides. The \u003ccode\u003e\u003ca\u003eShrink\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eExpand\u003c/a\u003e\u003c/code\u003e\n   messages increment the size of the main window.\n\u003c/p\u003e\u003cp\u003eThe focus keybindings change the center window, while other windows\n   cycle through the side positions. With the Cross layout only four\n   windows are shown around the focused window, two ups and two downs,\n   no matter how many are in the current stack. I.e. focus down cycles the\n   window below focused into the center; focus up cycles the window above.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Cross",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Cross.html#Cross",
        "fct-type": "data",
        "title": "Cross"
      },
      "index": {
        "description": "The Cross Layout draws the focused window in the center of the screen and part of the other windows on the sides The Shrink and Expand messages increment the size of the main window The focus keybindings change the center window while other windows cycle through the side positions With the Cross layout only four windows are shown around the focused window two ups and two downs no matter how many are in the current stack I.e focus down cycles the window below focused into the center focus up cycles the window above",
        "hierarchy": "XMonad Layout Cross",
        "module": "XMonad.Layout.Cross",
        "name": "Cross",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cross",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Cross.html#v:Cross",
      "description": {
        "fct-module": "XMonad.Layout.Cross",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Cross",
        "fct-source": "src/XMonad-Layout-Cross.html#Cross",
        "fct-type": "function",
        "title": "Cross"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Cross",
        "module": "XMonad.Layout.Cross",
        "name": "Cross",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cross",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Cross.html#v:crossInc",
      "description": {
        "fct-descr": "\u003cp\u003ePercent of main window to increment by when resizing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Cross",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Rational",
        "fct-source": "src/XMonad-Layout-Cross.html#Cross",
        "fct-type": "function",
        "title": "crossInc"
      },
      "index": {
        "description": "Percent of main window to increment by when resizing",
        "hierarchy": "XMonad Layout Cross",
        "module": "XMonad.Layout.Cross",
        "name": "crossInc",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Cross.html#v:crossProp",
      "description": {
        "fct-descr": "\u003cp\u003eProportion of screen occupied by the main window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Cross",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Rational",
        "fct-source": "src/XMonad-Layout-Cross.html#Cross",
        "fct-type": "function",
        "title": "crossProp"
      },
      "index": {
        "description": "Proportion of screen occupied by the main window",
        "hierarchy": "XMonad Layout Cross",
        "module": "XMonad.Layout.Cross",
        "name": "crossProp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prop",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Cross.html#v:simpleCross",
      "description": {
        "fct-descr": "\u003cp\u003eA simple Cross Layout. It places the focused window in the center.\n   The proportion of the screen used by the main window is 4/5.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Cross",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Cross a",
        "fct-source": "src/XMonad-Layout-Cross.html#simpleCross",
        "fct-type": "function",
        "title": "simpleCross"
      },
      "index": {
        "description": "simple Cross Layout It places the focused window in the center The proportion of the screen used by the main window is",
        "hierarchy": "XMonad Layout Cross",
        "module": "XMonad.Layout.Cross",
        "name": "simpleCross",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cross",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier and a class for easily creating decorated\n layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Decoration.html",
        "fct-type": "module",
        "title": "Decoration"
      },
      "index": {
        "description": "layout modifier and class for easily creating decorated layouts",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "Decoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "data",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:Decoration",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003eDecoration\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003eLayoutModifier\u003c/a\u003e\u003c/code\u003e. This data type is an instance\n of the \u003ccode\u003e\u003ca\u003eLayoutModifier\u003c/a\u003e\u003c/code\u003e class. This data type will be passed,\n together with a layout, to the \u003ccode\u003e\u003ca\u003eModifiedLayout\u003c/a\u003e\u003c/code\u003e type constructor\n to modify the layout by adding decorations according to a\n \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#Decoration",
        "fct-type": "data",
        "title": "Decoration"
      },
      "index": {
        "description": "The Decoration LayoutModifier This data type is an instance of the LayoutModifier class This data type will be passed together with layout to the ModifiedLayout type constructor to modify the layout by adding decorations according to DecorationStyle",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "Decoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:DecorationMsg",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eDecoration\u003c/a\u003e\u003c/code\u003e layout modifier will handle \u003ccode\u003e\u003ca\u003eSetTheme\u003c/a\u003e\u003c/code\u003e, a message\n to dynamically change the decoration \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#DecorationMsg",
        "fct-type": "data",
        "title": "DecorationMsg"
      },
      "index": {
        "description": "Decoration layout modifier will handle SetTheme message to dynamically change the decoration Theme",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "DecorationMsg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:DecorationStyle",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e class, defines methods used in the\n implementation of the \u003ccode\u003e\u003ca\u003eDecoration\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003eLayoutModifier\u003c/a\u003e\u003c/code\u003e instance. A\n type instance of this class is passed to the \u003ccode\u003e\u003ca\u003eDecoration\u003c/a\u003e\u003c/code\u003e type in\n order to decorate a layout, by using these methods.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-Decoration.html#DecorationStyle",
        "fct-type": "class",
        "title": "DecorationStyle"
      },
      "index": {
        "description": "The DecorationStyle class defines methods used in the implementation of the Decoration LayoutModifier instance type instance of this class is passed to the Decoration type in order to decorate layout by using these methods",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "DecorationStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:DefaultDecoration",
      "description": {
        "fct-descr": "\u003cp\u003eThe default \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e, with just the default methods'\n implementations.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#DefaultDecoration",
        "fct-type": "data",
        "title": "DefaultDecoration"
      },
      "index": {
        "description": "The default DecorationStyle with just the default methods implementations",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "DefaultDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:DefaultShrinker",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#DefaultShrinker",
        "fct-type": "data",
        "title": "DefaultShrinker"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "DefaultShrinker",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Shrinker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:Shrinker",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-Decoration.html#Shrinker",
        "fct-type": "class",
        "title": "Shrinker"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "Shrinker",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrinker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#t:Theme",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e is a record of colors, font etc., to customize a\n \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eFor a collection of \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003es see \u003ca\u003eXMonad.Util.Themes\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "data",
        "title": "Theme"
      },
      "index": {
        "description": "Theme is record of colors font etc to customize DecorationStyle For collection of Theme see XMonad.Util.Themes",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CustomShrink",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "function",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:DefaultDecoration",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultDecoration",
        "fct-source": "src/XMonad-Layout-Decoration.html#DefaultDecoration",
        "fct-type": "function",
        "title": "DefaultDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "DefaultDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:SetTheme",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SetTheme Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#DecorationMsg",
        "fct-type": "function",
        "title": "SetTheme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "SetTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Set Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:Theme",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "Theme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:activeBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeBorderColor"
      },
      "index": {
        "description": "Color of the border of the active window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "activeBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:activeColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeColor"
      },
      "index": {
        "description": "Color of the active window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "activeColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:activeTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeTextColor"
      },
      "index": {
        "description": "Color of the text of the active window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "activeTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decoHeight",
      "description": {
        "fct-descr": "\u003cp\u003eHeight of the decorations\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoHeight"
      },
      "index": {
        "description": "Height of the decorations",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decoHeight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Height",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decoWidth",
      "description": {
        "fct-descr": "\u003cp\u003eMaximum width of the decorations (if supported by the \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoWidth"
      },
      "index": {
        "description": "Maximum width of the decorations if supported by the DecorationStyle",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decoWidth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Width",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decorate",
      "description": {
        "fct-descr": "\u003cp\u003eGiven the theme's decoration width and height, the screen\n rectangle, the windows stack, the list of windows and\n rectangles returned by the underlying layout and window to be\n decorated, tupled with its rectangle, produce a \u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e\n \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e if the window is not to be decorated.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e Dimension -\u003e Dimension -\u003e Rectangle -\u003e Stack a -\u003e [(a, Rectangle)] -\u003e (a, Rectangle) -\u003e X (Maybe Rectangle)",
        "fct-source": "src/XMonad-Layout-Decoration.html#decorate",
        "fct-type": "method",
        "title": "decorate"
      },
      "index": {
        "description": "Given the theme decoration width and height the screen rectangle the windows stack the list of windows and rectangles returned by the underlying layout and window to be decorated tupled with its rectangle produce Just Rectangle or Nothing if the window is not to be decorated",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decorate",
        "normalized": "a b-\u003eDimension-\u003eDimension-\u003eRectangle-\u003eStack b-\u003e[(b,Rectangle)]-\u003e(b,Rectangle)-\u003eX(Maybe Rectangle)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "ds a-\u003eDimension-\u003eDimension-\u003eRectangle-\u003eStack a-\u003e[(a,Rectangle)]-\u003e(a,Rectangle)-\u003eX(Maybe Rectangle)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decoration",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier that, with a \u003ccode\u003e\u003ca\u003eShrinker\u003c/a\u003e\u003c/code\u003e, a \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e, a\n \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e, and a layout, will decorate this layout\n according to the decoration style provided.\n\u003c/p\u003e\u003cp\u003eFor some usage examples see \u003ca\u003eXMonad.Layout.DecorationMadness\u003c/a\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ds a -\u003e l a -\u003e ModifiedLayout (Decoration ds s) l a",
        "fct-source": "src/XMonad-Layout-Decoration.html#decoration",
        "fct-type": "function",
        "title": "decoration"
      },
      "index": {
        "description": "layout modifier that with Shrinker Theme DecorationStyle and layout will decorate this layout according to the decoration style provided For some usage examples see XMonad.Layout.DecorationMadness",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decoration",
        "normalized": "a-\u003eTheme-\u003eb c-\u003ed c-\u003eModifiedLayout(Decoration b a)d c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "s-\u003eTheme-\u003eds a-\u003el a-\u003eModifiedLayout(Decoration ds s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decorationAfterDraggingHook",
      "description": {
        "fct-descr": "\u003cp\u003eThis hoook is called after a window has been dragged using the decoration.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e (Window, Rectangle) -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Layout-Decoration.html#decorationAfterDraggingHook",
        "fct-type": "method",
        "title": "decorationAfterDraggingHook"
      },
      "index": {
        "description": "This hoook is called after window has been dragged using the decoration",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decorationAfterDraggingHook",
        "normalized": "a b-\u003e(Window,Rectangle)-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "After Dragging Hook",
        "signature": "ds a-\u003e(Window,Rectangle)-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decorationCatchClicksHook",
      "description": {
        "fct-descr": "\u003cp\u003eA hook that can be used to catch the cases when the user\n clicks on the decoration. If you return True here, the click event\n will be considered as dealt with and no further processing will take place.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "decorationCatchClicksHook",
        "fct-source": "src/XMonad-Layout-Decoration.html#decorationCatchClicksHook",
        "fct-type": "method",
        "title": "decorationCatchClicksHook"
      },
      "index": {
        "description": "hook that can be used to catch the cases when the user clicks on the decoration If you return True here the click event will be considered as dealt with and no further processing will take place",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decorationCatchClicksHook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Catch Clicks Hook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decorationEventHook",
      "description": {
        "fct-descr": "\u003cp\u003eThe decoration event hook\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e DecorationState -\u003e Event -\u003e X ()",
        "fct-source": "src/XMonad-Layout-Decoration.html#decorationEventHook",
        "fct-type": "method",
        "title": "decorationEventHook"
      },
      "index": {
        "description": "The decoration event hook",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decorationEventHook",
        "normalized": "a b-\u003eDecorationState-\u003eEvent-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Event Hook",
        "signature": "ds a-\u003eDecorationState-\u003eEvent-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:decorationWhileDraggingHook",
      "description": {
        "fct-descr": "\u003cp\u003eThis hook is called while a window is dragged using the decoration.\n The hook can be overwritten if a different way of handling the dragging\n is required.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e CInt -\u003e CInt -\u003e (Window, Rectangle) -\u003e Position -\u003e Position -\u003e X ()",
        "fct-source": "src/XMonad-Layout-Decoration.html#decorationWhileDraggingHook",
        "fct-type": "method",
        "title": "decorationWhileDraggingHook"
      },
      "index": {
        "description": "This hook is called while window is dragged using the decoration The hook can be overwritten if different way of handling the dragging is required",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "decorationWhileDraggingHook",
        "normalized": "a b-\u003eCInt-\u003eCInt-\u003e(Window,Rectangle)-\u003ePosition-\u003ePosition-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "While Dragging Hook",
        "signature": "ds a-\u003eCInt-\u003eCInt-\u003e(Window,Rectangle)-\u003ePosition-\u003ePosition-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:defaultTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#defaultTheme",
        "fct-type": "function",
        "title": "defaultTheme"
      },
      "index": {
        "description": "The default xmonad Theme",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "defaultTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:describeDeco",
      "description": {
        "fct-descr": "\u003cp\u003eThe description that the \u003ccode\u003e\u003ca\u003eDecoration\u003c/a\u003e\u003c/code\u003e modifier will display.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e String",
        "fct-source": "src/XMonad-Layout-Decoration.html#describeDeco",
        "fct-type": "method",
        "title": "describeDeco"
      },
      "index": {
        "description": "The description that the Decoration modifier will display",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "describeDeco",
        "normalized": "a b-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco",
        "signature": "ds a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:fi",
      "description": {
        "fct-descr": "\u003cp\u003eShort-hand for \u003ccode\u003e\u003ca\u003efromIntegral\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e b",
        "fct-source": "src/XMonad-Util-XUtils.html#fi",
        "fct-type": "function",
        "title": "fi"
      },
      "index": {
        "description": "Short-hand for fromIntegral",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "fi",
        "normalized": "a-\u003eb",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:findWindowByDecoration",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e DecorationState -\u003e Maybe (OrigWin, (Window, Maybe Rectangle))",
        "fct-source": "src/XMonad-Layout-Decoration.html#findWindowByDecoration",
        "fct-type": "function",
        "title": "findWindowByDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "findWindowByDecoration",
        "normalized": "Window-\u003eDecorationState-\u003eMaybe(OrigWin,(Window,Maybe Rectangle))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window By Decoration",
        "signature": "Window-\u003eDecorationState-\u003eMaybe(OrigWin,(Window,Maybe Rectangle))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:fontName",
      "description": {
        "fct-descr": "\u003cp\u003eFont name\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "fontName"
      },
      "index": {
        "description": "Font name",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "fontName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:inactiveBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveBorderColor"
      },
      "index": {
        "description": "Color of the border of the inactive window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "inactiveBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:inactiveColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveColor"
      },
      "index": {
        "description": "Color of the inactive window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "inactiveColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:inactiveTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveTextColor"
      },
      "index": {
        "description": "Color of the text of the inactive window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "inactiveTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:isInStack",
      "description": {
        "fct-descr": "\u003cp\u003eTrue if the window is in the \u003ccode\u003eStack\u003c/code\u003e. The \u003ccode\u003e\u003ca\u003eWindow\u003c/a\u003e\u003c/code\u003e comes second\n to facilitate list processing, even though \u003ccode\u003ew `isInStack` s\u003c/code\u003e won't\n work...;)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Stack a -\u003e a -\u003e Bool",
        "fct-source": "src/XMonad-Layout-Decoration.html#isInStack",
        "fct-type": "function",
        "title": "isInStack"
      },
      "index": {
        "description": "True if the window is in the Stack The Window comes second to facilitate list processing even though isInStack won work",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "isInStack",
        "normalized": "Stack a-\u003ea-\u003eBool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In Stack",
        "signature": "Stack a-\u003ea-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:isInvisible",
      "description": {
        "fct-descr": "\u003cp\u003eThe contrary of \u003ccode\u003e\u003ca\u003eisVisible\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rectangle -\u003e [Rectangle] -\u003e Bool",
        "fct-source": "src/XMonad-Layout-Decoration.html#isInvisible",
        "fct-type": "function",
        "title": "isInvisible"
      },
      "index": {
        "description": "The contrary of isVisible",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "isInvisible",
        "normalized": "Rectangle-\u003e[Rectangle]-\u003eBool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Invisible",
        "signature": "Rectangle-\u003e[Rectangle]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:isVisible",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e and a list of \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003es is True if the\n \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e is not completely contained by any \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e of the\n list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rectangle -\u003e [Rectangle] -\u003e Bool",
        "fct-source": "src/XMonad-Layout-Decoration.html#isVisible",
        "fct-type": "function",
        "title": "isVisible"
      },
      "index": {
        "description": "Given Rectangle and list of Rectangle is True if the Rectangle is not completely contained by any Rectangle of the list",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "isVisible",
        "normalized": "Rectangle-\u003e[Rectangle]-\u003eBool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Visible",
        "signature": "Rectangle-\u003e[Rectangle]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:isWithin",
      "description": {
        "fct-descr": "\u003cp\u003eTrue is the first \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e is totally within the second\n \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rectangle -\u003e Rectangle -\u003e Bool",
        "fct-source": "src/XMonad-Layout-Decoration.html#isWithin",
        "fct-type": "function",
        "title": "isWithin"
      },
      "index": {
        "description": "True is the first Rectangle is totally within the second Rectangle",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "isWithin",
        "normalized": "Rectangle-\u003eRectangle-\u003eBool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Within",
        "signature": "Rectangle-\u003eRectangle-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:pureDecoration",
      "description": {
        "fct-descr": "\u003cp\u003eThe pure version of the main method, \u003ccode\u003e\u003ca\u003edecorate\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e Dimension -\u003e Dimension -\u003e Rectangle -\u003e Stack a -\u003e [(a, Rectangle)] -\u003e (a, Rectangle) -\u003e Maybe Rectangle",
        "fct-source": "src/XMonad-Layout-Decoration.html#pureDecoration",
        "fct-type": "method",
        "title": "pureDecoration"
      },
      "index": {
        "description": "The pure version of the main method decorate",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "pureDecoration",
        "normalized": "a b-\u003eDimension-\u003eDimension-\u003eRectangle-\u003eStack b-\u003e[(b,Rectangle)]-\u003e(b,Rectangle)-\u003eMaybe Rectangle",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration",
        "signature": "ds a-\u003eDimension-\u003eDimension-\u003eRectangle-\u003eStack a-\u003e[(a,Rectangle)]-\u003e(a,Rectangle)-\u003eMaybe Rectangle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:shrink",
      "description": {
        "fct-descr": "\u003cp\u003eShrink the window's rectangle when applying a decoration.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ds a -\u003e Rectangle -\u003e Rectangle -\u003e Rectangle",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrink",
        "fct-type": "method",
        "title": "shrink"
      },
      "index": {
        "description": "Shrink the window rectangle when applying decoration",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "shrink",
        "normalized": "a b-\u003eRectangle-\u003eRectangle-\u003eRectangle",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "ds a-\u003eRectangle-\u003eRectangle-\u003eRectangle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:shrinkIt",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e String -\u003e [String]",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkIt",
        "fct-type": "method",
        "title": "shrinkIt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "shrinkIt",
        "normalized": "a-\u003eString-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "It",
        "signature": "s-\u003eString-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:shrinkWhile",
      "description": {
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e [String]) -\u003e (String -\u003e X Bool) -\u003e String -\u003e X String",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkWhile",
        "fct-type": "function",
        "title": "shrinkWhile"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "shrinkWhile",
        "normalized": "(String-\u003e[String])-\u003e(String-\u003eX Bool)-\u003eString-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "While",
        "signature": "(String-\u003e[String])-\u003e(String-\u003eX Bool)-\u003eString-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:urgentBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentBorderColor"
      },
      "index": {
        "description": "Color of the border of the urgent window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "urgentBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:urgentColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentColor"
      },
      "index": {
        "description": "Color of the urgent window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "urgentColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:urgentTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentTextColor"
      },
      "index": {
        "description": "Color of the text of the urgent window",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "urgentTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Decoration.html#v:windowTitleAddons",
      "description": {
        "fct-descr": "\u003cp\u003eExtra text to appear in a window's title bar\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Decoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, Align)]",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "windowTitleAddons"
      },
      "index": {
        "description": "Extra text to appear in window title bar",
        "hierarchy": "XMonad Layout Decoration",
        "module": "XMonad.Layout.Decoration",
        "name": "windowTitleAddons",
        "normalized": "[(String,Align)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title Addons",
        "signature": "[(String,Align)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationAddons.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVarious stuff that can be added to the decoration. Most of it\n is intended to be used by other modules. See\n \u003ca\u003eXMonad.Layout.ButtonDecoration\u003c/a\u003e for a module that makes use of this.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.DecorationAddons",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-DecorationAddons.html",
        "fct-type": "module",
        "title": "DecorationAddons"
      },
      "index": {
        "description": "Various stuff that can be added to the decoration Most of it is intended to be used by other modules See XMonad.Layout.ButtonDecoration for module that makes use of this",
        "hierarchy": "XMonad Layout DecorationAddons",
        "module": "XMonad.Layout.DecorationAddons",
        "name": "DecorationAddons",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration Addons",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationAddons.html#v:defaultThemeWithButtons",
      "description": {
        "fct-descr": "\u003cp\u003eIntended to be used together with \u003ccode\u003e\u003ca\u003etitleBarButtonHandler\u003c/a\u003e\u003c/code\u003e. See above.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationAddons",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-DecorationAddons.html#defaultThemeWithButtons",
        "fct-type": "function",
        "title": "defaultThemeWithButtons"
      },
      "index": {
        "description": "Intended to be used together with titleBarButtonHandler See above",
        "hierarchy": "XMonad Layout DecorationAddons",
        "module": "XMonad.Layout.DecorationAddons",
        "name": "defaultThemeWithButtons",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme With Buttons",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationAddons.html#v:handleScreenCrossing",
      "description": {
        "fct-descr": "\u003cp\u003eA function intended to be plugged into the \u003ccode\u003e\u003ca\u003edecorationAfterDraggingHook\u003c/a\u003e\u003c/code\u003e of a decoration.\n It will check if the window has been dragged onto another screen and shift it there.\n The PositionStore is also updated accordingly, as this is designed to be used together\n with \u003ca\u003eXMonad.Layout.PositionStoreFloat\u003c/a\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationAddons",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e Window -\u003e X Bool",
        "fct-source": "src/XMonad-Layout-DecorationAddons.html#handleScreenCrossing",
        "fct-type": "function",
        "title": "handleScreenCrossing"
      },
      "index": {
        "description": "function intended to be plugged into the decorationAfterDraggingHook of decoration It will check if the window has been dragged onto another screen and shift it there The PositionStore is also updated accordingly as this is designed to be used together with XMonad.Layout.PositionStoreFloat",
        "hierarchy": "XMonad Layout DecorationAddons",
        "module": "XMonad.Layout.DecorationAddons",
        "name": "handleScreenCrossing",
        "normalized": "Window-\u003eWindow-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen Crossing",
        "signature": "Window-\u003eWindow-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationAddons.html#v:titleBarButtonHandler",
      "description": {
        "fct-descr": "\u003cp\u003eA function intended to be plugged into the \u003ccode\u003e\u003ca\u003edecorationCatchClicksHook\u003c/a\u003e\u003c/code\u003e of a decoration.\n It will intercept clicks on the buttons of the decoration and invoke the associated action.\n To actually see the buttons, you will need to use a theme that includes them.\n See \u003ccode\u003e\u003ca\u003edefaultThemeWithButtons\u003c/a\u003e\u003c/code\u003e below.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationAddons",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e Int -\u003e Int -\u003e X Bool",
        "fct-source": "src/XMonad-Layout-DecorationAddons.html#titleBarButtonHandler",
        "fct-type": "function",
        "title": "titleBarButtonHandler"
      },
      "index": {
        "description": "function intended to be plugged into the decorationCatchClicksHook of decoration It will intercept clicks on the buttons of the decoration and invoke the associated action To actually see the buttons you will need to use theme that includes them See defaultThemeWithButtons below",
        "hierarchy": "XMonad Layout DecorationAddons",
        "module": "XMonad.Layout.DecorationAddons",
        "name": "titleBarButtonHandler",
        "normalized": "Window-\u003eInt-\u003eInt-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bar Button Handler",
        "signature": "Window-\u003eInt-\u003eInt-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA collection of decorated layouts: some of them may be nice, some\n usable, others just funny.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html",
        "fct-type": "module",
        "title": "DecorationMadness"
      },
      "index": {
        "description": "collection of decorated layouts some of them may be nice some usable others just funny",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "DecorationMadness",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decoration Madness",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionDeco",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003eaccordionSimpleDece\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) Accordion Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionDeco",
        "fct-type": "function",
        "title": "accordionDeco"
      },
      "index": {
        "description": "Similar to accordionSimpleDece but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionDeco",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)Accordion Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)Accordion Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003eaccordionSimpleDecoResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Accordion)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionDecoResizable",
        "fct-type": "function",
        "title": "accordionDecoResizable"
      },
      "index": {
        "description": "Similar to accordionSimpleDecoResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionDecoResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Accordion))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Accordion))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionDefault",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003eaccordionSimpleDefault\u003c/a\u003e\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) Accordion Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionDefault",
        "fct-type": "function",
        "title": "accordionDefault"
      },
      "index": {
        "description": "Similar to accordionSimpleDefault but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionDefault",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)Accordion Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)Accordion Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003eaccordionSimpleDefaultResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Accordion)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionDefaultResizable",
        "fct-type": "function",
        "title": "accordionDefaultResizable"
      },
      "index": {
        "description": "Similar to accordionSimpleDefaultResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionDefaultResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Accordion))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Accordion))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003eaccordionSimpleDwmStyle\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DwmStyle s) Accordion Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionDwmStyle",
        "fct-type": "function",
        "title": "accordionDwmStyle"
      },
      "index": {
        "description": "Similar to accordionSimpleDwmStyle but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionDwmStyle",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle a)Accordion Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Style",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle s)Accordion Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionSimpleDeco",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003e\u003ca\u003eAccordion\u003c/a\u003e\u003c/code\u003e layout with the xmonad simple decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/accordionSimpleDeco.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) Accordion Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionSimpleDeco",
        "fct-type": "function",
        "title": "accordionSimpleDeco"
      },
      "index": {
        "description": "An Accordion layout with the xmonad simple decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots accordionSimpleDeco.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionSimpleDeco",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Deco",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionSimpleDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003e\u003ca\u003eAccordion\u003c/a\u003e\u003c/code\u003e layout with the xmonad simple decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Accordion)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionSimpleDecoResizable",
        "fct-type": "function",
        "title": "accordionSimpleDecoResizable"
      },
      "index": {
        "description": "An Accordion layout with the xmonad simple decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionSimpleDecoResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Deco Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionSimpleDefault",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003e\u003ca\u003eAccordion\u003c/a\u003e\u003c/code\u003e layout with the xmonad default decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/accordionSimpleDefault.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) Accordion Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionSimpleDefault",
        "fct-type": "function",
        "title": "accordionSimpleDefault"
      },
      "index": {
        "description": "An Accordion layout with the xmonad default decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots accordionSimpleDefault.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionSimpleDefault",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionSimpleDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003e\u003ca\u003eAccordion\u003c/a\u003e\u003c/code\u003e layout with the xmonad default decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Accordion)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionSimpleDefaultResizable",
        "fct-type": "function",
        "title": "accordionSimpleDefaultResizable"
      },
      "index": {
        "description": "An Accordion layout with the xmonad default decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionSimpleDefaultResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionSimpleDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003e\u003ca\u003eAccordion\u003c/a\u003e\u003c/code\u003e layout with the xmonad DwmStyle decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/accordionSimpleDwmStyle.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DwmStyle DefaultShrinker) Accordion Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionSimpleDwmStyle",
        "fct-type": "function",
        "title": "accordionSimpleDwmStyle"
      },
      "index": {
        "description": "An Accordion layout with the xmonad DwmStyle decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots accordionSimpleDwmStyle.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionSimpleDwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionSimpleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003e\u003ca\u003eAccordion\u003c/a\u003e\u003c/code\u003e layout with the xmonad tabbed decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/accordionSimpleTabbed.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabBarDecoration DefaultShrinker) (ModifiedLayout ResizeScreen Accordion) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionSimpleTabbed",
        "fct-type": "function",
        "title": "accordionSimpleTabbed"
      },
      "index": {
        "description": "An Accordion layout with the xmonad tabbed decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots accordionSimpleTabbed.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionSimpleTabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:accordionTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003eaccordionSimpleTabbed\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabBarDecoration s) (ModifiedLayout ResizeScreen Accordion) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#accordionTabbed",
        "fct-type": "function",
        "title": "accordionTabbed"
      },
      "index": {
        "description": "Similar to accordionSimpleTabbed but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "accordionTabbed",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration a)(ModifiedLayout ResizeScreen Accordion)Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration s)(ModifiedLayout ResizeScreen Accordion)Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleDeco",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003ecircleSimpleDece\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) Circle Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleDeco",
        "fct-type": "function",
        "title": "circleDeco"
      },
      "index": {
        "description": "Similar to circleSimpleDece but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleDeco",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)Circle Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)Circle Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003ecircleSimpleDecoResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Circle)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleDecoResizable",
        "fct-type": "function",
        "title": "circleDecoResizable"
      },
      "index": {
        "description": "Similar to circleSimpleDecoResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleDecoResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Circle))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Circle))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleDefault",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003ecircleSimpleDefault\u003c/a\u003e\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) Circle Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleDefault",
        "fct-type": "function",
        "title": "circleDefault"
      },
      "index": {
        "description": "Similar to circleSimpleDefault but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleDefault",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)Circle Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)Circle Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003ecircleSimpleDefaultResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Circle)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleDefaultResizable",
        "fct-type": "function",
        "title": "circleDefaultResizable"
      },
      "index": {
        "description": "Similar to circleSimpleDefaultResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleDefaultResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Circle))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Circle))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003ecircleSimpleDwmStyle\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DwmStyle s) Circle Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleDwmStyle",
        "fct-type": "function",
        "title": "circleDwmStyle"
      },
      "index": {
        "description": "Similar to circleSimpleDwmStyle but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleDwmStyle",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle a)Circle Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Style",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle s)Circle Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleSimpleDeco",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCircle\u003c/a\u003e\u003c/code\u003e layout with the xmonad simple decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/circleSimpleDeco.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) Circle Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleSimpleDeco",
        "fct-type": "function",
        "title": "circleSimpleDeco"
      },
      "index": {
        "description": "Circle layout with the xmonad simple decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots circleSimpleDeco.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleSimpleDeco",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Deco",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleSimpleDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCircle\u003c/a\u003e\u003c/code\u003e layout with the xmonad simple decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/circleSimpleDecoResizable.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Circle)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleSimpleDecoResizable",
        "fct-type": "function",
        "title": "circleSimpleDecoResizable"
      },
      "index": {
        "description": "Circle layout with the xmonad simple decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard Here you can find screen shot http code.haskell.org arossato xmonadShots circleSimpleDecoResizable.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleSimpleDecoResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Deco Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleSimpleDefault",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCircle\u003c/a\u003e\u003c/code\u003e layout with the xmonad default decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/circleSimpleDefault.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) Circle Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleSimpleDefault",
        "fct-type": "function",
        "title": "circleSimpleDefault"
      },
      "index": {
        "description": "Circle layout with the xmonad default decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots circleSimpleDefault.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleSimpleDefault",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleSimpleDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCircle\u003c/a\u003e\u003c/code\u003e layout with the xmonad default decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/circleSimpleDefaultResizable.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Circle)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleSimpleDefaultResizable",
        "fct-type": "function",
        "title": "circleSimpleDefaultResizable"
      },
      "index": {
        "description": "Circle layout with the xmonad default decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard Here you can find screen shot http code.haskell.org arossato xmonadShots circleSimpleDefaultResizable.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleSimpleDefaultResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleSimpleDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCircle\u003c/a\u003e\u003c/code\u003e layout with the xmonad DwmStyle decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/circleSimpleDwmStyle.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DwmStyle DefaultShrinker) Circle Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleSimpleDwmStyle",
        "fct-type": "function",
        "title": "circleSimpleDwmStyle"
      },
      "index": {
        "description": "Circle layout with the xmonad DwmStyle decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots circleSimpleDwmStyle.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleSimpleDwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleSimpleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eCircle\u003c/a\u003e\u003c/code\u003e layout with the xmonad tabbed decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/circleSimpleTabbed.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabBarDecoration DefaultShrinker) (ModifiedLayout ResizeScreen Circle) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleSimpleTabbed",
        "fct-type": "function",
        "title": "circleSimpleTabbed"
      },
      "index": {
        "description": "Circle layout with the xmonad tabbed decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots circleSimpleTabbed.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleSimpleTabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:circleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003ecircleSimpleTabbed\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabBarDecoration s) (ModifiedLayout ResizeScreen Circle) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#circleTabbed",
        "fct-type": "function",
        "title": "circleTabbed"
      },
      "index": {
        "description": "Similar to circleSimpleTabbed but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "circleTabbed",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration a)(ModifiedLayout ResizeScreen Circle)Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration s)(ModifiedLayout ResizeScreen Circle)Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:defaultTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#defaultTheme",
        "fct-type": "function",
        "title": "defaultTheme"
      },
      "index": {
        "description": "The default xmonad Theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "defaultTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatDefault",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003efloatSimpleDefault\u003c/a\u003e\u003c/code\u003e, but with the possibility of setting a\n custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatDefault",
        "fct-type": "function",
        "title": "floatDefault"
      },
      "index": {
        "description": "Same as floatSimpleDefault but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatDefault",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003efloatSimpleDwmStyle\u003c/a\u003e\u003c/code\u003e, but with the possibility of setting a\n custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DwmStyle s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatDwmStyle",
        "fct-type": "function",
        "title": "floatDwmStyle"
      },
      "index": {
        "description": "Same as floatSimpleDwmStyle but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatDwmStyle",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Style",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatSimple",
      "description": {
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatSimple",
        "fct-type": "function",
        "title": "floatSimple"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatSimple",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatSimpleDefault",
      "description": {
        "fct-descr": "\u003cp\u003eThis version is decorated with the \u003ccode\u003e\u003ca\u003eDefaultDecoration\u003c/a\u003e\u003c/code\u003e style.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/floatSimpleDefault.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatSimpleDefault",
        "fct-type": "function",
        "title": "floatSimpleDefault"
      },
      "index": {
        "description": "This version is decorated with the DefaultDecoration style Here you can find screen shot http code.haskell.org arossato xmonadShots floatSimpleDefault.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatSimpleDefault",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatSimpleDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eThis version is decorated with the \u003ccode\u003e\u003ca\u003eDwmStyle\u003c/a\u003e\u003c/code\u003e. Note that this is\n a keyboard only floating layout.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/floatSimpleDwmStyle.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DwmStyle DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatSimpleDwmStyle",
        "fct-type": "function",
        "title": "floatSimpleDwmStyle"
      },
      "index": {
        "description": "This version is decorated with the DwmStyle Note that this is keyboard only floating layout Here you can find screen shot http code.haskell.org arossato xmonadShots floatSimpleDwmStyle.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatSimpleDwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatSimpleSimple",
      "description": {
        "fct-descr": "\u003cp\u003eA simple floating layout where every window is placed according\n to the window's initial attributes.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/floatSimpleSimple.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatSimpleSimple",
        "fct-type": "function",
        "title": "floatSimpleSimple"
      },
      "index": {
        "description": "simple floating layout where every window is placed according to the window initial attributes Here you can find screen shot http code.haskell.org arossato xmonadShots floatSimpleSimple.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatSimpleSimple",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Simple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatSimpleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eThis version is decorated with the \u003ccode\u003eTabbedDecoration\u003c/code\u003e style.\n | Mouse dragging is somehow weird.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/floatSimpleTabbed.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabBarDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatSimpleTabbed",
        "fct-type": "function",
        "title": "floatSimpleTabbed"
      },
      "index": {
        "description": "This version is decorated with the TabbedDecoration style Mouse dragging is somehow weird Here you can find screen shot http code.haskell.org arossato xmonadShots floatSimpleTabbed.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatSimpleTabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:floatTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003efloatSimpleTabbed\u003c/a\u003e\u003c/code\u003e, but with the possibility of setting a\n custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabBarDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#floatTabbed",
        "fct-type": "function",
        "title": "floatTabbed"
      },
      "index": {
        "description": "Same as floatSimpleTabbed but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "floatTabbed",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallDeco",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003emirrorTallSimpleDece\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (Mirror Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallDeco",
        "fct-type": "function",
        "title": "mirrorTallDeco"
      },
      "index": {
        "description": "Similar to mirrorTallSimpleDece but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallDeco",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(Mirror Tall)Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Deco",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(Mirror Tall)Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003emirrorTallSimpleDecoResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger (Mirror Tall))) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallDecoResizable",
        "fct-type": "function",
        "title": "mirrorTallDecoResizable"
      },
      "index": {
        "description": "Similar to mirrorTallSimpleDecoResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallDecoResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger(Mirror Tall)))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Deco Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger(Mirror Tall)))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallDefault",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003emirrorTallSimpleDefault\u003c/a\u003e\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) (Mirror Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallDefault",
        "fct-type": "function",
        "title": "mirrorTallDefault"
      },
      "index": {
        "description": "Similar to mirrorTallSimpleDefault but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallDefault",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)(Mirror Tall)Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Default",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)(Mirror Tall)Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003emirrorTallSimpleDefaultResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger (Mirror Tall))) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallDefaultResizable",
        "fct-type": "function",
        "title": "mirrorTallDefaultResizable"
      },
      "index": {
        "description": "Similar to mirrorTallSimpleDefaultResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallDefaultResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger(Mirror Tall)))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Default Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger(Mirror Tall)))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003emirrorTallSimpleDwmStyle\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DwmStyle s) (Mirror Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallDwmStyle",
        "fct-type": "function",
        "title": "mirrorTallDwmStyle"
      },
      "index": {
        "description": "Similar to mirrorTallSimpleDwmStyle but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallDwmStyle",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle a)(Mirror Tall)Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Dwm Style",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle s)(Mirror Tall)Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallSimpleDeco",
      "description": {
        "fct-descr": "\u003cp\u003eA 'Mirror Tall' layout with the xmonad simple decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/mirrorTallSimpleDeco.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (Mirror Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallSimpleDeco",
        "fct-type": "function",
        "title": "mirrorTallSimpleDeco"
      },
      "index": {
        "description": "Mirror Tall layout with the xmonad simple decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots mirrorTallSimpleDeco.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallSimpleDeco",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Simple Deco",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallSimpleDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eA 'Mirror Tall' layout with the xmonad simple decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/mirrorTallSimpleDecoResizable.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger (Mirror Tall))) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallSimpleDecoResizable",
        "fct-type": "function",
        "title": "mirrorTallSimpleDecoResizable"
      },
      "index": {
        "description": "Mirror Tall layout with the xmonad simple decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard Here you can find screen shot http code.haskell.org arossato xmonadShots mirrorTallSimpleDecoResizable.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallSimpleDecoResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Simple Deco Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallSimpleDefault",
      "description": {
        "fct-descr": "\u003cp\u003eA 'Mirror Tall' layout with the xmonad default decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/mirrorTallSimpleDefault.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) (Mirror Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallSimpleDefault",
        "fct-type": "function",
        "title": "mirrorTallSimpleDefault"
      },
      "index": {
        "description": "Mirror Tall layout with the xmonad default decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots mirrorTallSimpleDefault.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallSimpleDefault",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Simple Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallSimpleDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eA 'Mirror Tall' layout with the xmonad default decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/mirrorTallSimpleDefaultResizable.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger (Mirror Tall))) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallSimpleDefaultResizable",
        "fct-type": "function",
        "title": "mirrorTallSimpleDefaultResizable"
      },
      "index": {
        "description": "Mirror Tall layout with the xmonad default decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard Here you can find screen shot http code.haskell.org arossato xmonadShots mirrorTallSimpleDefaultResizable.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallSimpleDefaultResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Simple Default Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallSimpleDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eA 'Mirror Tall' layout with the xmonad DwmStyle decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/mirrorTallSimpleDwmStyle.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DwmStyle DefaultShrinker) (Mirror Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallSimpleDwmStyle",
        "fct-type": "function",
        "title": "mirrorTallSimpleDwmStyle"
      },
      "index": {
        "description": "Mirror Tall layout with the xmonad DwmStyle decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots mirrorTallSimpleDwmStyle.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallSimpleDwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Simple Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallSimpleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eA 'Mirror Tall' layout with the xmonad tabbed decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/mirrorTallSimpleTabbed.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabBarDecoration DefaultShrinker) (ModifiedLayout ResizeScreen (Mirror Tall)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallSimpleTabbed",
        "fct-type": "function",
        "title": "mirrorTallSimpleTabbed"
      },
      "index": {
        "description": "Mirror Tall layout with the xmonad tabbed decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots mirrorTallSimpleTabbed.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallSimpleTabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Simple Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:mirrorTallTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003emirrorTallSimpleTabbed\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabBarDecoration s) (ModifiedLayout ResizeScreen (Mirror Tall)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#mirrorTallTabbed",
        "fct-type": "function",
        "title": "mirrorTallTabbed"
      },
      "index": {
        "description": "Similar to mirrorTallSimpleTabbed but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "mirrorTallTabbed",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration a)(ModifiedLayout ResizeScreen(Mirror Tall))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Tabbed",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration s)(ModifiedLayout ResizeScreen(Mirror Tall))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallDeco",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003etallSimpleDece\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) Tall Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallDeco",
        "fct-type": "function",
        "title": "tallDeco"
      },
      "index": {
        "description": "Similar to tallSimpleDece but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallDeco",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)Tall Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)Tall Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003etallSimpleDecoResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Tall)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallDecoResizable",
        "fct-type": "function",
        "title": "tallDecoResizable"
      },
      "index": {
        "description": "Similar to tallSimpleDecoResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallDecoResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Tall))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Tall))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallDefault",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003etallSimpleDefault\u003c/a\u003e\u003c/code\u003e but with the possibility of\n setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) Tall Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallDefault",
        "fct-type": "function",
        "title": "tallDefault"
      },
      "index": {
        "description": "Similar to tallSimpleDefault but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallDefault",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)Tall Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)Tall Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003etallSimpleDefaultResizable\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DefaultDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Tall)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallDefaultResizable",
        "fct-type": "function",
        "title": "tallDefaultResizable"
      },
      "index": {
        "description": "Similar to tallSimpleDefaultResizable but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallDefaultResizable",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Tall))Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Resizable",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DefaultDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger Tall))Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003etallSimpleDwmStyle\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration DwmStyle s) Tall Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallDwmStyle",
        "fct-type": "function",
        "title": "tallDwmStyle"
      },
      "index": {
        "description": "Similar to tallSimpleDwmStyle but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallDwmStyle",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle a)Tall Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Style",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration DwmStyle s)Tall Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallSimpleDeco",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e layout with the xmonad simple decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/tallSimpleDeco.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) Tall Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallSimpleDeco",
        "fct-type": "function",
        "title": "tallSimpleDeco"
      },
      "index": {
        "description": "Tall layout with the xmonad simple decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots tallSimpleDeco.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallSimpleDeco",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Deco",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallSimpleDecoResizable",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e layout with the xmonad simple decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/tallSimpleDecoResizable.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Tall)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallSimpleDecoResizable",
        "fct-type": "function",
        "title": "tallSimpleDecoResizable"
      },
      "index": {
        "description": "Tall layout with the xmonad simple decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard Here you can find screen shot http code.haskell.org arossato xmonadShots tallSimpleDecoResizable.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallSimpleDecoResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Deco Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallSimpleDefault",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e layout with the xmonad default decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/tallSimpleDefault.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) Tall Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallSimpleDefault",
        "fct-type": "function",
        "title": "tallSimpleDefault"
      },
      "index": {
        "description": "Tall layout with the xmonad default decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots tallSimpleDefault.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallSimpleDefault",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallSimpleDefaultResizable",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e layout with the xmonad default decoration, default\n theme and default shrinker, but with the possibility of moving\n windows with the mouse, and resize/move them with the keyboard.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/tallSimpleDefaultResizable.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DefaultDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger Tall)) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallSimpleDefaultResizable",
        "fct-type": "function",
        "title": "tallSimpleDefaultResizable"
      },
      "index": {
        "description": "Tall layout with the xmonad default decoration default theme and default shrinker but with the possibility of moving windows with the mouse and resize move them with the keyboard Here you can find screen shot http code.haskell.org arossato xmonadShots tallSimpleDefaultResizable.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallSimpleDefaultResizable",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Default Resizable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallSimpleDwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e layout with the xmonad DwmStyle decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/tallSimpleDwmStyle.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration DwmStyle DefaultShrinker) Tall Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallSimpleDwmStyle",
        "fct-type": "function",
        "title": "tallSimpleDwmStyle"
      },
      "index": {
        "description": "Tall layout with the xmonad DwmStyle decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots tallSimpleDwmStyle.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallSimpleDwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallSimpleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e layout with the xmonad tabbed decoration, default\n theme and default shrinker.\n\u003c/p\u003e\u003cp\u003eHere you can find a screen shot:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003ehttp://code.haskell.org/~arossato/xmonadShots/tallSimpleTabbed.png\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabBarDecoration DefaultShrinker) (ModifiedLayout ResizeScreen Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallSimpleTabbed",
        "fct-type": "function",
        "title": "tallSimpleTabbed"
      },
      "index": {
        "description": "Tall layout with the xmonad tabbed decoration default theme and default shrinker Here you can find screen shot http code.haskell.org arossato xmonadShots tallSimpleTabbed.png",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallSimpleTabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DecorationMadness.html#v:tallTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to \u003ccode\u003e\u003ca\u003etallSimpleTabbed\u003c/a\u003e\u003c/code\u003e but with the\n possibility of setting a custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DecorationMadness",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabBarDecoration s) (ModifiedLayout ResizeScreen Tall) Window",
        "fct-source": "src/XMonad-Layout-DecorationMadness.html#tallTabbed",
        "fct-type": "function",
        "title": "tallTabbed"
      },
      "index": {
        "description": "Similar to tallSimpleTabbed but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout DecorationMadness",
        "module": "XMonad.Layout.DecorationMadness",
        "name": "tallTabbed",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration a)(ModifiedLayout ResizeScreen Tall)Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabBarDecoration s)(ModifiedLayout ResizeScreen Tall)Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Dishes.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDishes is a layout that stacks extra windows underneath the master\n windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Dishes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Dishes.html",
        "fct-type": "module",
        "title": "Dishes"
      },
      "index": {
        "description": "Dishes is layout that stacks extra windows underneath the master windows",
        "hierarchy": "XMonad Layout Dishes",
        "module": "XMonad.Layout.Dishes",
        "name": "Dishes",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dishes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Dishes.html#t:Dishes",
      "description": {
        "fct-module": "XMonad.Layout.Dishes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Dishes.html#Dishes",
        "fct-type": "data",
        "title": "Dishes"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Dishes",
        "module": "XMonad.Layout.Dishes",
        "name": "Dishes",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dishes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Dishes.html#v:Dishes",
      "description": {
        "fct-module": "XMonad.Layout.Dishes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dishes Int Rational",
        "fct-source": "src/XMonad-Layout-Dishes.html#Dishes",
        "fct-type": "function",
        "title": "Dishes"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Dishes",
        "module": "XMonad.Layout.Dishes",
        "name": "Dishes",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dishes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DragPane.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLayouts that splits the screen either horizontally or vertically and\n shows two windows.  The first window is always the master window, and\n the other is either the currently focused window or the second window in\n layout order.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.DragPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-DragPane.html",
        "fct-type": "module",
        "title": "DragPane"
      },
      "index": {
        "description": "Layouts that splits the screen either horizontally or vertically and shows two windows The first window is always the master window and the other is either the currently focused window or the second window in layout order",
        "hierarchy": "XMonad Layout DragPane",
        "module": "XMonad.Layout.DragPane",
        "name": "DragPane",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Drag Pane",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DragPane.html#t:DragPane",
      "description": {
        "fct-module": "XMonad.Layout.DragPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-DragPane.html#DragPane",
        "fct-type": "data",
        "title": "DragPane"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DragPane",
        "module": "XMonad.Layout.DragPane",
        "name": "DragPane",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Drag Pane",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DragPane.html#t:DragType",
      "description": {
        "fct-module": "XMonad.Layout.DragPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-DragPane.html#DragType",
        "fct-type": "data",
        "title": "DragType"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DragPane",
        "module": "XMonad.Layout.DragPane",
        "name": "DragType",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Drag Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DragPane.html#v:Horizontal",
      "description": {
        "fct-module": "XMonad.Layout.DragPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Horizontal",
        "fct-source": "src/XMonad-Layout-DragPane.html#DragType",
        "fct-type": "function",
        "title": "Horizontal"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DragPane",
        "module": "XMonad.Layout.DragPane",
        "name": "Horizontal",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Horizontal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DragPane.html#v:Vertical",
      "description": {
        "fct-module": "XMonad.Layout.DragPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Vertical",
        "fct-source": "src/XMonad-Layout-DragPane.html#DragType",
        "fct-type": "function",
        "title": "Vertical"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DragPane",
        "module": "XMonad.Layout.DragPane",
        "name": "Vertical",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Vertical",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DragPane.html#v:dragPane",
      "description": {
        "fct-module": "XMonad.Layout.DragPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DragType -\u003e Double -\u003e Double -\u003e DragPane a",
        "fct-source": "src/XMonad-Layout-DragPane.html#dragPane",
        "fct-type": "function",
        "title": "dragPane"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DragPane",
        "module": "XMonad.Layout.DragPane",
        "name": "dragPane",
        "normalized": "DragType-\u003eDouble-\u003eDouble-\u003eDragPane a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pane",
        "signature": "DragType-\u003eDouble-\u003eDouble-\u003eDragPane a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DraggingVisualizer.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA helper module to visualize the process of dragging a window by\n making it follow the mouse cursor. See \u003ca\u003eXMonad.Layout.WindowSwitcherDecoration\u003c/a\u003e\n for a module that makes use of this.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.DraggingVisualizer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-DraggingVisualizer.html",
        "fct-type": "module",
        "title": "DraggingVisualizer"
      },
      "index": {
        "description": "helper module to visualize the process of dragging window by making it follow the mouse cursor See XMonad.Layout.WindowSwitcherDecoration for module that makes use of this",
        "hierarchy": "XMonad Layout DraggingVisualizer",
        "module": "XMonad.Layout.DraggingVisualizer",
        "name": "DraggingVisualizer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dragging Visualizer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DraggingVisualizer.html#t:DraggingVisualizerMsg",
      "description": {
        "fct-module": "XMonad.Layout.DraggingVisualizer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-DraggingVisualizer.html#DraggingVisualizerMsg",
        "fct-type": "data",
        "title": "DraggingVisualizerMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DraggingVisualizer",
        "module": "XMonad.Layout.DraggingVisualizer",
        "name": "DraggingVisualizerMsg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dragging Visualizer Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DraggingVisualizer.html#v:DraggingStopped",
      "description": {
        "fct-module": "XMonad.Layout.DraggingVisualizer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DraggingStopped",
        "fct-source": "src/XMonad-Layout-DraggingVisualizer.html#DraggingVisualizerMsg",
        "fct-type": "function",
        "title": "DraggingStopped"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DraggingVisualizer",
        "module": "XMonad.Layout.DraggingVisualizer",
        "name": "DraggingStopped",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dragging Stopped",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DraggingVisualizer.html#v:DraggingWindow",
      "description": {
        "fct-module": "XMonad.Layout.DraggingVisualizer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DraggingWindow Window Rectangle",
        "fct-source": "src/XMonad-Layout-DraggingVisualizer.html#DraggingVisualizerMsg",
        "fct-type": "function",
        "title": "DraggingWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DraggingVisualizer",
        "module": "XMonad.Layout.DraggingVisualizer",
        "name": "DraggingWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dragging Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DraggingVisualizer.html#v:draggingVisualizer",
      "description": {
        "fct-module": "XMonad.Layout.DraggingVisualizer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l Window -\u003e ModifiedLayout DraggingVisualizer l Window",
        "fct-source": "src/XMonad-Layout-DraggingVisualizer.html#draggingVisualizer",
        "fct-type": "function",
        "title": "draggingVisualizer"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DraggingVisualizer",
        "module": "XMonad.Layout.DraggingVisualizer",
        "name": "draggingVisualizer",
        "normalized": "a Window-\u003eModifiedLayout DraggingVisualizer a Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Visualizer",
        "signature": "l Window-\u003eModifiedLayout DraggingVisualizer l Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier that puts some windows in a \u003ca\u003edrawer\u003c/a\u003e which retracts and\n expands depending on whether any window in it has focus.\n\u003c/p\u003e\u003cp\u003eUseful for music players, tool palettes, etc.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Drawer.html",
        "fct-type": "module",
        "title": "Drawer"
      },
      "index": {
        "description": "layout modifier that puts some windows in drawer which retracts and expands depending on whether any window in it has focus Useful for music players tool palettes etc",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "Drawer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Drawer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#v:drawer",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a drawer with an arbitrary layout for windows inside\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Rational-\u003e Property-\u003e l a-\u003e Drawer l a",
        "fct-type": "function",
        "title": "drawer"
      },
      "index": {
        "description": "Construct drawer with an arbitrary layout for windows inside",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "drawer",
        "normalized": "Rational-\u003eRational-\u003eProperty-\u003ea b-\u003eDrawer a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eRational-\u003eProperty-\u003el a-\u003eDrawer l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#v:onBottom",
      "description": {
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Drawer l a -\u003e l' a -\u003e Reflected (Mirror (ModifiedLayout (Drawer l) (Mirror (Reflected l')))) a",
        "fct-source": "src/XMonad-Layout-Drawer.html#onBottom",
        "fct-type": "function",
        "title": "onBottom"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "onBottom",
        "normalized": "Drawer a b-\u003ec b-\u003eReflected(Mirror(ModifiedLayout(Drawer a)(Mirror(Reflected c))))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bottom",
        "signature": "Drawer l a-\u003el' a-\u003eReflected(Mirror(ModifiedLayout(Drawer l)(Mirror(Reflected l'))))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#v:onLeft",
      "description": {
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Drawer l a -\u003e l' a -\u003e ModifiedLayout (Drawer l) l' a",
        "fct-source": "src/XMonad-Layout-Drawer.html#onLeft",
        "fct-type": "function",
        "title": "onLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "onLeft",
        "normalized": "Drawer a b-\u003ec b-\u003eModifiedLayout(Drawer a)c b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Left",
        "signature": "Drawer l a-\u003el' a-\u003eModifiedLayout(Drawer l)l' a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#v:onRight",
      "description": {
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Drawer l a -\u003e l' a -\u003e Reflected (ModifiedLayout (Drawer l) (Reflected l')) a",
        "fct-source": "src/XMonad-Layout-Drawer.html#onRight",
        "fct-type": "function",
        "title": "onRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "onRight",
        "normalized": "Drawer a b-\u003ec b-\u003eReflected(ModifiedLayout(Drawer a)(Reflected c))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Right",
        "signature": "Drawer l a-\u003el' a-\u003eReflected(ModifiedLayout(Drawer l)(Reflected l'))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#v:onTop",
      "description": {
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Drawer l a -\u003e l' a -\u003e Mirror (ModifiedLayout (Drawer l) (Mirror l')) a",
        "fct-source": "src/XMonad-Layout-Drawer.html#onTop",
        "fct-type": "function",
        "title": "onTop"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "onTop",
        "normalized": "Drawer a b-\u003ec b-\u003eMirror(ModifiedLayout(Drawer a)(Mirror c))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Top",
        "signature": "Drawer l a-\u003el' a-\u003eMirror(ModifiedLayout(Drawer l)(Mirror l'))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Drawer.html#v:simpleDrawer",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a drawer with a simple layout of the windows inside\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Drawer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Rational-\u003e Property-\u003e Drawer Tall a",
        "fct-type": "function",
        "title": "simpleDrawer"
      },
      "index": {
        "description": "Construct drawer with simple layout of the windows inside",
        "hierarchy": "XMonad Layout Drawer",
        "module": "XMonad.Layout.Drawer",
        "name": "simpleDrawer",
        "normalized": "Rational-\u003eRational-\u003eProperty-\u003eDrawer Tall a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Drawer",
        "signature": "Rational-\u003eRational-\u003eProperty-\u003eDrawer Tall a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier for decorating windows in a dwm like style.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-DwmStyle.html",
        "fct-type": "module",
        "title": "DwmStyle"
      },
      "index": {
        "description": "layout modifier for decorating windows in dwm like style",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "DwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#t:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "data",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#t:DwmStyle",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-DwmStyle.html#DwmStyle",
        "fct-type": "data",
        "title": "DwmStyle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "DwmStyle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm Style",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#t:Shrinker",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-Decoration.html#Shrinker",
        "fct-type": "class",
        "title": "Shrinker"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "Shrinker",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrinker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#t:Theme",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e is a record of colors, font etc., to customize a\n \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eFor a collection of \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003es see \u003ca\u003eXMonad.Util.Themes\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "data",
        "title": "Theme"
      },
      "index": {
        "description": "Theme is record of colors font etc to customize DecorationStyle For collection of Theme see XMonad.Util.Themes",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CustomShrink",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "function",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:Dwm",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dwm",
        "fct-source": "src/XMonad-Layout-DwmStyle.html#DwmStyle",
        "fct-type": "function",
        "title": "Dwm"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "Dwm",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dwm",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:Theme",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "Theme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:activeBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeBorderColor"
      },
      "index": {
        "description": "Color of the border of the active window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "activeBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:activeColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeColor"
      },
      "index": {
        "description": "Color of the active window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "activeColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:activeTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeTextColor"
      },
      "index": {
        "description": "Color of the text of the active window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "activeTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:decoHeight",
      "description": {
        "fct-descr": "\u003cp\u003eHeight of the decorations\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoHeight"
      },
      "index": {
        "description": "Height of the decorations",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "decoHeight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Height",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:decoWidth",
      "description": {
        "fct-descr": "\u003cp\u003eMaximum width of the decorations (if supported by the \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoWidth"
      },
      "index": {
        "description": "Maximum width of the decorations if supported by the DecorationStyle",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "decoWidth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Width",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:defaultTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#defaultTheme",
        "fct-type": "function",
        "title": "defaultTheme"
      },
      "index": {
        "description": "The default xmonad Theme",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "defaultTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:dwmStyle",
      "description": {
        "fct-descr": "\u003cp\u003eAdd simple old dwm-style decorations to windows of a layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration DwmStyle s) l a",
        "fct-source": "src/XMonad-Layout-DwmStyle.html#dwmStyle",
        "fct-type": "function",
        "title": "dwmStyle"
      },
      "index": {
        "description": "Add simple old dwm-style decorations to windows of layout",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "dwmStyle",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration DwmStyle a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Style",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration DwmStyle s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:fontName",
      "description": {
        "fct-descr": "\u003cp\u003eFont name\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "fontName"
      },
      "index": {
        "description": "Font name",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "fontName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:inactiveBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveBorderColor"
      },
      "index": {
        "description": "Color of the border of the inactive window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "inactiveBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:inactiveColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveColor"
      },
      "index": {
        "description": "Color of the inactive window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "inactiveColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:inactiveTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveTextColor"
      },
      "index": {
        "description": "Color of the text of the inactive window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "inactiveTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:shrinkIt",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e String -\u003e [String]",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkIt",
        "fct-type": "method",
        "title": "shrinkIt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "shrinkIt",
        "normalized": "a-\u003eString-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "It",
        "signature": "s-\u003eString-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:urgentBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentBorderColor"
      },
      "index": {
        "description": "Color of the border of the urgent window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "urgentBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:urgentColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentColor"
      },
      "index": {
        "description": "Color of the urgent window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "urgentColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:urgentTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentTextColor"
      },
      "index": {
        "description": "Color of the text of the urgent window",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "urgentTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-DwmStyle.html#v:windowTitleAddons",
      "description": {
        "fct-descr": "\u003cp\u003eExtra text to appear in a window's title bar\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.DwmStyle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, Align)]",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "windowTitleAddons"
      },
      "index": {
        "description": "Extra text to appear in window title bar",
        "hierarchy": "XMonad Layout DwmStyle",
        "module": "XMonad.Layout.DwmStyle",
        "name": "windowTitleAddons",
        "normalized": "[(String,Align)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title Addons",
        "signature": "[(String,Align)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-FixedColumn.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout much like Tall, but using a multiple of a window's minimum\n resize amount instead of a percentage of screen to decide where to\n split. This is useful when you usually leave a text editor or\n terminal in the master pane and like it to be 80 columns wide.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.FixedColumn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-FixedColumn.html",
        "fct-type": "module",
        "title": "FixedColumn"
      },
      "index": {
        "description": "layout much like Tall but using multiple of window minimum resize amount instead of percentage of screen to decide where to split This is useful when you usually leave text editor or terminal in the master pane and like it to be columns wide",
        "hierarchy": "XMonad Layout FixedColumn",
        "module": "XMonad.Layout.FixedColumn",
        "name": "FixedColumn",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fixed Column",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-FixedColumn.html#t:FixedColumn",
      "description": {
        "fct-descr": "\u003cp\u003eA tiling mode based on preserving a nice fixed width\n   window. Supports \u003ccode\u003e\u003ca\u003eShrink\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eExpand\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eIncMasterN\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.FixedColumn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-FixedColumn.html#FixedColumn",
        "fct-type": "data",
        "title": "FixedColumn"
      },
      "index": {
        "description": "tiling mode based on preserving nice fixed width window Supports Shrink Expand and IncMasterN",
        "hierarchy": "XMonad Layout FixedColumn",
        "module": "XMonad.Layout.FixedColumn",
        "name": "FixedColumn",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fixed Column",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-FixedColumn.html#v:FixedColumn",
      "description": {
        "fct-module": "XMonad.Layout.FixedColumn",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FixedColumn !Int !Int !Int !Int",
        "fct-source": "src/XMonad-Layout-FixedColumn.html#FixedColumn",
        "fct-type": "function",
        "title": "FixedColumn"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout FixedColumn",
        "module": "XMonad.Layout.FixedColumn",
        "name": "FixedColumn",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fixed Column",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCreate manually-sized gaps along edges of the screen which will not\n be used for tiling, along with support for toggling gaps on and\n off.\n\u003c/p\u003e\u003cp\u003eNote that \u003ca\u003eXMonad.Hooks.ManageDocks\u003c/a\u003e is the preferred solution for\n leaving space for your dock-type applications (status bars,\n toolbars, docks, etc.), since it automatically sets up appropriate\n gaps, allows them to be toggled, etc.  However, this module may\n still be useful in some situations where the automated approach of\n ManageDocks does not work; for example, to work with a dock-type\n application that does not properly set the STRUTS property, or to\n leave part of the screen blank which is truncated by a projector,\n and so on.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Gaps.html",
        "fct-type": "module",
        "title": "Gaps"
      },
      "index": {
        "description": "Create manually-sized gaps along edges of the screen which will not be used for tiling along with support for toggling gaps on and off Note that XMonad.Hooks.ManageDocks is the preferred solution for leaving space for your dock-type applications status bars toolbars docks etc since it automatically sets up appropriate gaps allows them to be toggled etc However this module may still be useful in some situations where the automated approach of ManageDocks does not work for example to work with dock-type application that does not properly set the STRUTS property or to leave part of the screen blank which is truncated by projector and so on",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "Gaps",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gaps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#t:Direction2D",
      "description": {
        "fct-descr": "\u003cp\u003eTwo-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "data",
        "title": "Direction2D"
      },
      "index": {
        "description": "Two-dimensional directions",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "Direction2D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#t:GapMessage",
      "description": {
        "fct-descr": "\u003cp\u003eMessages which can be sent to a gap modifier.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Gaps.html#GapMessage",
        "fct-type": "data",
        "title": "GapMessage"
      },
      "index": {
        "description": "Messages which can be sent to gap modifier",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "GapMessage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gap Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#t:GapSpec",
      "description": {
        "fct-descr": "\u003cp\u003eA manual gap configuration.  Each side of the screen on which a\n   gap is enabled is paired with a size in pixels.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Layout-Gaps.html#GapSpec",
        "fct-type": "type",
        "title": "GapSpec"
      },
      "index": {
        "description": "manual gap configuration Each side of the screen on which gap is enabled is paired with size in pixels",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "GapSpec",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Gap Spec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:D",
      "description": {
        "fct-descr": "\u003cp\u003eDown\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "D"
      },
      "index": {
        "description": "Down",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:DecGap",
      "description": {
        "fct-descr": "\u003cp\u003eDecrease a gap.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DecGap !Int !Direction2D",
        "fct-source": "src/XMonad-Layout-Gaps.html#GapMessage",
        "fct-type": "function",
        "title": "DecGap"
      },
      "index": {
        "description": "Decrease gap",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "DecGap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dec Gap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:IncGap",
      "description": {
        "fct-descr": "\u003cp\u003eIncrease a gap by a certain number of pixels.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncGap !Int !Direction2D",
        "fct-source": "src/XMonad-Layout-Gaps.html#GapMessage",
        "fct-type": "function",
        "title": "IncGap"
      },
      "index": {
        "description": "Increase gap by certain number of pixels",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "IncGap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inc Gap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:L",
      "description": {
        "fct-descr": "\u003cp\u003eLeft\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "Left",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:R",
      "description": {
        "fct-descr": "\u003cp\u003eRight\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "Right",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:ToggleGap",
      "description": {
        "fct-descr": "\u003cp\u003eToggle a single gap.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleGap !Direction2D",
        "fct-source": "src/XMonad-Layout-Gaps.html#GapMessage",
        "fct-type": "function",
        "title": "ToggleGap"
      },
      "index": {
        "description": "Toggle single gap",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "ToggleGap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Gap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:ToggleGaps",
      "description": {
        "fct-descr": "\u003cp\u003eToggle all gaps.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleGaps",
        "fct-source": "src/XMonad-Layout-Gaps.html#GapMessage",
        "fct-type": "function",
        "title": "ToggleGaps"
      },
      "index": {
        "description": "Toggle all gaps",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "ToggleGaps",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Gaps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:U",
      "description": {
        "fct-descr": "\u003cp\u003eUp\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "U",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "U"
      },
      "index": {
        "description": "Up",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "U",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Gaps.html#v:gaps",
      "description": {
        "fct-descr": "\u003cp\u003eAdd togglable manual gaps to a layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Gaps",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GapSpec-\u003e l a-\u003e ModifiedLayout Gaps l a",
        "fct-type": "function",
        "title": "gaps"
      },
      "index": {
        "description": "Add togglable manual gaps to layout",
        "hierarchy": "XMonad Layout Gaps",
        "module": "XMonad.Layout.Gaps",
        "name": "gaps",
        "normalized": "GapSpec-\u003ea b-\u003eModifiedLayout Gaps a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "GapSpec-\u003el a-\u003eModifiedLayout Gaps l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Grid.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA simple layout that attempts to put all windows in a square grid.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Grid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Grid.html",
        "fct-type": "module",
        "title": "Grid"
      },
      "index": {
        "description": "simple layout that attempts to put all windows in square grid",
        "hierarchy": "XMonad Layout Grid",
        "module": "XMonad.Layout.Grid",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Grid.html#t:Grid",
      "description": {
        "fct-module": "XMonad.Layout.Grid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Grid.html#Grid",
        "fct-type": "data",
        "title": "Grid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Grid",
        "module": "XMonad.Layout.Grid",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Grid.html#v:Grid",
      "description": {
        "fct-module": "XMonad.Layout.Grid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Grid",
        "fct-source": "src/XMonad-Layout-Grid.html#Grid",
        "fct-type": "function",
        "title": "Grid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Grid",
        "module": "XMonad.Layout.Grid",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Grid.html#v:GridRatio",
      "description": {
        "fct-module": "XMonad.Layout.Grid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GridRatio Double",
        "fct-source": "src/XMonad-Layout-Grid.html#Grid",
        "fct-type": "function",
        "title": "GridRatio"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Grid",
        "module": "XMonad.Layout.Grid",
        "name": "GridRatio",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid Ratio",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Grid.html#v:arrange",
      "description": {
        "fct-module": "XMonad.Layout.Grid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e Rectangle -\u003e [a] -\u003e [(a, Rectangle)]",
        "fct-source": "src/XMonad-Layout-Grid.html#arrange",
        "fct-type": "function",
        "title": "arrange"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Grid",
        "module": "XMonad.Layout.Grid",
        "name": "arrange",
        "normalized": "Double-\u003eRectangle-\u003e[a]-\u003e[(a,Rectangle)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Double-\u003eRectangle-\u003e[a]-\u003e[(a,Rectangle)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Grid.html#v:defaultRatio",
      "description": {
        "fct-module": "XMonad.Layout.Grid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double",
        "fct-source": "src/XMonad-Layout-Grid.html#defaultRatio",
        "fct-type": "function",
        "title": "defaultRatio"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Grid",
        "module": "XMonad.Layout.Grid",
        "name": "defaultRatio",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ratio",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eTwo layouts: one is a variant of the Grid layout that allows the\n desired aspect ratio of windows to be specified.  The other is like\n Tall but places a grid with fixed number of rows and columns in the\n master area and uses an aspect-ratio-specified layout for the\n slaves.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-GridVariants.html",
        "fct-type": "module",
        "title": "GridVariants"
      },
      "index": {
        "description": "Two layouts one is variant of the Grid layout that allows the desired aspect ratio of windows to be specified The other is like Tall but places grid with fixed number of rows and columns in the master area and uses an aspect-ratio-specified layout for the slaves",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "GridVariants",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid Variants",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#t:ChangeMasterGeom",
      "description": {
        "fct-descr": "\u003cp\u003eThe geometry change message understood by the master grid\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-GridVariants.html#ChangeMasterGeom",
        "fct-type": "data",
        "title": "ChangeMasterGeom"
      },
      "index": {
        "description": "The geometry change message understood by the master grid",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "ChangeMasterGeom",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Change Master Geom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#t:Grid",
      "description": {
        "fct-descr": "\u003cp\u003eGrid layout.  The parameter is the desired x:y aspect ratio of windows\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Grid",
        "fct-type": "data",
        "title": "Grid"
      },
      "index": {
        "description": "Grid layout The parameter is the desired aspect ratio of windows",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#t:Orientation",
      "description": {
        "fct-descr": "\u003cp\u003eType to specify the side of the screen that holds\n   the master area of a SplitGrid.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Orientation",
        "fct-type": "data",
        "title": "Orientation"
      },
      "index": {
        "description": "Type to specify the side of the screen that holds the master area of SplitGrid",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "Orientation",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Orientation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#t:SplitGrid",
      "description": {
        "fct-descr": "\u003cp\u003eSplitGrid layout.  Parameters are\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e side where the master is\n   - number of master rows\n   - number of master columns\n   - portion of screen used for master grid\n   - x:y aspect ratio of slave windows\n   - increment for resize messages\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-GridVariants.html#SplitGrid",
        "fct-type": "data",
        "title": "SplitGrid"
      },
      "index": {
        "description": "SplitGrid layout Parameters are side where the master is number of master rows number of master columns portion of screen used for master grid aspect ratio of slave windows increment for resize messages",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "SplitGrid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Split Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#t:TallGrid",
      "description": {
        "fct-descr": "\u003cp\u003eTallGrid layout.  Parameters are\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e number of master rows\n   - number of master columns\n   - portion of screen used for master grid\n   - x:y aspect ratio of slave windows\n   - increment for resize messages\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThis exists mostly because it was introduced in an earlier version.\n   It's a fairly thin wrapper around \u003ca\u003eSplitGrid L\u003c/a\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-GridVariants.html#TallGrid",
        "fct-type": "data",
        "title": "TallGrid"
      },
      "index": {
        "description": "TallGrid layout Parameters are number of master rows number of master columns portion of screen used for master grid aspect ratio of slave windows increment for resize messages This exists mostly because it was introduced in an earlier version It fairly thin wrapper around SplitGrid",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "TallGrid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:B",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "B",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Orientation",
        "fct-type": "function",
        "title": "B"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "B",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:Grid",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Grid !Rational",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Grid",
        "fct-type": "function",
        "title": "Grid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:IncMasterCols",
      "description": {
        "fct-descr": "\u003cp\u003eChange the number of master columns\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncMasterCols !Int",
        "fct-source": "src/XMonad-Layout-GridVariants.html#ChangeMasterGeom",
        "fct-type": "function",
        "title": "IncMasterCols"
      },
      "index": {
        "description": "Change the number of master columns",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "IncMasterCols",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inc Master Cols",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:IncMasterRows",
      "description": {
        "fct-descr": "\u003cp\u003eChange the number of master rows\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncMasterRows !Int",
        "fct-source": "src/XMonad-Layout-GridVariants.html#ChangeMasterGeom",
        "fct-type": "function",
        "title": "IncMasterRows"
      },
      "index": {
        "description": "Change the number of master rows",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "IncMasterRows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inc Master Rows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:L",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Orientation",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:R",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Orientation",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:SplitGrid",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SplitGrid Orientation !Int !Int !Rational !Rational !Rational",
        "fct-source": "src/XMonad-Layout-GridVariants.html#SplitGrid",
        "fct-type": "function",
        "title": "SplitGrid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "SplitGrid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Split Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:T",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "T",
        "fct-source": "src/XMonad-Layout-GridVariants.html#Orientation",
        "fct-type": "function",
        "title": "T"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "T",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-GridVariants.html#v:TallGrid",
      "description": {
        "fct-module": "XMonad.Layout.GridVariants",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TallGrid !Int !Int !Rational !Rational !Rational",
        "fct-source": "src/XMonad-Layout-GridVariants.html#TallGrid",
        "fct-type": "function",
        "title": "TallGrid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout GridVariants",
        "module": "XMonad.Layout.GridVariants",
        "name": "TallGrid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedGrid.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA not so simple layout that attempts to put all windows in a square grid\n while obeying their size hints.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.HintedGrid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-HintedGrid.html",
        "fct-type": "module",
        "title": "HintedGrid"
      },
      "index": {
        "description": "not so simple layout that attempts to put all windows in square grid while obeying their size hints",
        "hierarchy": "XMonad Layout HintedGrid",
        "module": "XMonad.Layout.HintedGrid",
        "name": "HintedGrid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hinted Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedGrid.html#t:Grid",
      "description": {
        "fct-descr": "\u003cp\u003eAutomatic mirroring of hinted layouts doesn't work very well, so this\n \u003ccode\u003e\u003ca\u003eGrid\u003c/a\u003e\u003c/code\u003e comes with built-in mirroring. \u003ccode\u003eGrid False\u003c/code\u003e is the normal layout,\n \u003ccode\u003eGrid True\u003c/code\u003e is the mirrored variant (rotated by 90 degrees).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedGrid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-HintedGrid.html#Grid",
        "fct-type": "data",
        "title": "Grid"
      },
      "index": {
        "description": "Automatic mirroring of hinted layouts doesn work very well so this Grid comes with built-in mirroring Grid False is the normal layout Grid True is the mirrored variant rotated by degrees",
        "hierarchy": "XMonad Layout HintedGrid",
        "module": "XMonad.Layout.HintedGrid",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedGrid.html#v:Grid",
      "description": {
        "fct-module": "XMonad.Layout.HintedGrid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Grid Bool",
        "fct-source": "src/XMonad-Layout-HintedGrid.html#Grid",
        "fct-type": "function",
        "title": "Grid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedGrid",
        "module": "XMonad.Layout.HintedGrid",
        "name": "Grid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedGrid.html#v:GridRatio",
      "description": {
        "fct-module": "XMonad.Layout.HintedGrid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "GridRatio Double Bool",
        "fct-source": "src/XMonad-Layout-HintedGrid.html#Grid",
        "fct-type": "function",
        "title": "GridRatio"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedGrid",
        "module": "XMonad.Layout.HintedGrid",
        "name": "GridRatio",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Grid Ratio",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedGrid.html#v:arrange",
      "description": {
        "fct-descr": "\u003cp\u003eThe internal function for computing the grid layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedGrid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e Bool -\u003e Rectangle -\u003e [Window] -\u003e X [(Window, Rectangle)]",
        "fct-source": "src/XMonad-Layout-HintedGrid.html#arrange",
        "fct-type": "function",
        "title": "arrange"
      },
      "index": {
        "description": "The internal function for computing the grid layout",
        "hierarchy": "XMonad Layout HintedGrid",
        "module": "XMonad.Layout.HintedGrid",
        "name": "arrange",
        "normalized": "Double-\u003eBool-\u003eRectangle-\u003e[Window]-\u003eX[(Window,Rectangle)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Double-\u003eBool-\u003eRectangle-\u003e[Window]-\u003eX[(Window,Rectangle)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedGrid.html#v:defaultRatio",
      "description": {
        "fct-module": "XMonad.Layout.HintedGrid",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double",
        "fct-source": "src/XMonad-Layout-HintedGrid.html#defaultRatio",
        "fct-type": "function",
        "title": "defaultRatio"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedGrid",
        "module": "XMonad.Layout.HintedGrid",
        "name": "defaultRatio",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ratio",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA gapless tiled layout that attempts to obey window size hints,\n rather than simply ignoring them.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-HintedTile.html",
        "fct-type": "module",
        "title": "HintedTile"
      },
      "index": {
        "description": "gapless tiled layout that attempts to obey window size hints rather than simply ignoring them",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "HintedTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hinted Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#t:Alignment",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Alignment",
        "fct-type": "data",
        "title": "Alignment"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "Alignment",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Alignment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#t:HintedTile",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "data",
        "title": "HintedTile"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "HintedTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hinted Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#t:Orientation",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Orientation",
        "fct-type": "data",
        "title": "Orientation"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "Orientation",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Orientation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:BottomRight",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "BottomRight",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Alignment",
        "fct-type": "function",
        "title": "BottomRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "BottomRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bottom Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:Center",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Center",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Alignment",
        "fct-type": "function",
        "title": "Center"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "Center",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Center",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:HintedTile",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HintedTile",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "function",
        "title": "HintedTile"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "HintedTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hinted Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:Tall",
      "description": {
        "fct-descr": "\u003cp\u003eLay out windows similarly to tiled.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Tall",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Orientation",
        "fct-type": "function",
        "title": "Tall"
      },
      "index": {
        "description": "Lay out windows similarly to tiled",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "Tall",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tall",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:TopLeft",
      "description": {
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TopLeft",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Alignment",
        "fct-type": "function",
        "title": "TopLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "TopLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Top Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:Wide",
      "description": {
        "fct-descr": "\u003cp\u003eLay out windows similarly to Mirror tiled.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Wide",
        "fct-source": "src/XMonad-Layout-HintedTile.html#Orientation",
        "fct-type": "function",
        "title": "Wide"
      },
      "index": {
        "description": "Lay out windows similarly to Mirror tiled",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "Wide",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Wide",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:alignment",
      "description": {
        "fct-descr": "\u003cp\u003eWhere to place windows that are smaller\n   than their preordained rectangles.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Alignment",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "function",
        "title": "alignment"
      },
      "index": {
        "description": "Where to place windows that are smaller than their preordained rectangles",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "alignment",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:delta",
      "description": {
        "fct-descr": "\u003cp\u003ehow much to change when resizing\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Rational",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "function",
        "title": "delta"
      },
      "index": {
        "description": "how much to change when resizing",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "delta",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:frac",
      "description": {
        "fct-descr": "\u003cp\u003eratio between master/nonmaster panes\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Rational",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "function",
        "title": "frac"
      },
      "index": {
        "description": "ratio between master nonmaster panes",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "frac",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:nmaster",
      "description": {
        "fct-descr": "\u003cp\u003enumber of windows in the master pane\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Int",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "function",
        "title": "nmaster"
      },
      "index": {
        "description": "number of windows in the master pane",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "nmaster",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-HintedTile.html#v:orientation",
      "description": {
        "fct-descr": "\u003cp\u003eTall or Wide (mirrored) layout?\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.HintedTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Orientation",
        "fct-source": "src/XMonad-Layout-HintedTile.html#HintedTile",
        "fct-type": "function",
        "title": "orientation"
      },
      "index": {
        "description": "Tall or Wide mirrored layout",
        "hierarchy": "XMonad Layout HintedTile",
        "module": "XMonad.Layout.HintedTile",
        "name": "orientation",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLayout modfier suitable for workspace with multi-windowed instant messenger\n (like Psi or Tkabber).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-IM.html",
        "fct-type": "module",
        "title": "IM"
      },
      "index": {
        "description": "Layout modfier suitable for workspace with multi-windowed instant messenger like Psi or Tkabber",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "IM",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#t:IM",
      "description": {
        "fct-descr": "\u003cp\u003eThis is for compatibility with old configs only and will be removed in future versions!\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-IM.html#IM",
        "fct-type": "data",
        "title": "IM"
      },
      "index": {
        "description": "This is for compatibility with old configs only and will be removed in future versions",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "IM",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#t:Property",
      "description": {
        "fct-descr": "\u003cp\u003eMost of the property constructors are quite self-explaining.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "data",
        "title": "Property"
      },
      "index": {
        "description": "Most of the property constructors are quite self-explaining",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Property",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:And",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "And Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "And"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "And",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:ClassName",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ClassName String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "ClassName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "ClassName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Class Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Const",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Const Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Const"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Const",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Const",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:IM",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IM Rational Property",
        "fct-source": "src/XMonad-Layout-IM.html#IM",
        "fct-type": "function",
        "title": "IM"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "IM",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Machine",
      "description": {
        "fct-descr": "\u003cp\u003eWM_CLIENT_MACHINE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Machine String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Machine"
      },
      "index": {
        "description": "WM CLIENT MACHINE property",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Machine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Machine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Not",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Not Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Not"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Not",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Or",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Or Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Or"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Or",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Resource",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Resource String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Resource"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Resource",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resource",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Role",
      "description": {
        "fct-descr": "\u003cp\u003eWM_WINDOW_ROLE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Role String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Role"
      },
      "index": {
        "description": "WM WINDOW ROLE property",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Role",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Role",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:Title",
      "description": {
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Title String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Title"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "Title",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:gridIM",
      "description": {
        "fct-descr": "\u003cp\u003eIM layout modifier applied to the Grid layout\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Property -\u003e ModifiedLayout AddRoster Grid a",
        "fct-source": "src/XMonad-Layout-IM.html#gridIM",
        "fct-type": "function",
        "title": "gridIM"
      },
      "index": {
        "description": "IM layout modifier applied to the Grid layout",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "gridIM",
        "normalized": "Rational-\u003eProperty-\u003eModifiedLayout AddRoster Grid a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IM",
        "signature": "Rational-\u003eProperty-\u003eModifiedLayout AddRoster Grid a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IM.html#v:withIM",
      "description": {
        "fct-descr": "\u003cp\u003eModifier which converts given layout to IM-layout (with dedicated\n space for roster and original layout for chat windows)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IM",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Property -\u003e l a -\u003e ModifiedLayout AddRoster l a",
        "fct-source": "src/XMonad-Layout-IM.html#withIM",
        "fct-type": "function",
        "title": "withIM"
      },
      "index": {
        "description": "Modifier which converts given layout to IM-layout with dedicated space for roster and original layout for chat windows",
        "hierarchy": "XMonad Layout IM",
        "module": "XMonad.Layout.IM",
        "name": "withIM",
        "normalized": "Rational-\u003eProperty-\u003ea b-\u003eModifiedLayout AddRoster a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IM",
        "signature": "Rational-\u003eProperty-\u003el a-\u003eModifiedLayout AddRoster l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUtility functions for simulating independent sets of workspaces on\n each screen (like dwm's workspace model), using internal tags to\n distinguish workspaces associated with each screen.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html",
        "fct-type": "module",
        "title": "IndependentScreens"
      },
      "index": {
        "description": "Utility functions for simulating independent sets of workspaces on each screen like dwm workspace model using internal tags to distinguish workspaces associated with each screen",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "IndependentScreens",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Independent Screens",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#t:PhysicalWorkspace",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#PhysicalWorkspace",
        "fct-type": "type",
        "title": "PhysicalWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "PhysicalWorkspace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Physical Workspace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#t:VirtualWorkspace",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#VirtualWorkspace",
        "fct-type": "type",
        "title": "VirtualWorkspace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "VirtualWorkspace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Virtual Workspace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:countScreens",
      "description": {
        "fct-descr": "\u003cp\u003eIn case you don't know statically how many screens there will be, you can call this in main before starting xmonad.  For example, part of my config reads\n\u003c/p\u003e\u003cpre\u003e main = do\n   nScreens \u003c- countScreens\n   xmonad $ defaultConfig {\n     ...\n     workspaces = withScreens nScreens (workspaces defaultConfig),\n     ...\n     }\n\u003c/pre\u003e",
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m i",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#countScreens",
        "fct-type": "function",
        "title": "countScreens"
      },
      "index": {
        "description": "In case you don know statically how many screens there will be you can call this in main before starting xmonad For example part of my config reads main do nScreens countScreens xmonad defaultConfig workspaces withScreens nScreens workspaces defaultConfig",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "countScreens",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screens",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:marshall",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId -\u003e VirtualWorkspace -\u003e PhysicalWorkspace",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#marshall",
        "fct-type": "function",
        "title": "marshall"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "marshall",
        "normalized": "ScreenId-\u003eVirtualWorkspace-\u003ePhysicalWorkspace",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "ScreenId-\u003eVirtualWorkspace-\u003ePhysicalWorkspace"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:marshallPP",
      "description": {
        "fct-descr": "\u003cp\u003eThis turns a naive pretty-printer into one that is aware of the\n independent screens. That is, you can write your pretty printer to behave\n the way you want on virtual workspaces; this function will convert that\n pretty-printer into one that first filters out physical workspaces on other\n screens, then converts all the physical workspaces on this screen to their\n virtual names.\n\u003c/p\u003e\u003cp\u003eFor example, if you have handles \u003ccode\u003ehLeft\u003c/code\u003e and \u003ccode\u003ehRight\u003c/code\u003e for bars on the left and right screens, respectively, and \u003ccode\u003epp\u003c/code\u003e is a pretty-printer function that takes a handle, you could write\n\u003c/p\u003e\u003cpre\u003e logHook = let log screen handle = dynamicLogWithPP . marshallPP screen . pp $ handle\n           in log 0 hLeft \u003e\u003e log 1 hRight\n\u003c/pre\u003e",
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId -\u003e PP -\u003e PP",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#marshallPP",
        "fct-type": "function",
        "title": "marshallPP"
      },
      "index": {
        "description": "This turns naive pretty-printer into one that is aware of the independent screens That is you can write your pretty printer to behave the way you want on virtual workspaces this function will convert that pretty-printer into one that first filters out physical workspaces on other screens then converts all the physical workspaces on this screen to their virtual names For example if you have handles hLeft and hRight for bars on the left and right screens respectively and pp is pretty-printer function that takes handle you could write logHook let log screen handle dynamicLogWithPP marshallPP screen pp handle in log hLeft log hRight",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "marshallPP",
        "normalized": "ScreenId-\u003ePP-\u003ePP",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "PP",
        "signature": "ScreenId-\u003ePP-\u003ePP"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:marshallWindowSpace",
      "description": {
        "fct-descr": "\u003cp\u003eConvert the tag of the \u003ccode\u003e\u003ca\u003eWindowSpace\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003e\u003ca\u003eVirtualWorkspace\u003c/a\u003e\u003c/code\u003e to a \u003ccode\u003e\u003ca\u003ePhysicalWorkspace\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId -\u003e WindowSpace -\u003e WindowSpace",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#marshallWindowSpace",
        "fct-type": "function",
        "title": "marshallWindowSpace"
      },
      "index": {
        "description": "Convert the tag of the WindowSpace from VirtualWorkspace to PhysicalWorkspace",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "marshallWindowSpace",
        "normalized": "ScreenId-\u003eWindowSpace-\u003eWindowSpace",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Space",
        "signature": "ScreenId-\u003eWindowSpace-\u003eWindowSpace"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:onCurrentScreen",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(VirtualWorkspace -\u003e WindowSet -\u003e a) -\u003e PhysicalWorkspace -\u003e WindowSet -\u003e a",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#onCurrentScreen",
        "fct-type": "function",
        "title": "onCurrentScreen"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "onCurrentScreen",
        "normalized": "(VirtualWorkspace-\u003eWindowSet-\u003ea)-\u003ePhysicalWorkspace-\u003eWindowSet-\u003ea",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Current Screen",
        "signature": "(VirtualWorkspace-\u003eWindowSet-\u003ea)-\u003ePhysicalWorkspace-\u003eWindowSet-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:unmarshall",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PhysicalWorkspace -\u003e (ScreenId, VirtualWorkspace)",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#unmarshall",
        "fct-type": "function",
        "title": "unmarshall"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "unmarshall",
        "normalized": "PhysicalWorkspace-\u003e(ScreenId,VirtualWorkspace)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "PhysicalWorkspace-\u003e(ScreenId,VirtualWorkspace)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:unmarshallS",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PhysicalWorkspace -\u003e ScreenId",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#unmarshallS",
        "fct-type": "function",
        "title": "unmarshallS"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "unmarshallS",
        "normalized": "PhysicalWorkspace-\u003eScreenId",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "PhysicalWorkspace-\u003eScreenId"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:unmarshallW",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PhysicalWorkspace -\u003e VirtualWorkspace",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#unmarshallW",
        "fct-type": "function",
        "title": "unmarshallW"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "unmarshallW",
        "normalized": "PhysicalWorkspace-\u003eVirtualWorkspace",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "PhysicalWorkspace-\u003eVirtualWorkspace"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:unmarshallWindowSpace",
      "description": {
        "fct-descr": "\u003cp\u003eConvert the tag of the \u003ccode\u003e\u003ca\u003eWindowSpace\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003e\u003ca\u003ePhysicalWorkspace\u003c/a\u003e\u003c/code\u003e to a \u003ccode\u003e\u003ca\u003eVirtualWorkspace\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WindowSpace -\u003e WindowSpace",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#unmarshallWindowSpace",
        "fct-type": "function",
        "title": "unmarshallWindowSpace"
      },
      "index": {
        "description": "Convert the tag of the WindowSpace from PhysicalWorkspace to VirtualWorkspace",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "unmarshallWindowSpace",
        "normalized": "WindowSpace-\u003eWindowSpace",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Space",
        "signature": "WindowSpace-\u003eWindowSpace"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:withScreens",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId-\u003e [VirtualWorkspace]-\u003e [PhysicalWorkspace]",
        "fct-type": "function",
        "title": "withScreens"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "withScreens",
        "normalized": "ScreenId-\u003e[VirtualWorkspace]-\u003e[PhysicalWorkspace]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screens",
        "signature": "ScreenId-\u003e[VirtualWorkspace]-\u003e[PhysicalWorkspace]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-IndependentScreens.html#v:workspaces-39-",
      "description": {
        "fct-module": "XMonad.Layout.IndependentScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e [VirtualWorkspace]",
        "fct-source": "src/XMonad-Layout-IndependentScreens.html#workspaces%27",
        "fct-type": "function",
        "title": "workspaces'"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout IndependentScreens",
        "module": "XMonad.Layout.IndependentScreens",
        "name": "workspaces'",
        "normalized": "XConfig a-\u003e[VirtualWorkspace]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "XConfig l-\u003e[VirtualWorkspace]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout combinator that sends a specified number of windows to one rectangle\n and the rest to another.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html",
        "fct-type": "module",
        "title": "LayoutBuilder"
      },
      "index": {
        "description": "layout combinator that sends specified number of windows to one rectangle and the rest to another",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "LayoutBuilder",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Builder",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#t:IncLayoutN",
      "description": {
        "fct-descr": "\u003cp\u003eChange the number of windows handled by the focused layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#IncLayoutN",
        "fct-type": "data",
        "title": "IncLayoutN"
      },
      "index": {
        "description": "Change the number of windows handled by the focused layout",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "IncLayoutN",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inc Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#t:SubBox",
      "description": {
        "fct-descr": "\u003cp\u003eA box to place a layout in. The stored values are xpos, ypos, width and height.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#SubBox",
        "fct-type": "data",
        "title": "SubBox"
      },
      "index": {
        "description": "box to place layout in The stored values are xpos ypos width and height",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "SubBox",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sub Box",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#t:SubMeasure",
      "description": {
        "fct-descr": "\u003cp\u003eThe absolute or relative measures used to describe the area a layout should be placed in. For negative absolute values\n   the total remaining space will be added. For sizes, the remaining space will also be added for zeroes. Relative values\n   are applied on the remaining space after the top-left corner of the box have been removed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#SubMeasure",
        "fct-type": "data",
        "title": "SubMeasure"
      },
      "index": {
        "description": "The absolute or relative measures used to describe the area layout should be placed in For negative absolute values the total remaining space will be added For sizes the remaining space will also be added for zeroes Relative values are applied on the remaining space after the top-left corner of the box have been removed",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "SubMeasure",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sub Measure",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:Abs",
      "description": {
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Abs Int",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#SubMeasure",
        "fct-type": "function",
        "title": "Abs"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "Abs",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Abs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:IncLayoutN",
      "description": {
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncLayoutN Int",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#IncLayoutN",
        "fct-type": "function",
        "title": "IncLayoutN"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "IncLayoutN",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Inc Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:Rel",
      "description": {
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rel Rational",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#SubMeasure",
        "fct-type": "function",
        "title": "Rel"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "Rel",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Rel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:SubBox",
      "description": {
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SubBox SubMeasure SubMeasure SubMeasure SubMeasure",
        "fct-source": "src/XMonad-Layout-LayoutBuilder.html#SubBox",
        "fct-type": "function",
        "title": "SubBox"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "SubBox",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sub Box",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:absBox",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a box with only absolute measurements. If the values are negative, the total remaining space will be added. For\n   sizes it will also be added for zeroes.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int-\u003e Int-\u003e Int-\u003e Int-\u003e SubBox",
        "fct-type": "function",
        "title": "absBox"
      },
      "index": {
        "description": "Create box with only absolute measurements If the values are negative the total remaining space will be added For sizes it will also be added for zeroes",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "absBox",
        "normalized": "Int-\u003eInt-\u003eInt-\u003eInt-\u003eSubBox",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Box",
        "signature": "Int-\u003eInt-\u003eInt-\u003eInt-\u003eSubBox"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:layoutAll",
      "description": {
        "fct-descr": "\u003cp\u003eUse the specified layout in the described area for all remaining windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SubBox-\u003e l1 a-\u003e LayoutN l1 Full a",
        "fct-type": "function",
        "title": "layoutAll"
      },
      "index": {
        "description": "Use the specified layout in the described area for all remaining windows",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "layoutAll",
        "normalized": "SubBox-\u003ea b-\u003eLayoutN a Full b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All",
        "signature": "SubBox-\u003el a-\u003eLayoutN l Full a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:layoutN",
      "description": {
        "fct-descr": "\u003cp\u003eUse the specified layout in the described area for N windows and send the rest of the windows to the next layout in the chain.\n   It is possible to supply an alternative area that will then be used instead, if there are no windows to send to the next layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int-\u003e SubBox-\u003e Maybe SubBox-\u003e l1 a-\u003e LayoutN l2 l3 a-\u003e LayoutN l1 (LayoutN l2 l3) a",
        "fct-type": "function",
        "title": "layoutN"
      },
      "index": {
        "description": "Use the specified layout in the described area for windows and send the rest of the windows to the next layout in the chain It is possible to supply an alternative area that will then be used instead if there are no windows to send to the next layout",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "layoutN",
        "normalized": "Int-\u003eSubBox-\u003eMaybe SubBox-\u003ea b-\u003eLayoutN a a b-\u003eLayoutN a(LayoutN a a)b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003eSubBox-\u003eMaybe SubBox-\u003el a-\u003eLayoutN l l a-\u003eLayoutN l(LayoutN l l)a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:layoutR",
      "description": {
        "fct-descr": "\u003cp\u003eAs layoutN, but the number of windows is given relative to the total number of windows remaining to be handled. The first\n   argument is how much to change the ratio when using IncLayoutN, and the second is the initial ratio.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Rational-\u003e SubBox-\u003e Maybe SubBox-\u003e l1 a-\u003e LayoutN l2 l3 a-\u003e LayoutN l1 (LayoutN l2 l3) a",
        "fct-type": "function",
        "title": "layoutR"
      },
      "index": {
        "description": "As layoutN but the number of windows is given relative to the total number of windows remaining to be handled The first argument is how much to change the ratio when using IncLayoutN and the second is the initial ratio",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "layoutR",
        "normalized": "Rational-\u003eRational-\u003eSubBox-\u003eMaybe SubBox-\u003ea b-\u003eLayoutN a a b-\u003eLayoutN a(LayoutN a a)b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eRational-\u003eSubBox-\u003eMaybe SubBox-\u003el a-\u003eLayoutN l l a-\u003eLayoutN l(LayoutN l l)a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutBuilder.html#v:relBox",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a box with only relative measurements.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutBuilder",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Rational-\u003e Rational-\u003e Rational-\u003e SubBox",
        "fct-type": "function",
        "title": "relBox"
      },
      "index": {
        "description": "Create box with only relative measurements",
        "hierarchy": "XMonad Layout LayoutBuilder",
        "module": "XMonad.Layout.LayoutBuilder",
        "name": "relBox",
        "normalized": "Rational-\u003eRational-\u003eRational-\u003eRational-\u003eSubBox",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Box",
        "signature": "Rational-\u003eRational-\u003eRational-\u003eRational-\u003eSubBox"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe \u003ca\u003eXMonad.Layout.LayoutCombinators\u003c/a\u003e module provides combinators\n for easily combining multiple layouts into one composite layout, as\n well as a way to jump directly to any particular layout (say, with\n a keybinding) without having to cycle through other layouts to get\n to it.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html",
        "fct-type": "module",
        "title": "LayoutCombinators"
      },
      "index": {
        "description": "The XMonad.Layout.LayoutCombinators module provides combinators for easily combining multiple layouts into one composite layout as well as way to jump directly to any particular layout say with keybinding without having to cycle through other layouts to get to it",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "LayoutCombinators",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Combinators",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#t:JumpToLayout",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#JumpToLayout",
        "fct-type": "data",
        "title": "JumpToLayout"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "JumpToLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Jump To Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-124--124--124-",
      "description": {
        "fct-descr": "\u003cp\u003eA reimplementation of the combinator of the same name from the\n   xmonad core, providing layout choice, and the ability to support\n   \u003ccode\u003e\u003ca\u003eJumpToLayout\u003c/a\u003e\u003c/code\u003e messages.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e NewSelect l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%7C%7C%7C",
        "fct-type": "function",
        "title": "(|||)"
      },
      "index": {
        "description": "reimplementation of the combinator of the same name from the xmonad core providing layout choice and the ability to support JumpToLayout messages",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(|||) |||",
        "normalized": "a b-\u003ea b-\u003eNewSelect a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eNewSelect l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%7C%2A",
        "fct-type": "function",
        "title": "(*||*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*||*) *||*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--124--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%7C%2A%2A",
        "fct-type": "function",
        "title": "(*||**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*||**) *||**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--124--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%7C%2A%2A%2A",
        "fct-type": "function",
        "title": "(*||***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*||***) *||***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--124--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%7C%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(*||****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*||****) *||****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%2A",
        "fct-type": "function",
        "title": "(*|*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*|*) *|*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%2A%2A",
        "fct-type": "function",
        "title": "(*|**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*|**) *|**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%2A%2A%2A",
        "fct-type": "function",
        "title": "(*|***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*|***) *|***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--124--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%7C%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(*|****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*|****) *|****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--124--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%7C%7C%2A",
        "fct-type": "function",
        "title": "(**||*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**||*) **||*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--124--124--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%7C%7C%2A%2A%2A",
        "fct-type": "function",
        "title": "(**||***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**||***) **||***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%7C%2A",
        "fct-type": "function",
        "title": "(**|*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**|*) **|*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--124--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%7C%2A%2A%2A",
        "fct-type": "function",
        "title": "(**|***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**|***) **|***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--124--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%7C%7C%2A",
        "fct-type": "function",
        "title": "(***||*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***||*) ***||*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--124--124--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%7C%7C%2A%2A",
        "fct-type": "function",
        "title": "(***||**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***||**) ***||**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--124--124--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%7C%7C%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(***||****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***||****) ***||****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%7C%2A",
        "fct-type": "function",
        "title": "(***|*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***|*) ***|*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--124--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%7C%2A%2A",
        "fct-type": "function",
        "title": "(***|**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***|**) ***|**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--124--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%7C%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(***|****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***|****) ***|****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--124--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%7C%7C%2A",
        "fct-type": "function",
        "title": "(****||*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****||*) ****||*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--124--124--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%7C%7C%2A%2A%2A",
        "fct-type": "function",
        "title": "(****||***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****||***) ****||***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--124--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%7C%2A",
        "fct-type": "function",
        "title": "(****|*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****|*) ****|*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--124--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%7C%2A%2A%2A",
        "fct-type": "function",
        "title": "(****|***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****|***) ****|***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%2F%2A",
        "fct-type": "function",
        "title": "(****/*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****/*) ****/*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--47--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%2F%2A%2A%2A",
        "fct-type": "function",
        "title": "(****/***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****/***) ****/***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--47--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%2F%2F%2A",
        "fct-type": "function",
        "title": "(****//*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****//*) ****//*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--42--47--47--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2A%2F%2F%2A%2A%2A",
        "fct-type": "function",
        "title": "(****//***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(****//***) ****//***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2F%2A",
        "fct-type": "function",
        "title": "(***/*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***/*) ***/*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--47--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2F%2A%2A",
        "fct-type": "function",
        "title": "(***/**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***/**) ***/**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--47--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2F%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(***/****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***/****) ***/****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--47--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2F%2F%2A",
        "fct-type": "function",
        "title": "(***//*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***//*) ***//*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--47--47--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2F%2F%2A%2A",
        "fct-type": "function",
        "title": "(***//**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***//**) ***//**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--42--47--47--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2A%2F%2F%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(***//****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(***//****) ***//****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2F%2A",
        "fct-type": "function",
        "title": "(**/*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**/*) **/*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--47--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2F%2A%2A%2A",
        "fct-type": "function",
        "title": "(**/***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**/***) **/***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--47--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2F%2F%2A",
        "fct-type": "function",
        "title": "(**//*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**//*) **//*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--42--47--47--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2A%2F%2F%2A%2A%2A",
        "fct-type": "function",
        "title": "(**//***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(**//***) **//***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2A",
        "fct-type": "function",
        "title": "(*/*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*/*) */*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2A%2A",
        "fct-type": "function",
        "title": "(*/**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*/**) */**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2A%2A%2A",
        "fct-type": "function",
        "title": "(*/***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*/***) */***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (Mirror Tall ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(*/****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*/****) */****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(Mirror Tall())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(Mirror Tall())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--47--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2F%2A",
        "fct-type": "function",
        "title": "(*//*)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*//*) *//*",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--47--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2F%2A%2A",
        "fct-type": "function",
        "title": "(*//**)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*//**) *//**",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--47--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2F%2A%2A%2A",
        "fct-type": "function",
        "title": "(*//***)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*//***) *//***",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:-42--47--47--42--42--42--42-",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l1 a -\u003e l2 a -\u003e CombineTwo (DragPane ()) l1 l2 a",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#%2A%2F%2F%2A%2A%2A%2A",
        "fct-type": "function",
        "title": "(*//****)"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "(*//****) *//****",
        "normalized": "a b-\u003ea b-\u003eCombineTwo(DragPane())a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003el a-\u003eCombineTwo(DragPane())l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:JumpToLayout",
      "description": {
        "fct-descr": "\u003cp\u003eA message to jump to a particular layout\n , specified by its description string..\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "JumpToLayout String",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#JumpToLayout",
        "fct-type": "function",
        "title": "JumpToLayout"
      },
      "index": {
        "description": "message to jump to particular layout specified by its description string",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "JumpToLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Jump To Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:NextLayoutNoWrap",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NextLayoutNoWrap",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#JumpToLayout",
        "fct-type": "function",
        "title": "NextLayoutNoWrap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "NextLayoutNoWrap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Layout No Wrap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutCombinators.html#v:Wrap",
      "description": {
        "fct-module": "XMonad.Layout.LayoutCombinators",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Wrap",
        "fct-source": "src/XMonad-Layout-LayoutCombinators.html#JumpToLayout",
        "fct-type": "function",
        "title": "Wrap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutCombinators",
        "module": "XMonad.Layout.LayoutCombinators",
        "name": "Wrap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Wrap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutHints.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMake layouts respect size hints.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.LayoutHints",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-LayoutHints.html",
        "fct-type": "module",
        "title": "LayoutHints"
      },
      "index": {
        "description": "Make layouts respect size hints",
        "hierarchy": "XMonad Layout LayoutHints",
        "module": "XMonad.Layout.LayoutHints",
        "name": "LayoutHints",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Hints",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutHints.html#t:LayoutHints",
      "description": {
        "fct-module": "XMonad.Layout.LayoutHints",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-LayoutHints.html#LayoutHints",
        "fct-type": "data",
        "title": "LayoutHints"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutHints",
        "module": "XMonad.Layout.LayoutHints",
        "name": "LayoutHints",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Hints",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutHints.html#v:layoutHints",
      "description": {
        "fct-module": "XMonad.Layout.LayoutHints",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout LayoutHints l a",
        "fct-source": "src/XMonad-Layout-LayoutHints.html#layoutHints",
        "fct-type": "function",
        "title": "layoutHints"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutHints",
        "module": "XMonad.Layout.LayoutHints",
        "name": "layoutHints",
        "normalized": "a b-\u003eModifiedLayout LayoutHints a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hints",
        "signature": "l a-\u003eModifiedLayout LayoutHints l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutHints.html#v:layoutHintsToCenter",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003elayoutHintsToCenter layout\u003c/code\u003e applies hints, sliding the window to the\n center of the screen and expanding its neighbors to fill the gaps. Windows\n are never expanded in a way that increases overlap.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003elayoutHintsToCenter\u003c/code\u003e only makes one pass at resizing the neighbors of\n hinted windows, so with some layouts (ex. the arrangement with two \u003ccode\u003eMirror\u003c/code\u003e\n \u003ccode\u003eTall\u003c/code\u003e stacked vertically), \u003ccode\u003elayoutHintsToCenter\u003c/code\u003e may leave some gaps.\n Simple layouts like \u003ccode\u003eTall\u003c/code\u003e are unaffected.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutHints",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout LayoutHintsToCenter l a",
        "fct-source": "src/XMonad-Layout-LayoutHints.html#layoutHintsToCenter",
        "fct-type": "function",
        "title": "layoutHintsToCenter"
      },
      "index": {
        "description": "layoutHintsToCenter layout applies hints sliding the window to the center of the screen and expanding its neighbors to fill the gaps Windows are never expanded in way that increases overlap layoutHintsToCenter only makes one pass at resizing the neighbors of hinted windows so with some layouts ex the arrangement with two Mirror Tall stacked vertically layoutHintsToCenter may leave some gaps Simple layouts like Tall are unaffected",
        "hierarchy": "XMonad Layout LayoutHints",
        "module": "XMonad.Layout.LayoutHints",
        "name": "layoutHintsToCenter",
        "normalized": "a b-\u003eModifiedLayout LayoutHintsToCenter a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hints To Center",
        "signature": "l a-\u003eModifiedLayout LayoutHintsToCenter l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutHints.html#v:layoutHintsWithPlacement",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003elayoutHintsWithPlacement (rx, ry) layout\u003c/code\u003e will adapt the sizes of a layout's\n windows according to their size hints, and position them inside their\n originally assigned area according to the \u003ccode\u003erx\u003c/code\u003e and \u003ccode\u003ery\u003c/code\u003e parameters.\n (0, 0) places the window at the top left, (1, 0) at the top right, (0.5, 0.5)\n at the center, etc.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutHints",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Double, Double) -\u003e l a -\u003e ModifiedLayout LayoutHints l a",
        "fct-source": "src/XMonad-Layout-LayoutHints.html#layoutHintsWithPlacement",
        "fct-type": "function",
        "title": "layoutHintsWithPlacement"
      },
      "index": {
        "description": "layoutHintsWithPlacement rx ry layout will adapt the sizes of layout windows according to their size hints and position them inside their originally assigned area according to the rx and ry parameters places the window at the top left at the top right at the center etc",
        "hierarchy": "XMonad Layout LayoutHints",
        "module": "XMonad.Layout.LayoutHints",
        "name": "layoutHintsWithPlacement",
        "normalized": "(Double,Double)-\u003ea b-\u003eModifiedLayout LayoutHints a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hints With Placement",
        "signature": "(Double,Double)-\u003el a-\u003eModifiedLayout LayoutHints l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for writing easy layout modifiers, which do not define a\n layout in and of themselves, but modify the behavior of or add new\n functionality to other layouts.  If you ever find yourself writing\n a layout which takes another layout as a parameter, chances are you\n should be writing a LayoutModifier instead!\n\u003c/p\u003e\u003cp\u003eIn case it is not clear, this module is not intended to help you\n configure xmonad, it is to help you write other extension modules.\n So get hacking!\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html",
        "fct-type": "module",
        "title": "LayoutModifier"
      },
      "index": {
        "description": "module for writing easy layout modifiers which do not define layout in and of themselves but modify the behavior of or add new functionality to other layouts If you ever find yourself writing layout which takes another layout as parameter chances are you should be writing LayoutModifier instead In case it is not clear this module is not intended to help you configure xmonad it is to help you write other extension modules So get hacking",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "LayoutModifier",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Modifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#t:LayoutModifier",
      "description": {
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#LayoutModifier",
        "fct-type": "class",
        "title": "LayoutModifier"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "LayoutModifier",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Modifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#t:ModifiedLayout",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eModifiedLayout\u003c/a\u003e\u003c/code\u003e is simply a container for a layout modifier\n   combined with an underlying layout.  It is, of course, itself a\n   layout (i.e. an instance of \u003ccode\u003e\u003ca\u003eLayoutClass\u003c/a\u003e\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#ModifiedLayout",
        "fct-type": "data",
        "title": "ModifiedLayout"
      },
      "index": {
        "description": "ModifiedLayout is simply container for layout modifier combined with an underlying layout It is of course itself layout i.e an instance of LayoutClass",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "ModifiedLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Modified Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:ModifiedLayout",
      "description": {
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (m a) (l a)",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#ModifiedLayout",
        "fct-type": "function",
        "title": "ModifiedLayout"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "ModifiedLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Modified Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:handleMess",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ehandleMess\u003c/a\u003e\u003c/code\u003e allows you to spy on messages to the underlying\n   layout, in order to have an effect in the X monad, or alter\n   the layout modifier state in some way (by returning \u003ccode\u003eJust\n   nm\u003c/code\u003e, where \u003ccode\u003enm\u003c/code\u003e is a new modifier).  In all cases, the\n   underlying layout will also receive the message as usual,\n   after the message has been processed by \u003ccode\u003e\u003ca\u003ehandleMess\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eIf you wish to possibly modify a message before it reaches\n   the underlying layout, you should use\n   \u003ccode\u003e\u003ca\u003ehandleMessOrMaybeModifyIt\u003c/a\u003e\u003c/code\u003e instead.  If you do not need to\n   modify messages or have access to the X monad, you should use\n   \u003ccode\u003e\u003ca\u003epureMess\u003c/a\u003e\u003c/code\u003e instead.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003ehandleMess\u003c/a\u003e\u003c/code\u003e calls \u003ccode\u003e\u003ca\u003eunhook\u003c/a\u003e\u003c/code\u003e\n   when receiving a \u003ccode\u003e\u003ca\u003eHide\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003eReleaseResources\u003c/a\u003e\u003c/code\u003e method (after\n   which it returns \u003ccode\u003eNothing\u003c/code\u003e), and otherwise passes the message\n   on to \u003ccode\u003e\u003ca\u003epureMess\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e SomeMessage -\u003e X (Maybe (m a))",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#handleMess",
        "fct-type": "method",
        "title": "handleMess"
      },
      "index": {
        "description": "handleMess allows you to spy on messages to the underlying layout in order to have an effect in the monad or alter the layout modifier state in some way by returning Just nm where nm is new modifier In all cases the underlying layout will also receive the message as usual after the message has been processed by handleMess If you wish to possibly modify message before it reaches the underlying layout you should use handleMessOrMaybeModifyIt instead If you do not need to modify messages or have access to the monad you should use pureMess instead The default implementation of handleMess calls unhook when receiving Hide or ReleaseResources method after which it returns Nothing and otherwise passes the message on to pureMess",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "handleMess",
        "normalized": "a b-\u003eSomeMessage-\u003eX(Maybe(a b))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mess",
        "signature": "m a-\u003eSomeMessage-\u003eX(Maybe(m a))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:handleMessOrMaybeModifyIt",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ehandleMessOrMaybeModifyIt\u003c/a\u003e\u003c/code\u003e allows you to intercept messages\n   sent to the underlying layout, in order to have an effect in\n   the X monad, alter the layout modifier state, or produce a\n   modified message to be passed on to the underlying layout.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003ehandleMessOrMaybeModifyIt\u003c/a\u003e\u003c/code\u003e\n   simply passes on the message to \u003ccode\u003e\u003ca\u003ehandleMess\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e SomeMessage -\u003e X (Maybe (Either (m a) SomeMessage))",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#handleMessOrMaybeModifyIt",
        "fct-type": "method",
        "title": "handleMessOrMaybeModifyIt"
      },
      "index": {
        "description": "handleMessOrMaybeModifyIt allows you to intercept messages sent to the underlying layout in order to have an effect in the monad alter the layout modifier state or produce modified message to be passed on to the underlying layout The default implementation of handleMessOrMaybeModifyIt simply passes on the message to handleMess",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "handleMessOrMaybeModifyIt",
        "normalized": "a b-\u003eSomeMessage-\u003eX(Maybe(Either(a b)SomeMessage))",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mess Or Maybe Modify It",
        "signature": "m a-\u003eSomeMessage-\u003eX(Maybe(Either(m a)SomeMessage))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:hook",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ehook\u003c/a\u003e\u003c/code\u003e is called by the default implementation of\n   \u003ccode\u003e\u003ca\u003eredoLayout\u003c/a\u003e\u003c/code\u003e, and as such represents an X action which is to\n   be run each time \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e is called on the underlying\n   layout, \u003cem\u003eafter\u003c/em\u003e \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e has completed.  Of course, if you\n   override \u003ccode\u003e\u003ca\u003eredoLayout\u003c/a\u003e\u003c/code\u003e, then \u003ccode\u003e\u003ca\u003ehook\u003c/a\u003e\u003c/code\u003e will not be called unless\n   you explicitly call it.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003ehook\u003c/a\u003e\u003c/code\u003e is \u003ccode\u003ereturn ()\u003c/code\u003e (i.e., it\n   has no effect).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e X ()",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#hook",
        "fct-type": "method",
        "title": "hook"
      },
      "index": {
        "description": "hook is called by the default implementation of redoLayout and as such represents an action which is to be run each time runLayout is called on the underlying layout after runLayout has completed Of course if you override redoLayout then hook will not be called unless you explicitly call it The default implementation of hook is return i.e it has no effect",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "hook",
        "normalized": "a b-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "m a-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:modifierDescription",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003emodifierDescription\u003c/a\u003e\u003c/code\u003e is used to give a String description to\n   this layout modifier.  It is the empty string by default; you\n   should only override this if it is important that the\n   presence of the layout modifier be displayed in text\n   representations of the layout (for example, in the status bar\n   of a \u003ca\u003eXMonad.Hooks.DynamicLog\u003c/a\u003e user).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e String",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#modifierDescription",
        "fct-type": "method",
        "title": "modifierDescription"
      },
      "index": {
        "description": "modifierDescription is used to give String description to this layout modifier It is the empty string by default you should only override this if it is important that the presence of the layout modifier be displayed in text representations of the layout for example in the status bar of XMonad.Hooks.DynamicLog user",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "modifierDescription",
        "normalized": "a b-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Description",
        "signature": "m a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:modifyDescription",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003emodifyDescription\u003c/a\u003e\u003c/code\u003e gives a String description for the entire\n   layout (modifier + underlying layout).  By default, it is\n   derived from the concatenation of the \u003ccode\u003e\u003ca\u003emodifierDescription\u003c/a\u003e\u003c/code\u003e\n   with the \u003ccode\u003e\u003ca\u003edescription\u003c/a\u003e\u003c/code\u003e of the underlying layout, with a\n   \"smart space\" in between (the space is not included if the\n   \u003ccode\u003e\u003ca\u003emodifierDescription\u003c/a\u003e\u003c/code\u003e is empty).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e l a -\u003e String",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#modifyDescription",
        "fct-type": "method",
        "title": "modifyDescription"
      },
      "index": {
        "description": "modifyDescription gives String description for the entire layout modifier underlying layout By default it is derived from the concatenation of the modifierDescription with the description of the underlying layout with smart space in between the space is not included if the modifierDescription is empty",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "modifyDescription",
        "normalized": "a b-\u003ec b-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Description",
        "signature": "m a-\u003el a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:modifyLayout",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003emodifyLayout\u003c/a\u003e\u003c/code\u003e allows you to intercept a call to \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e\n   \u003cem\u003ebefore\u003c/em\u003e it is called on the underlying layout, in order to\n   perform some effect in the X monad, and/or modify some of\n   the parameters before passing them on to the \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e\n   method of the underlying layout.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003emodifyLayout\u003c/a\u003e\u003c/code\u003e simply calls\n   \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e on the underlying layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "modifyLayout",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#modifyLayout",
        "fct-type": "method",
        "title": "modifyLayout"
      },
      "index": {
        "description": "modifyLayout allows you to intercept call to runLayout before it is called on the underlying layout in order to perform some effect in the monad and or modify some of the parameters before passing them on to the runLayout method of the underlying layout The default implementation of modifyLayout simply calls runLayout on the underlying layout",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "modifyLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:pureMess",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003epureMess\u003c/a\u003e\u003c/code\u003e allows you to spy on messages sent to the\n   underlying layout, in order to possibly change the layout\n   modifier state.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003epureMess\u003c/a\u003e\u003c/code\u003e ignores messages\n   sent to it, and returns \u003ccode\u003eNothing\u003c/code\u003e (causing the layout\n   modifier to remain unchanged).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e SomeMessage -\u003e Maybe (m a)",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#pureMess",
        "fct-type": "method",
        "title": "pureMess"
      },
      "index": {
        "description": "pureMess allows you to spy on messages sent to the underlying layout in order to possibly change the layout modifier state The default implementation of pureMess ignores messages sent to it and returns Nothing causing the layout modifier to remain unchanged",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "pureMess",
        "normalized": "a b-\u003eSomeMessage-\u003eMaybe(a b)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mess",
        "signature": "m a-\u003eSomeMessage-\u003eMaybe(m a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:pureModifier",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003epureModifier\u003c/a\u003e\u003c/code\u003e allows you to intercept a call to \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e\n   \u003cem\u003eafter\u003c/em\u003e it is called on the underlying layout, in order to\n   modify the list of window/rectangle pairings it has returned,\n   and/or return a new layout modifier.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003epureModifier\u003c/a\u003e\u003c/code\u003e returns the\n   window rectangles unmodified.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "pureModifier",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#pureModifier",
        "fct-type": "method",
        "title": "pureModifier"
      },
      "index": {
        "description": "pureModifier allows you to intercept call to runLayout after it is called on the underlying layout in order to modify the list of window rectangle pairings it has returned and or return new layout modifier The default implementation of pureModifier returns the window rectangles unmodified",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "pureModifier",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Modifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:redoLayout",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eredoLayout\u003c/a\u003e\u003c/code\u003e allows you to intercept a call to \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e on\n   workspaces with at least one window, \u003cem\u003eafter\u003c/em\u003e it is called on\n   the underlying layout, in order to perform some effect in the\n   X monad, possibly return a new layout modifier, and/or\n   modify the results of \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e before returning them.\n\u003c/p\u003e\u003cp\u003eIf you don't need access to the X monad, use \u003ccode\u003e\u003ca\u003epureModifier\u003c/a\u003e\u003c/code\u003e\n   instead.  Also, if the behavior you need can be cleanly\n   separated into an effect in the X monad, followed by a pure\n   transformation of the results of \u003ccode\u003e\u003ca\u003erunLayout\u003c/a\u003e\u003c/code\u003e, you should\n   consider implementing \u003ccode\u003e\u003ca\u003ehook\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003epureModifier\u003c/a\u003e\u003c/code\u003e instead of\n   \u003ccode\u003e\u003ca\u003eredoLayout\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eOn empty workspaces, the Stack is Nothing.\n\u003c/p\u003e\u003cp\u003eThe default implementation of \u003ccode\u003e\u003ca\u003eredoLayout\u003c/a\u003e\u003c/code\u003e calls \u003ccode\u003e\u003ca\u003ehook\u003c/a\u003e\u003c/code\u003e and\n   then \u003ccode\u003e\u003ca\u003epureModifier\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "redoLayout",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#redoLayout",
        "fct-type": "method",
        "title": "redoLayout"
      },
      "index": {
        "description": "redoLayout allows you to intercept call to runLayout on workspaces with at least one window after it is called on the underlying layout in order to perform some effect in the monad possibly return new layout modifier and or modify the results of runLayout before returning them If you don need access to the monad use pureModifier instead Also if the behavior you need can be cleanly separated into an effect in the monad followed by pure transformation of the results of runLayout you should consider implementing hook and pureModifier instead of redoLayout On empty workspaces the Stack is Nothing The default implementation of redoLayout calls hook and then pureModifier",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "redoLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutModifier.html#v:unhook",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eunhook\u003c/a\u003e\u003c/code\u003e is called by the default implementation of\n   \u003ccode\u003e\u003ca\u003ehandleMess\u003c/a\u003e\u003c/code\u003e upon receiving a \u003ccode\u003e\u003ca\u003eHide\u003c/a\u003e\u003c/code\u003e or a \u003ccode\u003e\u003ca\u003eReleaseResources\u003c/a\u003e\u003c/code\u003e\n   message.\n\u003c/p\u003e\u003cp\u003eThe default implementation, of course, does nothing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutModifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m a -\u003e X ()",
        "fct-source": "src/XMonad-Layout-LayoutModifier.html#unhook",
        "fct-type": "method",
        "title": "unhook"
      },
      "index": {
        "description": "unhook is called by the default implementation of handleMess upon receiving Hide or ReleaseResources message The default implementation of course does nothing",
        "hierarchy": "XMonad Layout LayoutModifier",
        "module": "XMonad.Layout.LayoutModifier",
        "name": "unhook",
        "normalized": "a b-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "m a-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutScreens.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDivide a single screen into multiple screens.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.LayoutScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-LayoutScreens.html",
        "fct-type": "module",
        "title": "LayoutScreens"
      },
      "index": {
        "description": "Divide single screen into multiple screens",
        "hierarchy": "XMonad Layout LayoutScreens",
        "module": "XMonad.Layout.LayoutScreens",
        "name": "LayoutScreens",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout Screens",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutScreens.html#v:fixedLayout",
      "description": {
        "fct-module": "XMonad.Layout.LayoutScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Rectangle] -\u003e FixedLayout a",
        "fct-source": "src/XMonad-Layout-LayoutScreens.html#fixedLayout",
        "fct-type": "function",
        "title": "fixedLayout"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LayoutScreens",
        "module": "XMonad.Layout.LayoutScreens",
        "name": "fixedLayout",
        "normalized": "[Rectangle]-\u003eFixedLayout a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": "[Rectangle]-\u003eFixedLayout a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutScreens.html#v:layoutScreens",
      "description": {
        "fct-descr": "\u003cp\u003eModify all screens.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l Int -\u003e X ()",
        "fct-source": "src/XMonad-Layout-LayoutScreens.html#layoutScreens",
        "fct-type": "function",
        "title": "layoutScreens"
      },
      "index": {
        "description": "Modify all screens",
        "hierarchy": "XMonad Layout LayoutScreens",
        "module": "XMonad.Layout.LayoutScreens",
        "name": "layoutScreens",
        "normalized": "Int-\u003ea Int-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screens",
        "signature": "Int-\u003el Int-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LayoutScreens.html#v:layoutSplitScreen",
      "description": {
        "fct-descr": "\u003cp\u003eModify current screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LayoutScreens",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l Int -\u003e X ()",
        "fct-source": "src/XMonad-Layout-LayoutScreens.html#layoutSplitScreen",
        "fct-type": "function",
        "title": "layoutSplitScreen"
      },
      "index": {
        "description": "Modify current screen",
        "hierarchy": "XMonad Layout LayoutScreens",
        "module": "XMonad.Layout.LayoutScreens",
        "name": "layoutSplitScreen",
        "normalized": "Int-\u003ea Int-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Split Screen",
        "signature": "Int-\u003el Int-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier that limits the number of windows that can be shown.\n See \u003ca\u003eXMonad.Layout.Minimize\u003c/a\u003e for manually setting hidden windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-LimitWindows.html",
        "fct-type": "module",
        "title": "LimitWindows"
      },
      "index": {
        "description": "layout modifier that limits the number of windows that can be shown See XMonad.Layout.Minimize for manually setting hidden windows",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "LimitWindows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Limit Windows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#v:decreaseLimit",
      "description": {
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-LimitWindows.html#decreaseLimit",
        "fct-type": "function",
        "title": "decreaseLimit"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "decreaseLimit",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Limit",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#v:increaseLimit",
      "description": {
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Layout-LimitWindows.html#increaseLimit",
        "fct-type": "function",
        "title": "increaseLimit"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "increaseLimit",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Limit",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#v:limitSelect",
      "description": {
        "fct-descr": "\u003cp\u003eOnly display the first \u003ccode\u003em\u003c/code\u003e windows and \u003ccode\u003er\u003c/code\u003e others.\n The \u003ccode\u003eIncMasterN\u003c/code\u003e message will change \u003ccode\u003em\u003c/code\u003e, as well as passing it onto the\n underlying layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Int -\u003e l a -\u003e ModifiedLayout Selection l a",
        "fct-source": "src/XMonad-Layout-LimitWindows.html#limitSelect",
        "fct-type": "function",
        "title": "limitSelect"
      },
      "index": {
        "description": "Only display the first windows and others The IncMasterN message will change as well as passing it onto the underlying layout",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "limitSelect",
        "normalized": "Int-\u003eInt-\u003ea b-\u003eModifiedLayout Selection a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Select",
        "signature": "Int-\u003eInt-\u003el a-\u003eModifiedLayout Selection l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#v:limitSlice",
      "description": {
        "fct-descr": "\u003cp\u003eOnly display \u003ccode\u003en\u003c/code\u003e windows around the focused window. This makes sense with\n layouts that arrange windows linearily, like \u003ccode\u003eXMonad.Layout.Layout.Accordion\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout LimitWindows l a",
        "fct-source": "src/XMonad-Layout-LimitWindows.html#limitSlice",
        "fct-type": "function",
        "title": "limitSlice"
      },
      "index": {
        "description": "Only display windows around the focused window This makes sense with layouts that arrange windows linearily like XMonad.Layout.Layout.Accordion",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "limitSlice",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout LimitWindows a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Slice",
        "signature": "Int-\u003el a-\u003eModifiedLayout LimitWindows l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#v:limitWindows",
      "description": {
        "fct-descr": "\u003cp\u003eOnly display the first \u003ccode\u003en\u003c/code\u003e windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout LimitWindows l a",
        "fct-source": "src/XMonad-Layout-LimitWindows.html#limitWindows",
        "fct-type": "function",
        "title": "limitWindows"
      },
      "index": {
        "description": "Only display the first windows",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "limitWindows",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout LimitWindows a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Windows",
        "signature": "Int-\u003el a-\u003eModifiedLayout LimitWindows l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-LimitWindows.html#v:setLimit",
      "description": {
        "fct-module": "XMonad.Layout.LimitWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e X ()",
        "fct-source": "src/XMonad-Layout-LimitWindows.html#setLimit",
        "fct-type": "function",
        "title": "setLimit"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout LimitWindows",
        "module": "XMonad.Layout.LimitWindows",
        "name": "setLimit",
        "normalized": "Int-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Limit",
        "signature": "Int-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MagicFocus.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAutomagically put the focused window in the master area.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MagicFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MagicFocus.html",
        "fct-type": "module",
        "title": "MagicFocus"
      },
      "index": {
        "description": "Automagically put the focused window in the master area",
        "hierarchy": "XMonad Layout MagicFocus",
        "module": "XMonad.Layout.MagicFocus",
        "name": "MagicFocus",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magic Focus",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MagicFocus.html#v:disableFollowOnWS",
      "description": {
        "fct-descr": "\u003cp\u003eDisables focusFollow on the given workspaces:\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MagicFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[WorkspaceId] -\u003e X Bool",
        "fct-source": "src/XMonad-Layout-MagicFocus.html#disableFollowOnWS",
        "fct-type": "function",
        "title": "disableFollowOnWS"
      },
      "index": {
        "description": "Disables focusFollow on the given workspaces",
        "hierarchy": "XMonad Layout MagicFocus",
        "module": "XMonad.Layout.MagicFocus",
        "name": "disableFollowOnWS",
        "normalized": "[WorkspaceId]-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Follow On WS",
        "signature": "[WorkspaceId]-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MagicFocus.html#v:followOnlyIf",
      "description": {
        "fct-descr": "\u003cp\u003eAnother event hook to override the focusFollowsMouse and make the pointer\n only follow if a given condition is satisfied. This could be used to disable\n focusFollowsMouse only for given workspaces or layouts.\n Beware that your focusFollowsMouse setting is ignored if you use this event hook.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MagicFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X Bool -\u003e Event -\u003e X All",
        "fct-source": "src/XMonad-Layout-MagicFocus.html#followOnlyIf",
        "fct-type": "function",
        "title": "followOnlyIf"
      },
      "index": {
        "description": "Another event hook to override the focusFollowsMouse and make the pointer only follow if given condition is satisfied This could be used to disable focusFollowsMouse only for given workspaces or layouts Beware that your focusFollowsMouse setting is ignored if you use this event hook",
        "hierarchy": "XMonad Layout MagicFocus",
        "module": "XMonad.Layout.MagicFocus",
        "name": "followOnlyIf",
        "normalized": "X Bool-\u003eEvent-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Only If",
        "signature": "X Bool-\u003eEvent-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MagicFocus.html#v:magicFocus",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a new layout which automagically puts the focused window\n   in the master area.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MagicFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout MagicFocus l a",
        "fct-source": "src/XMonad-Layout-MagicFocus.html#magicFocus",
        "fct-type": "function",
        "title": "magicFocus"
      },
      "index": {
        "description": "Create new layout which automagically puts the focused window in the master area",
        "hierarchy": "XMonad Layout MagicFocus",
        "module": "XMonad.Layout.MagicFocus",
        "name": "magicFocus",
        "normalized": "a b-\u003eModifiedLayout MagicFocus a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focus",
        "signature": "l a-\u003eModifiedLayout MagicFocus l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MagicFocus.html#v:promoteWarp",
      "description": {
        "fct-descr": "\u003cp\u003eAn eventHook that overrides the normal focusFollowsMouse. When the mouse\n it moved to another window, that window is replaced as the master, and the\n mouse is warped to inside the new master.\n\u003c/p\u003e\u003cp\u003eIt prevents infinite loops when focusFollowsMouse is true (the default), and\n MagicFocus is in use when changing focus with the mouse.\n\u003c/p\u003e\u003cp\u003eThis eventHook does nothing when there are floating windows on the current\n workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MagicFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Event -\u003e X All",
        "fct-source": "src/XMonad-Layout-MagicFocus.html#promoteWarp",
        "fct-type": "function",
        "title": "promoteWarp"
      },
      "index": {
        "description": "An eventHook that overrides the normal focusFollowsMouse When the mouse it moved to another window that window is replaced as the master and the mouse is warped to inside the new master It prevents infinite loops when focusFollowsMouse is true the default and MagicFocus is in use when changing focus with the mouse This eventHook does nothing when there are floating windows on the current workspace",
        "hierarchy": "XMonad Layout MagicFocus",
        "module": "XMonad.Layout.MagicFocus",
        "name": "promoteWarp",
        "normalized": "Event-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Warp",
        "signature": "Event-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MagicFocus.html#v:promoteWarp-39-",
      "description": {
        "fct-descr": "\u003cp\u003epromoteWarp' allows you to specify an arbitrary PointerPosition to apply\n when the mouse enters another window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MagicFocus",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PointerPosition -\u003e Event -\u003e X All",
        "fct-source": "src/XMonad-Layout-MagicFocus.html#promoteWarp%27",
        "fct-type": "function",
        "title": "promoteWarp'"
      },
      "index": {
        "description": "promoteWarp allows you to specify an arbitrary PointerPosition to apply when the mouse enters another window",
        "hierarchy": "XMonad Layout MagicFocus",
        "module": "XMonad.Layout.MagicFocus",
        "name": "promoteWarp'",
        "normalized": "PointerPosition-\u003eEvent-\u003eX All",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Warp'",
        "signature": "PointerPosition-\u003eEvent-\u003eX All"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eScreenshot  :  \u003ca\u003ehttp://caladan.rave.org/magnifier.png\u003c/a\u003e\n\u003c/p\u003e\u003cp\u003eThis is a layout modifier that will make a layout increase the size\n of the window that has focus.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Magnifier.html",
        "fct-type": "module",
        "title": "Magnifier"
      },
      "index": {
        "description": "Screenshot http caladan.rave.org magnifier.png This is layout modifier that will make layout increase the size of the window that has focus",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "Magnifier",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magnifier",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#t:MagnifyMsg",
      "description": {
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Magnifier.html#MagnifyMsg",
        "fct-type": "data",
        "title": "MagnifyMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "MagnifyMsg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magnify Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:MagnifyLess",
      "description": {
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MagnifyLess",
        "fct-source": "src/XMonad-Layout-Magnifier.html#MagnifyMsg",
        "fct-type": "function",
        "title": "MagnifyLess"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "MagnifyLess",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magnify Less",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:MagnifyMore",
      "description": {
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MagnifyMore",
        "fct-source": "src/XMonad-Layout-Magnifier.html#MagnifyMsg",
        "fct-type": "function",
        "title": "MagnifyMore"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "MagnifyMore",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Magnify More",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:Toggle",
      "description": {
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Toggle",
        "fct-source": "src/XMonad-Layout-Magnifier.html#MagnifyMsg",
        "fct-type": "function",
        "title": "Toggle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "Toggle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:ToggleOff",
      "description": {
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleOff",
        "fct-source": "src/XMonad-Layout-Magnifier.html#MagnifyMsg",
        "fct-type": "function",
        "title": "ToggleOff"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "ToggleOff",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Off",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:ToggleOn",
      "description": {
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleOn",
        "fct-source": "src/XMonad-Layout-Magnifier.html#MagnifyMsg",
        "fct-type": "function",
        "title": "ToggleOn"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "ToggleOn",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle On",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:magnifier",
      "description": {
        "fct-descr": "\u003cp\u003eIncrease the size of the window that has focus\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout Magnifier l a",
        "fct-source": "src/XMonad-Layout-Magnifier.html#magnifier",
        "fct-type": "function",
        "title": "magnifier"
      },
      "index": {
        "description": "Increase the size of the window that has focus",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "magnifier",
        "normalized": "a b-\u003eModifiedLayout Magnifier a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003eModifiedLayout Magnifier l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:magnifier-39-",
      "description": {
        "fct-descr": "\u003cp\u003eIncrease the size of the window that has focus, unless if it is the\n master window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout Magnifier l a",
        "fct-source": "src/XMonad-Layout-Magnifier.html#magnifier%27",
        "fct-type": "function",
        "title": "magnifier'"
      },
      "index": {
        "description": "Increase the size of the window that has focus unless if it is the master window",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "magnifier'",
        "normalized": "a b-\u003eModifiedLayout Magnifier a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l a-\u003eModifiedLayout Magnifier l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:magnifierOff",
      "description": {
        "fct-descr": "\u003cp\u003eMagnifier that defaults to Off\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout Magnifier l a",
        "fct-source": "src/XMonad-Layout-Magnifier.html#magnifierOff",
        "fct-type": "function",
        "title": "magnifierOff"
      },
      "index": {
        "description": "Magnifier that defaults to Off",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "magnifierOff",
        "normalized": "a b-\u003eModifiedLayout Magnifier a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Off",
        "signature": "l a-\u003eModifiedLayout Magnifier l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:magnifiercz",
      "description": {
        "fct-descr": "\u003cp\u003eChange the size of the window that has focus by a custom zoom\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e l a -\u003e ModifiedLayout Magnifier l a",
        "fct-source": "src/XMonad-Layout-Magnifier.html#magnifiercz",
        "fct-type": "function",
        "title": "magnifiercz"
      },
      "index": {
        "description": "Change the size of the window that has focus by custom zoom",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "magnifiercz",
        "normalized": "Rational-\u003ea b-\u003eModifiedLayout Magnifier a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003el a-\u003eModifiedLayout Magnifier l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:magnifiercz-39-",
      "description": {
        "fct-descr": "\u003cp\u003eIncrease the size of the window that has focus by a custom zoom,\n unless if it is the master window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e l a -\u003e ModifiedLayout Magnifier l a",
        "fct-source": "src/XMonad-Layout-Magnifier.html#magnifiercz%27",
        "fct-type": "function",
        "title": "magnifiercz'"
      },
      "index": {
        "description": "Increase the size of the window that has focus by custom zoom unless if it is the master window",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "magnifiercz'",
        "normalized": "Rational-\u003ea b-\u003eModifiedLayout Magnifier a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003el a-\u003eModifiedLayout Magnifier l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Magnifier.html#v:maximizeVertical",
      "description": {
        "fct-descr": "\u003cp\u003eA magnifier that greatly magnifies just the vertical direction\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Magnifier",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout Magnifier l a",
        "fct-source": "src/XMonad-Layout-Magnifier.html#maximizeVertical",
        "fct-type": "function",
        "title": "maximizeVertical"
      },
      "index": {
        "description": "magnifier that greatly magnifies just the vertical direction",
        "hierarchy": "XMonad Layout Magnifier",
        "module": "XMonad.Layout.Magnifier",
        "name": "maximizeVertical",
        "normalized": "a b-\u003eModifiedLayout Magnifier a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Vertical",
        "signature": "l a-\u003eModifiedLayout Magnifier l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Master.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLayout modfier that adds a master window to another layout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Master",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Master.html",
        "fct-type": "module",
        "title": "Master"
      },
      "index": {
        "description": "Layout modfier that adds master window to another layout",
        "hierarchy": "XMonad Layout Master",
        "module": "XMonad.Layout.Master",
        "name": "Master",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Master.html#v:mastered",
      "description": {
        "fct-descr": "\u003cp\u003eModifier which converts given layout to a mastered one\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Master",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational-\u003e Rational-\u003e l a-\u003e ModifiedLayout AddMaster l a",
        "fct-type": "function",
        "title": "mastered"
      },
      "index": {
        "description": "Modifier which converts given layout to mastered one",
        "hierarchy": "XMonad Layout Master",
        "module": "XMonad.Layout.Master",
        "name": "mastered",
        "normalized": "Rational-\u003eRational-\u003ea b-\u003eModifiedLayout AddMaster a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eRational-\u003el a-\u003eModifiedLayout AddMaster l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Maximize.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eTemporarily yanks the focused window out of the layout to mostly fill\n the screen.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Maximize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Maximize.html",
        "fct-type": "module",
        "title": "Maximize"
      },
      "index": {
        "description": "Temporarily yanks the focused window out of the layout to mostly fill the screen",
        "hierarchy": "XMonad Layout Maximize",
        "module": "XMonad.Layout.Maximize",
        "name": "Maximize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Maximize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Maximize.html#v:maximize",
      "description": {
        "fct-module": "XMonad.Layout.Maximize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l Window -\u003e ModifiedLayout Maximize l Window",
        "fct-source": "src/XMonad-Layout-Maximize.html#maximize",
        "fct-type": "function",
        "title": "maximize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Maximize",
        "module": "XMonad.Layout.Maximize",
        "name": "maximize",
        "normalized": "a Window-\u003eModifiedLayout Maximize a Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l Window-\u003eModifiedLayout Maximize l Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Maximize.html#v:maximizeRestore",
      "description": {
        "fct-module": "XMonad.Layout.Maximize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e MaximizeRestore",
        "fct-source": "src/XMonad-Layout-Maximize.html#maximizeRestore",
        "fct-type": "function",
        "title": "maximizeRestore"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Maximize",
        "module": "XMonad.Layout.Maximize",
        "name": "maximizeRestore",
        "normalized": "Window-\u003eMaximizeRestore",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Restore",
        "signature": "Window-\u003eMaximizeRestore"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides message \"escaping\" and filtering facilities which\n help control complex nested layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MessageControl.html",
        "fct-type": "module",
        "title": "MessageControl"
      },
      "index": {
        "description": "Provides message escaping and filtering facilities which help control complex nested layouts",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "MessageControl",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Message Control",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#t:EscapedMessage",
      "description": {
        "fct-descr": "\u003cp\u003eData type for an escaped message. Send with \u003ccode\u003e\u003ca\u003eescape\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "newtype",
        "fct-source": "src/XMonad-Layout-MessageControl.html#EscapedMessage",
        "fct-type": "newtype",
        "title": "EscapedMessage"
      },
      "index": {
        "description": "Data type for an escaped message Send with escape",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "EscapedMessage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Escaped Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#t:Ignore",
      "description": {
        "fct-descr": "\u003cp\u003ethe Ignore layout modifier. Prevents its inner layout from receiving\n messages of a certain type.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MessageControl.html#Ignore",
        "fct-type": "data",
        "title": "Ignore"
      },
      "index": {
        "description": "the Ignore layout modifier Prevents its inner layout from receiving messages of certain type",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "Ignore",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ignore",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#t:UnEscape",
      "description": {
        "fct-descr": "\u003cp\u003ethe UnEscape layout modifier. Listens to \u003ccode\u003e\u003ca\u003eEscapedMessage\u003c/a\u003e\u003c/code\u003es and sends\n their nested message to the inner layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MessageControl.html#UnEscape",
        "fct-type": "data",
        "title": "UnEscape"
      },
      "index": {
        "description": "the UnEscape layout modifier Listens to EscapedMessage and sends their nested message to the inner layout",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "UnEscape",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Un Escape",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#v:Escape",
      "description": {
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Escape SomeMessage",
        "fct-source": "src/XMonad-Layout-MessageControl.html#EscapedMessage",
        "fct-type": "function",
        "title": "Escape"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "Escape",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Escape",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#v:escape",
      "description": {
        "fct-descr": "\u003cp\u003eCreates an \u003ccode\u003e\u003ca\u003eEscapedMessage\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m -\u003e EscapedMessage",
        "fct-source": "src/XMonad-Layout-MessageControl.html#escape",
        "fct-type": "function",
        "title": "escape"
      },
      "index": {
        "description": "Creates an EscapedMessage",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "escape",
        "normalized": "a-\u003eEscapedMessage",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "m-\u003eEscapedMessage"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#v:ignore",
      "description": {
        "fct-descr": "\u003cp\u003eApplies the Ignore layout modifier to a layout, blocking\n all messages of the same type as the one passed as its first argument.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m -\u003e l w -\u003e Ignore m l w",
        "fct-source": "src/XMonad-Layout-MessageControl.html#ignore",
        "fct-type": "function",
        "title": "ignore"
      },
      "index": {
        "description": "Applies the Ignore layout modifier to layout blocking all messages of the same type as the one passed as its first argument",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "ignore",
        "normalized": "a-\u003eb c-\u003eIgnore a b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "m-\u003el w-\u003eIgnore m l w"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MessageControl.html#v:unEscape",
      "description": {
        "fct-descr": "\u003cp\u003eApplies the UnEscape layout modifier to a layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MessageControl",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l w -\u003e ModifiedLayout UnEscape l w",
        "fct-source": "src/XMonad-Layout-MessageControl.html#unEscape",
        "fct-type": "function",
        "title": "unEscape"
      },
      "index": {
        "description": "Applies the UnEscape layout modifier to layout",
        "hierarchy": "XMonad Layout MessageControl",
        "module": "XMonad.Layout.MessageControl",
        "name": "unEscape",
        "normalized": "a b-\u003eModifiedLayout UnEscape a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Escape",
        "signature": "l w-\u003eModifiedLayout UnEscape l w"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Minimize.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMakes it possible to minimize windows, temporarily removing them\n from the layout until they are restored.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Minimize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Minimize.html",
        "fct-type": "module",
        "title": "Minimize"
      },
      "index": {
        "description": "Makes it possible to minimize windows temporarily removing them from the layout until they are restored",
        "hierarchy": "XMonad Layout Minimize",
        "module": "XMonad.Layout.Minimize",
        "name": "Minimize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Minimize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Minimize.html#t:MinimizeMsg",
      "description": {
        "fct-module": "XMonad.Layout.Minimize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Minimize.html#MinimizeMsg",
        "fct-type": "data",
        "title": "MinimizeMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Minimize",
        "module": "XMonad.Layout.Minimize",
        "name": "MinimizeMsg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Minimize Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Minimize.html#v:MinimizeWin",
      "description": {
        "fct-module": "XMonad.Layout.Minimize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MinimizeWin Window",
        "fct-source": "src/XMonad-Layout-Minimize.html#MinimizeMsg",
        "fct-type": "function",
        "title": "MinimizeWin"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Minimize",
        "module": "XMonad.Layout.Minimize",
        "name": "MinimizeWin",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Minimize Win",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Minimize.html#v:RestoreMinimizedWin",
      "description": {
        "fct-module": "XMonad.Layout.Minimize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RestoreMinimizedWin Window",
        "fct-source": "src/XMonad-Layout-Minimize.html#MinimizeMsg",
        "fct-type": "function",
        "title": "RestoreMinimizedWin"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Minimize",
        "module": "XMonad.Layout.Minimize",
        "name": "RestoreMinimizedWin",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Restore Minimized Win",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Minimize.html#v:RestoreNextMinimizedWin",
      "description": {
        "fct-module": "XMonad.Layout.Minimize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RestoreNextMinimizedWin",
        "fct-source": "src/XMonad-Layout-Minimize.html#MinimizeMsg",
        "fct-type": "function",
        "title": "RestoreNextMinimizedWin"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Minimize",
        "module": "XMonad.Layout.Minimize",
        "name": "RestoreNextMinimizedWin",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Restore Next Minimized Win",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Minimize.html#v:minimize",
      "description": {
        "fct-module": "XMonad.Layout.Minimize",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l Window -\u003e ModifiedLayout Minimize l Window",
        "fct-source": "src/XMonad-Layout-Minimize.html#minimize",
        "fct-type": "function",
        "title": "minimize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Minimize",
        "module": "XMonad.Layout.Minimize",
        "name": "minimize",
        "normalized": "a Window-\u003eModifiedLayout Minimize a Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l Window-\u003eModifiedLayout Minimize l Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLayout modfier for displaying some window (monitor) above other windows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Monitor.html",
        "fct-type": "module",
        "title": "Monitor"
      },
      "index": {
        "description": "Layout modfier for displaying some window monitor above other windows",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Monitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Monitor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#t:Monitor",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "data",
        "title": "Monitor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Monitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Monitor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#t:MonitorMessage",
      "description": {
        "fct-descr": "\u003cp\u003eMessages without names affect all monitors. Messages with names affect only\n monitors whose names match.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "data",
        "title": "MonitorMessage"
      },
      "index": {
        "description": "Messages without names affect all monitors Messages with names affect only monitors whose names match",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "MonitorMessage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Monitor Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#t:Property",
      "description": {
        "fct-descr": "\u003cp\u003eMost of the property constructors are quite self-explaining.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "data",
        "title": "Property"
      },
      "index": {
        "description": "Most of the property constructors are quite self-explaining",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Property",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:And",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "And Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "And"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "And",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:ClassName",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ClassName String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "ClassName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "ClassName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Class Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Const",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Const Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Const"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Const",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Const",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:HideMonitor",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HideMonitor",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "function",
        "title": "HideMonitor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "HideMonitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hide Monitor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:HideMonitorNamed",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HideMonitorNamed String",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "function",
        "title": "HideMonitorNamed"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "HideMonitorNamed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hide Monitor Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Machine",
      "description": {
        "fct-descr": "\u003cp\u003eWM_CLIENT_MACHINE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Machine String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Machine"
      },
      "index": {
        "description": "WM CLIENT MACHINE property",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Machine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Machine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Monitor",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Monitor",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "Monitor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Monitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Monitor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Not",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Not Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Not"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Not",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Or",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Or Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Or"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Or",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Resource",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Resource String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Resource"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Resource",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resource",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Role",
      "description": {
        "fct-descr": "\u003cp\u003eWM_WINDOW_ROLE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Role String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Role"
      },
      "index": {
        "description": "WM WINDOW ROLE property",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Role",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Role",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:ShowMonitor",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ShowMonitor",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "function",
        "title": "ShowMonitor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "ShowMonitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Show Monitor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:ShowMonitorNamed",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ShowMonitorNamed String",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "function",
        "title": "ShowMonitorNamed"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "ShowMonitorNamed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Show Monitor Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:Title",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Title String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Title"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "Title",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:ToggleMonitor",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleMonitor",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "function",
        "title": "ToggleMonitor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "ToggleMonitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Monitor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:ToggleMonitorNamed",
      "description": {
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleMonitorNamed String",
        "fct-source": "src/XMonad-Layout-Monitor.html#MonitorMessage",
        "fct-type": "function",
        "title": "ToggleMonitorNamed"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "ToggleMonitorNamed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Monitor Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:doHideIgnore",
      "description": {
        "fct-descr": "\u003cp\u003eHides window and ignores it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Hooks-ManageHelpers.html#doHideIgnore",
        "fct-type": "function",
        "title": "doHideIgnore"
      },
      "index": {
        "description": "Hides window and ignores it",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "doHideIgnore",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Hide Ignore",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:manageMonitor",
      "description": {
        "fct-descr": "\u003cp\u003eManageHook which demanages monitor window and applies opacity settings.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Monitor a -\u003e ManageHook",
        "fct-source": "src/XMonad-Layout-Monitor.html#manageMonitor",
        "fct-type": "function",
        "title": "manageMonitor"
      },
      "index": {
        "description": "ManageHook which demanages monitor window and applies opacity settings",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "manageMonitor",
        "normalized": "Monitor a-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Monitor",
        "signature": "Monitor a-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:monitor",
      "description": {
        "fct-descr": "\u003cp\u003eTemplate for \u003ccode\u003e\u003ca\u003eMonitor\u003c/a\u003e\u003c/code\u003e record. At least \u003ccode\u003e\u003ca\u003eprop\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003erect\u003c/a\u003e\u003c/code\u003e should be\n redefined. Default settings: \u003ccode\u003e\u003ca\u003evisible\u003c/a\u003e\u003c/code\u003e is \u003ccode\u003e\u003ca\u003eTrue\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003epersistent\u003c/a\u003e\u003c/code\u003e is \u003ccode\u003e\u003ca\u003eFalse\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Monitor a",
        "fct-source": "src/XMonad-Layout-Monitor.html#monitor",
        "fct-type": "function",
        "title": "monitor"
      },
      "index": {
        "description": "Template for Monitor record At least prop and rect should be redefined Default settings visible is True persistent is False",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "monitor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:name",
      "description": {
        "fct-descr": "\u003cp\u003ename of monitor (useful when we have many of them)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "name"
      },
      "index": {
        "description": "name of monitor useful when we have many of them",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "name",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:opacity",
      "description": {
        "fct-descr": "\u003cp\u003eopacity level\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "opacity"
      },
      "index": {
        "description": "opacity level",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "opacity",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:persistent",
      "description": {
        "fct-descr": "\u003cp\u003eis it shown on all layouts?\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "persistent"
      },
      "index": {
        "description": "is it shown on all layouts",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "persistent",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:prop",
      "description": {
        "fct-descr": "\u003cp\u003eproperty which uniquely identifies monitor window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Property",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "prop"
      },
      "index": {
        "description": "property which uniquely identifies monitor window",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "prop",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:rect",
      "description": {
        "fct-descr": "\u003cp\u003especifies where to put monitor\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rectangle",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "rect"
      },
      "index": {
        "description": "specifies where to put monitor",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "rect",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Monitor.html#v:visible",
      "description": {
        "fct-descr": "\u003cp\u003eis it visible by default?\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Monitor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool",
        "fct-source": "src/XMonad-Layout-Monitor.html#Monitor",
        "fct-type": "function",
        "title": "visible"
      },
      "index": {
        "description": "is it visible by default",
        "hierarchy": "XMonad Layout Monitor",
        "module": "XMonad.Layout.Monitor",
        "name": "visible",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eBased on MosaicAlt, but aspect ratio messages always change the aspect\n ratios, and rearranging the window stack changes the window sizes.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Mosaic.html",
        "fct-type": "module",
        "title": "Mosaic"
      },
      "index": {
        "description": "Based on MosaicAlt but aspect ratio messages always change the aspect ratios and rearranging the window stack changes the window sizes",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "Mosaic",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mosaic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#t:Aspect",
      "description": {
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Mosaic.html#Aspect",
        "fct-type": "data",
        "title": "Aspect"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "Aspect",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Aspect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:Reset",
      "description": {
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Reset",
        "fct-source": "src/XMonad-Layout-Mosaic.html#Aspect",
        "fct-type": "function",
        "title": "Reset"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "Reset",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Reset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:SlopeMod",
      "description": {
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SlopeMod ([Rational] -\u003e [Rational])",
        "fct-source": "src/XMonad-Layout-Mosaic.html#Aspect",
        "fct-type": "function",
        "title": "SlopeMod"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "SlopeMod",
        "normalized": "SlopeMod([Rational]-\u003e[Rational])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Slope Mod",
        "signature": "SlopeMod([Rational]-\u003e[Rational])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:Taller",
      "description": {
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Taller",
        "fct-source": "src/XMonad-Layout-Mosaic.html#Aspect",
        "fct-type": "function",
        "title": "Taller"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "Taller",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Taller",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:Wider",
      "description": {
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Wider",
        "fct-source": "src/XMonad-Layout-Mosaic.html#Aspect",
        "fct-type": "function",
        "title": "Wider"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "Wider",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Wider",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:changeFocused",
      "description": {
        "fct-descr": "\u003cp\u003eApply a function to the Rational that represents the currently focused\n window.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u003ca\u003eExpand\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eShrink\u003c/a\u003e\u003c/code\u003e messages are responded to with \u003ccode\u003echangeFocused\n (*delta)\u003c/code\u003e or \u003ccode\u003echangeFocused (delta/)\u003c/code\u003e where \u003ccode\u003edelta\u003c/code\u003e is the first argument to\n \u003ccode\u003e\u003ca\u003emosaic\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eThis is exported because other functions (ex. \u003ccode\u003econst 1\u003c/code\u003e, \u003ccode\u003e(+1)\u003c/code\u003e) may be\n useful to apply to the current area.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Rational -\u003e Rational) -\u003e X ()",
        "fct-source": "src/XMonad-Layout-Mosaic.html#changeFocused",
        "fct-type": "function",
        "title": "changeFocused"
      },
      "index": {
        "description": "Apply function to the Rational that represents the currently focused window Expand and Shrink messages are responded to with changeFocused delta or changeFocused delta where delta is the first argument to mosaic This is exported because other functions ex const may be useful to apply to the current area",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "changeFocused",
        "normalized": "(Rational-\u003eRational)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Focused",
        "signature": "(Rational-\u003eRational)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:changeMaster",
      "description": {
        "fct-descr": "\u003cp\u003eThese sample functions are meant to be applied to the list of window sizes\n through the \u003ccode\u003e\u003ca\u003eSlopeMod\u003c/a\u003e\u003c/code\u003e message.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Rational -\u003e Rational) -\u003e X ()",
        "fct-source": "src/XMonad-Layout-Mosaic.html#changeMaster",
        "fct-type": "function",
        "title": "changeMaster"
      },
      "index": {
        "description": "These sample functions are meant to be applied to the list of window sizes through the SlopeMod message",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "changeMaster",
        "normalized": "(Rational-\u003eRational)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Master",
        "signature": "(Rational-\u003eRational)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Mosaic.html#v:mosaic",
      "description": {
        "fct-descr": "\u003cp\u003eThe relative magnitudes (the sign is ignored) of the rational numbers in\n the second argument determine the relative areas that the windows receive.\n The first number represents the size of the master window, the second is for\n the next window in the stack, and so on.\n\u003c/p\u003e\u003cp\u003eThe list is extended with \u003ccode\u003e++ repeat 1\u003c/code\u003e, so \u003ccode\u003emosaic 1.5 []\u003c/code\u003e is like a\n resizable grid.\n\u003c/p\u003e\u003cp\u003eThe first parameter is the multiplicative factor to use when responding to\n the \u003ccode\u003e\u003ca\u003eExpand\u003c/a\u003e\u003c/code\u003e message.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Mosaic",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e [Rational] -\u003e Mosaic a",
        "fct-source": "src/XMonad-Layout-Mosaic.html#mosaic",
        "fct-type": "function",
        "title": "mosaic"
      },
      "index": {
        "description": "The relative magnitudes the sign is ignored of the rational numbers in the second argument determine the relative areas that the windows receive The first number represents the size of the master window the second is for the next window in the stack and so on The list is extended with repeat so mosaic is like resizable grid The first parameter is the multiplicative factor to use when responding to the Expand message",
        "hierarchy": "XMonad Layout Mosaic",
        "module": "XMonad.Layout.Mosaic",
        "name": "mosaic",
        "normalized": "Rational-\u003e[Rational]-\u003eMosaic a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003e[Rational]-\u003eMosaic a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout which gives each window a specified amount of screen space\n relative to the others. Compared to the \u003ccode\u003eMosaic\u003c/code\u003e layout, this one\n divides the space in a more balanced way.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html",
        "fct-type": "module",
        "title": "MosaicAlt"
      },
      "index": {
        "description": "layout which gives each window specified amount of screen space relative to the others Compared to the Mosaic layout this one divides the space in more balanced way",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "MosaicAlt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mosaic Alt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#t:MosaicAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#MosaicAlt",
        "fct-type": "data",
        "title": "MosaicAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "MosaicAlt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mosaic Alt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#v:MosaicAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MosaicAlt Params",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#MosaicAlt",
        "fct-type": "function",
        "title": "MosaicAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "MosaicAlt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mosaic Alt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#v:expandWindowAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e HandleWindowAlt",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#expandWindowAlt",
        "fct-type": "function",
        "title": "expandWindowAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "expandWindowAlt",
        "normalized": "Window-\u003eHandleWindowAlt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Alt",
        "signature": "Window-\u003eHandleWindowAlt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#v:resetAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HandleWindowAlt",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#resetAlt",
        "fct-type": "function",
        "title": "resetAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "resetAlt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Alt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#v:shrinkWindowAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e HandleWindowAlt",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#shrinkWindowAlt",
        "fct-type": "function",
        "title": "shrinkWindowAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "shrinkWindowAlt",
        "normalized": "Window-\u003eHandleWindowAlt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Alt",
        "signature": "Window-\u003eHandleWindowAlt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#v:tallWindowAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e HandleWindowAlt",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#tallWindowAlt",
        "fct-type": "function",
        "title": "tallWindowAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "tallWindowAlt",
        "normalized": "Window-\u003eHandleWindowAlt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Alt",
        "signature": "Window-\u003eHandleWindowAlt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MosaicAlt.html#v:wideWindowAlt",
      "description": {
        "fct-module": "XMonad.Layout.MosaicAlt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e HandleWindowAlt",
        "fct-source": "src/XMonad-Layout-MosaicAlt.html#wideWindowAlt",
        "fct-type": "function",
        "title": "wideWindowAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MosaicAlt",
        "module": "XMonad.Layout.MosaicAlt",
        "name": "wideWindowAlt",
        "normalized": "Window-\u003eHandleWindowAlt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Alt",
        "signature": "Window-\u003eHandleWindowAlt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MouseResizableTile.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout in the spirit of \u003ca\u003eXMonad.Layout.ResizableTile\u003c/a\u003e, but with the option\n to use the mouse to adjust the layout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MouseResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MouseResizableTile.html",
        "fct-type": "module",
        "title": "MouseResizableTile"
      },
      "index": {
        "description": "layout in the spirit of XMonad.Layout.ResizableTile but with the option to use the mouse to adjust the layout",
        "hierarchy": "XMonad Layout MouseResizableTile",
        "module": "XMonad.Layout.MouseResizableTile",
        "name": "MouseResizableTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse Resizable Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MouseResizableTile.html#t:MRTMessage",
      "description": {
        "fct-module": "XMonad.Layout.MouseResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MouseResizableTile.html#MRTMessage",
        "fct-type": "data",
        "title": "MRTMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MouseResizableTile",
        "module": "XMonad.Layout.MouseResizableTile",
        "name": "MRTMessage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "MRTMessage",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MouseResizableTile.html#v:ExpandSlave",
      "description": {
        "fct-module": "XMonad.Layout.MouseResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ExpandSlave",
        "fct-source": "src/XMonad-Layout-MouseResizableTile.html#MRTMessage",
        "fct-type": "function",
        "title": "ExpandSlave"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MouseResizableTile",
        "module": "XMonad.Layout.MouseResizableTile",
        "name": "ExpandSlave",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Expand Slave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MouseResizableTile.html#v:ShrinkSlave",
      "description": {
        "fct-module": "XMonad.Layout.MouseResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ShrinkSlave",
        "fct-source": "src/XMonad-Layout-MouseResizableTile.html#MRTMessage",
        "fct-type": "function",
        "title": "ShrinkSlave"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MouseResizableTile",
        "module": "XMonad.Layout.MouseResizableTile",
        "name": "ShrinkSlave",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrink Slave",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MouseResizableTile.html#v:mouseResizableTile",
      "description": {
        "fct-module": "XMonad.Layout.MouseResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MouseResizableTile a",
        "fct-source": "src/XMonad-Layout-MouseResizableTile.html#mouseResizableTile",
        "fct-type": "function",
        "title": "mouseResizableTile"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MouseResizableTile",
        "module": "XMonad.Layout.MouseResizableTile",
        "name": "mouseResizableTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resizable Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MouseResizableTile.html#v:mouseResizableTileMirrored",
      "description": {
        "fct-module": "XMonad.Layout.MouseResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MouseResizableTile a",
        "fct-source": "src/XMonad-Layout-MouseResizableTile.html#mouseResizableTileMirrored",
        "fct-type": "function",
        "title": "mouseResizableTileMirrored"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MouseResizableTile",
        "module": "XMonad.Layout.MouseResizableTile",
        "name": "mouseResizableTileMirrored",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resizable Tile Mirrored",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiColumns.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis layout tiles windows in a growing number of columns. The number of\n windows in each column can be controlled by messages.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MultiColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MultiColumns.html",
        "fct-type": "module",
        "title": "MultiColumns"
      },
      "index": {
        "description": "This layout tiles windows in growing number of columns The number of windows in each column can be controlled by messages",
        "hierarchy": "XMonad Layout MultiColumns",
        "module": "XMonad.Layout.MultiColumns",
        "name": "MultiColumns",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Multi Columns",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiColumns.html#v:multiCol",
      "description": {
        "fct-descr": "\u003cp\u003eLayout constructor.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Int]-\u003e Int-\u003e Rational-\u003e Rational-\u003e MultiCol a",
        "fct-type": "function",
        "title": "multiCol"
      },
      "index": {
        "description": "Layout constructor",
        "hierarchy": "XMonad Layout MultiColumns",
        "module": "XMonad.Layout.MultiColumns",
        "name": "multiCol",
        "normalized": "[Int]-\u003eInt-\u003eRational-\u003eRational-\u003eMultiCol a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Col",
        "signature": "[Int]-\u003eInt-\u003eRational-\u003eRational-\u003eMultiCol a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSome convenient common instances of the\n \u003ccode\u003e\u003ca\u003eTransformer\u003c/a\u003e\u003c/code\u003e class, for use with\n \u003ca\u003eXMonad.Layout.MultiToggle\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html",
        "fct-type": "module",
        "title": "Instances"
      },
      "index": {
        "description": "Some convenient common instances of the Transformer class for use with XMonad.Layout.MultiToggle",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "Instances",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Instances",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#t:StdTransformers",
      "description": {
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html#StdTransformers",
        "fct-type": "data",
        "title": "StdTransformers"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "StdTransformers",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Std Transformers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#v:FULL",
      "description": {
        "fct-descr": "\u003cp\u003eswitch to Full layout\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FULL",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html#StdTransformers",
        "fct-type": "function",
        "title": "FULL"
      },
      "index": {
        "description": "switch to Full layout",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "FULL",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "FULL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#v:MIRROR",
      "description": {
        "fct-descr": "\u003cp\u003eMirror the current layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MIRROR",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html#StdTransformers",
        "fct-type": "function",
        "title": "MIRROR"
      },
      "index": {
        "description": "Mirror the current layout",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "MIRROR",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "MIRROR",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#v:NBFULL",
      "description": {
        "fct-descr": "\u003cp\u003eswitch to Full with no borders\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NBFULL",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html#StdTransformers",
        "fct-type": "function",
        "title": "NBFULL"
      },
      "index": {
        "description": "switch to Full with no borders",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "NBFULL",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "NBFULL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#v:NOBORDERS",
      "description": {
        "fct-descr": "\u003cp\u003eRemove borders.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NOBORDERS",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html#StdTransformers",
        "fct-type": "function",
        "title": "NOBORDERS"
      },
      "index": {
        "description": "Remove borders",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "NOBORDERS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "NOBORDERS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle-Instances.html#v:SMARTBORDERS",
      "description": {
        "fct-descr": "\u003cp\u003eApply smart borders.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle.Instances",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SMARTBORDERS",
        "fct-source": "src/XMonad-Layout-MultiToggle-Instances.html#StdTransformers",
        "fct-type": "function",
        "title": "SMARTBORDERS"
      },
      "index": {
        "description": "Apply smart borders",
        "hierarchy": "XMonad Layout MultiToggle Instances",
        "module": "XMonad.Layout.MultiToggle.Instances",
        "name": "SMARTBORDERS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SMARTBORDERS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDynamically apply and unapply transformers to your window layout. This can\n be used to rotate your window layout by 90 degrees, or to make the\n currently focused window occupy the whole screen (\"zoom in\") then undo\n the transformation (\"zoom out\").\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-MultiToggle.html",
        "fct-type": "module",
        "title": "MultiToggle"
      },
      "index": {
        "description": "Dynamically apply and unapply transformers to your window layout This can be used to rotate your window layout by degrees or to make the currently focused window occupy the whole screen zoom in then undo the transformation zoom out",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "MultiToggle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Multi Toggle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#t:EOT",
      "description": {
        "fct-descr": "\u003cp\u003eMarks the end of a transformer list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#EOT",
        "fct-type": "data",
        "title": "EOT"
      },
      "index": {
        "description": "Marks the end of transformer list",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "EOT",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "EOT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#t:Toggle",
      "description": {
        "fct-descr": "\u003cp\u003eToggle the specified layout transformer.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#Toggle",
        "fct-type": "data",
        "title": "Toggle"
      },
      "index": {
        "description": "Toggle the specified layout transformer",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "Toggle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#t:Transformer",
      "description": {
        "fct-descr": "\u003cp\u003eA class to identify custom transformers (and look up transforming\n functions by type).\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#Transformer",
        "fct-type": "class",
        "title": "Transformer"
      },
      "index": {
        "description": "class to identify custom transformers and look up transforming functions by type",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "Transformer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Transformer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:-63--63-",
      "description": {
        "fct-descr": "\u003cp\u003ePrepend an element to a heterogeneous list. Used to build transformer\n tables for \u003ccode\u003e\u003ca\u003emkToggle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e b -\u003e HCons a b",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#%3F%3F",
        "fct-type": "function",
        "title": "(??)"
      },
      "index": {
        "description": "Prepend an element to heterogeneous list Used to build transformer tables for mkToggle",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "(??) ??",
        "normalized": "a-\u003eb-\u003eHCons a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eb-\u003eHCons a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:EOT",
      "description": {
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "EOT",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#EOT",
        "fct-type": "function",
        "title": "EOT"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "EOT",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "EOT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:Toggle",
      "description": {
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Toggle t",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#Toggle",
        "fct-type": "function",
        "title": "Toggle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "Toggle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:mkToggle",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a \u003ccode\u003eMultiToggle\u003c/code\u003e layout from a transformer table and a base\n layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ts -\u003e l a -\u003e MultiToggle ts l a",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#mkToggle",
        "fct-type": "function",
        "title": "mkToggle"
      },
      "index": {
        "description": "Construct MultiToggle layout from transformer table and base layout",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "mkToggle",
        "normalized": "a-\u003eb c-\u003eMultiToggle a b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle",
        "signature": "ts-\u003el a-\u003eMultiToggle ts l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:mkToggle1",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a \u003ccode\u003eMultiToggle\u003c/code\u003e layout from a single transformer and a base\n layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t -\u003e l a -\u003e MultiToggle (HCons t EOT) l a",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#mkToggle1",
        "fct-type": "function",
        "title": "mkToggle1"
      },
      "index": {
        "description": "Construct MultiToggle layout from single transformer and base layout",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "mkToggle1",
        "normalized": "a-\u003eb c-\u003eMultiToggle(HCons a EOT)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle",
        "signature": "t-\u003el a-\u003eMultiToggle(HCons t EOT)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:single",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a singleton transformer table.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e HCons a EOT",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#single",
        "fct-type": "function",
        "title": "single"
      },
      "index": {
        "description": "Construct singleton transformer table",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "single",
        "normalized": "a-\u003eHCons a EOT",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eHCons a EOT"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-MultiToggle.html#v:transform",
      "description": {
        "fct-module": "XMonad.Layout.MultiToggle",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l' a -\u003e (l' a -\u003e l a) -\u003e b) -\u003e b",
        "fct-source": "src/XMonad-Layout-MultiToggle.html#transform",
        "fct-type": "method",
        "title": "transform"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout MultiToggle",
        "module": "XMonad.Layout.MultiToggle",
        "name": "transform",
        "normalized": "a b-\u003e(a b-\u003ec b)-\u003ed)-\u003ed",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "l' a-\u003e(l' a-\u003el a)-\u003eb)-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Named.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for assigning a name to a given layout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Named",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Named.html",
        "fct-type": "module",
        "title": "Named"
      },
      "index": {
        "description": "module for assigning name to given layout",
        "hierarchy": "XMonad Layout Named",
        "module": "XMonad.Layout.Named",
        "name": "Named",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Named.html#v:nameTail",
      "description": {
        "fct-descr": "\u003cp\u003eRemove the first word of the name.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Named",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout NameTail l a",
        "fct-source": "src/XMonad-Layout-Named.html#nameTail",
        "fct-type": "function",
        "title": "nameTail"
      },
      "index": {
        "description": "Remove the first word of the name",
        "hierarchy": "XMonad Layout Named",
        "module": "XMonad.Layout.Named",
        "name": "nameTail",
        "normalized": "a b-\u003eModifiedLayout NameTail a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tail",
        "signature": "l a-\u003eModifiedLayout NameTail l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Named.html#v:named",
      "description": {
        "fct-descr": "\u003cp\u003eRename a layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Named",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e l a -\u003e ModifiedLayout Named l a",
        "fct-source": "src/XMonad-Layout-Named.html#named",
        "fct-type": "function",
        "title": "named"
      },
      "index": {
        "description": "Rename layout",
        "hierarchy": "XMonad Layout Named",
        "module": "XMonad.Layout.Named",
        "name": "named",
        "normalized": "String-\u003ea b-\u003eModifiedLayout Named a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003el a-\u003eModifiedLayout Named l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMake a given layout display without borders.  This is useful for\n full-screen or tabbed layouts, where you don't really want to waste a\n couple of pixels of real estate just to inform yourself that the visible\n window has focus.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-NoBorders.html",
        "fct-type": "module",
        "title": "NoBorders"
      },
      "index": {
        "description": "Make given layout display without borders This is useful for full-screen or tabbed layouts where you don really want to waste couple of pixels of real estate just to inform yourself that the visible window has focus",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "NoBorders",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "No Borders",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#t:Ambiguity",
      "description": {
        "fct-descr": "\u003cp\u003eIn order of increasing ambiguity (less borders more frequently), where\n subsequent constructors add additional cases where borders are not drawn\n than their predecessors. These behaviors make most sense with with multiple\n screens: for single screens, Never or \u003ccode\u003e\u003ca\u003esmartBorders\u003c/a\u003e\u003c/code\u003e makes more sense.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "data",
        "title": "Ambiguity"
      },
      "index": {
        "description": "In order of increasing ambiguity less borders more frequently where subsequent constructors add additional cases where borders are not drawn than their predecessors These behaviors make most sense with with multiple screens for single screens Never or smartBorders makes more sense",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Ambiguity",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ambiguity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#t:SetsAmbiguous",
      "description": {
        "fct-descr": "\u003cp\u003eSetsAmbiguous allows custom actions to generate lists of windows that\n should not have borders drawn through \u003ccode\u003eConfigurableBorder\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eTo add your own (though perhaps those options would better belong as an\n aditional constructor to \u003ccode\u003e\u003ca\u003eAmbiguity\u003c/a\u003e\u003c/code\u003e), you can add the function as such:\n\u003c/p\u003e\u003cpre\u003e data MyAmbiguity = MyAmbiguity deriving (Read, Show)\n\u003c/pre\u003e\u003cpre\u003e instance SetsAmbiguous MyAmbiguity where\n  hiddens _ wset mst wrs = otherHiddens Screen \\\\ otherHiddens OnlyFloat\n     where otherHiddens p = hiddens p wset mst wrs\n\u003c/pre\u003e\u003cp\u003eThe above example is redundant, because you can have the same result with:\n\u003c/p\u003e\u003cpre\u003e layoutHook = lessBorders (Combine Difference Screen OnlyFloat) (Tall 1 0.5 0.03 ||| ... )\n\u003c/pre\u003e\u003cp\u003eTo get the same result as smartBorders:\n\u003c/p\u003e\u003cpre\u003e layoutHook = lessBorders (Combine Never) (Tall 1 0.5 0.03 ||| ...)\n\u003c/pre\u003e\u003cp\u003eThis indirect method is required to keep the Read and Show for\n ConfigurableBorder so that xmonad can serialize state.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-NoBorders.html#SetsAmbiguous",
        "fct-type": "class",
        "title": "SetsAmbiguous"
      },
      "index": {
        "description": "SetsAmbiguous allows custom actions to generate lists of windows that should not have borders drawn through ConfigurableBorder To add your own though perhaps those options would better belong as an aditional constructor to Ambiguity you can add the function as such data MyAmbiguity MyAmbiguity deriving Read Show instance SetsAmbiguous MyAmbiguity where hiddens wset mst wrs otherHiddens Screen otherHiddens OnlyFloat where otherHiddens hiddens wset mst wrs The above example is redundant because you can have the same result with layoutHook lessBorders Combine Difference Screen OnlyFloat Tall To get the same result as smartBorders layoutHook lessBorders Combine Never Tall This indirect method is required to keep the Read and Show for ConfigurableBorder so that xmonad can serialize state",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "SetsAmbiguous",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sets Ambiguous",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#t:With",
      "description": {
        "fct-descr": "\u003cp\u003eUsed to indicate to the \u003ccode\u003e\u003ca\u003eSetsAmbiguous\u003c/a\u003e\u003c/code\u003e instance for \u003ccode\u003e\u003ca\u003eAmbiguity\u003c/a\u003e\u003c/code\u003e how two\n lists should be combined.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-NoBorders.html#With",
        "fct-type": "data",
        "title": "With"
      },
      "index": {
        "description": "Used to indicate to the SetsAmbiguous instance for Ambiguity how two lists should be combined",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "With",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:Combine",
      "description": {
        "fct-descr": "\u003cp\u003eThis constructor is used to combine the\n borderless windows provided by the\n SetsAmbiguous instances from two other\n \u003ccode\u003e\u003ca\u003eAmbiguity\u003c/a\u003e\u003c/code\u003e data types.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Combine With Ambiguity Ambiguity",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "function",
        "title": "Combine"
      },
      "index": {
        "description": "This constructor is used to combine the borderless windows provided by the SetsAmbiguous instances from two other Ambiguity data types",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Combine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Combine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:Difference",
      "description": {
        "fct-descr": "\u003cp\u003eCombine with Data.List.\\\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Difference",
        "fct-source": "src/XMonad-Layout-NoBorders.html#With",
        "fct-type": "function",
        "title": "Difference"
      },
      "index": {
        "description": "Combine with Data.List",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Difference",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Difference",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:EmptyScreen",
      "description": {
        "fct-descr": "\u003cp\u003eFocus in an empty screens does not count as\n ambiguous.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "EmptyScreen",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "function",
        "title": "EmptyScreen"
      },
      "index": {
        "description": "Focus in an empty screens does not count as ambiguous",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "EmptyScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Empty Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:Intersection",
      "description": {
        "fct-descr": "\u003cp\u003eCombine with Data.List.intersect\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Intersection",
        "fct-source": "src/XMonad-Layout-NoBorders.html#With",
        "fct-type": "function",
        "title": "Intersection"
      },
      "index": {
        "description": "Combine with Data.List.intersect",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Intersection",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Intersection",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:Never",
      "description": {
        "fct-descr": "\u003cp\u003eNever remove borders when ambiguous:\n this is the same as smartBorders\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Never",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "function",
        "title": "Never"
      },
      "index": {
        "description": "Never remove borders when ambiguous this is the same as smartBorders",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Never",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Never",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:OnlyFloat",
      "description": {
        "fct-descr": "\u003cp\u003eOnly remove borders on floating windows that\n cover the whole screen\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "OnlyFloat",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "function",
        "title": "OnlyFloat"
      },
      "index": {
        "description": "Only remove borders on floating windows that cover the whole screen",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "OnlyFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Only Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:OtherIndicated",
      "description": {
        "fct-descr": "\u003cp\u003eNo borders on full when all other screens\n have borders.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "OtherIndicated",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "function",
        "title": "OtherIndicated"
      },
      "index": {
        "description": "No borders on full when all other screens have borders",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "OtherIndicated",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Other Indicated",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:Screen",
      "description": {
        "fct-descr": "\u003cp\u003eBorders are never drawn on singleton screens.\n With this one you really need another way such\n as a statusbar to detect focus.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Screen",
        "fct-source": "src/XMonad-Layout-NoBorders.html#Ambiguity",
        "fct-type": "function",
        "title": "Screen"
      },
      "index": {
        "description": "Borders are never drawn on singleton screens With this one you really need another way such as statusbar to detect focus",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Screen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:Union",
      "description": {
        "fct-descr": "\u003cp\u003eCombine with Data.List.union\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Union",
        "fct-source": "src/XMonad-Layout-NoBorders.html#With",
        "fct-type": "function",
        "title": "Union"
      },
      "index": {
        "description": "Combine with Data.List.union",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "Union",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Union",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:hiddens",
      "description": {
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "p -\u003e WindowSet -\u003e Maybe (Stack Window) -\u003e [(Window, Rectangle)] -\u003e [Window]",
        "fct-source": "src/XMonad-Layout-NoBorders.html#hiddens",
        "fct-type": "method",
        "title": "hiddens"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "hiddens",
        "normalized": "a-\u003eWindowSet-\u003eMaybe(Stack Window)-\u003e[(Window,Rectangle)]-\u003e[Window]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "p-\u003eWindowSet-\u003eMaybe(Stack Window)-\u003e[(Window,Rectangle)]-\u003e[Window]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:lessBorders",
      "description": {
        "fct-descr": "\u003cp\u003eApply a datatype that has a SetsAmbiguous instance to provide a list of\n windows that should not have borders.\n\u003c/p\u003e\u003cp\u003eThis gives flexibility over when borders should be drawn, in particular with\n xinerama setups: \u003ccode\u003e\u003ca\u003eAmbiguity\u003c/a\u003e\u003c/code\u003e has a number of useful \u003ccode\u003e\u003ca\u003eSetsAmbiguous\u003c/a\u003e\u003c/code\u003e\n instances\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "p -\u003e l a -\u003e ModifiedLayout (ConfigurableBorder p) l a",
        "fct-source": "src/XMonad-Layout-NoBorders.html#lessBorders",
        "fct-type": "function",
        "title": "lessBorders"
      },
      "index": {
        "description": "Apply datatype that has SetsAmbiguous instance to provide list of windows that should not have borders This gives flexibility over when borders should be drawn in particular with xinerama setups Ambiguity has number of useful SetsAmbiguous instances",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "lessBorders",
        "normalized": "a-\u003eb c-\u003eModifiedLayout(ConfigurableBorder a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Borders",
        "signature": "p-\u003el a-\u003eModifiedLayout(ConfigurableBorder p)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:noBorders",
      "description": {
        "fct-descr": "\u003cp\u003eRemoves all window borders from the specified layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l Window -\u003e ModifiedLayout WithBorder l Window",
        "fct-source": "src/XMonad-Layout-NoBorders.html#noBorders",
        "fct-type": "function",
        "title": "noBorders"
      },
      "index": {
        "description": "Removes all window borders from the specified layout",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "noBorders",
        "normalized": "a Window-\u003eModifiedLayout WithBorder a Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Borders",
        "signature": "l Window-\u003eModifiedLayout WithBorder l Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:smartBorders",
      "description": {
        "fct-descr": "\u003cp\u003eRemoves the borders from a window under one of the following conditions:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e There is only one screen and only one window. In this case it's obvious\n  that it has the focus, so no border is needed.\n\u003c/li\u003e\u003cli\u003e A floating window covers the entire screen (e.g. mplayer).\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout SmartBorder l a",
        "fct-source": "src/XMonad-Layout-NoBorders.html#smartBorders",
        "fct-type": "function",
        "title": "smartBorders"
      },
      "index": {
        "description": "Removes the borders from window under one of the following conditions There is only one screen and only one window In this case it obvious that it has the focus so no border is needed floating window covers the entire screen e.g mplayer",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "smartBorders",
        "normalized": "a b-\u003eModifiedLayout SmartBorder a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Borders",
        "signature": "l a-\u003eModifiedLayout SmartBorder l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoBorders.html#v:withBorder",
      "description": {
        "fct-descr": "\u003cp\u003eForces a layout to use the specified border width. \u003ccode\u003e\u003ca\u003enoBorders\u003c/a\u003e\u003c/code\u003e is\n equivalent to \u003ccode\u003e\u003ccode\u003e\u003ca\u003ewithBorder\u003c/a\u003e\u003c/code\u003e 0\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoBorders",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension -\u003e l a -\u003e ModifiedLayout WithBorder l a",
        "fct-source": "src/XMonad-Layout-NoBorders.html#withBorder",
        "fct-type": "function",
        "title": "withBorder"
      },
      "index": {
        "description": "Forces layout to use the specified border width noBorders is equivalent to withBorder",
        "hierarchy": "XMonad Layout NoBorders",
        "module": "XMonad.Layout.NoBorders",
        "name": "withBorder",
        "normalized": "Dimension-\u003ea b-\u003eModifiedLayout WithBorder a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border",
        "signature": "Dimension-\u003el a-\u003eModifiedLayout WithBorder l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoFrillsDecoration.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMost basic version of decoration for windows without any additional\n modifications. In contrast to \u003ca\u003eXMonad.Layout.SimpleDecoration\u003c/a\u003e this will\n result in title bars that span the entire window instead of being only the\n length of the window title.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.NoFrillsDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-NoFrillsDecoration.html",
        "fct-type": "module",
        "title": "NoFrillsDecoration"
      },
      "index": {
        "description": "Most basic version of decoration for windows without any additional modifications In contrast to XMonad.Layout.SimpleDecoration this will result in title bars that span the entire window instead of being only the length of the window title",
        "hierarchy": "XMonad Layout NoFrillsDecoration",
        "module": "XMonad.Layout.NoFrillsDecoration",
        "name": "NoFrillsDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "No Frills Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-NoFrillsDecoration.html#v:noFrillsDeco",
      "description": {
        "fct-descr": "\u003cp\u003eAdd very simple decorations to windows of a layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.NoFrillsDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration NoFrillsDecoration s) l a",
        "fct-source": "src/XMonad-Layout-NoFrillsDecoration.html#noFrillsDeco",
        "fct-type": "function",
        "title": "noFrillsDeco"
      },
      "index": {
        "description": "Add very simple decorations to windows of layout",
        "hierarchy": "XMonad Layout NoFrillsDecoration",
        "module": "XMonad.Layout.NoFrillsDecoration",
        "name": "noFrillsDeco",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration NoFrillsDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Frills Deco",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration NoFrillsDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-OneBig.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eProvides layout named OneBig. It places one (master) window at top left corner of screen, and other (slave) windows at top\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.OneBig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-OneBig.html",
        "fct-type": "module",
        "title": "OneBig"
      },
      "index": {
        "description": "Provides layout named OneBig It places one master window at top left corner of screen and other slave windows at top",
        "hierarchy": "XMonad Layout OneBig",
        "module": "XMonad.Layout.OneBig",
        "name": "OneBig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "One Big",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-OneBig.html#t:OneBig",
      "description": {
        "fct-descr": "\u003cp\u003eData type for layout\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.OneBig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-OneBig.html#OneBig",
        "fct-type": "data",
        "title": "OneBig"
      },
      "index": {
        "description": "Data type for layout",
        "hierarchy": "XMonad Layout OneBig",
        "module": "XMonad.Layout.OneBig",
        "name": "OneBig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "One Big",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-OneBig.html#v:OneBig",
      "description": {
        "fct-module": "XMonad.Layout.OneBig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "OneBig Float Float",
        "fct-source": "src/XMonad-Layout-OneBig.html#OneBig",
        "fct-type": "function",
        "title": "OneBig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout OneBig",
        "module": "XMonad.Layout.OneBig",
        "name": "OneBig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "One Big",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PerWorkspace.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eConfigure layouts on a per-workspace basis: use layouts and apply\n layout modifiers selectively, depending on the workspace.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.PerWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-PerWorkspace.html",
        "fct-type": "module",
        "title": "PerWorkspace"
      },
      "index": {
        "description": "Configure layouts on per-workspace basis use layouts and apply layout modifiers selectively depending on the workspace",
        "hierarchy": "XMonad Layout PerWorkspace",
        "module": "XMonad.Layout.PerWorkspace",
        "name": "PerWorkspace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Per Workspace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PerWorkspace.html#t:PerWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eStructure for representing a workspace-specific layout along with\n a layout for all other workspaces. We store the tags of workspaces\n to be matched, and the two layouts. We save the layout choice in\n the Bool, to be used to implement description.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.PerWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-PerWorkspace.html#PerWorkspace",
        "fct-type": "data",
        "title": "PerWorkspace"
      },
      "index": {
        "description": "Structure for representing workspace-specific layout along with layout for all other workspaces We store the tags of workspaces to be matched and the two layouts We save the layout choice in the Bool to be used to implement description",
        "hierarchy": "XMonad Layout PerWorkspace",
        "module": "XMonad.Layout.PerWorkspace",
        "name": "PerWorkspace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Per Workspace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PerWorkspace.html#v:modWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify a layout modifier to apply to a particular workspace; layouts\n   on all other workspaces will remain unmodified.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.PerWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId-\u003e (l a -\u003e ModifiedLayout lm l a)-\u003e l a-\u003e PerWorkspace (ModifiedLayout lm l) l a",
        "fct-type": "function",
        "title": "modWorkspace"
      },
      "index": {
        "description": "Specify layout modifier to apply to particular workspace layouts on all other workspaces will remain unmodified",
        "hierarchy": "XMonad Layout PerWorkspace",
        "module": "XMonad.Layout.PerWorkspace",
        "name": "modWorkspace",
        "normalized": "WorkspaceId-\u003e(a b-\u003eModifiedLayout c a b)-\u003ea b-\u003ePerWorkspace(ModifiedLayout c a)a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "WorkspaceId-\u003e(l a-\u003eModifiedLayout lm l a)-\u003el a-\u003ePerWorkspace(ModifiedLayout lm l)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PerWorkspace.html#v:modWorkspaces",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify a layout modifier to apply to a particular set of\n   workspaces; layouts on all other workspaces will remain\n   unmodified.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.PerWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[WorkspaceId]-\u003e (l a -\u003e ModifiedLayout lm l a)-\u003e l a-\u003e PerWorkspace (ModifiedLayout lm l) l a",
        "fct-type": "function",
        "title": "modWorkspaces"
      },
      "index": {
        "description": "Specify layout modifier to apply to particular set of workspaces layouts on all other workspaces will remain unmodified",
        "hierarchy": "XMonad Layout PerWorkspace",
        "module": "XMonad.Layout.PerWorkspace",
        "name": "modWorkspaces",
        "normalized": "[WorkspaceId]-\u003e(a b-\u003eModifiedLayout c a b)-\u003ea b-\u003ePerWorkspace(ModifiedLayout c a)a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspaces",
        "signature": "[WorkspaceId]-\u003e(l a-\u003eModifiedLayout lm l a)-\u003el a-\u003ePerWorkspace(ModifiedLayout lm l)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PerWorkspace.html#v:onWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify one layout to use on a particular workspace, and another\n   to use on all others.  The second layout can be another call to\n   \u003ccode\u003e\u003ca\u003eonWorkspace\u003c/a\u003e\u003c/code\u003e, and so on.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.PerWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WorkspaceId-\u003e l1 a-\u003e l2 a-\u003e PerWorkspace l1 l2 a",
        "fct-type": "function",
        "title": "onWorkspace"
      },
      "index": {
        "description": "Specify one layout to use on particular workspace and another to use on all others The second layout can be another call to onWorkspace and so on",
        "hierarchy": "XMonad Layout PerWorkspace",
        "module": "XMonad.Layout.PerWorkspace",
        "name": "onWorkspace",
        "normalized": "WorkspaceId-\u003ea b-\u003ea b-\u003ePerWorkspace a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": "WorkspaceId-\u003el a-\u003el a-\u003ePerWorkspace l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PerWorkspace.html#v:onWorkspaces",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify one layout to use on a particular set of workspaces, and\n   another to use on all other workspaces.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.PerWorkspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[WorkspaceId]-\u003e l1 a-\u003e l2 a-\u003e PerWorkspace l1 l2 a",
        "fct-type": "function",
        "title": "onWorkspaces"
      },
      "index": {
        "description": "Specify one layout to use on particular set of workspaces and another to use on all other workspaces",
        "hierarchy": "XMonad Layout PerWorkspace",
        "module": "XMonad.Layout.PerWorkspace",
        "name": "onWorkspaces",
        "normalized": "[WorkspaceId]-\u003ea b-\u003ea b-\u003ePerWorkspace a a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspaces",
        "signature": "[WorkspaceId]-\u003el a-\u003el a-\u003ePerWorkspace l l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PositionStoreFloat.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA floating layout which has been designed with a dual-head setup\n in mind. It makes use of \u003ca\u003eXMonad.Util.PositionStore\u003c/a\u003e as well as\n \u003ca\u003eXMonad.Hooks.PositionStoreHooks\u003c/a\u003e . Since there is currently no way\n to move or resize windows with the keyboard alone in this layout,\n it is adviced to use it in combination with a decoration such as\n \u003ca\u003eXMonad.Layout.NoFrillsDecoration\u003c/a\u003e (to move windows) and the\n layout modifier \u003ca\u003eXMonad.Layout.BorderResize\u003c/a\u003e (to resize windows).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.PositionStoreFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-PositionStoreFloat.html",
        "fct-type": "module",
        "title": "PositionStoreFloat"
      },
      "index": {
        "description": "floating layout which has been designed with dual-head setup in mind It makes use of XMonad.Util.PositionStore as well as XMonad.Hooks.PositionStoreHooks Since there is currently no way to move or resize windows with the keyboard alone in this layout it is adviced to use it in combination with decoration such as XMonad.Layout.NoFrillsDecoration to move windows and the layout modifier XMonad.Layout.BorderResize to resize windows",
        "hierarchy": "XMonad Layout PositionStoreFloat",
        "module": "XMonad.Layout.PositionStoreFloat",
        "name": "PositionStoreFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Position Store Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-PositionStoreFloat.html#v:positionStoreFloat",
      "description": {
        "fct-module": "XMonad.Layout.PositionStoreFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PositionStoreFloat a",
        "fct-source": "src/XMonad-Layout-PositionStoreFloat.html#positionStoreFloat",
        "fct-type": "function",
        "title": "positionStoreFloat"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout PositionStoreFloat",
        "module": "XMonad.Layout.PositionStoreFloat",
        "name": "positionStoreFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eReflect a layout horizontally or vertically.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Reflect.html",
        "fct-type": "module",
        "title": "Reflect"
      },
      "index": {
        "description": "Reflect layout horizontally or vertically",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "Reflect",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Reflect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#t:REFLECTX",
      "description": {
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Reflect.html#REFLECTX",
        "fct-type": "data",
        "title": "REFLECTX"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "REFLECTX",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "REFLECTX",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#t:REFLECTY",
      "description": {
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Reflect.html#REFLECTY",
        "fct-type": "data",
        "title": "REFLECTY"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "REFLECTY",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "REFLECTY",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#t:Reflect",
      "description": {
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Reflect.html#Reflect",
        "fct-type": "data",
        "title": "Reflect"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "Reflect",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Reflect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#v:REFLECTX",
      "description": {
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "REFLECTX",
        "fct-source": "src/XMonad-Layout-Reflect.html#REFLECTX",
        "fct-type": "function",
        "title": "REFLECTX"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "REFLECTX",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "REFLECTX",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#v:REFLECTY",
      "description": {
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "REFLECTY",
        "fct-source": "src/XMonad-Layout-Reflect.html#REFLECTY",
        "fct-type": "function",
        "title": "REFLECTY"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "REFLECTY",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "REFLECTY",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#v:reflectHoriz",
      "description": {
        "fct-descr": "\u003cp\u003eApply a horizontal reflection (left \u003c--\u003e right) to a\n   layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout Reflect l a",
        "fct-source": "src/XMonad-Layout-Reflect.html#reflectHoriz",
        "fct-type": "function",
        "title": "reflectHoriz"
      },
      "index": {
        "description": "Apply horizontal reflection left right to layout",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "reflectHoriz",
        "normalized": "a b-\u003eModifiedLayout Reflect a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Horiz",
        "signature": "l a-\u003eModifiedLayout Reflect l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Reflect.html#v:reflectVert",
      "description": {
        "fct-descr": "\u003cp\u003eApply a vertical reflection (top \u003c--\u003e bottom) to a\n   layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Reflect",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout Reflect l a",
        "fct-source": "src/XMonad-Layout-Reflect.html#reflectVert",
        "fct-type": "function",
        "title": "reflectVert"
      },
      "index": {
        "description": "Apply vertical reflection top bottom to layout",
        "hierarchy": "XMonad Layout Reflect",
        "module": "XMonad.Layout.Reflect",
        "name": "reflectVert",
        "normalized": "a b-\u003eModifiedLayout Reflect a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Vert",
        "signature": "l a-\u003eModifiedLayout Reflect l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMore useful tiled layout that allows you to change a width/height of window.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ResizableTile.html",
        "fct-type": "module",
        "title": "ResizableTile"
      },
      "index": {
        "description": "More useful tiled layout that allows you to change width height of window",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "ResizableTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resizable Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#t:MirrorResize",
      "description": {
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#MirrorResize",
        "fct-type": "data",
        "title": "MirrorResize"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "MirrorResize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mirror Resize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#t:ResizableTall",
      "description": {
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#ResizableTall",
        "fct-type": "data",
        "title": "ResizableTall"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "ResizableTall",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resizable Tall",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:MirrorExpand",
      "description": {
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MirrorExpand",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#MirrorResize",
        "fct-type": "function",
        "title": "MirrorExpand"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "MirrorExpand",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mirror Expand",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:MirrorShrink",
      "description": {
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MirrorShrink",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#MirrorResize",
        "fct-type": "function",
        "title": "MirrorShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "MirrorShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mirror Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:ResizableTall",
      "description": {
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ResizableTall",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#ResizableTall",
        "fct-type": "function",
        "title": "ResizableTall"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "ResizableTall",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resizable Tall",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:_delta",
      "description": {
        "fct-descr": "\u003cp\u003echange when resizing by \u003ccode\u003e\u003ca\u003eShrink\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eExpand\u003c/a\u003e\u003c/code\u003e,\n \u003ccode\u003e\u003ca\u003eMirrorShrink\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eMirrorExpand\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#ResizableTall",
        "fct-type": "function",
        "title": "_delta"
      },
      "index": {
        "description": "change when resizing by Shrink Expand MirrorShrink MirrorExpand",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "_delta",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:_frac",
      "description": {
        "fct-descr": "\u003cp\u003ewidth of master\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#ResizableTall",
        "fct-type": "function",
        "title": "_frac"
      },
      "index": {
        "description": "width of master",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "_frac",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:_nmaster",
      "description": {
        "fct-descr": "\u003cp\u003enumber of master windows\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#ResizableTall",
        "fct-type": "function",
        "title": "_nmaster"
      },
      "index": {
        "description": "number of master windows",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "_nmaster",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizableTile.html#v:_slaves",
      "description": {
        "fct-descr": "\u003cp\u003efraction to multiply the window\n height that would be given when divided equally.\n\u003c/p\u003e\u003cp\u003eslave windows are assigned their modified\n heights in order, from top to bottom\n\u003c/p\u003e\u003cp\u003eunspecified values are replaced by 1\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ResizableTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Rational]",
        "fct-source": "src/XMonad-Layout-ResizableTile.html#ResizableTall",
        "fct-type": "function",
        "title": "_slaves"
      },
      "index": {
        "description": "fraction to multiply the window height that would be given when divided equally slave windows are assigned their modified heights in order from top to bottom unspecified values are replaced by",
        "hierarchy": "XMonad Layout ResizableTile",
        "module": "XMonad.Layout.ResizableTile",
        "name": "_slaves",
        "normalized": "[Rational]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "[Rational]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout transformer to have a layout respect a given screen\n geometry. Mostly used with \u003ca\u003eDecoration\u003c/a\u003e (the Horizontal and the\n Vertical version will react to SetTheme and change their dimension\n accordingly.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html",
        "fct-type": "module",
        "title": "ResizeScreen"
      },
      "index": {
        "description": "layout transformer to have layout respect given screen geometry Mostly used with Decoration the Horizontal and the Vertical version will react to SetTheme and change their dimension accordingly",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "ResizeScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#t:ResizeScreen",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#ResizeScreen",
        "fct-type": "data",
        "title": "ResizeScreen"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "ResizeScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:ResizeScreen",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ResizeScreen ResizeMode Int",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#ResizeScreen",
        "fct-type": "function",
        "title": "ResizeScreen"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "ResizeScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resize Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:WithNewScreen",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WithNewScreen Rectangle",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#ResizeScreen",
        "fct-type": "function",
        "title": "WithNewScreen"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "WithNewScreen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With New Screen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:resizeHorizontal",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout ResizeScreen l a",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#resizeHorizontal",
        "fct-type": "function",
        "title": "resizeHorizontal"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "resizeHorizontal",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout ResizeScreen a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Horizontal",
        "signature": "Int-\u003el a-\u003eModifiedLayout ResizeScreen l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:resizeHorizontalRight",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout ResizeScreen l a",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#resizeHorizontalRight",
        "fct-type": "function",
        "title": "resizeHorizontalRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "resizeHorizontalRight",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout ResizeScreen a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Horizontal Right",
        "signature": "Int-\u003el a-\u003eModifiedLayout ResizeScreen l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:resizeVertical",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout ResizeScreen l a",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#resizeVertical",
        "fct-type": "function",
        "title": "resizeVertical"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "resizeVertical",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout ResizeScreen a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Vertical",
        "signature": "Int-\u003el a-\u003eModifiedLayout ResizeScreen l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:resizeVerticalBottom",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout ResizeScreen l a",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#resizeVerticalBottom",
        "fct-type": "function",
        "title": "resizeVerticalBottom"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "resizeVerticalBottom",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout ResizeScreen a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Vertical Bottom",
        "signature": "Int-\u003el a-\u003eModifiedLayout ResizeScreen l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ResizeScreen.html#v:withNewRectangle",
      "description": {
        "fct-module": "XMonad.Layout.ResizeScreen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rectangle -\u003e l a -\u003e ModifiedLayout ResizeScreen l a",
        "fct-source": "src/XMonad-Layout-ResizeScreen.html#withNewRectangle",
        "fct-type": "function",
        "title": "withNewRectangle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ResizeScreen",
        "module": "XMonad.Layout.ResizeScreen",
        "name": "withNewRectangle",
        "normalized": "Rectangle-\u003ea b-\u003eModifiedLayout ResizeScreen a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "New Rectangle",
        "signature": "Rectangle-\u003el a-\u003eModifiedLayout ResizeScreen l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Roledex.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a completely pointless layout which acts like Microsoft's Flip 3D\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Roledex",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Roledex.html",
        "fct-type": "module",
        "title": "Roledex"
      },
      "index": {
        "description": "This is completely pointless layout which acts like Microsoft Flip",
        "hierarchy": "XMonad Layout Roledex",
        "module": "XMonad.Layout.Roledex",
        "name": "Roledex",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Roledex",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Roledex.html#t:Roledex",
      "description": {
        "fct-module": "XMonad.Layout.Roledex",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Roledex.html#Roledex",
        "fct-type": "data",
        "title": "Roledex"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Roledex",
        "module": "XMonad.Layout.Roledex",
        "name": "Roledex",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Roledex",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Roledex.html#v:Roledex",
      "description": {
        "fct-module": "XMonad.Layout.Roledex",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Roledex",
        "fct-source": "src/XMonad-Layout-Roledex.html#Roledex",
        "fct-type": "function",
        "title": "Roledex"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Roledex",
        "module": "XMonad.Layout.Roledex",
        "name": "Roledex",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Roledex",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a layout modifier that will show the workspace name\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ShowWName.html",
        "fct-type": "module",
        "title": "ShowWName"
      },
      "index": {
        "description": "This is layout modifier that will show the workspace name",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "ShowWName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Show WName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#t:SWNConfig",
      "description": {
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ShowWName.html#SWNConfig",
        "fct-type": "data",
        "title": "SWNConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "SWNConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SWNConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:SWNC",
      "description": {
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SWNC",
        "fct-source": "src/XMonad-Layout-ShowWName.html#SWNConfig",
        "fct-type": "function",
        "title": "SWNC"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "SWNC",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SWNC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:defaultSWNConfig",
      "description": {
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SWNConfig",
        "fct-source": "src/XMonad-Layout-ShowWName.html#defaultSWNConfig",
        "fct-type": "function",
        "title": "defaultSWNConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "defaultSWNConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SWNConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:showWName",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier to show the workspace name when switching\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout ShowWName l a",
        "fct-source": "src/XMonad-Layout-ShowWName.html#showWName",
        "fct-type": "function",
        "title": "showWName"
      },
      "index": {
        "description": "layout modifier to show the workspace name when switching",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "showWName",
        "normalized": "a b-\u003eModifiedLayout ShowWName a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WName",
        "signature": "l a-\u003eModifiedLayout ShowWName l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:showWName-39-",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier to show the workspace name when switching. It\n is possible to provide a custom configuration.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SWNConfig -\u003e l a -\u003e ModifiedLayout ShowWName l a",
        "fct-source": "src/XMonad-Layout-ShowWName.html#showWName%27",
        "fct-type": "function",
        "title": "showWName'"
      },
      "index": {
        "description": "layout modifier to show the workspace name when switching It is possible to provide custom configuration",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "showWName'",
        "normalized": "SWNConfig-\u003ea b-\u003eModifiedLayout ShowWName a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WName'",
        "signature": "SWNConfig-\u003el a-\u003eModifiedLayout ShowWName l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:swn_bgcolor",
      "description": {
        "fct-descr": "\u003cp\u003eBackground color\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-ShowWName.html#SWNConfig",
        "fct-type": "function",
        "title": "swn_bgcolor"
      },
      "index": {
        "description": "Background color",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "swn_bgcolor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:swn_color",
      "description": {
        "fct-descr": "\u003cp\u003eString color\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-ShowWName.html#SWNConfig",
        "fct-type": "function",
        "title": "swn_color"
      },
      "index": {
        "description": "String color",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "swn_color",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:swn_fade",
      "description": {
        "fct-descr": "\u003cp\u003eTime in seconds of the name visibility\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational",
        "fct-source": "src/XMonad-Layout-ShowWName.html#SWNConfig",
        "fct-type": "function",
        "title": "swn_fade"
      },
      "index": {
        "description": "Time in seconds of the name visibility",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "swn_fade",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ShowWName.html#v:swn_font",
      "description": {
        "fct-descr": "\u003cp\u003eFont name\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ShowWName",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-ShowWName.html#SWNConfig",
        "fct-type": "function",
        "title": "swn_font"
      },
      "index": {
        "description": "Font name",
        "hierarchy": "XMonad Layout ShowWName",
        "module": "XMonad.Layout.ShowWName",
        "name": "swn_font",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier for adding simple decorations to the windows of a\n given layout. The decorations are in the form of ion-like tabs\n for window titles.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-SimpleDecoration.html",
        "fct-type": "module",
        "title": "SimpleDecoration"
      },
      "index": {
        "description": "layout modifier for adding simple decorations to the windows of given layout The decorations are in the form of ion-like tabs for window titles",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "SimpleDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#t:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "data",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#t:Shrinker",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-Decoration.html#Shrinker",
        "fct-type": "class",
        "title": "Shrinker"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "Shrinker",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrinker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#t:SimpleDecoration",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-SimpleDecoration.html#SimpleDecoration",
        "fct-type": "data",
        "title": "SimpleDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "SimpleDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#t:Theme",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e is a record of colors, font etc., to customize a\n \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eFor a collection of \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003es see \u003ca\u003eXMonad.Util.Themes\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "data",
        "title": "Theme"
      },
      "index": {
        "description": "Theme is record of colors font etc to customize DecorationStyle For collection of Theme see XMonad.Util.Themes",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CustomShrink",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "function",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:Simple",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Simple Bool",
        "fct-source": "src/XMonad-Layout-SimpleDecoration.html#SimpleDecoration",
        "fct-type": "function",
        "title": "Simple"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "Simple",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:Theme",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "Theme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:activeBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeBorderColor"
      },
      "index": {
        "description": "Color of the border of the active window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "activeBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:activeColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeColor"
      },
      "index": {
        "description": "Color of the active window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "activeColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:activeTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeTextColor"
      },
      "index": {
        "description": "Color of the text of the active window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "activeTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:decoHeight",
      "description": {
        "fct-descr": "\u003cp\u003eHeight of the decorations\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoHeight"
      },
      "index": {
        "description": "Height of the decorations",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "decoHeight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Height",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:decoWidth",
      "description": {
        "fct-descr": "\u003cp\u003eMaximum width of the decorations (if supported by the \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoWidth"
      },
      "index": {
        "description": "Maximum width of the decorations if supported by the DecorationStyle",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "decoWidth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Width",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:defaultTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#defaultTheme",
        "fct-type": "function",
        "title": "defaultTheme"
      },
      "index": {
        "description": "The default xmonad Theme",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "defaultTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:fontName",
      "description": {
        "fct-descr": "\u003cp\u003eFont name\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "fontName"
      },
      "index": {
        "description": "Font name",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "fontName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:inactiveBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveBorderColor"
      },
      "index": {
        "description": "Color of the border of the inactive window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "inactiveBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:inactiveColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveColor"
      },
      "index": {
        "description": "Color of the inactive window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "inactiveColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:inactiveTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveTextColor"
      },
      "index": {
        "description": "Color of the text of the inactive window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "inactiveTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:shrinkIt",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e String -\u003e [String]",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkIt",
        "fct-type": "method",
        "title": "shrinkIt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "shrinkIt",
        "normalized": "a-\u003eString-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "It",
        "signature": "s-\u003eString-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:simpleDeco",
      "description": {
        "fct-descr": "\u003cp\u003eAdd simple decorations to windows of a layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration SimpleDecoration s) l a",
        "fct-source": "src/XMonad-Layout-SimpleDecoration.html#simpleDeco",
        "fct-type": "function",
        "title": "simpleDeco"
      },
      "index": {
        "description": "Add simple decorations to windows of layout",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "simpleDeco",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration SimpleDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Deco",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration SimpleDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:urgentBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentBorderColor"
      },
      "index": {
        "description": "Color of the border of the urgent window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "urgentBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:urgentColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentColor"
      },
      "index": {
        "description": "Color of the urgent window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "urgentColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:urgentTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentTextColor"
      },
      "index": {
        "description": "Color of the text of the urgent window",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "urgentTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleDecoration.html#v:windowTitleAddons",
      "description": {
        "fct-descr": "\u003cp\u003eExtra text to appear in a window's title bar\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, Align)]",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "windowTitleAddons"
      },
      "index": {
        "description": "Extra text to appear in window title bar",
        "hierarchy": "XMonad Layout SimpleDecoration",
        "module": "XMonad.Layout.SimpleDecoration",
        "name": "windowTitleAddons",
        "normalized": "[(String,Align)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title Addons",
        "signature": "[(String,Align)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA basic floating layout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-SimpleFloat.html",
        "fct-type": "module",
        "title": "SimpleFloat"
      },
      "index": {
        "description": "basic floating layout",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "SimpleFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#t:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "data",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#t:Shrinker",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-Decoration.html#Shrinker",
        "fct-type": "class",
        "title": "Shrinker"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "Shrinker",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrinker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#t:SimpleDecoration",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-SimpleDecoration.html#SimpleDecoration",
        "fct-type": "data",
        "title": "SimpleDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "SimpleDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#t:SimpleFloat",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-SimpleFloat.html#SimpleFloat",
        "fct-type": "data",
        "title": "SimpleFloat"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "SimpleFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CustomShrink",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "function",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:SF",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SF Dimension",
        "fct-source": "src/XMonad-Layout-SimpleFloat.html#SimpleFloat",
        "fct-type": "function",
        "title": "SF"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "SF",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "SF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:Simple",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Simple Bool",
        "fct-source": "src/XMonad-Layout-SimpleDecoration.html#SimpleDecoration",
        "fct-type": "function",
        "title": "Simple"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "Simple",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simple",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:shrinkIt",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e String -\u003e [String]",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkIt",
        "fct-type": "method",
        "title": "shrinkIt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "shrinkIt",
        "normalized": "a-\u003eString-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "It",
        "signature": "s-\u003eString-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:simpleFloat",
      "description": {
        "fct-descr": "\u003cp\u003eA simple floating layout where every window is placed according\n to the window's initial attributes.\n\u003c/p\u003e\u003cp\u003eThis version is decorated with the \u003ccode\u003e\u003ca\u003eSimpleDecoration\u003c/a\u003e\u003c/code\u003e style.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration SimpleDecoration DefaultShrinker) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-SimpleFloat.html#simpleFloat",
        "fct-type": "function",
        "title": "simpleFloat"
      },
      "index": {
        "description": "simple floating layout where every window is placed according to the window initial attributes This version is decorated with the SimpleDecoration style",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "simpleFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimpleFloat.html#v:simpleFloat-39-",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003esimpleFloat\u003c/a\u003e\u003c/code\u003e, but with the possibility of setting a\n custom shrinker and a custom theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimpleFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration SimpleDecoration s) (ModifiedLayout MouseResize (ModifiedLayout WindowArranger SimpleFloat)) a",
        "fct-source": "src/XMonad-Layout-SimpleFloat.html#simpleFloat%27",
        "fct-type": "function",
        "title": "simpleFloat'"
      },
      "index": {
        "description": "Same as simpleFloat but with the possibility of setting custom shrinker and custom theme",
        "hierarchy": "XMonad Layout SimpleFloat",
        "module": "XMonad.Layout.SimpleFloat",
        "name": "simpleFloat'",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration a)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float'",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration SimpleDecoration s)(ModifiedLayout MouseResize(ModifiedLayout WindowArranger SimpleFloat))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Simplest.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA very simple layout. The simplest, afaik.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Simplest",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Simplest.html",
        "fct-type": "module",
        "title": "Simplest"
      },
      "index": {
        "description": "very simple layout The simplest afaik",
        "hierarchy": "XMonad Layout Simplest",
        "module": "XMonad.Layout.Simplest",
        "name": "Simplest",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simplest",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Simplest.html#t:Simplest",
      "description": {
        "fct-module": "XMonad.Layout.Simplest",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Simplest.html#Simplest",
        "fct-type": "data",
        "title": "Simplest"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Simplest",
        "module": "XMonad.Layout.Simplest",
        "name": "Simplest",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simplest",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Simplest.html#v:Simplest",
      "description": {
        "fct-module": "XMonad.Layout.Simplest",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Simplest",
        "fct-source": "src/XMonad-Layout-Simplest.html#Simplest",
        "fct-type": "function",
        "title": "Simplest"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Simplest",
        "module": "XMonad.Layout.Simplest",
        "name": "Simplest",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simplest",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimplestFloat.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA basic floating layout like SimpleFloat but without the decoration.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.SimplestFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-SimplestFloat.html",
        "fct-type": "module",
        "title": "SimplestFloat"
      },
      "index": {
        "description": "basic floating layout like SimpleFloat but without the decoration",
        "hierarchy": "XMonad Layout SimplestFloat",
        "module": "XMonad.Layout.SimplestFloat",
        "name": "SimplestFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simplest Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimplestFloat.html#t:SimplestFloat",
      "description": {
        "fct-module": "XMonad.Layout.SimplestFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-SimplestFloat.html#SimplestFloat",
        "fct-type": "data",
        "title": "SimplestFloat"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SimplestFloat",
        "module": "XMonad.Layout.SimplestFloat",
        "name": "SimplestFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Simplest Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SimplestFloat.html#v:simplestFloat",
      "description": {
        "fct-descr": "\u003cp\u003eA simple floating layout where every window is placed according\n to the window's initial attributes.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SimplestFloat",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout WindowArranger SimplestFloat a",
        "fct-source": "src/XMonad-Layout-SimplestFloat.html#simplestFloat",
        "fct-type": "function",
        "title": "simplestFloat"
      },
      "index": {
        "description": "simple floating layout where every window is placed according to the window initial attributes",
        "hierarchy": "XMonad Layout SimplestFloat",
        "module": "XMonad.Layout.SimplestFloat",
        "name": "simplestFloat",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Float",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spacing.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAdd a configurable amount of space around windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Spacing",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Spacing.html",
        "fct-type": "module",
        "title": "Spacing"
      },
      "index": {
        "description": "Add configurable amount of space around windows",
        "hierarchy": "XMonad Layout Spacing",
        "module": "XMonad.Layout.Spacing",
        "name": "Spacing",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spacing",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spacing.html#v:spacing",
      "description": {
        "fct-descr": "\u003cp\u003eSurround all windows by a certain number of pixels of blank space.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Spacing",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e l a -\u003e ModifiedLayout Spacing l a",
        "fct-source": "src/XMonad-Layout-Spacing.html#spacing",
        "fct-type": "function",
        "title": "spacing"
      },
      "index": {
        "description": "Surround all windows by certain number of pixels of blank space",
        "hierarchy": "XMonad Layout Spacing",
        "module": "XMonad.Layout.Spacing",
        "name": "spacing",
        "normalized": "Int-\u003ea b-\u003eModifiedLayout Spacing a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003el a-\u003eModifiedLayout Spacing l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA spiral tiling layout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Spiral.html",
        "fct-type": "module",
        "title": "Spiral"
      },
      "index": {
        "description": "spiral tiling layout",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "Spiral",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spiral",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#t:Direction",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Spiral.html#Direction",
        "fct-type": "data",
        "title": "Direction"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "Direction",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#t:Rotation",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Spiral.html#Rotation",
        "fct-type": "data",
        "title": "Rotation"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "Rotation",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Rotation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:CCW",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CCW",
        "fct-source": "src/XMonad-Layout-Spiral.html#Rotation",
        "fct-type": "function",
        "title": "CCW"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "CCW",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "CCW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:CW",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CW",
        "fct-source": "src/XMonad-Layout-Spiral.html#Rotation",
        "fct-type": "function",
        "title": "CW"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "CW",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "CW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:East",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "East",
        "fct-source": "src/XMonad-Layout-Spiral.html#Direction",
        "fct-type": "function",
        "title": "East"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "East",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "East",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:North",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "North",
        "fct-source": "src/XMonad-Layout-Spiral.html#Direction",
        "fct-type": "function",
        "title": "North"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "North",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "North",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:South",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "South",
        "fct-source": "src/XMonad-Layout-Spiral.html#Direction",
        "fct-type": "function",
        "title": "South"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "South",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "South",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:West",
      "description": {
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "West",
        "fct-source": "src/XMonad-Layout-Spiral.html#Direction",
        "fct-type": "function",
        "title": "West"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "West",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "West",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:spiral",
      "description": {
        "fct-descr": "\u003cp\u003eA spiral layout.  The parameter controls the size ratio between\n   successive windows in the spiral.  Sensible values range from 0\n   up to the aspect ratio of your monitor (often 4/3).\n\u003c/p\u003e\u003cp\u003eBy default, the spiral is counterclockwise, starting to the east.\n   See also \u003ccode\u003e\u003ca\u003espiralWithDir\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e SpiralWithDir a",
        "fct-source": "src/XMonad-Layout-Spiral.html#spiral",
        "fct-type": "function",
        "title": "spiral"
      },
      "index": {
        "description": "spiral layout The parameter controls the size ratio between successive windows in the spiral Sensible values range from up to the aspect ratio of your monitor often By default the spiral is counterclockwise starting to the east See also spiralWithDir",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "spiral",
        "normalized": "Rational-\u003eSpiralWithDir a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eSpiralWithDir a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Spiral.html#v:spiralWithDir",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a spiral layout, specifying the starting cardinal direction,\n   the spiral direction (clockwise or counterclockwise), and the\n   size ratio.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Spiral",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction -\u003e Rotation -\u003e Rational -\u003e SpiralWithDir a",
        "fct-source": "src/XMonad-Layout-Spiral.html#spiralWithDir",
        "fct-type": "function",
        "title": "spiralWithDir"
      },
      "index": {
        "description": "Create spiral layout specifying the starting cardinal direction the spiral direction clockwise or counterclockwise and the size ratio",
        "hierarchy": "XMonad Layout Spiral",
        "module": "XMonad.Layout.Spiral",
        "name": "spiralWithDir",
        "normalized": "Direction-\u003eRotation-\u003eRational-\u003eSpiralWithDir a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With Dir",
        "signature": "Direction-\u003eRotation-\u003eRational-\u003eSpiralWithDir a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Square.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout that splits the screen into a square area and the rest of the\n screen.\n This is probably only ever useful in combination with\n \u003ca\u003eXMonad.Layout.Combo\u003c/a\u003e.\n It sticks one window in a square region, and makes the rest\n of the windows live with what's left (in a full-screen sense).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Square",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Square.html",
        "fct-type": "module",
        "title": "Square"
      },
      "index": {
        "description": "layout that splits the screen into square area and the rest of the screen This is probably only ever useful in combination with XMonad.Layout.Combo It sticks one window in square region and makes the rest of the windows live with what left in full-screen sense",
        "hierarchy": "XMonad Layout Square",
        "module": "XMonad.Layout.Square",
        "name": "Square",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Square",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Square.html#t:Square",
      "description": {
        "fct-module": "XMonad.Layout.Square",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Square.html#Square",
        "fct-type": "data",
        "title": "Square"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Square",
        "module": "XMonad.Layout.Square",
        "name": "Square",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Square",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Square.html#v:Square",
      "description": {
        "fct-module": "XMonad.Layout.Square",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Square",
        "fct-source": "src/XMonad-Layout-Square.html#Square",
        "fct-type": "function",
        "title": "Square"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Square",
        "module": "XMonad.Layout.Square",
        "name": "Square",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Square",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-StackTile.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA stacking layout, like dishes but with the ability to resize master pane.\n Mostly useful on small screens.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.StackTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-StackTile.html",
        "fct-type": "module",
        "title": "StackTile"
      },
      "index": {
        "description": "stacking layout like dishes but with the ability to resize master pane Mostly useful on small screens",
        "hierarchy": "XMonad Layout StackTile",
        "module": "XMonad.Layout.StackTile",
        "name": "StackTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Stack Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-StackTile.html#t:StackTile",
      "description": {
        "fct-module": "XMonad.Layout.StackTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-StackTile.html#StackTile",
        "fct-type": "data",
        "title": "StackTile"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout StackTile",
        "module": "XMonad.Layout.StackTile",
        "name": "StackTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Stack Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-StackTile.html#v:StackTile",
      "description": {
        "fct-module": "XMonad.Layout.StackTile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "StackTile !Int !Rational !Rational",
        "fct-source": "src/XMonad-Layout-StackTile.html#StackTile",
        "fct-type": "function",
        "title": "StackTile"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout StackTile",
        "module": "XMonad.Layout.StackTile",
        "name": "StackTile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Stack Tile",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout combinator that allows layouts to be nested.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-SubLayouts.html",
        "fct-type": "module",
        "title": "SubLayouts"
      },
      "index": {
        "description": "layout combinator that allows layouts to be nested",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "SubLayouts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sub Layouts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#t:Broadcast",
      "description": {
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#Broadcast",
        "fct-type": "data",
        "title": "Broadcast"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "Broadcast",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Broadcast",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#t:GroupMsg",
      "description": {
        "fct-descr": "\u003cp\u003eGroupMsg take window parameters to determine which group the action should\n be applied to\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "data",
        "title": "GroupMsg"
      },
      "index": {
        "description": "GroupMsg take window parameters to determine which group the action should be applied to",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "GroupMsg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Group Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:Broadcast",
      "description": {
        "fct-descr": "\u003cp\u003esend a message to all sublayouts\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Broadcast SomeMessage",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#Broadcast",
        "fct-type": "function",
        "title": "Broadcast"
      },
      "index": {
        "description": "send message to all sublayouts",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "Broadcast",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Broadcast",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:Merge",
      "description": {
        "fct-descr": "\u003cp\u003emerge the first group into the second group\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Merge a a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "Merge"
      },
      "index": {
        "description": "merge the first group into the second group",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "Merge",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:MergeAll",
      "description": {
        "fct-descr": "\u003cp\u003emake one large group, keeping the parameter focused\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MergeAll a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "MergeAll"
      },
      "index": {
        "description": "make one large group keeping the parameter focused",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "MergeAll",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Merge All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:Migrate",
      "description": {
        "fct-descr": "\u003cp\u003eused to the window named in the first argument to the\n second argument's group, this may be replaced by a\n combination of \u003ccode\u003e\u003ca\u003eUnMerge\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eMerge\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Migrate a a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "Migrate"
      },
      "index": {
        "description": "used to the window named in the first argument to the second argument group this may be replaced by combination of UnMerge and Merge",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "Migrate",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Migrate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:SubMessage",
      "description": {
        "fct-descr": "\u003cp\u003ethe sublayout with the given window will get the message\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SubMessage SomeMessage a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "SubMessage"
      },
      "index": {
        "description": "the sublayout with the given window will get the message",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "SubMessage",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sub Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:UnMerge",
      "description": {
        "fct-descr": "\u003cp\u003efree the focused window from its tab stack\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UnMerge a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "UnMerge"
      },
      "index": {
        "description": "free the focused window from its tab stack",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "UnMerge",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Un Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:UnMergeAll",
      "description": {
        "fct-descr": "\u003cp\u003eseparate the focused group into singleton groups\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "UnMergeAll a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "UnMergeAll"
      },
      "index": {
        "description": "separate the focused group into singleton groups",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "UnMergeAll",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Un Merge All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:WithGroup",
      "description": {
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WithGroup (Stack a -\u003e X (Stack a)) a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#GroupMsg",
        "fct-type": "function",
        "title": "WithGroup"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "WithGroup",
        "normalized": "WithGroup(Stack a-\u003eX(Stack a))a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With Group",
        "signature": "WithGroup(Stack a-\u003eX(Stack a))a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:defaultSublMap",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003edefaultSublMap\u003c/code\u003e is an attempt to create a set of keybindings like the\n defaults ones but to be used as a \u003ccode\u003esubmap\u003c/code\u003e for sending messages to the\n sublayout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e Map (KeyMask, KeySym) (X ())",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#defaultSublMap",
        "fct-type": "function",
        "title": "defaultSublMap"
      },
      "index": {
        "description": "defaultSublMap is an attempt to create set of keybindings like the defaults ones but to be used as submap for sending messages to the sublayout",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "defaultSublMap",
        "normalized": "XConfig a-\u003eMap(KeyMask,KeySym)(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Subl Map",
        "signature": "XConfig l-\u003eMap(KeyMask,KeySym)(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:mergeDir",
      "description": {
        "fct-descr": "\u003cp\u003emerge the window that would be focused by the function when applied to the\n W.Stack of all windows, with the current group removed. The given window\n should be focused by a sublayout. Example usage: \u003ccode\u003ewithFocused (sendMessage .\n mergeDir W.focusDown')\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack Window -\u003e Stack Window) -\u003e Window -\u003e GroupMsg Window",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#mergeDir",
        "fct-type": "function",
        "title": "mergeDir"
      },
      "index": {
        "description": "merge the window that would be focused by the function when applied to the W.Stack of all windows with the current group removed The given window should be focused by sublayout Example usage withFocused sendMessage mergeDir W.focusDown",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "mergeDir",
        "normalized": "(Stack Window-\u003eStack Window)-\u003eWindow-\u003eGroupMsg Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dir",
        "signature": "(Stack Window-\u003eStack Window)-\u003eWindow-\u003eGroupMsg Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:onGroup",
      "description": {
        "fct-descr": "\u003cp\u003eApply a function on the stack belonging to the currently focused group. It\n works for rearranging windows and for changing focus.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack Window -\u003e Stack Window) -\u003e X ()",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#onGroup",
        "fct-type": "function",
        "title": "onGroup"
      },
      "index": {
        "description": "Apply function on the stack belonging to the currently focused group It works for rearranging windows and for changing focus",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "onGroup",
        "normalized": "(Stack Window-\u003eStack Window)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Group",
        "signature": "(Stack Window-\u003eStack Window)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:pullGroup",
      "description": {
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D -\u003e Navigate",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#pullGroup",
        "fct-type": "function",
        "title": "pullGroup"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "pullGroup",
        "normalized": "Direction D-\u003eNavigate",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Group",
        "signature": "Direction D-\u003eNavigate"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:pullWindow",
      "description": {
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D -\u003e Navigate",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#pullWindow",
        "fct-type": "function",
        "title": "pullWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "pullWindow",
        "normalized": "Direction D-\u003eNavigate",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Direction D-\u003eNavigate"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:pushGroup",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003epullGroup\u003c/code\u003e, \u003ccode\u003epushGroup\u003c/code\u003e allow you to merge windows or groups inheriting\n the position of the current window (pull) or the other window (push).\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003epushWindow\u003c/code\u003e and \u003ccode\u003epullWindow\u003c/code\u003e move individual windows between groups. They\n are less effective at preserving window positions.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D -\u003e Navigate",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#pushGroup",
        "fct-type": "function",
        "title": "pushGroup"
      },
      "index": {
        "description": "pullGroup pushGroup allow you to merge windows or groups inheriting the position of the current window pull or the other window push pushWindow and pullWindow move individual windows between groups They are less effective at preserving window positions",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "pushGroup",
        "normalized": "Direction D-\u003eNavigate",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Group",
        "signature": "Direction D-\u003eNavigate"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:pushWindow",
      "description": {
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction2D -\u003e Navigate",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#pushWindow",
        "fct-type": "function",
        "title": "pushWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "pushWindow",
        "normalized": "Direction D-\u003eNavigate",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Direction D-\u003eNavigate"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:subLayout",
      "description": {
        "fct-descr": "\u003cp\u003eThe main layout modifier arguments:\n\u003c/p\u003e\u003cpre\u003esubLayout advanceInnerLayouts innerLayout outerLayout\u003c/pre\u003e\u003cdl\u003e\u003cdt\u003e\u003ccode\u003eadvanceInnerLayouts\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e When a new group at index \u003ccode\u003en\u003c/code\u003e in the outer layout\n  is created (even with one element), the \u003ccode\u003einnerLayout\u003c/code\u003e is used as the\n  layout within that group after being advanced with \u003ccode\u003eadvanceInnerLayouts !!\n  n\u003c/code\u003e \u003ccode\u003e\u003ca\u003eNextLayout\u003c/a\u003e\u003c/code\u003e messages. If there is no corresponding element in the\n  \u003ccode\u003eadvanceInnerLayouts\u003c/code\u003e list, then \u003ccode\u003einnerLayout\u003c/code\u003e is not given any \u003ccode\u003e\u003ca\u003eNextLayout\u003c/a\u003e\u003c/code\u003e\n  messages.\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003einnerLayout\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e The single layout given to be run as a sublayout.\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eouterLayout\u003c/code\u003e\u003c/dt\u003e\u003cdd\u003e The layout that determines the rectangles given to each\n  group.\n\u003c/dd\u003e\u003c/dl\u003e\u003cp\u003eEx. The second group is \u003ccode\u003e\u003ca\u003eTall\u003c/a\u003e\u003c/code\u003e, the third is \u003ccode\u003eCircle\u003c/code\u003e, all others are tabbed\n  with:\n\u003c/p\u003e\u003cpre\u003e myLayout = addTabs shrinkText defaultTheme\n          $ subLayout [0,1,2] (Simplest ||| Tall 1 0.2 0.5 ||| Circle)\n          $ Tall 1 0.2 0.5 ||| Full\n\u003c/pre\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Int] -\u003e subl a -\u003e l a -\u003e ModifiedLayout (Sublayout subl) l a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#subLayout",
        "fct-type": "function",
        "title": "subLayout"
      },
      "index": {
        "description": "The main layout modifier arguments subLayout advanceInnerLayouts innerLayout outerLayout advanceInnerLayouts When new group at index in the outer layout is created even with one element the innerLayout is used as the layout within that group after being advanced with advanceInnerLayouts NextLayout messages If there is no corresponding element in the advanceInnerLayouts list then innerLayout is not given any NextLayout messages innerLayout The single layout given to be run as sublayout outerLayout The layout that determines the rectangles given to each group Ex The second group is Tall the third is Circle all others are tabbed with myLayout addTabs shrinkText defaultTheme subLayout Simplest Tall Circle Tall Full",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "subLayout",
        "normalized": "[Int]-\u003ea b-\u003ec b-\u003eModifiedLayout(Sublayout a)c b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": "[Int]-\u003esubl a-\u003el a-\u003eModifiedLayout(Sublayout subl)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:subTabbed",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003esubTabbed\u003c/code\u003e is a use of \u003ccode\u003e\u003ca\u003esubLayout\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003e\u003ca\u003eaddTabs\u003c/a\u003e\u003c/code\u003e to show decorations.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) (ModifiedLayout (Sublayout Simplest) l) a",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#subTabbed",
        "fct-type": "function",
        "title": "subTabbed"
      },
      "index": {
        "description": "subTabbed is use of subLayout with addTabs to show decorations",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "subTabbed",
        "normalized": "a b-\u003eModifiedLayout(Decoration TabbedDecoration DefaultShrinker)(ModifiedLayout(Sublayout Simplest)a)b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": "l a-\u003eModifiedLayout(Decoration TabbedDecoration DefaultShrinker)(ModifiedLayout(Sublayout Simplest)l)a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-SubLayouts.html#v:toSubl",
      "description": {
        "fct-descr": "\u003cp\u003eSend a message to the currently focused sublayout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.SubLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e X ()",
        "fct-source": "src/XMonad-Layout-SubLayouts.html#toSubl",
        "fct-type": "function",
        "title": "toSubl"
      },
      "index": {
        "description": "Send message to the currently focused sublayout",
        "hierarchy": "XMonad Layout SubLayouts",
        "module": "XMonad.Layout.SubLayouts",
        "name": "toSubl",
        "normalized": "a-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Subl",
        "signature": "a-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout modifier to add a bar of tabs to your layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-TabBarDecoration.html",
        "fct-type": "module",
        "title": "TabBarDecoration"
      },
      "index": {
        "description": "layout modifier to add bar of tabs to your layouts",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "TabBarDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tab Bar Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#t:TabBarDecoration",
      "description": {
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-TabBarDecoration.html#TabBarDecoration",
        "fct-type": "data",
        "title": "TabBarDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "TabBarDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tab Bar Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#t:XPPosition",
      "description": {
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Prompt.html#XPPosition",
        "fct-type": "data",
        "title": "XPPosition"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "XPPosition",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPPosition",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:Bottom",
      "description": {
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bottom",
        "fct-source": "src/XMonad-Prompt.html#XPPosition",
        "fct-type": "function",
        "title": "Bottom"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "Bottom",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bottom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:TabBar",
      "description": {
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TabBar XPPosition",
        "fct-source": "src/XMonad-Layout-TabBarDecoration.html#TabBarDecoration",
        "fct-type": "function",
        "title": "TabBar"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "TabBar",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tab Bar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:Top",
      "description": {
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Top",
        "fct-source": "src/XMonad-Prompt.html#XPPosition",
        "fct-type": "function",
        "title": "Top"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "Top",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Top",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:defaultTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#defaultTheme",
        "fct-type": "function",
        "title": "defaultTheme"
      },
      "index": {
        "description": "The default xmonad Theme",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "defaultTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:simpleTabBar",
      "description": {
        "fct-descr": "\u003cp\u003eAdd, on the top of the screen, a simple bar of tabs to a given\n | layout, with the default theme and the default shrinker.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout (Decoration TabBarDecoration DefaultShrinker) (ModifiedLayout ResizeScreen l) a",
        "fct-source": "src/XMonad-Layout-TabBarDecoration.html#simpleTabBar",
        "fct-type": "function",
        "title": "simpleTabBar"
      },
      "index": {
        "description": "Add on the top of the screen simple bar of tabs to given layout with the default theme and the default shrinker",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "simpleTabBar",
        "normalized": "a b-\u003eModifiedLayout(Decoration TabBarDecoration DefaultShrinker)(ModifiedLayout ResizeScreen a)b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tab Bar",
        "signature": "l a-\u003eModifiedLayout(Decoration TabBarDecoration DefaultShrinker)(ModifiedLayout ResizeScreen l)a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TabBarDecoration.html#v:tabBar",
      "description": {
        "fct-descr": "\u003cp\u003eSame of \u003ccode\u003e\u003ca\u003esimpleTabBar\u003c/a\u003e\u003c/code\u003e, but with the possibility of setting a\n custom shrinker, a custom theme and the position: \u003ccode\u003e\u003ca\u003eTop\u003c/a\u003e\u003c/code\u003e or\n \u003ccode\u003e\u003ca\u003eBottom\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.TabBarDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e XPPosition -\u003e l a -\u003e ModifiedLayout (Decoration TabBarDecoration s) l a",
        "fct-source": "src/XMonad-Layout-TabBarDecoration.html#tabBar",
        "fct-type": "function",
        "title": "tabBar"
      },
      "index": {
        "description": "Same of simpleTabBar but with the possibility of setting custom shrinker custom theme and the position Top or Bottom",
        "hierarchy": "XMonad Layout TabBarDecoration",
        "module": "XMonad.Layout.TabBarDecoration",
        "name": "tabBar",
        "normalized": "a-\u003eTheme-\u003eXPPosition-\u003eb c-\u003eModifiedLayout(Decoration TabBarDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bar",
        "signature": "s-\u003eTheme-\u003eXPPosition-\u003el a-\u003eModifiedLayout(Decoration TabBarDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA tabbed layout for the Xmonad Window Manager\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-Tabbed.html",
        "fct-type": "module",
        "title": "Tabbed"
      },
      "index": {
        "description": "tabbed layout for the Xmonad Window Manager",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "Tabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#t:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "data",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#t:Shrinker",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Layout-Decoration.html#Shrinker",
        "fct-type": "class",
        "title": "Shrinker"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "Shrinker",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shrinker",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#t:TabbedDecoration",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Tabbed.html#TabbedDecoration",
        "fct-type": "data",
        "title": "TabbedDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "TabbedDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#t:Theme",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e is a record of colors, font etc., to customize a\n \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eFor a collection of \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003es see \u003ca\u003eXMonad.Util.Themes\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "data",
        "title": "Theme"
      },
      "index": {
        "description": "Theme is record of colors font etc to customize DecorationStyle For collection of Theme see XMonad.Util.Themes",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:CustomShrink",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "CustomShrink",
        "fct-source": "src/XMonad-Layout-Decoration.html#CustomShrink",
        "fct-type": "function",
        "title": "CustomShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "CustomShrink",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Shrink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:Tabbed",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Tabbed TabbarLocation TabbarShown",
        "fct-source": "src/XMonad-Layout-Tabbed.html#TabbedDecoration",
        "fct-type": "function",
        "title": "Tabbed"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "Tabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:Theme",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "Theme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:activeBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeBorderColor"
      },
      "index": {
        "description": "Color of the border of the active window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "activeBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:activeColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeColor"
      },
      "index": {
        "description": "Color of the active window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "activeColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:activeTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the active window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "activeTextColor"
      },
      "index": {
        "description": "Color of the text of the active window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "activeTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:addTabs",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier that uses the provided shrinker and theme to add tabs to any layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration TabbedDecoration s) l a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#addTabs",
        "fct-type": "function",
        "title": "addTabs"
      },
      "index": {
        "description": "layout modifier that uses the provided shrinker and theme to add tabs to any layout",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "addTabs",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration TabbedDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabs",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration TabbedDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:addTabsAlways",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration TabbedDecoration s) l a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#addTabsAlways",
        "fct-type": "function",
        "title": "addTabsAlways"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "addTabsAlways",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration TabbedDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabs Always",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration TabbedDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:addTabsBottom",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier that uses the provided shrinker and theme to add tabs to the bottom of any layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration TabbedDecoration s) l a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#addTabsBottom",
        "fct-type": "function",
        "title": "addTabsBottom"
      },
      "index": {
        "description": "layout modifier that uses the provided shrinker and theme to add tabs to the bottom of any layout",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "addTabsBottom",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration TabbedDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabs Bottom",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration TabbedDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:addTabsBottomAlways",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration TabbedDecoration s) l a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#addTabsBottomAlways",
        "fct-type": "function",
        "title": "addTabsBottomAlways"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "addTabsBottomAlways",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration TabbedDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabs Bottom Always",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration TabbedDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:decoHeight",
      "description": {
        "fct-descr": "\u003cp\u003eHeight of the decorations\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoHeight"
      },
      "index": {
        "description": "Height of the decorations",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "decoHeight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Height",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:decoWidth",
      "description": {
        "fct-descr": "\u003cp\u003eMaximum width of the decorations (if supported by the \u003ccode\u003e\u003ca\u003eDecorationStyle\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Dimension",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "decoWidth"
      },
      "index": {
        "description": "Maximum width of the decorations if supported by the DecorationStyle",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "decoWidth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Width",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:defaultTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad \u003ccode\u003e\u003ca\u003eTheme\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Layout-Decoration.html#defaultTheme",
        "fct-type": "function",
        "title": "defaultTheme"
      },
      "index": {
        "description": "The default xmonad Theme",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "defaultTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:fontName",
      "description": {
        "fct-descr": "\u003cp\u003eFont name\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "fontName"
      },
      "index": {
        "description": "Font name",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "fontName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:inactiveBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveBorderColor"
      },
      "index": {
        "description": "Color of the border of the inactive window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "inactiveBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:inactiveColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveColor"
      },
      "index": {
        "description": "Color of the inactive window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "inactiveColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:inactiveTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the inactive window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "inactiveTextColor"
      },
      "index": {
        "description": "Color of the text of the inactive window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "inactiveTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:shrinkIt",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e String -\u003e [String]",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkIt",
        "fct-type": "method",
        "title": "shrinkIt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "shrinkIt",
        "normalized": "a-\u003eString-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "It",
        "signature": "s-\u003eString-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:shrinkText",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DefaultShrinker",
        "fct-source": "src/XMonad-Layout-Decoration.html#shrinkText",
        "fct-type": "function",
        "title": "shrinkText"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "shrinkText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:simpleTabbed",
      "description": {
        "fct-descr": "\u003cp\u003eA tabbed layout with the default xmonad Theme.\n\u003c/p\u003e\u003cp\u003eThis is a minimal working configuration:\n\u003c/p\u003e\u003cpre\u003e import XMonad\n import XMonad.Layout.Tabbed\n main = xmonad defaultConfig { layoutHook = simpleTabbed }\n\u003c/pre\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) Simplest Window",
        "fct-source": "src/XMonad-Layout-Tabbed.html#simpleTabbed",
        "fct-type": "function",
        "title": "simpleTabbed"
      },
      "index": {
        "description": "tabbed layout with the default xmonad Theme This is minimal working configuration import XMonad import XMonad.Layout.Tabbed main xmonad defaultConfig layoutHook simpleTabbed",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "simpleTabbed",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:simpleTabbedAlways",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) Simplest Window",
        "fct-source": "src/XMonad-Layout-Tabbed.html#simpleTabbedAlways",
        "fct-type": "function",
        "title": "simpleTabbedAlways"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "simpleTabbedAlways",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed Always",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:simpleTabbedBottom",
      "description": {
        "fct-descr": "\u003cp\u003eA bottom-tabbed layout with the default xmonad Theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) Simplest Window",
        "fct-source": "src/XMonad-Layout-Tabbed.html#simpleTabbedBottom",
        "fct-type": "function",
        "title": "simpleTabbedBottom"
      },
      "index": {
        "description": "bottom-tabbed layout with the default xmonad Theme",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "simpleTabbedBottom",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed Bottom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:simpleTabbedBottomAlways",
      "description": {
        "fct-descr": "\u003cp\u003eA bottom-tabbed layout with the default xmonad Theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ModifiedLayout (Decoration TabbedDecoration DefaultShrinker) Simplest Window",
        "fct-source": "src/XMonad-Layout-Tabbed.html#simpleTabbedBottomAlways",
        "fct-type": "function",
        "title": "simpleTabbedBottomAlways"
      },
      "index": {
        "description": "bottom-tabbed layout with the default xmonad Theme",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "simpleTabbedBottomAlways",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Tabbed Bottom Always",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:tabbed",
      "description": {
        "fct-descr": "\u003cp\u003eA layout decorated with tabs and the possibility to set a custom\n shrinker and theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabbedDecoration s) Simplest a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#tabbed",
        "fct-type": "function",
        "title": "tabbed"
      },
      "index": {
        "description": "layout decorated with tabs and the possibility to set custom shrinker and theme",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "tabbed",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration a)Simplest b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration s)Simplest a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:tabbedAlways",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabbedDecoration s) Simplest a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#tabbedAlways",
        "fct-type": "function",
        "title": "tabbedAlways"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "tabbedAlways",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration a)Simplest b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Always",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration s)Simplest a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:tabbedBottom",
      "description": {
        "fct-descr": "\u003cp\u003eA layout decorated with tabs at the bottom and the possibility to set a custom\n shrinker and theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabbedDecoration s) Simplest a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#tabbedBottom",
        "fct-type": "function",
        "title": "tabbedBottom"
      },
      "index": {
        "description": "layout decorated with tabs at the bottom and the possibility to set custom shrinker and theme",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "tabbedBottom",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration a)Simplest b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bottom",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration s)Simplest a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:tabbedBottomAlways",
      "description": {
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e ModifiedLayout (Decoration TabbedDecoration s) Simplest a",
        "fct-source": "src/XMonad-Layout-Tabbed.html#tabbedBottomAlways",
        "fct-type": "function",
        "title": "tabbedBottomAlways"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "tabbedBottomAlways",
        "normalized": "a-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration a)Simplest b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bottom Always",
        "signature": "s-\u003eTheme-\u003eModifiedLayout(Decoration TabbedDecoration s)Simplest a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:urgentBorderColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the border of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentBorderColor"
      },
      "index": {
        "description": "Color of the border of the urgent window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "urgentBorderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:urgentColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentColor"
      },
      "index": {
        "description": "Color of the urgent window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "urgentColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:urgentTextColor",
      "description": {
        "fct-descr": "\u003cp\u003eColor of the text of the urgent window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "urgentTextColor"
      },
      "index": {
        "description": "Color of the text of the urgent window",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "urgentTextColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-Tabbed.html#v:windowTitleAddons",
      "description": {
        "fct-descr": "\u003cp\u003eExtra text to appear in a window's title bar\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.Tabbed",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, Align)]",
        "fct-source": "src/XMonad-Layout-Decoration.html#Theme",
        "fct-type": "function",
        "title": "windowTitleAddons"
      },
      "index": {
        "description": "Extra text to appear in window title bar",
        "hierarchy": "XMonad Layout Tabbed",
        "module": "XMonad.Layout.Tabbed",
        "name": "windowTitleAddons",
        "normalized": "[(String,Align)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title Addons",
        "signature": "[(String,Align)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout similar to tall but with three columns. With 2560x1600 pixels this\n layout can be used for a huge main window and up to six reasonable sized\n slave windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html",
        "fct-type": "module",
        "title": "ThreeColumns"
      },
      "index": {
        "description": "layout similar to tall but with three columns With x1600 pixels this layout can be used for huge main window and up to six reasonable sized slave windows",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "ThreeColumns",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Three Columns",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#t:ThreeCol",
      "description": {
        "fct-descr": "\u003cp\u003eArguments are nmaster, delta, fraction\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html#ThreeCol",
        "fct-type": "data",
        "title": "ThreeCol"
      },
      "index": {
        "description": "Arguments are nmaster delta fraction",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "ThreeCol",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Three Col",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#v:ThreeCol",
      "description": {
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThreeCol",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html#ThreeCol",
        "fct-type": "function",
        "title": "ThreeCol"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "ThreeCol",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Three Col",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#v:ThreeColMid",
      "description": {
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThreeColMid",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html#ThreeCol",
        "fct-type": "function",
        "title": "ThreeColMid"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "ThreeColMid",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Three Col Mid",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#v:threeColDelta",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Rational",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html#ThreeCol",
        "fct-type": "function",
        "title": "threeColDelta"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "threeColDelta",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Col Delta",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#v:threeColFrac",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Rational",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html#ThreeCol",
        "fct-type": "function",
        "title": "threeColFrac"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "threeColFrac",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Col Frac",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ThreeColumns.html#v:threeColNMaster",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Layout.ThreeColumns",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Int",
        "fct-source": "src/XMonad-Layout-ThreeColumns.html#ThreeCol",
        "fct-type": "function",
        "title": "threeColNMaster"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ThreeColumns",
        "module": "XMonad.Layout.ThreeColumns",
        "name": "threeColNMaster",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Col NMaster",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ToggleLayouts.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module to toggle between two layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.ToggleLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-ToggleLayouts.html",
        "fct-type": "module",
        "title": "ToggleLayouts"
      },
      "index": {
        "description": "module to toggle between two layouts",
        "hierarchy": "XMonad Layout ToggleLayouts",
        "module": "XMonad.Layout.ToggleLayouts",
        "name": "ToggleLayouts",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Layouts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ToggleLayouts.html#t:ToggleLayout",
      "description": {
        "fct-module": "XMonad.Layout.ToggleLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-ToggleLayouts.html#ToggleLayout",
        "fct-type": "data",
        "title": "ToggleLayout"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ToggleLayouts",
        "module": "XMonad.Layout.ToggleLayouts",
        "name": "ToggleLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ToggleLayouts.html#v:Toggle",
      "description": {
        "fct-module": "XMonad.Layout.ToggleLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Toggle String",
        "fct-source": "src/XMonad-Layout-ToggleLayouts.html#ToggleLayout",
        "fct-type": "function",
        "title": "Toggle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ToggleLayouts",
        "module": "XMonad.Layout.ToggleLayouts",
        "name": "Toggle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ToggleLayouts.html#v:ToggleLayout",
      "description": {
        "fct-module": "XMonad.Layout.ToggleLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ToggleLayout",
        "fct-source": "src/XMonad-Layout-ToggleLayouts.html#ToggleLayout",
        "fct-type": "function",
        "title": "ToggleLayout"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ToggleLayouts",
        "module": "XMonad.Layout.ToggleLayouts",
        "name": "ToggleLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Toggle Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-ToggleLayouts.html#v:toggleLayouts",
      "description": {
        "fct-module": "XMonad.Layout.ToggleLayouts",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "lt a -\u003e lf a -\u003e ToggleLayouts lt lf a",
        "fct-source": "src/XMonad-Layout-ToggleLayouts.html#toggleLayouts",
        "fct-type": "function",
        "title": "toggleLayouts"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout ToggleLayouts",
        "module": "XMonad.Layout.ToggleLayouts",
        "name": "toggleLayouts",
        "normalized": "a b-\u003ec b-\u003eToggleLayouts a c b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layouts",
        "signature": "lt a-\u003elf a-\u003eToggleLayouts lt lf a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TwoPane.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout that splits the screen horizontally and shows two windows.  The\n left window is always the master window, and the right is either the\n currently focused window or the second window in layout order.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.TwoPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-TwoPane.html",
        "fct-type": "module",
        "title": "TwoPane"
      },
      "index": {
        "description": "layout that splits the screen horizontally and shows two windows The left window is always the master window and the right is either the currently focused window or the second window in layout order",
        "hierarchy": "XMonad Layout TwoPane",
        "module": "XMonad.Layout.TwoPane",
        "name": "TwoPane",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Two Pane",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TwoPane.html#t:TwoPane",
      "description": {
        "fct-module": "XMonad.Layout.TwoPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-TwoPane.html#TwoPane",
        "fct-type": "data",
        "title": "TwoPane"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TwoPane",
        "module": "XMonad.Layout.TwoPane",
        "name": "TwoPane",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Two Pane",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-TwoPane.html#v:TwoPane",
      "description": {
        "fct-module": "XMonad.Layout.TwoPane",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TwoPane Rational Rational",
        "fct-source": "src/XMonad-Layout-TwoPane.html#TwoPane",
        "fct-type": "function",
        "title": "TwoPane"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout TwoPane",
        "module": "XMonad.Layout.TwoPane",
        "name": "TwoPane",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Two Pane",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a pure layout modifier that will let you move and resize\n windows with the keyboard in any layout.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-WindowArranger.html",
        "fct-type": "module",
        "title": "WindowArranger"
      },
      "index": {
        "description": "This is pure layout modifier that will let you move and resize windows with the keyboard in any layout",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "WindowArranger",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Arranger",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#t:WindowArranger",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArranger",
        "fct-type": "data",
        "title": "WindowArranger"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "WindowArranger",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Arranger",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#t:WindowArrangerMsg",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "data",
        "title": "WindowArrangerMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "WindowArrangerMsg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Arranger Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:Arrange",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Arrange",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "Arrange"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "Arrange",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Arrange",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:DeArrange",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DeArrange",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "DeArrange"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "DeArrange",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "De Arrange",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:DecreaseDown",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DecreaseDown Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "DecreaseDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "DecreaseDown",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decrease Down",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:DecreaseLeft",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DecreaseLeft Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "DecreaseLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "DecreaseLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decrease Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:DecreaseRight",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DecreaseRight Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "DecreaseRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "DecreaseRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decrease Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:DecreaseUp",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DecreaseUp Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "DecreaseUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "DecreaseUp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Decrease Up",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:IncreaseDown",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncreaseDown Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "IncreaseDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "IncreaseDown",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Increase Down",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:IncreaseLeft",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncreaseLeft Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "IncreaseLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "IncreaseLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Increase Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:IncreaseRight",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncreaseRight Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "IncreaseRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "IncreaseRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Increase Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:IncreaseUp",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IncreaseUp Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "IncreaseUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "IncreaseUp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Increase Up",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:MoveDown",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MoveDown Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "MoveDown"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "MoveDown",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Down",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:MoveLeft",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MoveLeft Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "MoveLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "MoveLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:MoveRight",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MoveRight Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "MoveRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "MoveRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:MoveUp",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MoveUp Int",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "MoveUp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "MoveUp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Up",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:SetGeometry",
      "description": {
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "SetGeometry Rectangle",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#WindowArrangerMsg",
        "fct-type": "function",
        "title": "SetGeometry"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "SetGeometry",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Set Geometry",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:diff",
      "description": {
        "fct-descr": "\u003cp\u003eGet the list of elements to be deleted and the list of elements to\n be added to the first list in order to get the second list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "([a], [a]) -\u003e ([a], [a])",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#diff",
        "fct-type": "function",
        "title": "diff"
      },
      "index": {
        "description": "Get the list of elements to be deleted and the list of elements to be added to the first list in order to get the second list",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "diff",
        "normalized": "([a],[a])-\u003e([a],[a])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "([a],[a])-\u003e([a],[a])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:listFromList",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a function to be applied to each member of a list, and a\n function to check a condition by processing this transformed member\n with the members of a list, you get the list of members that\n satisfy the condition.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(b -\u003e c) -\u003e (c -\u003e [a] -\u003e Bool) -\u003e [a] -\u003e [b] -\u003e [b]",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#listFromList",
        "fct-type": "function",
        "title": "listFromList"
      },
      "index": {
        "description": "Given function to be applied to each member of list and function to check condition by processing this transformed member with the members of list you get the list of members that satisfy the condition",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "listFromList",
        "normalized": "(a-\u003eb)-\u003e(b-\u003e[c]-\u003eBool)-\u003e[c]-\u003e[a]-\u003e[a]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "From List",
        "signature": "(b-\u003ec)-\u003e(c-\u003e[a]-\u003eBool)-\u003e[a]-\u003e[b]-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:memberFromList",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a function to be applied to each member of ta list, and a\n function to check a condition by processing this transformed member\n with something, you get the first member that satisfy the condition,\n or an empty list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(b -\u003e c) -\u003e (c -\u003e a -\u003e Bool) -\u003e a -\u003e [b] -\u003e [b]",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#memberFromList",
        "fct-type": "function",
        "title": "memberFromList"
      },
      "index": {
        "description": "Given function to be applied to each member of ta list and function to check condition by processing this transformed member with something you get the first member that satisfy the condition or an empty list",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "memberFromList",
        "normalized": "(a-\u003eb)-\u003e(b-\u003ec-\u003eBool)-\u003ec-\u003e[a]-\u003e[a]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "From List",
        "signature": "(b-\u003ec)-\u003e(c-\u003ea-\u003eBool)-\u003ea-\u003e[b]-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:windowArrange",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier to float the windows in a workspace\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout WindowArranger l a",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#windowArrange",
        "fct-type": "function",
        "title": "windowArrange"
      },
      "index": {
        "description": "layout modifier to float the windows in workspace",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "windowArrange",
        "normalized": "a b-\u003eModifiedLayout WindowArranger a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Arrange",
        "signature": "l a-\u003eModifiedLayout WindowArranger l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowArranger.html#v:windowArrangeAll",
      "description": {
        "fct-descr": "\u003cp\u003eA layout modifier to float all the windows in a workspace\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowArranger",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout WindowArranger l a",
        "fct-source": "src/XMonad-Layout-WindowArranger.html#windowArrangeAll",
        "fct-type": "function",
        "title": "windowArrangeAll"
      },
      "index": {
        "description": "layout modifier to float all the windows in workspace",
        "hierarchy": "XMonad Layout WindowArranger",
        "module": "XMonad.Layout.WindowArranger",
        "name": "windowArrangeAll",
        "normalized": "a b-\u003eModifiedLayout WindowArranger a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Arrange All",
        "signature": "l a-\u003eModifiedLayout WindowArranger l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eWindowNavigation is an extension to allow easy navigation of a workspace.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html",
        "fct-type": "module",
        "title": "WindowNavigation"
      },
      "index": {
        "description": "WindowNavigation is an extension to allow easy navigation of workspace",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "WindowNavigation",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Navigation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#t:Direction2D",
      "description": {
        "fct-descr": "\u003cp\u003eTwo-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "data",
        "title": "Direction2D"
      },
      "index": {
        "description": "Two-dimensional directions",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "Direction2D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#t:MoveWindowToWindow",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#MoveWindowToWindow",
        "fct-type": "data",
        "title": "MoveWindowToWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "MoveWindowToWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Window To Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#t:Navigate",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#Navigate",
        "fct-type": "data",
        "title": "Navigate"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "Navigate",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Navigate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:Apply",
      "description": {
        "fct-descr": "\u003cp\u003eApply action with destination window\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Apply (Window -\u003e X ()) Direction2D",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#Navigate",
        "fct-type": "function",
        "title": "Apply"
      },
      "index": {
        "description": "Apply action with destination window",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "Apply",
        "normalized": "Apply(Window-\u003eX())Direction D",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Apply",
        "signature": "Apply(Window-\u003eX())Direction D"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:D",
      "description": {
        "fct-descr": "\u003cp\u003eDown\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "D"
      },
      "index": {
        "description": "Down",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:Go",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Go Direction2D",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#Navigate",
        "fct-type": "function",
        "title": "Go"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "Go",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Go",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:L",
      "description": {
        "fct-descr": "\u003cp\u003eLeft\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "Left",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:Move",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Move Direction2D",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#Navigate",
        "fct-type": "function",
        "title": "Move"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "Move",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:MoveWindowToWindow",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "MoveWindowToWindow a a",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#MoveWindowToWindow",
        "fct-type": "function",
        "title": "MoveWindowToWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "MoveWindowToWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Move Window To Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:R",
      "description": {
        "fct-descr": "\u003cp\u003eRight\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "Right",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:Swap",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Swap Direction2D",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#Navigate",
        "fct-type": "function",
        "title": "Swap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "Swap",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Swap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:U",
      "description": {
        "fct-descr": "\u003cp\u003eUp\n\u003c/p\u003e",
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "U",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "U"
      },
      "index": {
        "description": "Up",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "U",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:configurableNavigation",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WNConfig -\u003e l a -\u003e ModifiedLayout WindowNavigation l a",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#configurableNavigation",
        "fct-type": "function",
        "title": "configurableNavigation"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "configurableNavigation",
        "normalized": "WNConfig-\u003ea b-\u003eModifiedLayout WindowNavigation a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Navigation",
        "signature": "WNConfig-\u003el a-\u003eModifiedLayout WindowNavigation l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:defaultWNConfig",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WNConfig",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#defaultWNConfig",
        "fct-type": "function",
        "title": "defaultWNConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "defaultWNConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "WNConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:navigateBrightness",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Double -\u003e WNConfig",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#navigateBrightness",
        "fct-type": "function",
        "title": "navigateBrightness"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "navigateBrightness",
        "normalized": "Double-\u003eWNConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Brightness",
        "signature": "Double-\u003eWNConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:navigateColor",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e WNConfig",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#navigateColor",
        "fct-type": "function",
        "title": "navigateColor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "navigateColor",
        "normalized": "String-\u003eWNConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": "String-\u003eWNConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:noNavigateBorders",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "WNConfig",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#noNavigateBorders",
        "fct-type": "function",
        "title": "noNavigateBorders"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "noNavigateBorders",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Navigate Borders",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowNavigation.html#v:windowNavigation",
      "description": {
        "fct-module": "XMonad.Layout.WindowNavigation",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "l a -\u003e ModifiedLayout WindowNavigation l a",
        "fct-source": "src/XMonad-Layout-WindowNavigation.html#windowNavigation",
        "fct-type": "function",
        "title": "windowNavigation"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowNavigation",
        "module": "XMonad.Layout.WindowNavigation",
        "name": "windowNavigation",
        "normalized": "a b-\u003eModifiedLayout WindowNavigation a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Navigation",
        "signature": "l a-\u003eModifiedLayout WindowNavigation l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowSwitcherDecoration.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA decoration that allows to switch the position of windows by dragging\n them onto each other.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.WindowSwitcherDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-WindowSwitcherDecoration.html",
        "fct-type": "module",
        "title": "WindowSwitcherDecoration"
      },
      "index": {
        "description": "decoration that allows to switch the position of windows by dragging them onto each other",
        "hierarchy": "XMonad Layout WindowSwitcherDecoration",
        "module": "XMonad.Layout.WindowSwitcherDecoration",
        "name": "WindowSwitcherDecoration",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Switcher Decoration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowSwitcherDecoration.html#v:windowSwitcherDecoration",
      "description": {
        "fct-module": "XMonad.Layout.WindowSwitcherDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration WindowSwitcherDecoration s) l a",
        "fct-source": "src/XMonad-Layout-WindowSwitcherDecoration.html#windowSwitcherDecoration",
        "fct-type": "function",
        "title": "windowSwitcherDecoration"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowSwitcherDecoration",
        "module": "XMonad.Layout.WindowSwitcherDecoration",
        "name": "windowSwitcherDecoration",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration WindowSwitcherDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Switcher Decoration",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration WindowSwitcherDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WindowSwitcherDecoration.html#v:windowSwitcherDecorationWithButtons",
      "description": {
        "fct-module": "XMonad.Layout.WindowSwitcherDecoration",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "s -\u003e Theme -\u003e l a -\u003e ModifiedLayout (Decoration WindowSwitcherDecoration s) l a",
        "fct-source": "src/XMonad-Layout-WindowSwitcherDecoration.html#windowSwitcherDecorationWithButtons",
        "fct-type": "function",
        "title": "windowSwitcherDecorationWithButtons"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WindowSwitcherDecoration",
        "module": "XMonad.Layout.WindowSwitcherDecoration",
        "name": "windowSwitcherDecorationWithButtons",
        "normalized": "a-\u003eTheme-\u003eb c-\u003eModifiedLayout(Decoration WindowSwitcherDecoration a)b c",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Switcher Decoration With Buttons",
        "signature": "s-\u003eTheme-\u003el a-\u003eModifiedLayout(Decoration WindowSwitcherDecoration s)l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WorkspaceDir.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eWorkspaceDir is an extension to set the current directory in a workspace.\n\u003c/p\u003e\u003cp\u003eActually, it sets the current directory in a layout, since there's no way I\n know of to attach a behavior to a workspace.  This means that any terminals\n (or other programs) pulled up in that workspace (with that layout) will\n execute in that working directory.  Sort of handy, I think.\n\u003c/p\u003e\u003cp\u003eNote this extension requires the \u003ccode\u003edirectory\u003c/code\u003e package to be installed.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Layout.WorkspaceDir",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Layout-WorkspaceDir.html",
        "fct-type": "module",
        "title": "WorkspaceDir"
      },
      "index": {
        "description": "WorkspaceDir is an extension to set the current directory in workspace Actually it sets the current directory in layout since there no way know of to attach behavior to workspace This means that any terminals or other programs pulled up in that workspace with that layout will execute in that working directory Sort of handy think Note this extension requires the directory package to be installed",
        "hierarchy": "XMonad Layout WorkspaceDir",
        "module": "XMonad.Layout.WorkspaceDir",
        "name": "WorkspaceDir",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WorkspaceDir.html#v:changeDir",
      "description": {
        "fct-module": "XMonad.Layout.WorkspaceDir",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Layout-WorkspaceDir.html#changeDir",
        "fct-type": "function",
        "title": "changeDir"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WorkspaceDir",
        "module": "XMonad.Layout.WorkspaceDir",
        "name": "changeDir",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dir",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Layout-WorkspaceDir.html#v:workspaceDir",
      "description": {
        "fct-module": "XMonad.Layout.WorkspaceDir",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e l a -\u003e ModifiedLayout WorkspaceDir l a",
        "fct-source": "src/XMonad-Layout-WorkspaceDir.html#workspaceDir",
        "fct-type": "function",
        "title": "workspaceDir"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Layout WorkspaceDir",
        "module": "XMonad.Layout.WorkspaceDir",
        "name": "workspaceDir",
        "normalized": "String-\u003ea b-\u003eModifiedLayout WorkspaceDir a b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dir",
        "signature": "String-\u003el a-\u003eModifiedLayout WorkspaceDir l a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-AppLauncher.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for launch applicationes that receive parameters in the command\n line. The launcher call a prompt to get the parameters.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.AppLauncher",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-AppLauncher.html",
        "fct-type": "module",
        "title": "AppLauncher"
      },
      "index": {
        "description": "module for launch applicationes that receive parameters in the command line The launcher call prompt to get the parameters",
        "hierarchy": "XMonad Prompt AppLauncher",
        "module": "XMonad.Prompt.AppLauncher",
        "name": "AppLauncher",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "App Launcher",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-AppLauncher.html#v:launchApp",
      "description": {
        "fct-descr": "\u003cp\u003eGet the user's response to a prompt an launch an application using the\n   input as command parameters of the application.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.AppLauncher",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e Application -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-AppLauncher.html#launchApp",
        "fct-type": "function",
        "title": "launchApp"
      },
      "index": {
        "description": "Get the user response to prompt an launch an application using the input as command parameters of the application",
        "hierarchy": "XMonad Prompt AppLauncher",
        "module": "XMonad.Prompt.AppLauncher",
        "name": "launchApp",
        "normalized": "XPConfig-\u003eApplication-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "App",
        "signature": "XPConfig-\u003eApplication-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-AppendFile.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA prompt for appending a single line of text to a file.  Useful for\n keeping a file of notes, things to remember for later, and so on---\n using a keybinding, you can write things down just about as quickly\n as you think of them, so it doesn't have to interrupt whatever else\n you're doing.\n\u003c/p\u003e\u003cp\u003eWho knows, it might be useful for other purposes as well!\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.AppendFile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-AppendFile.html",
        "fct-type": "module",
        "title": "AppendFile"
      },
      "index": {
        "description": "prompt for appending single line of text to file Useful for keeping file of notes things to remember for later and so on using keybinding you can write things down just about as quickly as you think of them so it doesn have to interrupt whatever else you re doing Who knows it might be useful for other purposes as well",
        "hierarchy": "XMonad Prompt AppendFile",
        "module": "XMonad.Prompt.AppendFile",
        "name": "AppendFile",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Append File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-AppendFile.html#v:appendFilePrompt",
      "description": {
        "fct-descr": "\u003cp\u003eGiven an XPrompt configuration and a file path, prompt the user\n   for a line of text, and append it to the given file.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.AppendFile",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e FilePath -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-AppendFile.html#appendFilePrompt",
        "fct-type": "function",
        "title": "appendFilePrompt"
      },
      "index": {
        "description": "Given an XPrompt configuration and file path prompt the user for line of text and append it to the given file",
        "hierarchy": "XMonad Prompt AppendFile",
        "module": "XMonad.Prompt.AppendFile",
        "name": "appendFilePrompt",
        "normalized": "XPConfig-\u003eFilePath-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "File Prompt",
        "signature": "XPConfig-\u003eFilePath-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-DirExec.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA directory file executables prompt for XMonad. This might be useful if you\n don't want to have scripts in your PATH environment variable (same\n executable names, different behavior) - otherwise you might want to use\n \u003ca\u003eXMonad.Prompt.Shell\u003c/a\u003e instead - but you want to have easy access to these\n executables through the xmonad's prompt.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.DirExec",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-DirExec.html",
        "fct-type": "module",
        "title": "DirExec"
      },
      "index": {
        "description": "directory file executables prompt for XMonad This might be useful if you don want to have scripts in your PATH environment variable same executable names different behavior otherwise you might want to use XMonad.Prompt.Shell instead but you want to have easy access to these executables through the xmonad prompt",
        "hierarchy": "XMonad Prompt DirExec",
        "module": "XMonad.Prompt.DirExec",
        "name": "DirExec",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dir Exec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-DirExec.html#v:dirExecPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eFunction \u003ccode\u003e\u003ca\u003edirExecPrompt\u003c/a\u003e\u003c/code\u003e starts the prompt with list of all executable\n files in directory specified by \u003ccode\u003e\u003ca\u003eFilePath\u003c/a\u003e\u003c/code\u003e. The name of the prompt is taken\n from the last element of the path. If you specify root directory - \u003ccode\u003e/\u003c/code\u003e - as\n the path, name \u003ccode\u003eRoot:\u003c/code\u003e will be used as the name of the prompt instead. The\n \u003ccode\u003e\u003ca\u003eXPConfig\u003c/a\u003e\u003c/code\u003e parameter can be used to customize visuals of the prompt.\n The runner parameter specifies the function used to run the program - see\n usage for more information\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.DirExec",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e (String -\u003e X ()) -\u003e FilePath -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-DirExec.html#dirExecPrompt",
        "fct-type": "function",
        "title": "dirExecPrompt"
      },
      "index": {
        "description": "Function dirExecPrompt starts the prompt with list of all executable files in directory specified by FilePath The name of the prompt is taken from the last element of the path If you specify root directory as the path name Root will be used as the name of the prompt instead The XPConfig parameter can be used to customize visuals of the prompt The runner parameter specifies the function used to run the program see usage for more information",
        "hierarchy": "XMonad Prompt DirExec",
        "module": "XMonad.Prompt.DirExec",
        "name": "dirExecPrompt",
        "normalized": "XPConfig-\u003e(String-\u003eX())-\u003eFilePath-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Exec Prompt",
        "signature": "XPConfig-\u003e(String-\u003eX())-\u003eFilePath-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-DirExec.html#v:dirExecPromptNamed",
      "description": {
        "fct-descr": "\u003cp\u003eFunction \u003ccode\u003e\u003ca\u003edirExecPromptNamed\u003c/a\u003e\u003c/code\u003e does the same as \u003ccode\u003e\u003ca\u003edirExecPrompt\u003c/a\u003e\u003c/code\u003e except\n the name of the prompt is specified by \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e parameter.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.DirExec",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e (String -\u003e X ()) -\u003e FilePath -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-DirExec.html#dirExecPromptNamed",
        "fct-type": "function",
        "title": "dirExecPromptNamed"
      },
      "index": {
        "description": "Function dirExecPromptNamed does the same as dirExecPrompt except the name of the prompt is specified by String parameter",
        "hierarchy": "XMonad Prompt DirExec",
        "module": "XMonad.Prompt.DirExec",
        "name": "dirExecPromptNamed",
        "normalized": "XPConfig-\u003e(String-\u003eX())-\u003eFilePath-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Exec Prompt Named",
        "signature": "XPConfig-\u003e(String-\u003eX())-\u003eFilePath-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Directory.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA directory prompt for XMonad\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Directory",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Directory.html",
        "fct-type": "module",
        "title": "Directory"
      },
      "index": {
        "description": "directory prompt for XMonad",
        "hierarchy": "XMonad Prompt Directory",
        "module": "XMonad.Prompt.Directory",
        "name": "Directory",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Directory.html#v:directoryPrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Directory",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e String -\u003e (String -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Directory.html#directoryPrompt",
        "fct-type": "function",
        "title": "directoryPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Directory",
        "module": "XMonad.Prompt.Directory",
        "name": "directoryPrompt",
        "normalized": "XPConfig-\u003eString-\u003e(String-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eString-\u003e(String-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Email.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA prompt for sending quick, one-line emails, via the standard GNU\n 'mail' utility (which must be in your $PATH).  This module is\n intended mostly as an example of using \u003ca\u003eXMonad.Prompt.Input\u003c/a\u003e to\n build an action requiring user input.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Email",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Email.html",
        "fct-type": "module",
        "title": "Email"
      },
      "index": {
        "description": "prompt for sending quick one-line emails via the standard GNU mail utility which must be in your PATH This module is intended mostly as an example of using XMonad.Prompt.Input to build an action requiring user input",
        "hierarchy": "XMonad Prompt Email",
        "module": "XMonad.Prompt.Email",
        "name": "Email",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Email",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Email.html#v:emailPrompt",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt the user for a recipient, subject, and body, and send an\n   email via the GNU 'mail' utility.  The second argument is a list\n   of addresses for autocompletion.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Email",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e [String] -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Email.html#emailPrompt",
        "fct-type": "function",
        "title": "emailPrompt"
      },
      "index": {
        "description": "Prompt the user for recipient subject and body and send an email via the GNU mail utility The second argument is list of addresses for autocompletion",
        "hierarchy": "XMonad Prompt Email",
        "module": "XMonad.Prompt.Email",
        "name": "emailPrompt",
        "normalized": "XPConfig-\u003e[String]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003e[String]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Input.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA generic framework for prompting the user for input and passing it\n along to some other action.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Input",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Input.html",
        "fct-type": "module",
        "title": "Input"
      },
      "index": {
        "description": "generic framework for prompting the user for input and passing it along to some other action",
        "hierarchy": "XMonad Prompt Input",
        "module": "XMonad.Prompt.Input",
        "name": "Input",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Input.html#v:-63--43-",
      "description": {
        "fct-descr": "\u003cp\u003eA combinator for hooking up an input prompt action to a function\n   which can take the result of the input prompt and produce another\n   action. If the user cancels the input prompt, the\n   second function will not be run.\n\u003c/p\u003e\u003cp\u003eThe astute student of types will note that this is actually a\n   very general combinator and has nothing in particular to do\n   with input prompts.  If you find a more general use for it and\n   want to move it to a different module, be my guest.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Input",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m (Maybe a) -\u003e (a -\u003e m ()) -\u003e m ()",
        "fct-source": "src/XMonad-Prompt-Input.html#%3F%2B",
        "fct-type": "function",
        "title": "(?+)"
      },
      "index": {
        "description": "combinator for hooking up an input prompt action to function which can take the result of the input prompt and produce another action If the user cancels the input prompt the second function will not be run The astute student of types will note that this is actually very general combinator and has nothing in particular to do with input prompts If you find more general use for it and want to move it to different module be my guest",
        "hierarchy": "XMonad Prompt Input",
        "module": "XMonad.Prompt.Input",
        "name": "(?+) ?+",
        "normalized": "a(Maybe b)-\u003e(b-\u003ea())-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "m(Maybe a)-\u003e(a-\u003em())-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Input.html#v:inputPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a prompt configuration and some prompt text, create an X\n   action which pops up a prompt waiting for user input, and returns\n   whatever they type.  Note that the type of the action is \u003ccode\u003eX\n   (Maybe String)\u003c/code\u003e, which reflects the fact that the user might\n   cancel the prompt (resulting in \u003ccode\u003eNothing\u003c/code\u003e), or enter an input\n   string \u003ccode\u003es\u003c/code\u003e (resulting in \u003ccode\u003eJust s\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Input",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e String -\u003e X (Maybe String)",
        "fct-source": "src/XMonad-Prompt-Input.html#inputPrompt",
        "fct-type": "function",
        "title": "inputPrompt"
      },
      "index": {
        "description": "Given prompt configuration and some prompt text create an action which pops up prompt waiting for user input and returns whatever they type Note that the type of the action is Maybe String which reflects the fact that the user might cancel the prompt resulting in Nothing or enter an input string resulting in Just",
        "hierarchy": "XMonad Prompt Input",
        "module": "XMonad.Prompt.Input",
        "name": "inputPrompt",
        "normalized": "XPConfig-\u003eString-\u003eX(Maybe String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eString-\u003eX(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Input.html#v:inputPromptWithCompl",
      "description": {
        "fct-descr": "\u003cp\u003eThe same as \u003ccode\u003e\u003ca\u003einputPrompt\u003c/a\u003e\u003c/code\u003e, but with a completion function.  The\n   type \u003ccode\u003eComplFunction\u003c/code\u003e is \u003ccode\u003eString -\u003e IO [String]\u003c/code\u003e, as defined in\n   \u003ca\u003eXMonad.Prompt\u003c/a\u003e.  The \u003ccode\u003e\u003ca\u003emkComplFunFromList\u003c/a\u003e\u003c/code\u003e utility function, also\n   defined in \u003ca\u003eXMonad.Prompt\u003c/a\u003e, is useful for creating such a\n   function from a known list of possibilities.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Input",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e String -\u003e ComplFunction -\u003e X (Maybe String)",
        "fct-source": "src/XMonad-Prompt-Input.html#inputPromptWithCompl",
        "fct-type": "function",
        "title": "inputPromptWithCompl"
      },
      "index": {
        "description": "The same as inputPrompt but with completion function The type ComplFunction is String IO String as defined in XMonad.Prompt The mkComplFunFromList utility function also defined in XMonad.Prompt is useful for creating such function from known list of possibilities",
        "hierarchy": "XMonad Prompt Input",
        "module": "XMonad.Prompt.Input",
        "name": "inputPromptWithCompl",
        "normalized": "XPConfig-\u003eString-\u003eComplFunction-\u003eX(Maybe String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt With Compl",
        "signature": "XPConfig-\u003eString-\u003eComplFunction-\u003eX(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Layout.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA layout-selection prompt for XMonad\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Layout",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Layout.html",
        "fct-type": "module",
        "title": "Layout"
      },
      "index": {
        "description": "layout-selection prompt for XMonad",
        "hierarchy": "XMonad Prompt Layout",
        "module": "XMonad.Prompt.Layout",
        "name": "Layout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Layout.html#v:layoutPrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Layout",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Layout.html#layoutPrompt",
        "fct-type": "function",
        "title": "layoutPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Layout",
        "module": "XMonad.Prompt.Layout",
        "name": "layoutPrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Man.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA manual page prompt for XMonad window manager.\n\u003c/p\u003e\u003cp\u003eTODO\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e narrow completions by section number, if the one is specified\n     (like \u003ccode\u003e/etc/bash_completion\u003c/code\u003e does)\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Man",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Man.html",
        "fct-type": "module",
        "title": "Man"
      },
      "index": {
        "description": "manual page prompt for XMonad window manager TODO narrow completions by section number if the one is specified like etc bash completion does",
        "hierarchy": "XMonad Prompt Man",
        "module": "XMonad.Prompt.Man",
        "name": "Man",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Man",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Man.html#v:getCommandOutput",
      "description": {
        "fct-descr": "\u003cp\u003eRun a command using shell and return its output.\n\u003c/p\u003e\u003cp\u003eXXX Merge into \u003ccode\u003eXMonad.Util.Run\u003c/code\u003e?\n\u003c/p\u003e\u003cp\u003e(Ask \"gurus\" whether \u003ccode\u003eevaluate (length ...)\u003c/code\u003e approach is\n better/more idiomatic.)\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Man",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e IO String",
        "fct-source": "src/XMonad-Prompt-Man.html#getCommandOutput",
        "fct-type": "function",
        "title": "getCommandOutput"
      },
      "index": {
        "description": "Run command using shell and return its output XXX Merge into XMonad.Util.Run Ask gurus whether evaluate length approach is better more idiomatic",
        "hierarchy": "XMonad Prompt Man",
        "module": "XMonad.Prompt.Man",
        "name": "getCommandOutput",
        "normalized": "String-\u003eIO String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Command Output",
        "signature": "String-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Man.html#v:manPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eQuery for manual page to be displayed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Man",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Man.html#manPrompt",
        "fct-type": "function",
        "title": "manPrompt"
      },
      "index": {
        "description": "Query for manual page to be displayed",
        "hierarchy": "XMonad Prompt Man",
        "module": "XMonad.Prompt.Man",
        "name": "manPrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-RunOrRaise.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA prompt for XMonad which will run a program, open a file,\n or raise an already running program, depending on context.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.RunOrRaise",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-RunOrRaise.html",
        "fct-type": "module",
        "title": "RunOrRaise"
      },
      "index": {
        "description": "prompt for XMonad which will run program open file or raise an already running program depending on context",
        "hierarchy": "XMonad Prompt RunOrRaise",
        "module": "XMonad.Prompt.RunOrRaise",
        "name": "RunOrRaise",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Run Or Raise",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-RunOrRaise.html#v:runOrRaisePrompt",
      "description": {
        "fct-module": "XMonad.Prompt.RunOrRaise",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-RunOrRaise.html#runOrRaisePrompt",
        "fct-type": "function",
        "title": "runOrRaisePrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt RunOrRaise",
        "module": "XMonad.Prompt.RunOrRaise",
        "name": "runOrRaisePrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or Raise Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA shell prompt for XMonad\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Shell.html",
        "fct-type": "module",
        "title": "Shell"
      },
      "index": {
        "description": "shell prompt for XMonad",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "Shell",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shell",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#t:Shell",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Prompt-Shell.html#Shell",
        "fct-type": "data",
        "title": "Shell"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "Shell",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shell",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:Shell",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Shell",
        "fct-source": "src/XMonad-Prompt-Shell.html#Shell",
        "fct-type": "function",
        "title": "Shell"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "Shell",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shell",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:getBrowser",
      "description": {
        "fct-descr": "\u003cp\u003eAsk the shell what browser the user likes. If the user hasn't defined any\n   $BROWSER, defaults to returning \"firefox\", since that seems to be the most\n   common X web browser.\n   Note that if you don't specify a GUI browser but a textual one, that'll be a problem\n   as \u003ccode\u003e\u003ca\u003egetBrowser\u003c/a\u003e\u003c/code\u003e will be called by functions expecting to be able to just execute the string\n   or pass it to a shell; so in that case, define $BROWSER as something like \"xterm -e elinks\"\n   or as the name of a shell script doing much the same thing. \n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IO String",
        "fct-source": "src/XMonad-Prompt-Shell.html#getBrowser",
        "fct-type": "function",
        "title": "getBrowser"
      },
      "index": {
        "description": "Ask the shell what browser the user likes If the user hasn defined any BROWSER defaults to returning firefox since that seems to be the most common web browser Note that if you don specify GUI browser but textual one that ll be problem as getBrowser will be called by functions expecting to be able to just execute the string or pass it to shell so in that case define BROWSER as something like xterm elinks or as the name of shell script doing much the same thing",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "getBrowser",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Browser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:getCommands",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IO [String]",
        "fct-source": "src/XMonad-Prompt-Shell.html#getCommands",
        "fct-type": "function",
        "title": "getCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "getCommands",
        "normalized": "IO[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Commands",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:getEditor",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003egetBrowser\u003c/a\u003e\u003c/code\u003e, but should be of a text editor. This gets the $EDITOR variable, defaulting to \"emacs\".\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IO String",
        "fct-source": "src/XMonad-Prompt-Shell.html#getEditor",
        "fct-type": "function",
        "title": "getEditor"
      },
      "index": {
        "description": "Like getBrowser but should be of text editor This gets the EDITOR variable defaulting to emacs",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "getEditor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Editor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:getShellCompl",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e String -\u003e IO [String]",
        "fct-source": "src/XMonad-Prompt-Shell.html#getShellCompl",
        "fct-type": "function",
        "title": "getShellCompl"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "getShellCompl",
        "normalized": "[String]-\u003eString-\u003eIO[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Shell Compl",
        "signature": "[String]-\u003eString-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:prompt",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Shell.html#prompt",
        "fct-type": "function",
        "title": "prompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "prompt",
        "normalized": "FilePath-\u003eXPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "FilePath-\u003eXPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:safePrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Shell.html#safePrompt",
        "fct-type": "function",
        "title": "safePrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "safePrompt",
        "normalized": "FilePath-\u003eXPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "FilePath-\u003eXPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:shellPrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Shell.html#shellPrompt",
        "fct-type": "function",
        "title": "shellPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "shellPrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Shell.html#v:split",
      "description": {
        "fct-module": "XMonad.Prompt.Shell",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e [a] -\u003e [[a]]",
        "fct-source": "src/XMonad-Prompt-Shell.html#split",
        "fct-type": "function",
        "title": "split"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Shell",
        "module": "XMonad.Prompt.Shell",
        "name": "split",
        "normalized": "a-\u003e[a]-\u003e[[a]]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003e[a]-\u003e[[a]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Ssh.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA ssh prompt for XMonad\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Ssh",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Ssh.html",
        "fct-type": "module",
        "title": "Ssh"
      },
      "index": {
        "description": "ssh prompt for XMonad",
        "hierarchy": "XMonad Prompt Ssh",
        "module": "XMonad.Prompt.Ssh",
        "name": "Ssh",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ssh",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Ssh.html#v:sshPrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Ssh",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Ssh.html#sshPrompt",
        "fct-type": "function",
        "title": "sshPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Ssh",
        "module": "XMonad.Prompt.Ssh",
        "name": "sshPrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Theme.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA prompt for changing the theme of the current workspace\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Theme",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Theme.html",
        "fct-type": "module",
        "title": "Theme"
      },
      "index": {
        "description": "prompt for changing the theme of the current workspace",
        "hierarchy": "XMonad Prompt Theme",
        "module": "XMonad.Prompt.Theme",
        "name": "Theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Theme.html#v:themePrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Theme",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Theme.html#themePrompt",
        "fct-type": "function",
        "title": "themePrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Theme",
        "module": "XMonad.Prompt.Theme",
        "name": "themePrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Window.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003exprompt operations to bring windows to you, and bring you to windows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Window",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Window.html",
        "fct-type": "module",
        "title": "Window"
      },
      "index": {
        "description": "xprompt operations to bring windows to you and bring you to windows",
        "hierarchy": "XMonad Prompt Window",
        "module": "XMonad.Prompt.Window",
        "name": "Window",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Window.html#v:windowPromptBring",
      "description": {
        "fct-module": "XMonad.Prompt.Window",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Window.html#windowPromptBring",
        "fct-type": "function",
        "title": "windowPromptBring"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Window",
        "module": "XMonad.Prompt.Window",
        "name": "windowPromptBring",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt Bring",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Window.html#v:windowPromptBringCopy",
      "description": {
        "fct-module": "XMonad.Prompt.Window",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Window.html#windowPromptBringCopy",
        "fct-type": "function",
        "title": "windowPromptBringCopy"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Window",
        "module": "XMonad.Prompt.Window",
        "name": "windowPromptBringCopy",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt Bring Copy",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Window.html#v:windowPromptGoto",
      "description": {
        "fct-module": "XMonad.Prompt.Window",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Window.html#windowPromptGoto",
        "fct-type": "function",
        "title": "windowPromptGoto"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Window",
        "module": "XMonad.Prompt.Window",
        "name": "windowPromptGoto",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt Goto",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Workspace.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA workspace prompt for XMonad\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.Workspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-Workspace.html",
        "fct-type": "module",
        "title": "Workspace"
      },
      "index": {
        "description": "workspace prompt for XMonad",
        "hierarchy": "XMonad Prompt Workspace",
        "module": "XMonad.Prompt.Workspace",
        "name": "Workspace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-Workspace.html#v:workspacePrompt",
      "description": {
        "fct-module": "XMonad.Prompt.Workspace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e (String -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-Workspace.html#workspacePrompt",
        "fct-type": "function",
        "title": "workspacePrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt Workspace",
        "module": "XMonad.Prompt.Workspace",
        "name": "workspacePrompt",
        "normalized": "XPConfig-\u003e(String-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003e(String-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-XMonad.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA prompt for running XMonad commands\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt.XMonad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt-XMonad.html",
        "fct-type": "module",
        "title": "XMonad"
      },
      "index": {
        "description": "prompt for running XMonad commands",
        "hierarchy": "XMonad Prompt XMonad",
        "module": "XMonad.Prompt.XMonad",
        "name": "XMonad",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XMonad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-XMonad.html#v:xmonadPrompt",
      "description": {
        "fct-module": "XMonad.Prompt.XMonad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-XMonad.html#xmonadPrompt",
        "fct-type": "function",
        "title": "xmonadPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt XMonad",
        "module": "XMonad.Prompt.XMonad",
        "name": "xmonadPrompt",
        "normalized": "XPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "XPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt-XMonad.html#v:xmonadPromptC",
      "description": {
        "fct-descr": "\u003cp\u003eAn xmonad prompt with a custom command list\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt.XMonad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(String, X ())] -\u003e XPConfig -\u003e X ()",
        "fct-source": "src/XMonad-Prompt-XMonad.html#xmonadPromptC",
        "fct-type": "function",
        "title": "xmonadPromptC"
      },
      "index": {
        "description": "An xmonad prompt with custom command list",
        "hierarchy": "XMonad Prompt XMonad",
        "module": "XMonad.Prompt.XMonad",
        "name": "xmonadPromptC",
        "normalized": "[(String,X())]-\u003eXPConfig-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": "[(String,X())]-\u003eXPConfig-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for writing graphical prompts for XMonad\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Prompt.html",
        "fct-type": "module",
        "title": "Prompt"
      },
      "index": {
        "description": "module for writing graphical prompts for XMonad",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "Prompt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:ComplFunction",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Prompt.html#ComplFunction",
        "fct-type": "type",
        "title": "ComplFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "ComplFunction",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Compl Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:Direction1D",
      "description": {
        "fct-descr": "\u003cp\u003eOne-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "data",
        "title": "Direction1D"
      },
      "index": {
        "description": "One-dimensional directions",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "Direction1D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:HistoryMatches",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Prompt.html#HistoryMatches",
        "fct-type": "data",
        "title": "HistoryMatches"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "HistoryMatches",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "History Matches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:XP",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Prompt.html#XP",
        "fct-type": "type",
        "title": "XP"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XP",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:XPConfig",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "data",
        "title": "XPConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XPConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:XPPosition",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Prompt.html#XPPosition",
        "fct-type": "data",
        "title": "XPPosition"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XPPosition",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPPosition",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:XPType",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Prompt.html#XPType",
        "fct-type": "data",
        "title": "XPType"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XPType",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPType",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#t:XPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eThe class prompt types must be an instance of. In order to\n create a prompt you need to create a data type, without parameters,\n and make it an instance of this class, by implementing a simple\n method, \u003ccode\u003e\u003ca\u003eshowXPrompt\u003c/a\u003e\u003c/code\u003e, which will be used to print the string to be\n displayed in the command line window.\n\u003c/p\u003e\u003cp\u003eThis is an example of a XPrompt instance definition:\n\u003c/p\u003e\u003cpre\u003e     instance XPrompt Shell where\n          showXPrompt Shell = \"Run: \"\n\u003c/pre\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Prompt.html#XPrompt",
        "fct-type": "class",
        "title": "XPrompt"
      },
      "index": {
        "description": "The class prompt types must be an instance of In order to create prompt you need to create data type without parameters and make it an instance of this class by implementing simple method showXPrompt which will be used to print the string to be displayed in the command line window This is an example of XPrompt instance definition instance XPrompt Shell where showXPrompt Shell Run",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XPrompt",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPrompt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:Bottom",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bottom",
        "fct-source": "src/XMonad-Prompt.html#XPPosition",
        "fct-type": "function",
        "title": "Bottom"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "Bottom",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Bottom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:Next",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Next",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Next"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "Next",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:Prev",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Prev",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Prev"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "Prev",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:Top",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Top",
        "fct-source": "src/XMonad-Prompt.html#XPPosition",
        "fct-type": "function",
        "title": "Top"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "Top",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Top",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:XPC",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPC",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "XPC"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XPC",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:XPT",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPT p",
        "fct-source": "src/XMonad-Prompt.html#XPType",
        "fct-type": "function",
        "title": "XPT"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "XPT",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:amberXPConfig",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig",
        "fct-source": "src/XMonad-Prompt.html#amberXPConfig",
        "fct-type": "function",
        "title": "amberXPConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "amberXPConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:autoComplete",
      "description": {
        "fct-descr": "\u003cp\u003eJust x: if only one completion remains, auto-select it,\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Maybe Int",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "autoComplete"
      },
      "index": {
        "description": "Just if only one completion remains auto-select it",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "autoComplete",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Complete",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:bgColor",
      "description": {
        "fct-descr": "\u003cp\u003eBackground color\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "bgColor"
      },
      "index": {
        "description": "Background color",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "bgColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:bgHLight",
      "description": {
        "fct-descr": "\u003cp\u003eBackground color of a highlighted completion entry\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "bgHLight"
      },
      "index": {
        "description": "Background color of highlighted completion entry",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "bgHLight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "HLight",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:borderColor",
      "description": {
        "fct-descr": "\u003cp\u003eBorder color\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "borderColor"
      },
      "index": {
        "description": "Border color",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "borderColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:breakAtSpace",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e (String, String)",
        "fct-source": "src/XMonad-Prompt.html#breakAtSpace",
        "fct-type": "function",
        "title": "breakAtSpace"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "breakAtSpace",
        "normalized": "String-\u003e(String,String)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "At Space",
        "signature": "String-\u003e(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:commandToComplete",
      "description": {
        "fct-descr": "\u003cp\u003eThis method is used to generate the string to be passed to\n the completion function.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t -\u003e String -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#commandToComplete",
        "fct-type": "method",
        "title": "commandToComplete"
      },
      "index": {
        "description": "This method is used to generate the string to be passed to the completion function",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "commandToComplete",
        "normalized": "a-\u003eString-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Complete",
        "signature": "t-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:completionKey",
      "description": {
        "fct-descr": "\u003cp\u003eKey that should trigger completion\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "KeySym",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "completionKey"
      },
      "index": {
        "description": "Key that should trigger completion",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "completionKey",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Key",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:completionToCommand",
      "description": {
        "fct-descr": "\u003cp\u003eThis method is used to process each completion in order to\n generate the string that will be compared with the command\n presently displayed in the command line. If the prompt is using\n \u003ccode\u003e\u003ca\u003egetNextOfLastWord\u003c/a\u003e\u003c/code\u003e for implementing \u003ccode\u003e\u003ca\u003enextCompletion\u003c/a\u003e\u003c/code\u003e (the\n default implementation), this method is also used to generate,\n from the returned completion, the string that will form the\n next command line when tab is pressed.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t -\u003e String -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#completionToCommand",
        "fct-type": "method",
        "title": "completionToCommand"
      },
      "index": {
        "description": "This method is used to process each completion in order to generate the string that will be compared with the command presently displayed in the command line If the prompt is using getNextOfLastWord for implementing nextCompletion the default implementation this method is also used to generate from the returned completion the string that will form the next command line when tab is pressed",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "completionToCommand",
        "normalized": "a-\u003eString-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Command",
        "signature": "t-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:decodeInput",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Util-Font.html#decodeInput",
        "fct-type": "function",
        "title": "decodeInput"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "decodeInput",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Input",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:defaultText",
      "description": {
        "fct-descr": "\u003cp\u003eThe text by default in the prompt line\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "defaultText"
      },
      "index": {
        "description": "The text by default in the prompt line",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "defaultText",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:defaultXPConfig",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig",
        "fct-source": "src/XMonad-Prompt.html#defaultXPConfig",
        "fct-type": "function",
        "title": "defaultXPConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "defaultXPConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:defaultXPKeymap",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map (KeyMask, KeySym) (XP ())",
        "fct-source": "src/XMonad-Prompt.html#defaultXPKeymap",
        "fct-type": "function",
        "title": "defaultXPKeymap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "defaultXPKeymap",
        "normalized": "Map(KeyMask,KeySym)(XP())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPKeymap",
        "signature": "Map(KeyMask,KeySym)(XP())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:deleteAllDuplicates",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e [String]",
        "fct-source": "src/XMonad-Prompt.html#deleteAllDuplicates",
        "fct-type": "function",
        "title": "deleteAllDuplicates"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "deleteAllDuplicates",
        "normalized": "[String]-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "All Duplicates",
        "signature": "[String]-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:deleteConsecutive",
      "description": {
        "fct-descr": "\u003cp\u003eFunctions to be used with the \u003ccode\u003e\u003ca\u003ehistoryFilter\u003c/a\u003e\u003c/code\u003e setting.\n \u003ccode\u003e\u003ca\u003edeleteAllDuplicates\u003c/a\u003e\u003c/code\u003e will remove all duplicate entries.\n \u003ccode\u003e\u003ca\u003edeleteConsecutive\u003c/a\u003e\u003c/code\u003e will only remove duplicate elements\n immediately next to each other.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e [String]",
        "fct-source": "src/XMonad-Prompt.html#deleteConsecutive",
        "fct-type": "function",
        "title": "deleteConsecutive"
      },
      "index": {
        "description": "Functions to be used with the historyFilter setting deleteAllDuplicates will remove all duplicate entries deleteConsecutive will only remove duplicate elements immediately next to each other",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "deleteConsecutive",
        "normalized": "[String]-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Consecutive",
        "signature": "[String]-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:deleteString",
      "description": {
        "fct-descr": "\u003cp\u003eRemove a character at the cursor position\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#deleteString",
        "fct-type": "function",
        "title": "deleteString"
      },
      "index": {
        "description": "Remove character at the cursor position",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "deleteString",
        "normalized": "Direction D-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String",
        "signature": "Direction D-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:encodeOutput",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Util-Font.html#encodeOutput",
        "fct-type": "function",
        "title": "encodeOutput"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "encodeOutput",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Output",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:endOfLine",
      "description": {
        "fct-descr": "\u003cp\u003ePut the cursor at the end of line\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP ()",
        "fct-source": "src/XMonad-Prompt.html#endOfLine",
        "fct-type": "function",
        "title": "endOfLine"
      },
      "index": {
        "description": "Put the cursor at the end of line",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "endOfLine",
        "normalized": "XP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Of Line",
        "signature": "XP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:fgColor",
      "description": {
        "fct-descr": "\u003cp\u003eFont color\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "fgColor"
      },
      "index": {
        "description": "Font color",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "fgColor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:fgHLight",
      "description": {
        "fct-descr": "\u003cp\u003eFont color of a highlighted completion entry\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "fgHLight"
      },
      "index": {
        "description": "Font color of highlighted completion entry",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "fgHLight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "HLight",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:fillDrawable",
      "description": {
        "fct-descr": "\u003cp\u003eFills a \u003ccode\u003e\u003ca\u003eDrawable\u003c/a\u003e\u003c/code\u003e with a rectangle and a border\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e Drawable -\u003e GC -\u003e Pixel -\u003e Pixel -\u003e Dimension -\u003e Dimension -\u003e Dimension -\u003e IO ()",
        "fct-source": "src/XMonad-Prompt.html#fillDrawable",
        "fct-type": "function",
        "title": "fillDrawable"
      },
      "index": {
        "description": "Fills Drawable with rectangle and border",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "fillDrawable",
        "normalized": "Display-\u003eDrawable-\u003eGC-\u003ePixel-\u003ePixel-\u003eDimension-\u003eDimension-\u003eDimension-\u003eIO()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Drawable",
        "signature": "Display-\u003eDrawable-\u003eGC-\u003ePixel-\u003ePixel-\u003eDimension-\u003eDimension-\u003eDimension-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:font",
      "description": {
        "fct-descr": "\u003cp\u003eFont\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "font"
      },
      "index": {
        "description": "Font",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "font",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:getInput",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the current input string. Intented for use in custom keymaps\n where the \u003ccode\u003e\u003ca\u003eget\u003c/a\u003e\u003c/code\u003e or similar can't be used to retrieve it.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP String",
        "fct-source": "src/XMonad-Prompt.html#getInput",
        "fct-type": "function",
        "title": "getInput"
      },
      "index": {
        "description": "Returns the current input string Intented for use in custom keymaps where the get or similar can be used to retrieve it",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "getInput",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:getLastWord",
      "description": {
        "fct-descr": "\u003cp\u003eGets the last word of a string or the whole string if formed by\n only one word\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#getLastWord",
        "fct-type": "function",
        "title": "getLastWord"
      },
      "index": {
        "description": "Gets the last word of string or the whole string if formed by only one word",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "getLastWord",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Last Word",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:getNextCompletion",
      "description": {
        "fct-descr": "\u003cp\u003eAn alternative \u003ccode\u003e\u003ca\u003enextCompletion\u003c/a\u003e\u003c/code\u003e implementation: given a command\n and a completion list, get the next completion in the list matching\n the whole command line.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e [String] -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#getNextCompletion",
        "fct-type": "function",
        "title": "getNextCompletion"
      },
      "index": {
        "description": "An alternative nextCompletion implementation given command and completion list get the next completion in the list matching the whole command line",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "getNextCompletion",
        "normalized": "String-\u003e[String]-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Completion",
        "signature": "String-\u003e[String]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:getNextOfLastWord",
      "description": {
        "fct-descr": "\u003cp\u003eGiven the prompt type, the command line and the completion list,\n return the next completion in the list for the last word of the\n command line. This is the default \u003ccode\u003e\u003ca\u003enextCompletion\u003c/a\u003e\u003c/code\u003e implementation.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t -\u003e String -\u003e [String] -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#getNextOfLastWord",
        "fct-type": "function",
        "title": "getNextOfLastWord"
      },
      "index": {
        "description": "Given the prompt type the command line and the completion list return the next completion in the list for the last word of the command line This is the default nextCompletion implementation",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "getNextOfLastWord",
        "normalized": "a-\u003eString-\u003e[String]-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next Of Last Word",
        "signature": "t-\u003eString-\u003e[String]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:greenXPConfig",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPConfig",
        "fct-source": "src/XMonad-Prompt.html#greenXPConfig",
        "fct-type": "function",
        "title": "greenXPConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "greenXPConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:height",
      "description": {
        "fct-descr": "\u003cp\u003eWindow height\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Dimension",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "height"
      },
      "index": {
        "description": "Window height",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "height",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:historyCompletion",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ehistoryCompletion\u003c/a\u003e\u003c/code\u003e provides a canned completion function much like\n   \u003ccode\u003egetShellCompl\u003c/code\u003e; you pass it to mkXPrompt, and it will make completions work\n   from the query history stored in ~/.xmonad/history.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ComplFunction",
        "fct-source": "src/XMonad-Prompt.html#historyCompletion",
        "fct-type": "function",
        "title": "historyCompletion"
      },
      "index": {
        "description": "historyCompletion provides canned completion function much like getShellCompl you pass it to mkXPrompt and it will make completions work from the query history stored in xmonad history",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "historyCompletion",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Completion",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:historyCompletionP",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003ehistoryCompletion\u003c/a\u003e\u003c/code\u003e but only uses history data from Prompts whose\n name satisfies the given predicate.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e Bool) -\u003e ComplFunction",
        "fct-source": "src/XMonad-Prompt.html#historyCompletionP",
        "fct-type": "function",
        "title": "historyCompletionP"
      },
      "index": {
        "description": "Like historyCompletion but only uses history data from Prompts whose name satisfies the given predicate",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "historyCompletionP",
        "normalized": "(String-\u003eBool)-\u003eComplFunction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Completion",
        "signature": "(String-\u003eBool)-\u003eComplFunction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:historyDownMatching",
      "description": {
        "fct-descr": "\u003cp\u003eRetrieve the next history element that starts with\n the current input. Pass it the result of initMatches\n when creating the prompt. Example:\n\u003c/p\u003e\u003cpre\u003e ..\n ((modMask,xK_p), shellPrompt . myPrompt =\u003c\u003c initMatches)\n ..\n myPrompt ref = defaultPrompt\n   { promptKeymap = M.union [((0,xK_Up), historyUpMatching ref)\n                            ,((0,xK_Down), historyDownMatching ref)]\n                            (promptKeymap defaultPrompt)\n   , .. }\n\u003c/pre\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HistoryMatches -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#historyDownMatching",
        "fct-type": "function",
        "title": "historyDownMatching"
      },
      "index": {
        "description": "Retrieve the next history element that starts with the current input Pass it the result of initMatches when creating the prompt Example modMask xK shellPrompt myPrompt initMatches myPrompt ref defaultPrompt promptKeymap M.union xK Up historyUpMatching ref xK Down historyDownMatching ref promptKeymap defaultPrompt",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "historyDownMatching",
        "normalized": "HistoryMatches-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Down Matching",
        "signature": "HistoryMatches-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:historyFilter",
      "description": {
        "fct-descr": "\u003cp\u003ea filter to determine which\n history entries to remember\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e [String]",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "historyFilter"
      },
      "index": {
        "description": "filter to determine which history entries to remember",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "historyFilter",
        "normalized": "[String]-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Filter",
        "signature": "[String]-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:historySize",
      "description": {
        "fct-descr": "\u003cp\u003eThe number of history entries to be saved\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Int",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "historySize"
      },
      "index": {
        "description": "The number of history entries to be saved",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "historySize",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Size",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:historyUpMatching",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "HistoryMatches -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#historyUpMatching",
        "fct-type": "function",
        "title": "historyUpMatching"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "historyUpMatching",
        "normalized": "HistoryMatches-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Up Matching",
        "signature": "HistoryMatches-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:initMatches",
      "description": {
        "fct-descr": "\u003cp\u003eInitializes a new HistoryMatches structure to be passed\n to historyUpMatching\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m HistoryMatches",
        "fct-source": "src/XMonad-Prompt.html#initMatches",
        "fct-type": "function",
        "title": "initMatches"
      },
      "index": {
        "description": "Initializes new HistoryMatches structure to be passed to historyUpMatching",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "initMatches",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Matches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:killAfter",
      "description": {
        "fct-descr": "\u003cp\u003eKill the portion of the command including and after the cursor\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP ()",
        "fct-source": "src/XMonad-Prompt.html#killAfter",
        "fct-type": "function",
        "title": "killAfter"
      },
      "index": {
        "description": "Kill the portion of the command including and after the cursor",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "killAfter",
        "normalized": "XP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "After",
        "signature": "XP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:killBefore",
      "description": {
        "fct-descr": "\u003cp\u003eKill the portion of the command before the cursor\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP ()",
        "fct-source": "src/XMonad-Prompt.html#killBefore",
        "fct-type": "function",
        "title": "killBefore"
      },
      "index": {
        "description": "Kill the portion of the command before the cursor",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "killBefore",
        "normalized": "XP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Before",
        "signature": "XP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:killWord",
      "description": {
        "fct-descr": "\u003cp\u003eKill the next/previous word\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#killWord",
        "fct-type": "function",
        "title": "killWord"
      },
      "index": {
        "description": "Kill the next previous word",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "killWord",
        "normalized": "Direction D-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Word",
        "signature": "Direction D-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:mkComplFunFromList",
      "description": {
        "fct-descr": "\u003cp\u003eThis function takes a list of possible completions and returns a\n completions function to be used with \u003ccode\u003e\u003ca\u003emkXPrompt\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e String -\u003e IO [String]",
        "fct-source": "src/XMonad-Prompt.html#mkComplFunFromList",
        "fct-type": "function",
        "title": "mkComplFunFromList"
      },
      "index": {
        "description": "This function takes list of possible completions and returns completions function to be used with mkXPrompt",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "mkComplFunFromList",
        "normalized": "[String]-\u003eString-\u003eIO[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Compl Fun From List",
        "signature": "[String]-\u003eString-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:mkComplFunFromList-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThis function takes a list of possible completions and returns a\n completions function to be used with \u003ccode\u003e\u003ca\u003emkXPrompt\u003c/a\u003e\u003c/code\u003e. If the string is\n null it will return all completions.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e String -\u003e IO [String]",
        "fct-source": "src/XMonad-Prompt.html#mkComplFunFromList%27",
        "fct-type": "function",
        "title": "mkComplFunFromList'"
      },
      "index": {
        "description": "This function takes list of possible completions and returns completions function to be used with mkXPrompt If the string is null it will return all completions",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "mkComplFunFromList'",
        "normalized": "[String]-\u003eString-\u003eIO[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Compl Fun From List'",
        "signature": "[String]-\u003eString-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:mkUnmanagedWindow",
      "description": {
        "fct-descr": "\u003cp\u003eCreates a window with the attribute override_redirect set to True.\n Windows Managers should not touch this kind of windows.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e Screen -\u003e Window -\u003e Position -\u003e Position -\u003e Dimension -\u003e Dimension -\u003e IO Window",
        "fct-source": "src/XMonad-Prompt.html#mkUnmanagedWindow",
        "fct-type": "function",
        "title": "mkUnmanagedWindow"
      },
      "index": {
        "description": "Creates window with the attribute override redirect set to True Windows Managers should not touch this kind of windows",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "mkUnmanagedWindow",
        "normalized": "Display-\u003eScreen-\u003eWindow-\u003ePosition-\u003ePosition-\u003eDimension-\u003eDimension-\u003eIO Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Unmanaged Window",
        "signature": "Display-\u003eScreen-\u003eWindow-\u003ePosition-\u003ePosition-\u003eDimension-\u003eDimension-\u003eIO Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:mkXPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eCreates a prompt given:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e a prompt type, instance of the \u003ccode\u003e\u003ca\u003eXPrompt\u003c/a\u003e\u003c/code\u003e class.\n\u003c/li\u003e\u003cli\u003e a prompt configuration (\u003ccode\u003e\u003ca\u003edefaultXPConfig\u003c/a\u003e\u003c/code\u003e can be used as a\n starting point)\n\u003c/li\u003e\u003cli\u003e a completion function (\u003ccode\u003e\u003ca\u003emkComplFunFromList\u003c/a\u003e\u003c/code\u003e can be used to\n create a completions function given a list of possible completions)\n\u003c/li\u003e\u003cli\u003e an action to be run: the action must take a string and return \u003ccode\u003e\u003ca\u003eX\u003c/a\u003e\u003c/code\u003e ()\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "p -\u003e XPConfig -\u003e ComplFunction -\u003e (String -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Prompt.html#mkXPrompt",
        "fct-type": "function",
        "title": "mkXPrompt"
      },
      "index": {
        "description": "Creates prompt given prompt type instance of the XPrompt class prompt configuration defaultXPConfig can be used as starting point completion function mkComplFunFromList can be used to create completions function given list of possible completions an action to be run the action must take string and return",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "mkXPrompt",
        "normalized": "a-\u003eXPConfig-\u003eComplFunction-\u003e(String-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPrompt",
        "signature": "p-\u003eXPConfig-\u003eComplFunction-\u003e(String-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:mkXPromptWithReturn",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003emkXPrompt\u003c/a\u003e\u003c/code\u003e, except that the action function can have\n   type \u003ccode\u003eString -\u003e X a\u003c/code\u003e, for any \u003ccode\u003ea\u003c/code\u003e, and the final action returned\n   by \u003ccode\u003e\u003ca\u003emkXPromptWithReturn\u003c/a\u003e\u003c/code\u003e will have type \u003ccode\u003eX (Maybe a)\u003c/code\u003e.  \u003ccode\u003eNothing\u003c/code\u003e\n   is yielded if the user cancels the prompt (by e.g. hitting Esc or\n   Ctrl-G).  For an example of use, see the \u003ccode\u003eXMonad.Prompt.Input\u003c/code\u003e\n   module.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "p -\u003e XPConfig -\u003e ComplFunction -\u003e (String -\u003e X a) -\u003e X (Maybe a)",
        "fct-source": "src/XMonad-Prompt.html#mkXPromptWithReturn",
        "fct-type": "function",
        "title": "mkXPromptWithReturn"
      },
      "index": {
        "description": "Same as mkXPrompt except that the action function can have type String for any and the final action returned by mkXPromptWithReturn will have type Maybe Nothing is yielded if the user cancels the prompt by e.g hitting Esc or Ctrl-G For an example of use see the XMonad.Prompt.Input module",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "mkXPromptWithReturn",
        "normalized": "a-\u003eXPConfig-\u003eComplFunction-\u003e(String-\u003eX b)-\u003eX(Maybe b)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPrompt With Return",
        "signature": "p-\u003eXPConfig-\u003eComplFunction-\u003e(String-\u003eX a)-\u003eX(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:moveCursor",
      "description": {
        "fct-descr": "\u003cp\u003emove the cursor one position\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#moveCursor",
        "fct-type": "function",
        "title": "moveCursor"
      },
      "index": {
        "description": "move the cursor one position",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "moveCursor",
        "normalized": "Direction D-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cursor",
        "signature": "Direction D-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:moveHistory",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(Stack String -\u003e Stack String) -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#moveHistory",
        "fct-type": "function",
        "title": "moveHistory"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "moveHistory",
        "normalized": "(Stack String-\u003eStack String)-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "History",
        "signature": "(Stack String-\u003eStack String)-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:moveWord",
      "description": {
        "fct-descr": "\u003cp\u003emove the cursor one word\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Direction1D -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#moveWord",
        "fct-type": "function",
        "title": "moveWord"
      },
      "index": {
        "description": "move the cursor one word",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "moveWord",
        "normalized": "Direction D-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Word",
        "signature": "Direction D-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:nextCompletion",
      "description": {
        "fct-descr": "\u003cp\u003eThis method is used to generate the next completion to be\n printed in the command line when tab is pressed, given the\n string presently in the command line and the list of\n completion.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t -\u003e String -\u003e [String] -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#nextCompletion",
        "fct-type": "method",
        "title": "nextCompletion"
      },
      "index": {
        "description": "This method is used to generate the next completion to be printed in the command line when tab is pressed given the string presently in the command line and the list of completion",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "nextCompletion",
        "normalized": "a-\u003eString-\u003e[String]-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Completion",
        "signature": "t-\u003eString-\u003e[String]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:pasteString",
      "description": {
        "fct-descr": "\u003cp\u003eInsert the current X selection string at the cursor position.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP ()",
        "fct-source": "src/XMonad-Prompt.html#pasteString",
        "fct-type": "function",
        "title": "pasteString"
      },
      "index": {
        "description": "Insert the current selection string at the cursor position",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "pasteString",
        "normalized": "XP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String",
        "signature": "XP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:position",
      "description": {
        "fct-descr": "\u003cp\u003ePosition: \u003ccode\u003e\u003ca\u003eTop\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003eBottom\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XPPosition",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "position"
      },
      "index": {
        "description": "Position Top or Bottom",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "position",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:promptBorderWidth",
      "description": {
        "fct-descr": "\u003cp\u003eBorder width\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "!Dimension",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "promptBorderWidth"
      },
      "index": {
        "description": "Border width",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "promptBorderWidth",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Border Width",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:promptKeymap",
      "description": {
        "fct-descr": "\u003cp\u003eMapping from key combinations to actions\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map (KeyMask, KeySym) (XP ())",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "promptKeymap"
      },
      "index": {
        "description": "Mapping from key combinations to actions",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "promptKeymap",
        "normalized": "Map(KeyMask,KeySym)(XP())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keymap",
        "signature": "Map(KeyMask,KeySym)(XP())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:quit",
      "description": {
        "fct-descr": "\u003cp\u003eQuit.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP ()",
        "fct-source": "src/XMonad-Prompt.html#quit",
        "fct-type": "function",
        "title": "quit"
      },
      "index": {
        "description": "Quit",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "quit",
        "normalized": "XP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "XP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:searchPredicate",
      "description": {
        "fct-descr": "\u003cp\u003eGiven the typed string and a possible\n   completion, is the completion valid?\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e Bool",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "searchPredicate"
      },
      "index": {
        "description": "Given the typed string and possible completion is the completion valid",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "searchPredicate",
        "normalized": "String-\u003eString-\u003eBool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Predicate",
        "signature": "String-\u003eString-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:setDone",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#setDone",
        "fct-type": "function",
        "title": "setDone"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "setDone",
        "normalized": "Bool-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Done",
        "signature": "Bool-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:setInput",
      "description": {
        "fct-descr": "\u003cp\u003eSets the input string to the given value.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#setInput",
        "fct-type": "function",
        "title": "setInput"
      },
      "index": {
        "description": "Sets the input string to the given value",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "setInput",
        "normalized": "String-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Input",
        "signature": "String-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:setSuccess",
      "description": {
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool -\u003e XP ()",
        "fct-source": "src/XMonad-Prompt.html#setSuccess",
        "fct-type": "function",
        "title": "setSuccess"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "setSuccess",
        "normalized": "Bool-\u003eXP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Success",
        "signature": "Bool-\u003eXP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:showCompletionOnTab",
      "description": {
        "fct-descr": "\u003cp\u003eOnly show list of completions when Tab was pressed\n   and delay by x microseconds\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Bool",
        "fct-source": "src/XMonad-Prompt.html#XPConfig",
        "fct-type": "function",
        "title": "showCompletionOnTab"
      },
      "index": {
        "description": "Only show list of completions when Tab was pressed and delay by microseconds",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "showCompletionOnTab",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Completion On Tab",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:showXPrompt",
      "description": {
        "fct-descr": "\u003cp\u003eThis method is used to print the string to be\n displayed in the command line window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "t -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#showXPrompt",
        "fct-type": "method",
        "title": "showXPrompt"
      },
      "index": {
        "description": "This method is used to print the string to be displayed in the command line window",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "showXPrompt",
        "normalized": "a-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XPrompt",
        "signature": "t-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:skipLastWord",
      "description": {
        "fct-descr": "\u003cp\u003eSkips the last word of the string, if the string is composed by\n more then one word. Otherwise returns the string.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Prompt.html#skipLastWord",
        "fct-type": "function",
        "title": "skipLastWord"
      },
      "index": {
        "description": "Skips the last word of the string if the string is composed by more then one word Otherwise returns the string",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "skipLastWord",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Last Word",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:splitInSubListsAt",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a maximum length, splits a list into sublists\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e [a] -\u003e [[a]]",
        "fct-source": "src/XMonad-Prompt.html#splitInSubListsAt",
        "fct-type": "function",
        "title": "splitInSubListsAt"
      },
      "index": {
        "description": "Given maximum length splits list into sublists",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "splitInSubListsAt",
        "normalized": "Int-\u003e[a]-\u003e[[a]]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In Sub Lists At",
        "signature": "Int-\u003e[a]-\u003e[[a]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:startOfLine",
      "description": {
        "fct-descr": "\u003cp\u003ePut the cursor at the start of line\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XP ()",
        "fct-source": "src/XMonad-Prompt.html#startOfLine",
        "fct-type": "function",
        "title": "startOfLine"
      },
      "index": {
        "description": "Put the cursor at the start of line",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "startOfLine",
        "normalized": "XP()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Of Line",
        "signature": "XP()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Prompt.html#v:uniqSort",
      "description": {
        "fct-descr": "\u003cp\u003eSort a list and remove duplicates. Like \u003ccode\u003e\u003ca\u003edeleteAllDuplicates\u003c/a\u003e\u003c/code\u003e, but trades off\n   laziness and stability for efficiency.\n\u003c/p\u003e",
        "fct-module": "XMonad.Prompt",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/XMonad-Prompt.html#uniqSort",
        "fct-type": "function",
        "title": "uniqSort"
      },
      "index": {
        "description": "Sort list and remove duplicates Like deleteAllDuplicates but trades off laziness and stability for efficiency",
        "hierarchy": "XMonad Prompt",
        "module": "XMonad.Prompt",
        "name": "uniqSort",
        "normalized": "[a]-\u003e[a]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Cursor.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for setting the default mouse cursor.\n\u003c/p\u003e\u003cp\u003eSome ideas shamelessly stolen from Nils Schweinsberg; thanks!\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Cursor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Cursor.html",
        "fct-type": "module",
        "title": "Cursor"
      },
      "index": {
        "description": "module for setting the default mouse cursor Some ideas shamelessly stolen from Nils Schweinsberg thanks",
        "hierarchy": "XMonad Util Cursor",
        "module": "XMonad.Util.Cursor",
        "name": "Cursor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cursor",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Cursor.html#v:setDefaultCursor",
      "description": {
        "fct-descr": "\u003cp\u003eSet the default (root) cursor\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Cursor",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Glyph -\u003e X ()",
        "fct-source": "src/XMonad-Util-Cursor.html#setDefaultCursor",
        "fct-type": "function",
        "title": "setDefaultCursor"
      },
      "index": {
        "description": "Set the default root cursor",
        "hierarchy": "XMonad Util Cursor",
        "module": "XMonad.Util.Cursor",
        "name": "setDefaultCursor",
        "normalized": "Glyph-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Default Cursor",
        "signature": "Glyph-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-CustomKeys.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCustomized key bindings.\n\u003c/p\u003e\u003cp\u003e(See also \u003ca\u003eXMonad.Util.EZConfig\u003c/a\u003e in xmonad-contrib.)\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.CustomKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-CustomKeys.html",
        "fct-type": "module",
        "title": "CustomKeys"
      },
      "index": {
        "description": "Customized key bindings See also XMonad.Util.EZConfig in xmonad-contrib",
        "hierarchy": "XMonad Util CustomKeys",
        "module": "XMonad.Util.CustomKeys",
        "name": "CustomKeys",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Custom Keys",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-CustomKeys.html#v:customKeys",
      "description": {
        "fct-descr": "\u003cp\u003eCustomize \u003ccode\u003eXMonad.Config.defaultConfig\u003c/code\u003e -- delete needless\n shortcuts and insert those you will use.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.CustomKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(XConfig Layout -\u003e [(KeyMask, KeySym)])-\u003e (XConfig Layout -\u003e [((KeyMask, KeySym), X ())])-\u003e XConfig Layout-\u003e Map (KeyMask, KeySym) (X ())",
        "fct-type": "function",
        "title": "customKeys"
      },
      "index": {
        "description": "Customize XMonad.Config.defaultConfig delete needless shortcuts and insert those you will use",
        "hierarchy": "XMonad Util CustomKeys",
        "module": "XMonad.Util.CustomKeys",
        "name": "customKeys",
        "normalized": "(XConfig Layout-\u003e[(KeyMask,KeySym)])-\u003e(XConfig Layout-\u003e[((KeyMask,KeySym),X())])-\u003eXConfig Layout-\u003eMap(KeyMask,KeySym)(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "(XConfig Layout-\u003e[(KeyMask,KeySym)])-\u003e(XConfig Layout-\u003e[((KeyMask,KeySym),X())])-\u003eXConfig Layout-\u003eMap(KeyMask,KeySym)(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-CustomKeys.html#v:customKeysFrom",
      "description": {
        "fct-descr": "\u003cp\u003eGeneral variant of \u003ccode\u003e\u003ca\u003ecustomKeys\u003c/a\u003e\u003c/code\u003e: customize key bindings of\n third-party configuration.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.CustomKeys",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l-\u003e (XConfig Layout -\u003e [(KeyMask, KeySym)])-\u003e (XConfig Layout -\u003e [((KeyMask, KeySym), X ())])-\u003e XConfig Layout-\u003e Map (KeyMask, KeySym) (X ())",
        "fct-type": "function",
        "title": "customKeysFrom"
      },
      "index": {
        "description": "General variant of customKeys customize key bindings of third-party configuration",
        "hierarchy": "XMonad Util CustomKeys",
        "module": "XMonad.Util.CustomKeys",
        "name": "customKeysFrom",
        "normalized": "XConfig a-\u003e(XConfig Layout-\u003e[(KeyMask,KeySym)])-\u003e(XConfig Layout-\u003e[((KeyMask,KeySym),X())])-\u003eXConfig Layout-\u003eMap(KeyMask,KeySym)(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys From",
        "signature": "XConfig l-\u003e(XConfig Layout-\u003e[(KeyMask,KeySym)])-\u003e(XConfig Layout-\u003e[((KeyMask,KeySym),X())])-\u003eXConfig Layout-\u003eMap(KeyMask,KeySym)(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA convenient binding to dmenu.\n\u003c/p\u003e\u003cp\u003eRequires the process-1.0 package\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Dmenu.html",
        "fct-type": "module",
        "title": "Dmenu"
      },
      "index": {
        "description": "convenient binding to dmenu Requires the process-1.0 package",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "Dmenu",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dmenu",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:dmenu",
      "description": {
        "fct-descr": "\u003cp\u003eRun dmenu to select an option from a list.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e X String",
        "fct-source": "src/XMonad-Util-Dmenu.html#dmenu",
        "fct-type": "function",
        "title": "dmenu"
      },
      "index": {
        "description": "Run dmenu to select an option from list",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "dmenu",
        "normalized": "[String]-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "[String]-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:dmenuMap",
      "description": {
        "fct-descr": "\u003cp\u003eRun dmenu to select an entry from a map based on the key.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Map String a -\u003e X (Maybe a)",
        "fct-source": "src/XMonad-Util-Dmenu.html#dmenuMap",
        "fct-type": "function",
        "title": "dmenuMap"
      },
      "index": {
        "description": "Run dmenu to select an entry from map based on the key",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "dmenuMap",
        "normalized": "Map String a-\u003eX(Maybe a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Map",
        "signature": "Map String a-\u003eX(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:dmenuXinerama",
      "description": {
        "fct-descr": "\u003cp\u003eStarts dmenu on the current screen. Requires this patch to dmenu:\n \u003ca\u003ehttp://www.jcreigh.com/dmenu/dmenu-3.2-xinerama.patch\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e X String",
        "fct-source": "src/XMonad-Util-Dmenu.html#dmenuXinerama",
        "fct-type": "function",
        "title": "dmenuXinerama"
      },
      "index": {
        "description": "Starts dmenu on the current screen Requires this patch to dmenu http www.jcreigh.com dmenu dmenu-3.2-xinerama.patch",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "dmenuXinerama",
        "normalized": "[String]-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Xinerama",
        "signature": "[String]-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:menu",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003edmenu\u003c/a\u003e\u003c/code\u003e but also takes the command to run.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e [String] -\u003e X String",
        "fct-source": "src/XMonad-Util-Dmenu.html#menu",
        "fct-type": "function",
        "title": "menu"
      },
      "index": {
        "description": "like dmenu but also takes the command to run",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "menu",
        "normalized": "String-\u003e[String]-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003e[String]-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:menuArgs",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003emenu\u003c/a\u003e\u003c/code\u003e but also takes a list of command line arguments.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e [String] -\u003e [String] -\u003e X String",
        "fct-source": "src/XMonad-Util-Dmenu.html#menuArgs",
        "fct-type": "function",
        "title": "menuArgs"
      },
      "index": {
        "description": "Like menu but also takes list of command line arguments",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "menuArgs",
        "normalized": "String-\u003e[String]-\u003e[String]-\u003eX String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Args",
        "signature": "String-\u003e[String]-\u003e[String]-\u003eX String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:menuMap",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003edmenuMap\u003c/a\u003e\u003c/code\u003e but also takes the command to run.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Map String a -\u003e X (Maybe a)",
        "fct-source": "src/XMonad-Util-Dmenu.html#menuMap",
        "fct-type": "function",
        "title": "menuMap"
      },
      "index": {
        "description": "Like dmenuMap but also takes the command to run",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "menuMap",
        "normalized": "String-\u003eMap String a-\u003eX(Maybe a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Map",
        "signature": "String-\u003eMap String a-\u003eX(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dmenu.html#v:menuMapArgs",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003emenuMap\u003c/a\u003e\u003c/code\u003e but also takes a list of command line arguments.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dmenu",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e [String] -\u003e Map String a -\u003e X (Maybe a)",
        "fct-source": "src/XMonad-Util-Dmenu.html#menuMapArgs",
        "fct-type": "function",
        "title": "menuMapArgs"
      },
      "index": {
        "description": "Like menuMap but also takes list of command line arguments",
        "hierarchy": "XMonad Util Dmenu",
        "module": "XMonad.Util.Dmenu",
        "name": "menuMapArgs",
        "normalized": "String-\u003e[String]-\u003eMap String a-\u003eX(Maybe a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Map Args",
        "signature": "String-\u003e[String]-\u003eMap String a-\u003eX(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eHandy wrapper for dzen. Requires dzen \u003e= 0.2.4.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Dzen.html",
        "fct-type": "module",
        "title": "Dzen"
      },
      "index": {
        "description": "Handy wrapper for dzen Requires dzen",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "Dzen",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Dzen",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:-62--61--62-",
      "description": {
        "fct-descr": "\u003cp\u003eLeft-to-right Kleisli composition of monads.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(a -\u003e m b) -\u003e (b -\u003e m c) -\u003e a -\u003e m c",
        "fct-type": "function",
        "title": "(\u003e=\u003e)"
      },
      "index": {
        "description": "Left-to-right Kleisli composition of monads",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "(\u003e=\u003e) \u003e=\u003e",
        "normalized": "(a-\u003eb c)-\u003e(c-\u003eb d)-\u003ea-\u003eb d",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(a-\u003em b)-\u003e(b-\u003em c)-\u003ea-\u003em c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:addArgs",
      "description": {
        "fct-descr": "\u003cp\u003eAdd raw command-line arguments to the configuration.  These will be\n passed on verbatim to dzen2.  The default includes no arguments.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[String] -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#addArgs",
        "fct-type": "function",
        "title": "addArgs"
      },
      "index": {
        "description": "Add raw command-line arguments to the configuration These will be passed on verbatim to dzen2 The default includes no arguments",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "addArgs",
        "normalized": "[String]-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Args",
        "signature": "[String]-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:center",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ecenter width height sc\u003c/code\u003e sets the configuration to have the dzen bar\n appear on screen \u003ccode\u003esc\u003c/code\u003e with width \u003ccode\u003ewidth\u003c/code\u003e and height \u003ccode\u003eheight\u003c/code\u003e, centered\n both horizontally and vertically with respect to the actual size of that\n screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Int -\u003e ScreenId -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#center",
        "fct-type": "function",
        "title": "center"
      },
      "index": {
        "description": "center width height sc sets the configuration to have the dzen bar appear on screen sc with width width and height height centered both horizontally and vertically with respect to the actual size of that screen",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "center",
        "normalized": "Int-\u003eInt-\u003eScreenId-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003eInt-\u003eScreenId-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:chomp",
      "description": {
        "fct-descr": "\u003cp\u003edzen wants exactly one newline at the end of its input, so this can be\n used for your own invocations of dzen.  However, all functions in this\n module will call this for you.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Util-Dzen.html#chomp",
        "fct-type": "function",
        "title": "chomp"
      },
      "index": {
        "description": "dzen wants exactly one newline at the end of its input so this can be used for your own invocations of dzen However all functions in this module will call this for you",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "chomp",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:dzen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003edzen str timeout\u003c/code\u003e pipes \u003ccode\u003estr\u003c/code\u003e to dzen2 for \u003ccode\u003etimeout\u003c/code\u003e microseconds.\n Example usage:\n\u003c/p\u003e\u003cpre\u003e dzen \"Hi, mom!\" (5 `seconds`)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Util-Dzen.html#dzen",
        "fct-type": "function",
        "title": "dzen"
      },
      "index": {
        "description": "dzen str timeout pipes str to dzen2 for timeout microseconds Example usage dzen Hi mom seconds",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "dzen",
        "normalized": "String-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:dzenConfig",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003edzenConfig config s\u003c/code\u003e will display the string \u003ccode\u003es\u003c/code\u003e according to the\n configuration \u003ccode\u003econfig\u003c/code\u003e.  For example, to display the string \u003ccode\u003e\"foobar\"\u003c/code\u003e with\n all the default settings, you can simply call\n\u003c/p\u003e\u003cpre\u003e dzenConfig return \"foobar\"\n\u003c/pre\u003e\u003cp\u003eOr, to set a longer timeout, you could use\n\u003c/p\u003e\u003cpre\u003e dzenConfig (timeout 10) \"foobar\"\n\u003c/pre\u003e\u003cp\u003eYou can combine configurations with the (\u003e=\u003e) operator.  To display\n \u003ccode\u003e\"foobar\"\u003c/code\u003e for 10 seconds on the first screen, you could use\n\u003c/p\u003e\u003cpre\u003e dzenConfig (timeout 10 \u003e=\u003e xScreen 0) \"foobar\"\n\u003c/pre\u003e\u003cp\u003eAs a final example, you could adapt the above to display \u003ccode\u003e\"foobar\"\u003c/code\u003e for\n 10 seconds on the current screen with\n\u003c/p\u003e\u003cpre\u003e dzenConfig (timeout 10 \u003e=\u003e onCurr xScreen) \"foobar\"\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "DzenConfig -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Util-Dzen.html#dzenConfig",
        "fct-type": "function",
        "title": "dzenConfig"
      },
      "index": {
        "description": "dzenConfig config will display the string according to the configuration config For example to display the string foobar with all the default settings you can simply call dzenConfig return foobar Or to set longer timeout you could use dzenConfig timeout foobar You can combine configurations with the operator To display foobar for seconds on the first screen you could use dzenConfig timeout xScreen foobar As final example you could adapt the above to display foobar for seconds on the current screen with dzenConfig timeout onCurr xScreen foobar",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "dzenConfig",
        "normalized": "DzenConfig-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Config",
        "signature": "DzenConfig-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:dzenScreen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003edzenScreen sc str timeout\u003c/code\u003e pipes \u003ccode\u003estr\u003c/code\u003e to dzen2 for \u003ccode\u003etimeout\u003c/code\u003e microseconds, and on screen \u003ccode\u003esc\u003c/code\u003e.\n Requires dzen to be compiled with Xinerama support.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId -\u003e String -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Util-Dzen.html#dzenScreen",
        "fct-type": "function",
        "title": "dzenScreen"
      },
      "index": {
        "description": "dzenScreen sc str timeout pipes str to dzen2 for timeout microseconds and on screen sc Requires dzen to be compiled with Xinerama support",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "dzenScreen",
        "normalized": "ScreenId-\u003eString-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "ScreenId-\u003eString-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:dzenWithArgs",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003edzen str args timeout\u003c/code\u003e pipes \u003ccode\u003estr\u003c/code\u003e to dzen2 for \u003ccode\u003etimeout\u003c/code\u003e seconds, passing \u003ccode\u003eargs\u003c/code\u003e to dzen.\n Example usage:\n\u003c/p\u003e\u003cpre\u003e dzenWithArgs \"Hi, dons!\" [\"-ta\", \"r\"] (5 `seconds`)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e [String] -\u003e Int -\u003e X ()",
        "fct-source": "src/XMonad-Util-Dzen.html#dzenWithArgs",
        "fct-type": "function",
        "title": "dzenWithArgs"
      },
      "index": {
        "description": "dzen str args timeout pipes str to dzen2 for timeout seconds passing args to dzen Example usage dzenWithArgs Hi dons ta seconds",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "dzenWithArgs",
        "normalized": "String-\u003e[String]-\u003eInt-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With Args",
        "signature": "String-\u003e[String]-\u003eInt-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:font",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify the font.  Check out xfontsel to get the format of the String\n right; if your dzen supports xft, then you can supply that here, too.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#font",
        "fct-type": "function",
        "title": "font"
      },
      "index": {
        "description": "Specify the font Check out xfontsel to get the format of the String right if your dzen supports xft then you can supply that here too",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "font",
        "normalized": "String-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:hCenter",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehCenter width sc\u003c/code\u003e sets the configuration to have the dzen bar appear\n on screen \u003ccode\u003esc\u003c/code\u003e with width \u003ccode\u003ewidth\u003c/code\u003e, horizontally centered with respect to\n the actual size of that screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e ScreenId -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#hCenter",
        "fct-type": "function",
        "title": "hCenter"
      },
      "index": {
        "description": "hCenter width sc sets the configuration to have the dzen bar appear on screen sc with width width horizontally centered with respect to the actual size of that screen",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "hCenter",
        "normalized": "Int-\u003eScreenId-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Center",
        "signature": "Int-\u003eScreenId-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:onCurr",
      "description": {
        "fct-descr": "\u003cp\u003eTake a screen-specific configuration and supply it with the screen ID\n of the currently focused screen, according to xmonad.  For example, show\n a 100-pixel wide bar centered within the current screen, you could use\n\u003c/p\u003e\u003cpre\u003e dzenConfig (onCurr (hCenter 100)) \"foobar\"\n\u003c/pre\u003e\u003cp\u003eOf course, you can still combine these with (\u003e=\u003e); for example, to center\n the string \u003ccode\u003e\"foobar\"\u003c/code\u003e both horizontally and vertically in a 100x14 box\n using the lovely Terminus font, you could use\n\u003c/p\u003e\u003cpre\u003e terminus = \"-*-terminus-*-*-*-*-12-*-*-*-*-*-*-*\"\n dzenConfig (onCurr (center 100 14) \u003e=\u003e font terminus) \"foobar\"\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(ScreenId -\u003e DzenConfig) -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#onCurr",
        "fct-type": "function",
        "title": "onCurr"
      },
      "index": {
        "description": "Take screen-specific configuration and supply it with the screen ID of the currently focused screen according to xmonad For example show pixel wide bar centered within the current screen you could use dzenConfig onCurr hCenter foobar Of course you can still combine these with for example to center the string foobar both horizontally and vertically in x14 box using the lovely Terminus font you could use terminus terminus dzenConfig onCurr center font terminus foobar",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "onCurr",
        "normalized": "(ScreenId-\u003eDzenConfig)-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Curr",
        "signature": "(ScreenId-\u003eDzenConfig)-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:seconds",
      "description": {
        "fct-descr": "\u003cp\u003eMultiplies by ONE MILLION, for functions that take microseconds.\n\u003c/p\u003e\u003cp\u003eUse like:\n\u003c/p\u003e\u003cpre\u003e (5.5 `seconds`)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Int",
        "fct-source": "src/XMonad-Util-Run.html#seconds",
        "fct-type": "function",
        "title": "seconds"
      },
      "index": {
        "description": "Multiplies by ONE MILLION for functions that take microseconds Use like seconds",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "seconds",
        "normalized": "Rational-\u003eInt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:timeout",
      "description": {
        "fct-descr": "\u003cp\u003eSet the timeout, in seconds.  This defaults to 3 seconds if not\n specified.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#timeout",
        "fct-type": "function",
        "title": "timeout"
      },
      "index": {
        "description": "Set the timeout in seconds This defaults to seconds if not specified",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "timeout",
        "normalized": "Rational-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:vCenter",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003evCenter height sc\u003c/code\u003e sets the configuration to have the dzen bar appear\n on screen \u003ccode\u003esc\u003c/code\u003e with height \u003ccode\u003eheight\u003c/code\u003e, vertically centered with respect to\n the actual size of that screen.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e ScreenId -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#vCenter",
        "fct-type": "function",
        "title": "vCenter"
      },
      "index": {
        "description": "vCenter height sc sets the configuration to have the dzen bar appear on screen sc with height height vertically centered with respect to the actual size of that screen",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "vCenter",
        "normalized": "Int-\u003eScreenId-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Center",
        "signature": "Int-\u003eScreenId-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:x",
      "description": {
        "fct-descr": "\u003cp\u003ePut the top of the dzen bar at a particular pixel.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#x",
        "fct-type": "function",
        "title": "x"
      },
      "index": {
        "description": "Put the top of the dzen bar at particular pixel",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "x",
        "normalized": "Int-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:xScreen",
      "description": {
        "fct-descr": "\u003cp\u003eStart dzen2 on a particular screen.  Only works with versions of dzen\n that support the \u003ca\u003e-xs\u003c/a\u003e argument.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ScreenId -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#xScreen",
        "fct-type": "function",
        "title": "xScreen"
      },
      "index": {
        "description": "Start dzen2 on particular screen Only works with versions of dzen that support the xs argument",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "xScreen",
        "normalized": "ScreenId-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Screen",
        "signature": "ScreenId-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Dzen.html#v:y",
      "description": {
        "fct-descr": "\u003cp\u003ePut the left of the dzen bar at a particular pixel.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Dzen",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e DzenConfig",
        "fct-source": "src/XMonad-Util-Dzen.html#y",
        "fct-type": "function",
        "title": "y"
      },
      "index": {
        "description": "Put the left of the dzen bar at particular pixel",
        "hierarchy": "XMonad Util Dzen",
        "module": "XMonad.Util.Dzen",
        "name": "y",
        "normalized": "Int-\u003eDzenConfig",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003eDzenConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUseful helper functions for amending the defaultConfig, and for\n parsing keybindings specified in a special (emacs-like) format.\n\u003c/p\u003e\u003cp\u003e(See also \u003ca\u003eXMonad.Util.CustomKeys\u003c/a\u003e in xmonad-contrib.)\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-EZConfig.html",
        "fct-type": "module",
        "title": "EZConfig"
      },
      "index": {
        "description": "Useful helper functions for amending the defaultConfig and for parsing keybindings specified in special emacs-like format See also XMonad.Util.CustomKeys in xmonad-contrib",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "EZConfig",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "EZConfig",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:additionalKeys",
      "description": {
        "fct-descr": "\u003cp\u003eAdd or override keybindings from the existing set. Example use:\n\u003c/p\u003e\u003cpre\u003e main = xmonad $ defaultConfig { terminal = \"urxvt\" }\n                 `additionalKeys`\n                 [ ((mod1Mask, xK_m        ), spawn \"echo 'Hi, mom!' | dzen2 -p 4\")\n                 , ((mod1Mask, xK_BackSpace), withFocused hide) -- N.B. this is an absurd thing to do\n                 ]\n\u003c/pre\u003e\u003cp\u003eThis overrides the previous definition of mod-m.\n\u003c/p\u003e\u003cp\u003eNote that, unlike in xmonad 0.4 and previous, you can't use modMask to refer\n to the modMask you configured earlier. You must specify mod1Mask (or\n whichever), or add your own \u003ccode\u003emyModMask = mod1Mask\u003c/code\u003e line.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig a -\u003e [((ButtonMask, KeySym), X ())] -\u003e XConfig a",
        "fct-source": "src/XMonad-Util-EZConfig.html#additionalKeys",
        "fct-type": "function",
        "title": "additionalKeys"
      },
      "index": {
        "description": "Add or override keybindings from the existing set Example use main xmonad defaultConfig terminal urxvt additionalKeys mod1Mask xK spawn echo Hi mom dzen2 mod1Mask xK BackSpace withFocused hide N.B this is an absurd thing to do This overrides the previous definition of mod-m Note that unlike in xmonad and previous you can use modMask to refer to the modMask you configured earlier You must specify mod1Mask or whichever or add your own myModMask mod1Mask line",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "additionalKeys",
        "normalized": "XConfig a-\u003e[((ButtonMask,KeySym),X())]-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "XConfig a-\u003e[((ButtonMask,KeySym),X())]-\u003eXConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:additionalKeysP",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003eadditionalKeys\u003c/a\u003e\u003c/code\u003e, except using short \u003ccode\u003eString\u003c/code\u003e key\n   descriptors like \u003ccode\u003e\"M-m\"\u003c/code\u003e instead of \u003ccode\u003e(modMask, xK_m)\u003c/code\u003e, as\n   described in the documentation for \u003ccode\u003e\u003ca\u003emkKeymap\u003c/a\u003e\u003c/code\u003e.  For example:\n\u003c/p\u003e\u003cpre\u003e main = xmonad $ defaultConfig { terminal = \"urxvt\" }\n                 `additionalKeysP`\n                 [ (\"M-m\", spawn \"echo 'Hi, mom!' | dzen2 -p 4\")\n                 , (\"M-\u003cBackspace\u003e\", withFocused hide) -- N.B. this is an absurd thing to do\n                 ]\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e [(String, X ())] -\u003e XConfig l",
        "fct-source": "src/XMonad-Util-EZConfig.html#additionalKeysP",
        "fct-type": "function",
        "title": "additionalKeysP"
      },
      "index": {
        "description": "Like additionalKeys except using short String key descriptors like M-m instead of modMask xK as described in the documentation for mkKeymap For example main xmonad defaultConfig terminal urxvt additionalKeysP M-m spawn echo Hi mom dzen2 Backspace withFocused hide N.B this is an absurd thing to do",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "additionalKeysP",
        "normalized": "XConfig a-\u003e[(String,X())]-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "XConfig l-\u003e[(String,X())]-\u003eXConfig l"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:additionalMouseBindings",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003eadditionalKeys\u003c/a\u003e\u003c/code\u003e, but for mouse bindings.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig a -\u003e [((ButtonMask, Button), Window -\u003e X ())] -\u003e XConfig a",
        "fct-source": "src/XMonad-Util-EZConfig.html#additionalMouseBindings",
        "fct-type": "function",
        "title": "additionalMouseBindings"
      },
      "index": {
        "description": "Like additionalKeys but for mouse bindings",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "additionalMouseBindings",
        "normalized": "XConfig a-\u003e[((ButtonMask,Button),Window-\u003eX())]-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse Bindings",
        "signature": "XConfig a-\u003e[((ButtonMask,Button),Window-\u003eX())]-\u003eXConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:checkKeymap",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a configuration record and a list of (key sequence\n   description, action) pairs, check the key sequence descriptions\n   for validity, and warn the user (via a popup xmessage window) of\n   any unparseable or duplicate key sequences.  This function is\n   appropriate for adding to your \u003ccode\u003estartupHook\u003c/code\u003e, and you are highly\n   encouraged to do so; otherwise, duplicate or unparseable\n   keybindings will be silently ignored.\n\u003c/p\u003e\u003cp\u003eFor example, you might do something like this:\n\u003c/p\u003e\u003cpre\u003e main = xmonad $ myConfig\n\n myKeymap = [(\"S-M-c\", kill), ...]\n myConfig = defaultConfig {\n     ...\n     keys = \\c -\u003e mkKeymap c myKeymap\n     startupHook = return () \u003e\u003e checkKeymap myConfig myKeymap\n     ...\n }\n\u003c/pre\u003e\u003cp\u003eNOTE: the \u003ccode\u003ereturn ()\u003c/code\u003e in the example above is very important!\n Otherwise, you might run into problems with infinite mutual\n recursion: the definition of myConfig depends on the definition of\n startupHook, which depends on the definition of myConfig, ... and\n so on.  Actually, it's likely that the above example in particular\n would be OK without the \u003ccode\u003ereturn ()\u003c/code\u003e, but making \u003ccode\u003emyKeymap\u003c/code\u003e take\n \u003ccode\u003emyConfig\u003c/code\u003e as a parameter would definitely lead to\n problems. Believe me.  It, uh, happened to my friend. In... a\n dream. Yeah. In any event, the \u003ccode\u003ereturn () \u003e\u003e\u003c/code\u003e introduces enough\n laziness to break the deadlock.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e [(String, a)] -\u003e X ()",
        "fct-source": "src/XMonad-Util-EZConfig.html#checkKeymap",
        "fct-type": "function",
        "title": "checkKeymap"
      },
      "index": {
        "description": "Given configuration record and list of key sequence description action pairs check the key sequence descriptions for validity and warn the user via popup xmessage window of any unparseable or duplicate key sequences This function is appropriate for adding to your startupHook and you are highly encouraged to do so otherwise duplicate or unparseable keybindings will be silently ignored For example you might do something like this main xmonad myConfig myKeymap S-M-c kill myConfig defaultConfig keys mkKeymap myKeymap startupHook return checkKeymap myConfig myKeymap NOTE the return in the example above is very important Otherwise you might run into problems with infinite mutual recursion the definition of myConfig depends on the definition of startupHook which depends on the definition of myConfig and so on Actually it likely that the above example in particular would be OK without the return but making myKeymap take myConfig as parameter would definitely lead to problems Believe me It uh happened to my friend In dream Yeah In any event the return introduces enough laziness to break the deadlock",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "checkKeymap",
        "normalized": "XConfig a-\u003e[(String,b)]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keymap",
        "signature": "XConfig l-\u003e[(String,a)]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:mkKeymap",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a config (used to determine the proper modifier key to use)\n   and a list of \u003ccode\u003e(String, X ())\u003c/code\u003e pairs, create a key map by parsing\n   the key sequence descriptions contained in the Strings.  The key\n   sequence descriptions are \"emacs-style\": \u003ccode\u003eM-\u003c/code\u003e, \u003ccode\u003eC-\u003c/code\u003e, \u003ccode\u003eS-\u003c/code\u003e, and\n   \u003ccode\u003eM#-\u003c/code\u003e denote mod, control, shift, and mod1-mod5 (where \u003ccode\u003e#\u003c/code\u003e is\n   replaced by the appropriate number) respectively.  Note that if\n   you want to make a keybinding using 'alt' even though you use a\n   different key (like the 'windows' key) for 'mod', you can use\n   something like \u003ccode\u003e\"M1-x\"\u003c/code\u003e for alt+x (check the output of \u003ccode\u003exmodmap\u003c/code\u003e\n   to see which mod key 'alt' is bound to). Some special keys can\n   also be specified by enclosing their name in angle brackets.\n\u003c/p\u003e\u003cp\u003eFor example, \u003ccode\u003e\"M-C-x\"\u003c/code\u003e denotes mod+ctrl+x; \u003ccode\u003e\"S-\u003cEscape\u003e\"\u003c/code\u003e\n   denotes shift-escape; \u003ccode\u003e\"M1-C-\u003cDelete\u003e\"\u003c/code\u003e denotes alt+ctrl+delete\n   (assuming alt is bound to mod1, which is common).\n\u003c/p\u003e\u003cp\u003eSequences of keys can also be specified by separating the key\n   descriptions with spaces. For example, \u003ccode\u003e\"M-x y \u003cDown\u003e\"\u003c/code\u003e denotes the\n   sequence of keys mod+x, y, down.  Submaps (see\n   \u003ca\u003eXMonad.Actions.Submap\u003c/a\u003e) will be automatically generated to\n   correctly handle these cases.\n\u003c/p\u003e\u003cp\u003eSo, for example, a complete key map might be specified as\n\u003c/p\u003e\u003cpre\u003e keys = \\c -\u003e mkKeymap c $\n     [ (\"M-S-\u003cReturn\u003e\", spawn $ terminal c)\n     , (\"M-x w\", spawn \"xmessage 'woohoo!'\")  -- type mod+x then w to pop up 'woohoo!'\n     , (\"M-x y\", spawn \"xmessage 'yay!'\")     -- type mod+x then y to pop up 'yay!'\n     , (\"M-S-c\", kill)\n     ]\n\u003c/pre\u003e\u003cp\u003eAlternatively, you can use \u003ccode\u003e\u003ca\u003eadditionalKeysP\u003c/a\u003e\u003c/code\u003e to automatically\n create a keymap and add it to your config.\n\u003c/p\u003e\u003cp\u003eHere is a complete list of supported special keys.  Note that a few\n keys, such as the arrow keys, have synonyms.  If there are other\n special keys you would like to see supported, feel free to submit a\n patch, or ask on the xmonad mailing list; adding special keys is\n quite simple.\n\u003c/p\u003e\u003cpre\u003e \u003cBackspace\u003e\n \u003cTab\u003e\n \u003cReturn\u003e\n \u003cPause\u003e\n \u003cScroll_lock\u003e\n \u003cSys_Req\u003e\n \u003cPrint\u003e\n \u003cEscape\u003e, \u003cEsc\u003e\n \u003cDelete\u003e\n \u003cHome\u003e\n \u003cLeft\u003e, \u003cL\u003e\n \u003cUp\u003e, \u003cU\u003e\n \u003cRight\u003e, \u003cR\u003e\n \u003cDown\u003e, \u003cD\u003e\n \u003cPage_Up\u003e\n \u003cPage_Down\u003e\n \u003cEnd\u003e\n \u003cInsert\u003e\n \u003cBreak\u003e\n \u003cSpace\u003e\n \u003cF1\u003e-\u003cF24\u003e\n \u003cKP_Space\u003e\n \u003cKP_Tab\u003e\n \u003cKP_Enter\u003e\n \u003cKP_F1\u003e\n \u003cKP_F2\u003e\n \u003cKP_F3\u003e\n \u003cKP_F4\u003e\n \u003cKP_Home\u003e\n \u003cKP_Left\u003e\n \u003cKP_Up\u003e\n \u003cKP_Right\u003e\n \u003cKP_Down\u003e\n \u003cKP_Prior\u003e\n \u003cKP_Page_Up\u003e\n \u003cKP_Next\u003e\n \u003cKP_Page_Down\u003e\n \u003cKP_End\u003e\n \u003cKP_Begin\u003e\n \u003cKP_Insert\u003e\n \u003cKP_Delete\u003e\n \u003cKP_Equal\u003e\n \u003cKP_Multiply\u003e\n \u003cKP_Add\u003e\n \u003cKP_Separator\u003e\n \u003cKP_Subtract\u003e\n \u003cKP_Decimal\u003e\n \u003cKP_Divide\u003e\n \u003cKP_0\u003e-\u003cKP_9\u003e\n\u003c/pre\u003e\u003cp\u003eLong list of multimedia keys. Please note that not all keys may be\n present in your particular setup although most likely they will do.\n\u003c/p\u003e\u003cpre\u003e \u003cXF86ModeLock\u003e\n \u003cXF86MonBrightnessUp\u003e\n \u003cXF86MonBrightnessDown\u003e\n \u003cXF86KbdLightOnOff\u003e\n \u003cXF86KbdBrightnessUp\u003e\n \u003cXF86KbdBrightnessDown\u003e\n \u003cXF86Standby\u003e\n \u003cXF86AudioLowerVolume\u003e\n \u003cXF86AudioMute\u003e\n \u003cXF86AudioRaiseVolume\u003e\n \u003cXF86AudioPlay\u003e\n \u003cXF86AudioStop\u003e\n \u003cXF86AudioPrev\u003e\n \u003cXF86AudioNext\u003e\n \u003cXF86HomePage\u003e\n \u003cXF86Mail\u003e\n \u003cXF86Start\u003e\n \u003cXF86Search\u003e\n \u003cXF86AudioRecord\u003e\n \u003cXF86Calculator\u003e\n \u003cXF86Memo\u003e\n \u003cXF86ToDoList\u003e\n \u003cXF86Calendar\u003e\n \u003cXF86PowerDown\u003e\n \u003cXF86ContrastAdjust\u003e\n \u003cXF86RockerUp\u003e\n \u003cXF86RockerDown\u003e\n \u003cXF86RockerEnter\u003e\n \u003cXF86Back\u003e\n \u003cXF86Forward\u003e\n \u003cXF86Stop\u003e\n \u003cXF86Refresh\u003e\n \u003cXF86PowerOff\u003e\n \u003cXF86WakeUp\u003e\n \u003cXF86Eject\u003e\n \u003cXF86ScreenSaver\u003e\n \u003cXF86WWW\u003e\n \u003cXF86Sleep\u003e\n \u003cXF86Favorites\u003e\n \u003cXF86AudioPause\u003e\n \u003cXF86AudioMedia\u003e\n \u003cXF86MyComputer\u003e\n \u003cXF86VendorHome\u003e\n \u003cXF86LightBulb\u003e\n \u003cXF86Shop\u003e\n \u003cXF86History\u003e\n \u003cXF86OpenURL\u003e\n \u003cXF86AddFavorite\u003e\n \u003cXF86HotLinks\u003e\n \u003cXF86BrightnessAdjust\u003e\n \u003cXF86Finance\u003e\n \u003cXF86Community\u003e\n \u003cXF86AudioRewind\u003e\n \u003cXF86XF86BackForward\u003e\n \u003cXF86Launch0\u003e-\u003cXF86Launch9\u003e, \u003cXF86LaunchA\u003e-\u003cXF86LaunchF\u003e\n \u003cXF86ApplicationLeft\u003e\n \u003cXF86ApplicationRight\u003e\n \u003cXF86Book\u003e\n \u003cXF86CD\u003e\n \u003cXF86Calculater\u003e\n \u003cXF86Clear\u003e\n \u003cXF86Close\u003e\n \u003cXF86Copy\u003e\n \u003cXF86Cut\u003e\n \u003cXF86Display\u003e\n \u003cXF86DOS\u003e\n \u003cXF86Documents\u003e\n \u003cXF86Excel\u003e\n \u003cXF86Explorer\u003e\n \u003cXF86Game\u003e\n \u003cXF86Go\u003e\n \u003cXF86iTouch\u003e\n \u003cXF86LogOff\u003e\n \u003cXF86Market\u003e\n \u003cXF86Meeting\u003e\n \u003cXF86MenuKB\u003e\n \u003cXF86MenuPB\u003e\n \u003cXF86MySites\u003e\n \u003cXF86New\u003e\n \u003cXF86News\u003e\n \u003cXF86OfficeHome\u003e\n \u003cXF86Open\u003e\n \u003cXF86Option\u003e\n \u003cXF86Paste\u003e\n \u003cXF86Phone\u003e\n \u003cXF86Q\u003e\n \u003cXF86Reply\u003e\n \u003cXF86Reload\u003e\n \u003cXF86RotateWindows\u003e\n \u003cXF86RotationPB\u003e\n \u003cXF86RotationKB\u003e\n \u003cXF86Save\u003e\n \u003cXF86ScrollUp\u003e\n \u003cXF86ScrollDown\u003e\n \u003cXF86ScrollClick\u003e\n \u003cXF86Send\u003e\n \u003cXF86Spell\u003e\n \u003cXF86SplitScreen\u003e\n \u003cXF86Support\u003e\n \u003cXF86TaskPane\u003e\n \u003cXF86Terminal\u003e\n \u003cXF86Tools\u003e\n \u003cXF86Travel\u003e\n \u003cXF86UserPB\u003e\n \u003cXF86User1KB\u003e\n \u003cXF86User2KB\u003e\n \u003cXF86Video\u003e\n \u003cXF86WheelButton\u003e\n \u003cXF86Word\u003e\n \u003cXF86Xfer\u003e\n \u003cXF86ZoomIn\u003e\n \u003cXF86ZoomOut\u003e\n \u003cXF86Away\u003e\n \u003cXF86Messenger\u003e\n \u003cXF86WebCam\u003e\n \u003cXF86MailForward\u003e\n \u003cXF86Pictures\u003e\n \u003cXF86Music\u003e\n \u003cXF86_Switch_VT_1\u003e-\u003cXF86_Switch_VT_12\u003e\n \u003cXF86_Ungrab\u003e\n \u003cXF86_ClearGrab\u003e\n \u003cXF86_Next_VMode\u003e\n \u003cXF86_Prev_VMode\u003e\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e [(String, X ())] -\u003e Map (KeyMask, KeySym) (X ())",
        "fct-source": "src/XMonad-Util-EZConfig.html#mkKeymap",
        "fct-type": "function",
        "title": "mkKeymap"
      },
      "index": {
        "description": "Given config used to determine the proper modifier key to use and list of String pairs create key map by parsing the key sequence descriptions contained in the Strings The key sequence descriptions are emacs-style and denote mod control shift and mod1-mod5 where is replaced by the appropriate number respectively Note that if you want to make keybinding using alt even though you use different key like the windows key for mod you can use something like M1-x for alt check the output of xmodmap to see which mod key alt is bound to Some special keys can also be specified by enclosing their name in angle brackets For example M-C-x denotes mod ctrl Escape denotes shift-escape M1-C Delete denotes alt ctrl delete assuming alt is bound to mod1 which is common Sequences of keys can also be specified by separating the key descriptions with spaces For example M-x Down denotes the sequence of keys mod down Submaps see XMonad.Actions.Submap will be automatically generated to correctly handle these cases So for example complete key map might be specified as keys mkKeymap M-S Return spawn terminal M-x spawn xmessage woohoo type mod then to pop up woohoo M-x spawn xmessage yay type mod then to pop up yay M-S-c kill Alternatively you can use additionalKeysP to automatically create keymap and add it to your config Here is complete list of supported special keys Note that few keys such as the arrow keys have synonyms If there are other special keys you would like to see supported feel free to submit patch or ask on the xmonad mailing list adding special keys is quite simple Backspace Tab Return Pause Scroll lock Sys Req Print Escape Esc Delete Home Left Up Right Down Page Up Page Down End Insert Break Space F1 F24 KP Space KP Tab KP Enter KP F1 KP F2 KP F3 KP F4 KP Home KP Left KP Up KP Right KP Down KP Prior KP Page Up KP Next KP Page Down KP End KP Begin KP Insert KP Delete KP Equal KP Multiply KP Add KP Separator KP Subtract KP Decimal KP Divide KP KP Long list of multimedia keys Please note that not all keys may be present in your particular setup although most likely they will do XF86ModeLock XF86MonBrightnessUp XF86MonBrightnessDown XF86KbdLightOnOff XF86KbdBrightnessUp XF86KbdBrightnessDown XF86Standby XF86AudioLowerVolume XF86AudioMute XF86AudioRaiseVolume XF86AudioPlay XF86AudioStop XF86AudioPrev XF86AudioNext XF86HomePage XF86Mail XF86Start XF86Search XF86AudioRecord XF86Calculator XF86Memo XF86ToDoList XF86Calendar XF86PowerDown XF86ContrastAdjust XF86RockerUp XF86RockerDown XF86RockerEnter XF86Back XF86Forward XF86Stop XF86Refresh XF86PowerOff XF86WakeUp XF86Eject XF86ScreenSaver XF86WWW XF86Sleep XF86Favorites XF86AudioPause XF86AudioMedia XF86MyComputer XF86VendorHome XF86LightBulb XF86Shop XF86History XF86OpenURL XF86AddFavorite XF86HotLinks XF86BrightnessAdjust XF86Finance XF86Community XF86AudioRewind XF86XF86BackForward XF86Launch0 XF86Launch9 XF86LaunchA XF86LaunchF XF86ApplicationLeft XF86ApplicationRight XF86Book XF86CD XF86Calculater XF86Clear XF86Close XF86Copy XF86Cut XF86Display XF86DOS XF86Documents XF86Excel XF86Explorer XF86Game XF86Go XF86iTouch XF86LogOff XF86Market XF86Meeting XF86MenuKB XF86MenuPB XF86MySites XF86New XF86News XF86OfficeHome XF86Open XF86Option XF86Paste XF86Phone XF86Q XF86Reply XF86Reload XF86RotateWindows XF86RotationPB XF86RotationKB XF86Save XF86ScrollUp XF86ScrollDown XF86ScrollClick XF86Send XF86Spell XF86SplitScreen XF86Support XF86TaskPane XF86Terminal XF86Tools XF86Travel XF86UserPB XF86User1KB XF86User2KB XF86Video XF86WheelButton XF86Word XF86Xfer XF86ZoomIn XF86ZoomOut XF86Away XF86Messenger XF86WebCam XF86MailForward XF86Pictures XF86Music XF86 Switch VT XF86 Switch VT XF86 Ungrab XF86 ClearGrab XF86 Next VMode XF86 Prev VMode",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "mkKeymap",
        "normalized": "XConfig a-\u003e[(String,X())]-\u003eMap(KeyMask,KeySym)(X())",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keymap",
        "signature": "XConfig l-\u003e[(String,X())]-\u003eMap(KeyMask,KeySym)(X())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:mkNamedKeymap",
      "description": {
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e [(String, NamedAction)] -\u003e [((KeyMask, KeySym), NamedAction)]",
        "fct-source": "src/XMonad-Util-EZConfig.html#mkNamedKeymap",
        "fct-type": "function",
        "title": "mkNamedKeymap"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "mkNamedKeymap",
        "normalized": "XConfig a-\u003e[(String,NamedAction)]-\u003e[((KeyMask,KeySym),NamedAction)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Keymap",
        "signature": "XConfig l-\u003e[(String,NamedAction)]-\u003e[((KeyMask,KeySym),NamedAction)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:parseKey",
      "description": {
        "fct-descr": "\u003cp\u003eParse an unmodified basic key, like \u003ccode\u003e\"x\"\u003c/code\u003e, \u003ccode\u003e\"\u003ca\u003eF1\u003c/a\u003e\"\u003c/code\u003e, etc.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ReadP KeySym",
        "fct-source": "src/XMonad-Util-EZConfig.html#parseKey",
        "fct-type": "function",
        "title": "parseKey"
      },
      "index": {
        "description": "Parse an unmodified basic key like F1 etc",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "parseKey",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Key",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:removeKeys",
      "description": {
        "fct-descr": "\u003cp\u003eRemove standard keybindings you're not using. Example use:\n\u003c/p\u003e\u003cpre\u003e main = xmonad $ defaultConfig { terminal = \"urxvt\" }\n                 `removeKeys` [(mod1Mask .|. shiftMask, n) | n \u003c- [xK_1 .. xK_9]]\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig a -\u003e [(ButtonMask, KeySym)] -\u003e XConfig a",
        "fct-source": "src/XMonad-Util-EZConfig.html#removeKeys",
        "fct-type": "function",
        "title": "removeKeys"
      },
      "index": {
        "description": "Remove standard keybindings you re not using Example use main xmonad defaultConfig terminal urxvt removeKeys mod1Mask shiftMask xK xK",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "removeKeys",
        "normalized": "XConfig a-\u003e[(ButtonMask,KeySym)]-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "XConfig a-\u003e[(ButtonMask,KeySym)]-\u003eXConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:removeKeysP",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003eremoveKeys\u003c/a\u003e\u003c/code\u003e, except using short \u003ccode\u003eString\u003c/code\u003e key descriptors\n   like \u003ccode\u003e\"M-m\"\u003c/code\u003e instead of \u003ccode\u003e(modMask, xK_m)\u003c/code\u003e, as described in the\n   documentation for \u003ccode\u003e\u003ca\u003emkKeymap\u003c/a\u003e\u003c/code\u003e. For example:\n\u003c/p\u003e\u003cpre\u003e main = xmonad $ defaultConfig { terminal = \"urxvt\" }\n                 `removeKeysP` [\"M-S-\" ++ [n] | n \u003c- ['1'..'9']]\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l -\u003e [String] -\u003e XConfig l",
        "fct-source": "src/XMonad-Util-EZConfig.html#removeKeysP",
        "fct-type": "function",
        "title": "removeKeysP"
      },
      "index": {
        "description": "Like removeKeys except using short String key descriptors like M-m instead of modMask xK as described in the documentation for mkKeymap For example main xmonad defaultConfig terminal urxvt removeKeysP M-S",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "removeKeysP",
        "normalized": "XConfig a-\u003e[String]-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys",
        "signature": "XConfig l-\u003e[String]-\u003eXConfig l"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-EZConfig.html#v:removeMouseBindings",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003eremoveKeys\u003c/a\u003e\u003c/code\u003e, but for mouse bindings.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.EZConfig",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig a -\u003e [(ButtonMask, Button)] -\u003e XConfig a",
        "fct-source": "src/XMonad-Util-EZConfig.html#removeMouseBindings",
        "fct-type": "function",
        "title": "removeMouseBindings"
      },
      "index": {
        "description": "Like removeKeys but for mouse bindings",
        "hierarchy": "XMonad Util EZConfig",
        "module": "XMonad.Util.EZConfig",
        "name": "removeMouseBindings",
        "normalized": "XConfig a-\u003e[(ButtonMask,Button)]-\u003eXConfig a",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mouse Bindings",
        "signature": "XConfig a-\u003e[(ButtonMask,Button)]-\u003eXConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-ExtensibleState.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eModule for storing custom mutable state in xmonad.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.ExtensibleState",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-ExtensibleState.html",
        "fct-type": "module",
        "title": "ExtensibleState"
      },
      "index": {
        "description": "Module for storing custom mutable state in xmonad",
        "hierarchy": "XMonad Util ExtensibleState",
        "module": "XMonad.Util.ExtensibleState",
        "name": "ExtensibleState",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Extensible State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-ExtensibleState.html#v:get",
      "description": {
        "fct-descr": "\u003cp\u003eTry to retrieve a value of the requested type, return an initial value if there is no such value.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.ExtensibleState",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X a",
        "fct-source": "src/XMonad-Util-ExtensibleState.html#get",
        "fct-type": "function",
        "title": "get"
      },
      "index": {
        "description": "Try to retrieve value of the requested type return an initial value if there is no such value",
        "hierarchy": "XMonad Util ExtensibleState",
        "module": "XMonad.Util.ExtensibleState",
        "name": "get",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-ExtensibleState.html#v:gets",
      "description": {
        "fct-module": "XMonad.Util.ExtensibleState",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(a -\u003e b) -\u003e X b",
        "fct-source": "src/XMonad-Util-ExtensibleState.html#gets",
        "fct-type": "function",
        "title": "gets"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util ExtensibleState",
        "module": "XMonad.Util.ExtensibleState",
        "name": "gets",
        "normalized": "(a-\u003eb)-\u003eX b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(a-\u003eb)-\u003eX b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-ExtensibleState.html#v:modify",
      "description": {
        "fct-descr": "\u003cp\u003eApply a function to a stored value of the matching type or the initial value if there\n is none.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.ExtensibleState",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(a -\u003e a) -\u003e X ()",
        "fct-source": "src/XMonad-Util-ExtensibleState.html#modify",
        "fct-type": "function",
        "title": "modify"
      },
      "index": {
        "description": "Apply function to stored value of the matching type or the initial value if there is none",
        "hierarchy": "XMonad Util ExtensibleState",
        "module": "XMonad.Util.ExtensibleState",
        "name": "modify",
        "normalized": "(a-\u003ea)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(a-\u003ea)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-ExtensibleState.html#v:put",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a value to the extensible state field. A previously stored value with the same\n type will be overwritten. (More precisely: A value whose string representation of its type\n is equal to the new one's)\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.ExtensibleState",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e X ()",
        "fct-source": "src/XMonad-Util-ExtensibleState.html#put",
        "fct-type": "function",
        "title": "put"
      },
      "index": {
        "description": "Add value to the extensible state field previously stored value with the same type will be overwritten More precisely value whose string representation of its type is equal to the new one",
        "hierarchy": "XMonad Util ExtensibleState",
        "module": "XMonad.Util.ExtensibleState",
        "name": "put",
        "normalized": "a-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-ExtensibleState.html#v:remove",
      "description": {
        "fct-descr": "\u003cp\u003eRemove the value from the extensible state field that has the same type as the supplied argument\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.ExtensibleState",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e X ()",
        "fct-source": "src/XMonad-Util-ExtensibleState.html#remove",
        "fct-type": "function",
        "title": "remove"
      },
      "index": {
        "description": "Remove the value from the extensible state field that has the same type as the supplied argument",
        "hierarchy": "XMonad Util ExtensibleState",
        "module": "XMonad.Util.ExtensibleState",
        "name": "remove",
        "normalized": "a-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for abstracting a font facility over Core fonts and Xft\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Font.html",
        "fct-type": "module",
        "title": "Font"
      },
      "index": {
        "description": "module for abstracting font facility over Core fonts and Xft",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "Font",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Font",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#t:Align",
      "description": {
        "fct-descr": "\u003cp\u003eString position\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Font.html#Align",
        "fct-type": "data",
        "title": "Align"
      },
      "index": {
        "description": "String position",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "Align",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Align",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#t:XMonadFont",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Font.html#XMonadFont",
        "fct-type": "data",
        "title": "XMonadFont"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "XMonadFont",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XMonad Font",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:AlignCenter",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "AlignCenter",
        "fct-source": "src/XMonad-Util-Font.html#Align",
        "fct-type": "function",
        "title": "AlignCenter"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "AlignCenter",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Align Center",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:AlignLeft",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "AlignLeft",
        "fct-source": "src/XMonad-Util-Font.html#Align",
        "fct-type": "function",
        "title": "AlignLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "AlignLeft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Align Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:AlignRight",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "AlignRight",
        "fct-source": "src/XMonad-Util-Font.html#Align",
        "fct-type": "function",
        "title": "AlignRight"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "AlignRight",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Align Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:AlignRightOffset",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "AlignRightOffset Int",
        "fct-source": "src/XMonad-Util-Font.html#Align",
        "fct-type": "function",
        "title": "AlignRightOffset"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "AlignRightOffset",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Align Right Offset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:Core",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Core FontStruct",
        "fct-source": "src/XMonad-Util-Font.html#XMonadFont",
        "fct-type": "function",
        "title": "Core"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "Core",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Core",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:Utf8",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Utf8 FontSet",
        "fct-source": "src/XMonad-Util-Font.html#XMonadFont",
        "fct-type": "function",
        "title": "Utf8"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "Utf8",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Utf",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:Xft",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Xft XftFont",
        "fct-source": "src/XMonad-Util-Font.html#XMonadFont",
        "fct-type": "function",
        "title": "Xft"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "Xft",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Xft",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:decodeInput",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Util-Font.html#decodeInput",
        "fct-type": "function",
        "title": "decodeInput"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "decodeInput",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Input",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:encodeOutput",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/XMonad-Util-Font.html#encodeOutput",
        "fct-type": "function",
        "title": "encodeOutput"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "encodeOutput",
        "normalized": "String-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Output",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:initCoreFont",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a fontname returns the font structure. If the font name is\n  not valid the default font will be loaded and returned.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X FontStruct",
        "fct-source": "src/XMonad-Util-Font.html#initCoreFont",
        "fct-type": "function",
        "title": "initCoreFont"
      },
      "index": {
        "description": "Given fontname returns the font structure If the font name is not valid the default font will be loaded and returned",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "initCoreFont",
        "normalized": "String-\u003eX FontStruct",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Core Font",
        "signature": "String-\u003eX FontStruct"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:initUtf8Font",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X FontSet",
        "fct-source": "src/XMonad-Util-Font.html#initUtf8Font",
        "fct-type": "function",
        "title": "initUtf8Font"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "initUtf8Font",
        "normalized": "String-\u003eX FontSet",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Utf Font",
        "signature": "String-\u003eX FontSet"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:initXMF",
      "description": {
        "fct-descr": "\u003cp\u003eWhen initXMF gets a font name that starts with 'xft:' it switches to the Xft backend\n Example: 'xft: Sans-10'\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X XMonadFont",
        "fct-source": "src/XMonad-Util-Font.html#initXMF",
        "fct-type": "function",
        "title": "initXMF"
      },
      "index": {
        "description": "When initXMF gets font name that starts with xft it switches to the Xft backend Example xft Sans-10",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "initXMF",
        "normalized": "String-\u003eX XMonadFont",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XMF",
        "signature": "String-\u003eX XMonadFont"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:printStringXMF",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e Drawable -\u003e XMonadFont -\u003e GC -\u003e String -\u003e String -\u003e Position -\u003e Position -\u003e String -\u003e m ()",
        "fct-source": "src/XMonad-Util-Font.html#printStringXMF",
        "fct-type": "function",
        "title": "printStringXMF"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "printStringXMF",
        "normalized": "Display-\u003eDrawable-\u003eXMonadFont-\u003eGC-\u003eString-\u003eString-\u003ePosition-\u003ePosition-\u003eString-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String XMF",
        "signature": "Display-\u003eDrawable-\u003eXMonadFont-\u003eGC-\u003eString-\u003eString-\u003ePosition-\u003ePosition-\u003eString-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:releaseCoreFont",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FontStruct -\u003e X ()",
        "fct-source": "src/XMonad-Util-Font.html#releaseCoreFont",
        "fct-type": "function",
        "title": "releaseCoreFont"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "releaseCoreFont",
        "normalized": "FontStruct-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Core Font",
        "signature": "FontStruct-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:releaseUtf8Font",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FontSet -\u003e X ()",
        "fct-source": "src/XMonad-Util-Font.html#releaseUtf8Font",
        "fct-type": "function",
        "title": "releaseUtf8Font"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "releaseUtf8Font",
        "normalized": "FontSet-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Utf Font",
        "signature": "FontSet-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:releaseXMF",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XMonadFont -\u003e X ()",
        "fct-source": "src/XMonad-Util-Font.html#releaseXMF",
        "fct-type": "function",
        "title": "releaseXMF"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "releaseXMF",
        "normalized": "XMonadFont-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XMF",
        "signature": "XMonadFont-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:stringPosition",
      "description": {
        "fct-descr": "\u003cp\u003eReturn the string x and y \u003ccode\u003e\u003ca\u003ePosition\u003c/a\u003e\u003c/code\u003e in a \u003ccode\u003e\u003ca\u003eRectangle\u003c/a\u003e\u003c/code\u003e, given a\n \u003ccode\u003e\u003ca\u003eFontStruct\u003c/a\u003e\u003c/code\u003e and the \u003ccode\u003e\u003ca\u003eAlign\u003c/a\u003e\u003c/code\u003ement\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e XMonadFont -\u003e Rectangle -\u003e Align -\u003e String -\u003e m (Position, Position)",
        "fct-source": "src/XMonad-Util-Font.html#stringPosition",
        "fct-type": "function",
        "title": "stringPosition"
      },
      "index": {
        "description": "Return the string and Position in Rectangle given FontStruct and the Align ment",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "stringPosition",
        "normalized": "Display-\u003eXMonadFont-\u003eRectangle-\u003eAlign-\u003eString-\u003ea(Position,Position)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Position",
        "signature": "Display-\u003eXMonadFont-\u003eRectangle-\u003eAlign-\u003eString-\u003em(Position,Position)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:stringToPixel",
      "description": {
        "fct-descr": "\u003cp\u003eGet the Pixel value for a named color: if an invalid name is\n given the black pixel will be returned.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e String -\u003e m Pixel",
        "fct-source": "src/XMonad-Util-Font.html#stringToPixel",
        "fct-type": "function",
        "title": "stringToPixel"
      },
      "index": {
        "description": "Get the Pixel value for named color if an invalid name is given the black pixel will be returned",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "stringToPixel",
        "normalized": "Display-\u003eString-\u003ea Pixel",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Pixel",
        "signature": "Display-\u003eString-\u003em Pixel"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:textExtentsXMF",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XMonadFont -\u003e String -\u003e m (Int32, Int32)",
        "fct-source": "src/XMonad-Util-Font.html#textExtentsXMF",
        "fct-type": "function",
        "title": "textExtentsXMF"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "textExtentsXMF",
        "normalized": "XMonadFont-\u003eString-\u003ea(Int,Int)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Extents XMF",
        "signature": "XMonadFont-\u003eString-\u003em(Int,Int)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Font.html#v:textWidthXMF",
      "description": {
        "fct-module": "XMonad.Util.Font",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e XMonadFont -\u003e String -\u003e m Int",
        "fct-source": "src/XMonad-Util-Font.html#textWidthXMF",
        "fct-type": "function",
        "title": "textWidthXMF"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Font",
        "module": "XMonad.Util.Font",
        "name": "textWidthXMF",
        "normalized": "Display-\u003eXMonadFont-\u003eString-\u003ea Int",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Width XMF",
        "signature": "Display-\u003eXMonadFont-\u003eString-\u003em Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Invisible.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA data type to store the layout state\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Invisible",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Invisible.html",
        "fct-type": "module",
        "title": "Invisible"
      },
      "index": {
        "description": "data type to store the layout state",
        "hierarchy": "XMonad Util Invisible",
        "module": "XMonad.Util.Invisible",
        "name": "Invisible",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Invisible",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Invisible.html#t:Invisible",
      "description": {
        "fct-module": "XMonad.Util.Invisible",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "newtype",
        "fct-source": "src/XMonad-Util-Invisible.html#Invisible",
        "fct-type": "newtype",
        "title": "Invisible"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Invisible",
        "module": "XMonad.Util.Invisible",
        "name": "Invisible",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Invisible",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Invisible.html#v:I",
      "description": {
        "fct-module": "XMonad.Util.Invisible",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "I (m a)",
        "fct-source": "src/XMonad-Util-Invisible.html#Invisible",
        "fct-type": "function",
        "title": "I"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Invisible",
        "module": "XMonad.Util.Invisible",
        "name": "I",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Invisible.html#v:fromIMaybe",
      "description": {
        "fct-module": "XMonad.Util.Invisible",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e Invisible Maybe a -\u003e a",
        "fct-source": "src/XMonad-Util-Invisible.html#fromIMaybe",
        "fct-type": "function",
        "title": "fromIMaybe"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Invisible",
        "module": "XMonad.Util.Invisible",
        "name": "fromIMaybe",
        "normalized": "a-\u003eInvisible Maybe a-\u003ea",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IMaybe",
        "signature": "a-\u003eInvisible Maybe a-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Invisible.html#v:whenIJust",
      "description": {
        "fct-module": "XMonad.Util.Invisible",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Invisible Maybe a -\u003e (a -\u003e m ()) -\u003e m ()",
        "fct-source": "src/XMonad-Util-Invisible.html#whenIJust",
        "fct-type": "function",
        "title": "whenIJust"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Invisible",
        "module": "XMonad.Util.Invisible",
        "name": "whenIJust",
        "normalized": "Invisible Maybe a-\u003e(a-\u003eb())-\u003eb()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "IJust",
        "signature": "Invisible Maybe a-\u003e(a-\u003em())-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA collection of simple logger functions and formatting utilities\n which can be used in the \u003ccode\u003e\u003ca\u003eppExtras\u003c/a\u003e\u003c/code\u003e field of\n a pretty-printing status logger format. See \u003ca\u003eXMonad.Hooks.DynamicLog\u003c/a\u003e\n for more information.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Loggers.html",
        "fct-type": "module",
        "title": "Loggers"
      },
      "index": {
        "description": "collection of simple logger functions and formatting utilities which can be used in the ppExtras field of pretty-printing status logger format See XMonad.Hooks.DynamicLog for more information",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "Loggers",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Loggers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#t:Logger",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eLogger\u003c/a\u003e\u003c/code\u003e is just a convenient synonym for \u003ccode\u003eX (Maybe String)\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Util-Loggers.html#Logger",
        "fct-type": "type",
        "title": "Logger"
      },
      "index": {
        "description": "Logger is just convenient synonym for Maybe String",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "Logger",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Logger",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:-60--36--62-",
      "description": {
        "fct-descr": "\u003cp\u003eAn infix synonym for \u003ccode\u003e\u003ca\u003efmap\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(a -\u003e b) -\u003e f a -\u003e f b",
        "fct-type": "function",
        "title": "(\u003c$\u003e)"
      },
      "index": {
        "description": "An infix synonym for fmap",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "(\u003c$\u003e) \u003c$\u003e",
        "normalized": "(a-\u003eb)-\u003ec a-\u003ec b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "(a-\u003eb)-\u003ef a-\u003ef b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:aumixVolume",
      "description": {
        "fct-descr": "\u003cp\u003eGet the current volume with \u003ccode\u003eaumix\u003c/code\u003e. \u003ca\u003ehttp://jpj.net/~trevor/aumix.html\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#aumixVolume",
        "fct-type": "function",
        "title": "aumixVolume"
      },
      "index": {
        "description": "Get the current volume with aumix http jpj.net trevor aumix.html",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "aumixVolume",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Volume",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:battery",
      "description": {
        "fct-descr": "\u003cp\u003eGet the battery status (percent charge and charging/discharging\n   status). This is an ugly hack and may not work for some people.\n   At some point it would be nice to make this more general/have\n   fewer dependencies (assumes \u003ccode\u003e/usr/bin/acpi\u003c/code\u003e and \u003ccode\u003esed\u003c/code\u003e are installed.)\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#battery",
        "fct-type": "function",
        "title": "battery"
      },
      "index": {
        "description": "Get the battery status percent charge and charging discharging status This is an ugly hack and may not work for some people At some point it would be nice to make this more general have fewer dependencies assumes usr bin acpi and sed are installed",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "battery",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:date",
      "description": {
        "fct-descr": "\u003cp\u003eGet the current date and time, and format them via the\n   given format string.  The format used is the same as that used\n   by the C library function strftime; for example,\n   \u003ccode\u003edate \"%a %b %d\"\u003c/code\u003e might display something like \u003ccode\u003eTue Feb 19\u003c/code\u003e.\n   For more information see something like\n   \u003ca\u003ehttp://www.cplusplus.com/reference/clibrary/ctime/strftime.html\u003c/a\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#date",
        "fct-type": "function",
        "title": "date"
      },
      "index": {
        "description": "Get the current date and time and format them via the given format string The format used is the same as that used by the library function strftime for example date might display something like Tue Feb For more information see something like http www.cplusplus.com reference clibrary ctime strftime.html",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "date",
        "normalized": "String-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:dzenColorL",
      "description": {
        "fct-descr": "\u003cp\u003eColor a logger's output with dzen foreground and background colors.\n\u003c/p\u003e\u003cpre\u003e  dzenColorL \"green\" \"#2A4C3F\" battery\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e Logger -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#dzenColorL",
        "fct-type": "function",
        "title": "dzenColorL"
      },
      "index": {
        "description": "Color logger output with dzen foreground and background colors dzenColorL green A4C3F battery",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "dzenColorL",
        "normalized": "String-\u003eString-\u003eLogger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": "String-\u003eString-\u003eLogger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:fixedWidthL",
      "description": {
        "fct-descr": "\u003cp\u003eMake a logger's output constant width by padding with the given string,\n \u003cem\u003eeven if the logger is\u003c/em\u003e \u003ccode\u003eX (Nothing)\u003c/code\u003e \u003cem\u003eor\u003c/em\u003e \u003ccode\u003eX (Just \"\")\u003c/code\u003e. Useful to\n reduce visual noise as a title logger shrinks and grows, to use a fixed\n width for a logger that sometimes becomes Nothing, or even to create\n fancy spacers or character based art effects.\n\u003c/p\u003e\u003cp\u003eIt fills missing logger output with a repeated character like \".\",\n \":\" or pattern, like \" -.-\". The cycling padding string is reversed on\n the left of the logger output. This is mainly useful with AlignCenter.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Align-\u003e String-\u003e Int-\u003e Logger-\u003e Logger",
        "fct-type": "function",
        "title": "fixedWidthL"
      },
      "index": {
        "description": "Make logger output constant width by padding with the given string even if the logger is Nothing or Just Useful to reduce visual noise as title logger shrinks and grows to use fixed width for logger that sometimes becomes Nothing or even to create fancy spacers or character based art effects It fills missing logger output with repeated character like or pattern like The cycling padding string is reversed on the left of the logger output This is mainly useful with AlignCenter",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "fixedWidthL",
        "normalized": "Align-\u003eString-\u003eInt-\u003eLogger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Width",
        "signature": "Align-\u003eString-\u003eInt-\u003eLogger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:loadAvg",
      "description": {
        "fct-descr": "\u003cp\u003eGet the load average.  This assumes that you have a\n   utility called \u003ccode\u003e/usr/bin/uptime\u003c/code\u003e and that you have \u003ccode\u003esed\u003c/code\u003e\n   installed; these are fairly common on GNU/Linux systems but it\n   would be nice to make this more general.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#loadAvg",
        "fct-type": "function",
        "title": "loadAvg"
      },
      "index": {
        "description": "Get the load average This assumes that you have utility called usr bin uptime and that you have sed installed these are fairly common on GNU Linux systems but it would be nice to make this more general",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "loadAvg",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Avg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:logCmd",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a \u003ccode\u003e\u003ca\u003eLogger\u003c/a\u003e\u003c/code\u003e from an arbitrary shell command.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#logCmd",
        "fct-type": "function",
        "title": "logCmd"
      },
      "index": {
        "description": "Create Logger from an arbitrary shell command",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "logCmd",
        "normalized": "String-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Cmd",
        "signature": "String-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:logCurrent",
      "description": {
        "fct-descr": "\u003cp\u003eGet the name of the current workspace.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#logCurrent",
        "fct-type": "function",
        "title": "logCurrent"
      },
      "index": {
        "description": "Get the name of the current workspace",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "logCurrent",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Current",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:logFileCount",
      "description": {
        "fct-descr": "\u003cp\u003eGet a count of filtered files in a directory.\n See \u003ccode\u003e\u003ca\u003emaildirUnread\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emaildirNew\u003c/a\u003e\u003c/code\u003e source for usage examples.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath-\u003e (String -\u003e Bool)-\u003e Logger",
        "fct-type": "function",
        "title": "logFileCount"
      },
      "index": {
        "description": "Get count of filtered files in directory See maildirUnread and maildirNew source for usage examples",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "logFileCount",
        "normalized": "FilePath-\u003e(String-\u003eBool)-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "File Count",
        "signature": "FilePath-\u003e(String-\u003eBool)-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:logLayout",
      "description": {
        "fct-descr": "\u003cp\u003eGet the name of the current layout.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#logLayout",
        "fct-type": "function",
        "title": "logLayout"
      },
      "index": {
        "description": "Get the name of the current layout",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "logLayout",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Layout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:logSp",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a \"spacer\" logger, e.g. \u003ccode\u003elogSp 3 -- loggerizes '   '\u003c/code\u003e.\n For more complex \"spacers\", use \u003ccode\u003e\u003ca\u003efixedWidthL\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003ereturn Nothing\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#logSp",
        "fct-type": "function",
        "title": "logSp"
      },
      "index": {
        "description": "Create spacer logger e.g logSp loggerizes For more complex spacers use fixedWidthL with return Nothing",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "logSp",
        "normalized": "Int-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sp",
        "signature": "Int-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:logTitle",
      "description": {
        "fct-descr": "\u003cp\u003eGet the title (name) of the focused window.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#logTitle",
        "fct-type": "function",
        "title": "logTitle"
      },
      "index": {
        "description": "Get the title name of the focused window",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "logTitle",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:maildirNew",
      "description": {
        "fct-descr": "\u003cp\u003eGet a count of new mails in a maildir.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#maildirNew",
        "fct-type": "function",
        "title": "maildirNew"
      },
      "index": {
        "description": "Get count of new mails in maildir",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "maildirNew",
        "normalized": "FilePath-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "New",
        "signature": "FilePath-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:maildirUnread",
      "description": {
        "fct-descr": "\u003cp\u003eGet a count of unread mails in a maildir. For maildir format\n details, to write loggers for other classes of mail, see\n \u003ca\u003ehttp://cr.yp.to/proto/maildir.html\u003c/a\u003e and \u003ccode\u003e\u003ca\u003elogFileCount\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#maildirUnread",
        "fct-type": "function",
        "title": "maildirUnread"
      },
      "index": {
        "description": "Get count of unread mails in maildir For maildir format details to write loggers for other classes of mail see http cr.yp.to proto maildir.html and logFileCount",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "maildirUnread",
        "normalized": "FilePath-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Unread",
        "signature": "FilePath-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:onLogger",
      "description": {
        "fct-descr": "\u003cp\u003eUse a string formatting function to edit a \u003ccode\u003e\u003ca\u003eLogger\u003c/a\u003e\u003c/code\u003e string.\n For example, to create a tag function to prefix or label loggers,\n as in 'tag: output', use:\n\u003c/p\u003e\u003cpre\u003e tagL l = onLogger $ wrap (l ++ \": \") \"\"\n\n    tagL \"bat\" battery\n    tagL \"load\" loadAvg\n\u003c/pre\u003e\u003cp\u003eIf you already have a (String -\u003e String) function you want to\n apply to a logger:\n\u003c/p\u003e\u003cpre\u003e revL = onLogger trim\n\u003c/pre\u003e\u003cp\u003eSee formatting utility source code for more \u003ccode\u003e\u003ca\u003eonLogger\u003c/a\u003e\u003c/code\u003e usage examples.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e String) -\u003e Logger -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#onLogger",
        "fct-type": "function",
        "title": "onLogger"
      },
      "index": {
        "description": "Use string formatting function to edit Logger string For example to create tag function to prefix or label loggers as in tag output use tagL onLogger wrap tagL bat battery tagL load loadAvg If you already have String String function you want to apply to logger revL onLogger trim See formatting utility source code for more onLogger usage examples",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "onLogger",
        "normalized": "(String-\u003eString)-\u003eLogger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Logger",
        "signature": "(String-\u003eString)-\u003eLogger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:padL",
      "description": {
        "fct-descr": "\u003cp\u003ePad a logger's output with a leading and trailing space, unless it\n is \u003ccode\u003eX (Nothing)\u003c/code\u003e or \u003ccode\u003eX (Just \"\")\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Logger -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#padL",
        "fct-type": "function",
        "title": "padL"
      },
      "index": {
        "description": "Pad logger output with leading and trailing space unless it is Nothing or Just",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "padL",
        "normalized": "Logger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Logger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:shortenL",
      "description": {
        "fct-descr": "\u003cp\u003eLimit a logger's length, adding \"...\" if truncated.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Int -\u003e Logger -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#shortenL",
        "fct-type": "function",
        "title": "shortenL"
      },
      "index": {
        "description": "Limit logger length adding if truncated",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "shortenL",
        "normalized": "Int-\u003eLogger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Int-\u003eLogger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:wrapL",
      "description": {
        "fct-descr": "\u003cp\u003eWrap a logger's output in delimiters, unless it is \u003ccode\u003eX (Nothing)\u003c/code\u003e\n or \u003ccode\u003eX (Just \"\")\u003c/code\u003e. Some examples:\n\u003c/p\u003e\u003cpre\u003e    wrapL \" | \" \" | \" (date \"%a %d %b\") -- ' | Tue 19 Feb | '\n\n    wrapL \"bat: \" \"\" battery            -- ' bat: battery_logger_output'\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e Logger -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#wrapL",
        "fct-type": "function",
        "title": "wrapL"
      },
      "index": {
        "description": "Wrap logger output in delimiters unless it is Nothing or Just Some examples wrapL date Tue Feb wrapL bat battery bat battery logger output",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "wrapL",
        "normalized": "String-\u003eString-\u003eLogger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eString-\u003eLogger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Loggers.html#v:xmobarColorL",
      "description": {
        "fct-descr": "\u003cp\u003eColor a logger's output with xmobar foreground and background colors.\n\u003c/p\u003e\u003cpre\u003e  xmobarColorL \"#6A5ACD\" \"gray6\" loadAverage\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Loggers",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e Logger -\u003e Logger",
        "fct-source": "src/XMonad-Util-Loggers.html#xmobarColorL",
        "fct-type": "function",
        "title": "xmobarColorL"
      },
      "index": {
        "description": "Color logger output with xmobar foreground and background colors xmobarColorL A5ACD gray6 loadAverage",
        "hierarchy": "XMonad Util Loggers",
        "module": "XMonad.Util.Loggers",
        "name": "xmobarColorL",
        "normalized": "String-\u003eString-\u003eLogger-\u003eLogger",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Color",
        "signature": "String-\u003eString-\u003eLogger-\u003eLogger"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA wrapper for keybinding configuration that can list the available\n keybindings.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-NamedActions.html",
        "fct-type": "module",
        "title": "NamedActions"
      },
      "index": {
        "description": "wrapper for keybinding configuration that can list the available keybindings",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "NamedActions",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Actions",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#t:HasName",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "class",
        "fct-source": "src/XMonad-Util-NamedActions.html#HasName",
        "fct-type": "class",
        "title": "HasName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "HasName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Has Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#t:NamedAction",
      "description": {
        "fct-descr": "\u003cp\u003eAn existential wrapper so that different types can be combined in lists,\n and maps\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-NamedActions.html#NamedAction",
        "fct-type": "data",
        "title": "NamedAction"
      },
      "index": {
        "description": "An existential wrapper so that different types can be combined in lists and maps",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "NamedAction",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Action",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:-94--43--43--94-",
      "description": {
        "fct-descr": "\u003cp\u003eCombine keymap lists with actions that may or may not have names\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[(d, b)] -\u003e [(d, b1)] -\u003e [(d, NamedAction)]",
        "fct-source": "src/XMonad-Util-NamedActions.html#%5E%2B%2B%5E",
        "fct-type": "function",
        "title": "(^++^)"
      },
      "index": {
        "description": "Combine keymap lists with actions that may or may not have names",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "(^++^) ^++^",
        "normalized": "[(a,b)]-\u003e[(a,b)]-\u003e[(a,NamedAction)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "[(d,b)]-\u003e[(d,b)]-\u003e[(d,NamedAction)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:NamedAction",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NamedAction a",
        "fct-source": "src/XMonad-Util-NamedActions.html#NamedAction",
        "fct-type": "function",
        "title": "NamedAction"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "NamedAction",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Action",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:addDescrKeys",
      "description": {
        "fct-descr": "\u003cp\u003eMerge the supplied keys with \u003ccode\u003e\u003ca\u003edefaultKeysDescr\u003c/a\u003e\u003c/code\u003e, also adding a keybinding\n to run an action for showing the keybindings.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "((KeyMask, KeySym), [((KeyMask, KeySym), NamedAction)] -\u003e b) -\u003e (XConfig Layout -\u003e [((KeyMask, KeySym), b1)]) -\u003e XConfig l -\u003e XConfig l",
        "fct-source": "src/XMonad-Util-NamedActions.html#addDescrKeys",
        "fct-type": "function",
        "title": "addDescrKeys"
      },
      "index": {
        "description": "Merge the supplied keys with defaultKeysDescr also adding keybinding to run an action for showing the keybindings",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "addDescrKeys",
        "normalized": "((KeyMask,KeySym),[((KeyMask,KeySym),NamedAction)]-\u003ea)-\u003e(XConfig Layout-\u003e[((KeyMask,KeySym),a)])-\u003eXConfig b-\u003eXConfig b",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Descr Keys",
        "signature": "((KeyMask,KeySym),[((KeyMask,KeySym),NamedAction)]-\u003eb)-\u003e(XConfig Layout-\u003e[((KeyMask,KeySym),b)])-\u003eXConfig l-\u003eXConfig l"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:addName",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X () -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#addName",
        "fct-type": "function",
        "title": "addName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "addName",
        "normalized": "String-\u003eX()-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": "String-\u003eX()-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:defaultKeysDescr",
      "description": {
        "fct-descr": "\u003cp\u003eA version of the default keys from \u003ccode\u003eXMonad.Config.defaultConfig\u003c/code\u003e, but with\n \u003ccode\u003e\u003ca\u003eNamedAction\u003c/a\u003e\u003c/code\u003e  instead of \u003ccode\u003eX ()\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig Layout -\u003e [((KeyMask, KeySym), NamedAction)]",
        "fct-source": "src/XMonad-Util-NamedActions.html#defaultKeysDescr",
        "fct-type": "function",
        "title": "defaultKeysDescr"
      },
      "index": {
        "description": "version of the default keys from XMonad.Config.defaultConfig but with NamedAction instead of",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "defaultKeysDescr",
        "normalized": "XConfig Layout-\u003e[((KeyMask,KeySym),NamedAction)]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Keys Descr",
        "signature": "XConfig Layout-\u003e[((KeyMask,KeySym),NamedAction)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:noName",
      "description": {
        "fct-descr": "\u003cp\u003eThese are just the \u003ccode\u003eNamedAction\u003c/code\u003e constructor but with a more specialized\n type, so that you don't have to supply any annotations, for ex coercing\n spawn to \u003ccode\u003eX ()\u003c/code\u003e from the more general \u003ccode\u003eMonadIO m =\u003e m ()\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X () -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#noName",
        "fct-type": "function",
        "title": "noName"
      },
      "index": {
        "description": "These are just the NamedAction constructor but with more specialized type so that you don have to supply any annotations for ex coercing spawn to from the more general MonadIO",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "noName",
        "normalized": "X()-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": "X()-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:oneName",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(X (), String) -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#oneName",
        "fct-type": "function",
        "title": "oneName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "oneName",
        "normalized": "(X(),String)-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": "(X(),String)-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:sendMessage-39-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esendMessage\u003c/a\u003e\u003c/code\u003e but add a description that is \u003ccode\u003eshow message\u003c/code\u003e. Note that not\n all messages have show instances.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#sendMessage%27",
        "fct-type": "function",
        "title": "sendMessage'"
      },
      "index": {
        "description": "sendMessage but add description that is show message Note that not all messages have show instances",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "sendMessage'",
        "normalized": "a-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Message'",
        "signature": "a-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:separator",
      "description": {
        "fct-descr": "\u003cp\u003eFor a prettier presentation: keymask, keysym of 0 are reserved for this\n purpose: they do not happen, afaik, and keysymToString 0 would raise an\n error otherwise\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "((KeyMask, KeySym), NamedAction)",
        "fct-source": "src/XMonad-Util-NamedActions.html#separator",
        "fct-type": "function",
        "title": "separator"
      },
      "index": {
        "description": "For prettier presentation keymask keysym of are reserved for this purpose they do not happen afaik and keysymToString would raise an error otherwise",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "separator",
        "normalized": "((KeyMask,KeySym),NamedAction)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "((KeyMask,KeySym),NamedAction)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:showKm",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[((KeyMask, KeySym), NamedAction)] -\u003e [String]",
        "fct-source": "src/XMonad-Util-NamedActions.html#showKm",
        "fct-type": "function",
        "title": "showKm"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "showKm",
        "normalized": "[((KeyMask,KeySym),NamedAction)]-\u003e[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Km",
        "signature": "[((KeyMask,KeySym),NamedAction)]-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:showKmSimple",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[((KeyMask, KeySym), NamedAction)] -\u003e [[Char]]",
        "fct-source": "src/XMonad-Util-NamedActions.html#showKmSimple",
        "fct-type": "function",
        "title": "showKmSimple"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "showKmSimple",
        "normalized": "[((KeyMask,KeySym),NamedAction)]-\u003e[[Char]]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Km Simple",
        "signature": "[((KeyMask,KeySym),NamedAction)]-\u003e[[Char]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:spawn-39-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003espawn\u003c/a\u003e\u003c/code\u003e but the description is the string passed\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#spawn%27",
        "fct-type": "function",
        "title": "spawn'"
      },
      "index": {
        "description": "spawn but the description is the string passed",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "spawn'",
        "normalized": "String-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:submapName",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esubmap\u003c/a\u003e\u003c/code\u003e, but propagate the descriptions of the actions. Does this belong\n in \u003ca\u003eXMonad.Actions.Submap\u003c/a\u003e?\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[((KeyMask, KeySym), a)] -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#submapName",
        "fct-type": "function",
        "title": "submapName"
      },
      "index": {
        "description": "submap but propagate the descriptions of the actions Does this belong in XMonad.Actions.Submap",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "submapName",
        "normalized": "[((KeyMask,KeySym),a)]-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": "[((KeyMask,KeySym),a)]-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:subtitle",
      "description": {
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e ((KeyMask, KeySym), NamedAction)",
        "fct-source": "src/XMonad-Util-NamedActions.html#subtitle",
        "fct-type": "function",
        "title": "subtitle"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "subtitle",
        "normalized": "String-\u003e((KeyMask,KeySym),NamedAction)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "String-\u003e((KeyMask,KeySym),NamedAction)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedActions.html#v:xMessage",
      "description": {
        "fct-descr": "\u003cp\u003eAn action to send to \u003ccode\u003e\u003ca\u003eaddDescrKeys\u003c/a\u003e\u003c/code\u003e for showing the keybindings. See also \u003ccode\u003e\u003ca\u003eshowKm\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eshowKmSimple\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedActions",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[((KeyMask, KeySym), NamedAction)] -\u003e NamedAction",
        "fct-source": "src/XMonad-Util-NamedActions.html#xMessage",
        "fct-type": "function",
        "title": "xMessage"
      },
      "index": {
        "description": "An action to send to addDescrKeys for showing the keybindings See also showKm and showKmSimple",
        "hierarchy": "XMonad Util NamedActions",
        "module": "XMonad.Util.NamedActions",
        "name": "xMessage",
        "normalized": "[((KeyMask,KeySym),NamedAction)]-\u003eNamedAction",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Message",
        "signature": "[((KeyMask,KeySym),NamedAction)]-\u003eNamedAction"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eNamed scratchpads that support several arbitrary applications at the same time.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html",
        "fct-type": "module",
        "title": "NamedScratchpad"
      },
      "index": {
        "description": "Named scratchpads that support several arbitrary applications at the same time",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "NamedScratchpad",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Scratchpad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#t:NamedScratchpad",
      "description": {
        "fct-descr": "\u003cp\u003eSingle named scratchpad configuration\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpad",
        "fct-type": "data",
        "title": "NamedScratchpad"
      },
      "index": {
        "description": "Single named scratchpad configuration",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "NamedScratchpad",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Scratchpad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#t:NamedScratchpads",
      "description": {
        "fct-descr": "\u003cp\u003eNamed scratchpads configuration\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpads",
        "fct-type": "type",
        "title": "NamedScratchpads"
      },
      "index": {
        "description": "Named scratchpads configuration",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "NamedScratchpads",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Scratchpads",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:NS",
      "description": {
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NS",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpad",
        "fct-type": "function",
        "title": "NS"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "NS",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "NS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:cmd",
      "description": {
        "fct-descr": "\u003cp\u003eCommand used to run application\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpad",
        "fct-type": "function",
        "title": "cmd"
      },
      "index": {
        "description": "Command used to run application",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "cmd",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:customFloating",
      "description": {
        "fct-descr": "\u003cp\u003eManage hook that makes the window floating with custom placement\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RationalRect -\u003e ManageHook",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#customFloating",
        "fct-type": "function",
        "title": "customFloating"
      },
      "index": {
        "description": "Manage hook that makes the window floating with custom placement",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "customFloating",
        "normalized": "RationalRect-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Floating",
        "signature": "RationalRect-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:defaultFloating",
      "description": {
        "fct-descr": "\u003cp\u003eManage hook that makes the window floating with the default placement\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#defaultFloating",
        "fct-type": "function",
        "title": "defaultFloating"
      },
      "index": {
        "description": "Manage hook that makes the window floating with the default placement",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "defaultFloating",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Floating",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:hook",
      "description": {
        "fct-descr": "\u003cp\u003eManage hook called for application window, use it to define the placement. See \u003ccode\u003enonFloating\u003c/code\u003e, \u003ccode\u003edefaultFloating\u003c/code\u003e and \u003ccode\u003ecustomFloating\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpad",
        "fct-type": "function",
        "title": "hook"
      },
      "index": {
        "description": "Manage hook called for application window use it to define the placement See nonFloating defaultFloating and customFloating",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "hook",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:name",
      "description": {
        "fct-descr": "\u003cp\u003eScratchpad name\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpad",
        "fct-type": "function",
        "title": "name"
      },
      "index": {
        "description": "Scratchpad name",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "name",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:namedScratchpadAction",
      "description": {
        "fct-descr": "\u003cp\u003eAction to pop up specified named scratchpad\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NamedScratchpads-\u003e String-\u003e X ()",
        "fct-type": "function",
        "title": "namedScratchpadAction"
      },
      "index": {
        "description": "Action to pop up specified named scratchpad",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "namedScratchpadAction",
        "normalized": "NamedScratchpads-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Scratchpad Action",
        "signature": "NamedScratchpads-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:namedScratchpadFilterOutWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eTransforms a workspace list containing the NSP workspace into one that\n doesn't contain it. Intended for use with logHooks.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[WindowSpace] -\u003e [WindowSpace]",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#namedScratchpadFilterOutWorkspace",
        "fct-type": "function",
        "title": "namedScratchpadFilterOutWorkspace"
      },
      "index": {
        "description": "Transforms workspace list containing the NSP workspace into one that doesn contain it Intended for use with logHooks",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "namedScratchpadFilterOutWorkspace",
        "normalized": "[WindowSpace]-\u003e[WindowSpace]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Scratchpad Filter Out Workspace",
        "signature": "[WindowSpace]-\u003e[WindowSpace]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:namedScratchpadManageHook",
      "description": {
        "fct-descr": "\u003cp\u003eManage hook to use with named scratchpads\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NamedScratchpads-\u003e ManageHook",
        "fct-type": "function",
        "title": "namedScratchpadManageHook"
      },
      "index": {
        "description": "Manage hook to use with named scratchpads",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "namedScratchpadManageHook",
        "normalized": "NamedScratchpads-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Scratchpad Manage Hook",
        "signature": "NamedScratchpads-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:nonFloating",
      "description": {
        "fct-descr": "\u003cp\u003eManage hook that makes the window non-floating\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#nonFloating",
        "fct-type": "function",
        "title": "nonFloating"
      },
      "index": {
        "description": "Manage hook that makes the window non-floating",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "nonFloating",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Floating",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedScratchpad.html#v:query",
      "description": {
        "fct-descr": "\u003cp\u003eQuery to find already running application\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.NamedScratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Query Bool",
        "fct-source": "src/XMonad-Util-NamedScratchpad.html#NamedScratchpad",
        "fct-type": "function",
        "title": "query"
      },
      "index": {
        "description": "Query to find already running application",
        "hierarchy": "XMonad Util NamedScratchpad",
        "module": "XMonad.Util.NamedScratchpad",
        "name": "query",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedWindows.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module allows you to associate the X titles of windows with\n them.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.NamedWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-NamedWindows.html",
        "fct-type": "module",
        "title": "NamedWindows"
      },
      "index": {
        "description": "This module allows you to associate the titles of windows with them",
        "hierarchy": "XMonad Util NamedWindows",
        "module": "XMonad.Util.NamedWindows",
        "name": "NamedWindows",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Windows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedWindows.html#t:NamedWindow",
      "description": {
        "fct-module": "XMonad.Util.NamedWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-NamedWindows.html#NamedWindow",
        "fct-type": "data",
        "title": "NamedWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedWindows",
        "module": "XMonad.Util.NamedWindows",
        "name": "NamedWindow",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Window",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedWindows.html#v:getName",
      "description": {
        "fct-module": "XMonad.Util.NamedWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X NamedWindow",
        "fct-source": "src/XMonad-Util-NamedWindows.html#getName",
        "fct-type": "function",
        "title": "getName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedWindows",
        "module": "XMonad.Util.NamedWindows",
        "name": "getName",
        "normalized": "Window-\u003eX NamedWindow",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": "Window-\u003eX NamedWindow"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedWindows.html#v:unName",
      "description": {
        "fct-module": "XMonad.Util.NamedWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "NamedWindow -\u003e Window",
        "fct-source": "src/XMonad-Util-NamedWindows.html#unName",
        "fct-type": "function",
        "title": "unName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedWindows",
        "module": "XMonad.Util.NamedWindows",
        "name": "unName",
        "normalized": "NamedWindow-\u003eWindow",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": "NamedWindow-\u003eWindow"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-NamedWindows.html#v:withNamedWindow",
      "description": {
        "fct-module": "XMonad.Util.NamedWindows",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(NamedWindow -\u003e X ()) -\u003e X ()",
        "fct-source": "src/XMonad-Util-NamedWindows.html#withNamedWindow",
        "fct-type": "function",
        "title": "withNamedWindow"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util NamedWindows",
        "module": "XMonad.Util.NamedWindows",
        "name": "withNamedWindow",
        "normalized": "(NamedWindow-\u003eX())-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Named Window",
        "signature": "(NamedWindow-\u003eX())-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for sending key presses to windows. This modules provides generalized\nand specialized functions for this task.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Paste.html",
        "fct-type": "module",
        "title": "Paste"
      },
      "index": {
        "description": "module for sending key presses to windows This modules provides generalized and specialized functions for this task",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "Paste",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Paste",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#v:noModMask",
      "description": {
        "fct-descr": "\u003cp\u003eA null \u003ccode\u003e\u003ca\u003eKeyMask\u003c/a\u003e\u003c/code\u003e. Used when you don't want a character or string shifted, control'd, or what.\n\u003c/p\u003e\u003cp\u003eTODO: This really should be a function in the X11 binding. When noModMask shows up there, remove.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "KeyMask",
        "fct-source": "src/XMonad-Util-Paste.html#noModMask",
        "fct-type": "function",
        "title": "noModMask"
      },
      "index": {
        "description": "null KeyMask Used when you don want character or string shifted control or what TODO This really should be function in the X11 binding When noModMask shows up there remove",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "noModMask",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Mod Mask",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#v:pasteChar",
      "description": {
        "fct-descr": "\u003cp\u003eSend a character to the current window. This is more low-level.\n   Remember that you must handle the case of capitalization appropriately.\n   That is, from the window's perspective:\n\u003c/p\u003e\u003cpre\u003e pasteChar mod2Mask 'F' ~\u003e \"f\"\n\u003c/pre\u003e\u003cp\u003eYou would want to do something like:\n\u003c/p\u003e\u003cpre\u003e pasteChar shiftMask 'F'\n\u003c/pre\u003e\u003cp\u003eNote that this function makes use of \u003ccode\u003e\u003ca\u003estringToKeysym\u003c/a\u003e\u003c/code\u003e, and so will probably\n   have trouble with any \u003ccode\u003e\u003ca\u003eChar\u003c/a\u003e\u003c/code\u003e outside ASCII.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "KeyMask -\u003e Char -\u003e X ()",
        "fct-source": "src/XMonad-Util-Paste.html#pasteChar",
        "fct-type": "function",
        "title": "pasteChar"
      },
      "index": {
        "description": "Send character to the current window This is more low-level Remember that you must handle the case of capitalization appropriately That is from the window perspective pasteChar mod2Mask You would want to do something like pasteChar shiftMask Note that this function makes use of stringToKeysym and so will probably have trouble with any Char outside ASCII",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "pasteChar",
        "normalized": "KeyMask-\u003eChar-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Char",
        "signature": "KeyMask-\u003eChar-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#v:pasteSelection",
      "description": {
        "fct-descr": "\u003cp\u003ePaste the current X mouse selection. Note that this uses \u003ccode\u003e\u003ca\u003egetSelection\u003c/a\u003e\u003c/code\u003e from\n   \u003ca\u003eXMonad.Util.XSelection\u003c/a\u003e and so is heir to its flaws.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X ()",
        "fct-source": "src/XMonad-Util-Paste.html#pasteSelection",
        "fct-type": "function",
        "title": "pasteSelection"
      },
      "index": {
        "description": "Paste the current mouse selection Note that this uses getSelection from XMonad.Util.XSelection and so is heir to its flaws",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "pasteSelection",
        "normalized": "X()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selection",
        "signature": "X()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#v:pasteString",
      "description": {
        "fct-descr": "\u003cp\u003eSend a string to the window which is currently focused. This function correctly\n handles capitalization.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Util-Paste.html#pasteString",
        "fct-type": "function",
        "title": "pasteString"
      },
      "index": {
        "description": "Send string to the window which is currently focused This function correctly handles capitalization",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "pasteString",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#v:sendKey",
      "description": {
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "KeyMask -\u003e KeySym -\u003e X ()",
        "fct-source": "src/XMonad-Util-Paste.html#sendKey",
        "fct-type": "function",
        "title": "sendKey"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "sendKey",
        "normalized": "KeyMask-\u003eKeySym-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Key",
        "signature": "KeyMask-\u003eKeySym-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Paste.html#v:sendKeyWindow",
      "description": {
        "fct-descr": "\u003cp\u003eThe primitive. Allows you to send any combination of \u003ccode\u003e\u003ca\u003eKeyMask\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eKeySym\u003c/a\u003e\u003c/code\u003e to any \u003ccode\u003e\u003ca\u003eWindow\u003c/a\u003e\u003c/code\u003e you specify.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Paste",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "KeyMask -\u003e KeySym -\u003e Window -\u003e X ()",
        "fct-source": "src/XMonad-Util-Paste.html#sendKeyWindow",
        "fct-type": "function",
        "title": "sendKeyWindow"
      },
      "index": {
        "description": "The primitive Allows you to send any combination of KeyMask and KeySym to any Window you specify",
        "hierarchy": "XMonad Util Paste",
        "module": "XMonad.Util.Paste",
        "name": "sendKeyWindow",
        "normalized": "KeyMask-\u003eKeySym-\u003eWindow-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Key Window",
        "signature": "KeyMask-\u003eKeySym-\u003eWindow-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA utility module to store information about position and size of a window.\n See \u003ca\u003eXMonad.Layout.PositionStoreFloat\u003c/a\u003e for a layout that makes use of this.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-PositionStore.html",
        "fct-type": "module",
        "title": "PositionStore"
      },
      "index": {
        "description": "utility module to store information about position and size of window See XMonad.Layout.PositionStoreFloat for layout that makes use of this",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "PositionStore",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Position Store",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#v:getPosStore",
      "description": {
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X PositionStore",
        "fct-source": "src/XMonad-Util-PositionStore.html#getPosStore",
        "fct-type": "function",
        "title": "getPosStore"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "getPosStore",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pos Store",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#v:modifyPosStore",
      "description": {
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(PositionStore -\u003e PositionStore) -\u003e X ()",
        "fct-source": "src/XMonad-Util-PositionStore.html#modifyPosStore",
        "fct-type": "function",
        "title": "modifyPosStore"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "modifyPosStore",
        "normalized": "(PositionStore-\u003ePositionStore)-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pos Store",
        "signature": "(PositionStore-\u003ePositionStore)-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#v:posStoreInsert",
      "description": {
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PositionStore -\u003e Window -\u003e Rectangle -\u003e Rectangle -\u003e PositionStore",
        "fct-source": "src/XMonad-Util-PositionStore.html#posStoreInsert",
        "fct-type": "function",
        "title": "posStoreInsert"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "posStoreInsert",
        "normalized": "PositionStore-\u003eWindow-\u003eRectangle-\u003eRectangle-\u003ePositionStore",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Insert",
        "signature": "PositionStore-\u003eWindow-\u003eRectangle-\u003eRectangle-\u003ePositionStore"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#v:posStoreMove",
      "description": {
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PositionStore -\u003e Window -\u003e Position -\u003e Position -\u003e Rectangle -\u003e Rectangle -\u003e PositionStore",
        "fct-source": "src/XMonad-Util-PositionStore.html#posStoreMove",
        "fct-type": "function",
        "title": "posStoreMove"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "posStoreMove",
        "normalized": "PositionStore-\u003eWindow-\u003ePosition-\u003ePosition-\u003eRectangle-\u003eRectangle-\u003ePositionStore",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Move",
        "signature": "PositionStore-\u003eWindow-\u003ePosition-\u003ePosition-\u003eRectangle-\u003eRectangle-\u003ePositionStore"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#v:posStoreQuery",
      "description": {
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PositionStore -\u003e Window -\u003e Rectangle -\u003e Maybe Rectangle",
        "fct-source": "src/XMonad-Util-PositionStore.html#posStoreQuery",
        "fct-type": "function",
        "title": "posStoreQuery"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "posStoreQuery",
        "normalized": "PositionStore-\u003eWindow-\u003eRectangle-\u003eMaybe Rectangle",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Query",
        "signature": "PositionStore-\u003eWindow-\u003eRectangle-\u003eMaybe Rectangle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-PositionStore.html#v:posStoreRemove",
      "description": {
        "fct-module": "XMonad.Util.PositionStore",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "PositionStore -\u003e Window -\u003e PositionStore",
        "fct-source": "src/XMonad-Util-PositionStore.html#posStoreRemove",
        "fct-type": "function",
        "title": "posStoreRemove"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util PositionStore",
        "module": "XMonad.Util.PositionStore",
        "name": "posStoreRemove",
        "normalized": "PositionStore-\u003eWindow-\u003ePositionStore",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Store Remove",
        "signature": "PositionStore-\u003eWindow-\u003ePositionStore"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Replace.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eImplements a \u003ccode\u003e--replace\u003c/code\u003e behavior outside of core.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Replace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Replace.html",
        "fct-type": "module",
        "title": "Replace"
      },
      "index": {
        "description": "Implements replace behavior outside of core",
        "hierarchy": "XMonad Util Replace",
        "module": "XMonad.Util.Replace",
        "name": "Replace",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Replace.html#v:replace",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ereplace\u003c/code\u003e must be run before xmonad starts to signals to compliant window\n managers that they must exit and let xmonad take over.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Replace",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "IO ()",
        "fct-source": "src/XMonad-Util-Replace.html#replace",
        "fct-type": "function",
        "title": "replace"
      },
      "index": {
        "description": "replace must be run before xmonad starts to signals to compliant window managers that they must exit and let xmonad take over",
        "hierarchy": "XMonad Util Replace",
        "module": "XMonad.Util.Replace",
        "name": "replace",
        "normalized": "IO()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis modules provides several commands to run an external process.\n It is composed of functions formerly defined in \u003ca\u003eXMonad.Util.Dmenu\u003c/a\u003e (by\n Spencer Janssen), \u003ca\u003eXMonad.Util.Dzen\u003c/a\u003e (by glasser@mit.edu) and\n XMonad.Util.RunInXTerm (by Andrea Rossato).\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Run.html",
        "fct-type": "module",
        "title": "Run"
      },
      "index": {
        "description": "This modules provides several commands to run an external process It is composed of functions formerly defined in XMonad.Util.Dmenu by Spencer Janssen XMonad.Util.Dzen by glasser@mit.edu and XMonad.Util.RunInXTerm by Andrea Rossato",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "Run",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Run",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:hPutStr",
      "description": {
        "fct-descr": "\u003cp\u003eComputation \u003ccode\u003e\u003ca\u003ehPutStr\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ehdl s\u003c/code\u003e writes the string\n \u003ccode\u003es\u003c/code\u003e to the file or channel managed by \u003ccode\u003ehdl\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eThis operation may fail with:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisFullError\u003c/a\u003e\u003c/code\u003e if the device is full; or\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisPermissionError\u003c/a\u003e\u003c/code\u003e if another system resource limit would be exceeded.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Handle -\u003e String -\u003e IO ()",
        "fct-type": "function",
        "title": "hPutStr"
      },
      "index": {
        "description": "Computation hPutStr hdl writes the string to the file or channel managed by hdl This operation may fail with isFullError if the device is full or isPermissionError if another system resource limit would be exceeded",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "hPutStr",
        "normalized": "Handle-\u003eString-\u003eIO()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Put Str",
        "signature": "Handle-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:hPutStrLn",
      "description": {
        "fct-descr": "\u003cp\u003eThe same as \u003ccode\u003e\u003ca\u003ehPutStr\u003c/a\u003e\u003c/code\u003e, but adds a newline character.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Handle -\u003e String -\u003e IO ()",
        "fct-type": "function",
        "title": "hPutStrLn"
      },
      "index": {
        "description": "The same as hPutStr but adds newline character",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "hPutStrLn",
        "normalized": "Handle-\u003eString-\u003eIO()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Put Str Ln",
        "signature": "Handle-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:runInTerm",
      "description": {
        "fct-descr": "\u003cp\u003eOpen a terminal emulator. The terminal emulator is specified in \u003ccode\u003edefaultConfig\u003c/code\u003e as xterm by default. It is then\n asked to pass the shell a command with certain options. This is unsafe in the sense of \u003ccode\u003e\u003ca\u003eunsafeSpawn\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Util-Run.html#runInTerm",
        "fct-type": "function",
        "title": "runInTerm"
      },
      "index": {
        "description": "Open terminal emulator The terminal emulator is specified in defaultConfig as xterm by default It is then asked to pass the shell command with certain options This is unsafe in the sense of unsafeSpawn",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "runInTerm",
        "normalized": "String-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "In Term",
        "signature": "String-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:runProcessWithInput",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the output.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e [String] -\u003e String -\u003e m String",
        "fct-source": "src/XMonad-Util-Run.html#runProcessWithInput",
        "fct-type": "function",
        "title": "runProcessWithInput"
      },
      "index": {
        "description": "Returns the output",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "runProcessWithInput",
        "normalized": "FilePath-\u003e[String]-\u003eString-\u003ea String",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Process With Input",
        "signature": "FilePath-\u003e[String]-\u003eString-\u003em String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:runProcessWithInputAndWait",
      "description": {
        "fct-descr": "\u003cp\u003eWait is in s (microseconds)\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e [String] -\u003e String -\u003e Int -\u003e m ()",
        "fct-source": "src/XMonad-Util-Run.html#runProcessWithInputAndWait",
        "fct-type": "function",
        "title": "runProcessWithInputAndWait"
      },
      "index": {
        "description": "Wait is in microseconds",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "runProcessWithInputAndWait",
        "normalized": "FilePath-\u003e[String]-\u003eString-\u003eInt-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Process With Input And Wait",
        "signature": "FilePath-\u003e[String]-\u003eString-\u003eInt-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:safeRunInTerm",
      "description": {
        "fct-descr": "\u003cp\u003eRun a given program in the preferred terminal emulator; see \u003ccode\u003e\u003ca\u003erunInTerm\u003c/a\u003e\u003c/code\u003e. This makes use of \u003ccode\u003e\u003ca\u003esafeSpawn\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Util-Run.html#safeRunInTerm",
        "fct-type": "function",
        "title": "safeRunInTerm"
      },
      "index": {
        "description": "Run given program in the preferred terminal emulator see runInTerm This makes use of safeSpawn",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "safeRunInTerm",
        "normalized": "String-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Run In Term",
        "signature": "String-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:safeSpawn",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esafeSpawn\u003c/a\u003e\u003c/code\u003e bypasses \u003ca\u003eXMonad.Core\u003c/a\u003e's \u003ccode\u003e\u003ca\u003espawn\u003c/a\u003e\u003c/code\u003e command, because spawn passes\nstrings to /bin/sh to be interpreted as shell commands. This is\noften what one wants, but in many cases the passed string will contain\nshell metacharacters which one does not want interpreted as such (URLs\nparticularly often have shell metacharacters like '&' in them). In\nthis case, it is more useful to specify a file or program to be run\nand a string to give it as an argument so as to bypass the shell and\nbe certain the program will receive the string as you typed it.\nunsafeSpawn is internally an alias for XMonad's \u003ccode\u003e\u003ca\u003espawn\u003c/a\u003e\u003c/code\u003e, to remind one that use\nof it can be, well, unsafe.\nExamples:\n\u003c/p\u003e\u003cpre\u003e , ((modm, xK_Print), unsafeSpawn \"import -window root $HOME/xwd-$(date +%s)$$.png\")\n , ((modm, xK_d    ), safeSpawn \"firefox\" \"\")\n\u003c/pre\u003e\u003cp\u003eNote that the unsafeSpawn example must be unsafe and not safe because\nit makes use of shell interpretation by relying on \u003ccode\u003e$HOME\u003c/code\u003e and\ninterpolation, whereas the safeSpawn example can be safe because\nFirefox doesn't need any arguments if it is just being started. \n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e [String] -\u003e m ()",
        "fct-source": "src/XMonad-Util-Run.html#safeSpawn",
        "fct-type": "function",
        "title": "safeSpawn"
      },
      "index": {
        "description": "safeSpawn bypasses XMonad.Core spawn command because spawn passes strings to bin sh to be interpreted as shell commands This is often what one wants but in many cases the passed string will contain shell metacharacters which one does not want interpreted as such URLs particularly often have shell metacharacters like in them In this case it is more useful to specify file or program to be run and string to give it as an argument so as to bypass the shell and be certain the program will receive the string as you typed it unsafeSpawn is internally an alias for XMonad spawn to remind one that use of it can be well unsafe Examples modm xK Print unsafeSpawn import window root HOME xwd date png modm xK safeSpawn firefox Note that the unsafeSpawn example must be unsafe and not safe because it makes use of shell interpretation by relying on HOME and interpolation whereas the safeSpawn example can be safe because Firefox doesn need any arguments if it is just being started",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "safeSpawn",
        "normalized": "FilePath-\u003e[String]-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn",
        "signature": "FilePath-\u003e[String]-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:safeSpawnProg",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003esafeSpawn\u003c/a\u003e\u003c/code\u003e, but only takes a program (and no arguments for it). eg.\n\u003c/p\u003e\u003cpre\u003e safeSpawnProg \"firefox\"\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "FilePath -\u003e m ()",
        "fct-source": "src/XMonad-Util-Run.html#safeSpawnProg",
        "fct-type": "function",
        "title": "safeSpawnProg"
      },
      "index": {
        "description": "Like safeSpawn but only takes program and no arguments for it eg safeSpawnProg firefox",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "safeSpawnProg",
        "normalized": "FilePath-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Prog",
        "signature": "FilePath-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:seconds",
      "description": {
        "fct-descr": "\u003cp\u003eMultiplies by ONE MILLION, for functions that take microseconds.\n\u003c/p\u003e\u003cp\u003eUse like:\n\u003c/p\u003e\u003cpre\u003e (5.5 `seconds`)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e Int",
        "fct-source": "src/XMonad-Util-Run.html#seconds",
        "fct-type": "function",
        "title": "seconds"
      },
      "index": {
        "description": "Multiplies by ONE MILLION for functions that take microseconds Use like seconds",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "seconds",
        "normalized": "Rational-\u003eInt",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "Rational-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:spawnPipe",
      "description": {
        "fct-descr": "\u003cp\u003eLaunch an external application through the system shell and return a \u003ccode\u003eHandle\u003c/code\u003e to its standard input.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e m Handle",
        "fct-source": "src/XMonad-Util-Run.html#spawnPipe",
        "fct-type": "function",
        "title": "spawnPipe"
      },
      "index": {
        "description": "Launch an external application through the system shell and return Handle to its standard input",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "spawnPipe",
        "normalized": "String-\u003ea Handle",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pipe",
        "signature": "String-\u003em Handle"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Run.html#v:unsafeSpawn",
      "description": {
        "fct-module": "XMonad.Util.Run",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e m ()",
        "fct-source": "src/XMonad-Util-Run.html#unsafeSpawn",
        "fct-type": "function",
        "title": "unsafeSpawn"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Run",
        "module": "XMonad.Util.Run",
        "name": "unsafeSpawn",
        "normalized": "String-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn",
        "signature": "String-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVery handy hotkey-launched floating terminal window.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Scratchpad.html",
        "fct-type": "module",
        "title": "Scratchpad"
      },
      "index": {
        "description": "Very handy hotkey-launched floating terminal window",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "Scratchpad",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Scratchpad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#v:scratchpadFilterOutWorkspace",
      "description": {
        "fct-descr": "\u003cp\u003eTransforms a workspace list containing the SP workspace into one that\n doesn't contain it. Intended for use with logHooks.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[WindowSpace] -\u003e [WindowSpace]",
        "fct-source": "src/XMonad-Util-Scratchpad.html#scratchpadFilterOutWorkspace",
        "fct-type": "function",
        "title": "scratchpadFilterOutWorkspace"
      },
      "index": {
        "description": "Transforms workspace list containing the SP workspace into one that doesn contain it Intended for use with logHooks",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "scratchpadFilterOutWorkspace",
        "normalized": "[WindowSpace]-\u003e[WindowSpace]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Filter Out Workspace",
        "signature": "[WindowSpace]-\u003e[WindowSpace]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#v:scratchpadManageHook",
      "description": {
        "fct-descr": "\u003cp\u003eThe ManageHook, with a user-specified StackSet.RationalRect,\n   e.g., for a terminal 4/10 of the screen width from the left, half\n   the screen height from the top, and 6/10 of the screen width by\n   3/10 the screen height, use:\n\u003c/p\u003e\u003cpre\u003e scratchpadManageHook (W.RationalRect 0.4 0.5 0.6 0.3)\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "RationalRect-\u003e ManageHook",
        "fct-type": "function",
        "title": "scratchpadManageHook"
      },
      "index": {
        "description": "The ManageHook with user-specified StackSet.RationalRect e.g for terminal of the screen width from the left half the screen height from the top and of the screen width by the screen height use scratchpadManageHook W.RationalRect",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "scratchpadManageHook",
        "normalized": "RationalRect-\u003eManageHook",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Manage Hook",
        "signature": "RationalRect-\u003eManageHook"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#v:scratchpadManageHookDefault",
      "description": {
        "fct-descr": "\u003cp\u003eThe ManageHook, with the default rectangle:\n Half the screen wide, a quarter of the screen tall, centered.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ManageHook",
        "fct-source": "src/XMonad-Util-Scratchpad.html#scratchpadManageHookDefault",
        "fct-type": "function",
        "title": "scratchpadManageHookDefault"
      },
      "index": {
        "description": "The ManageHook with the default rectangle Half the screen wide quarter of the screen tall centered",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "scratchpadManageHookDefault",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Manage Hook Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#v:scratchpadSpawnAction",
      "description": {
        "fct-descr": "\u003cp\u003eAction to pop up the terminal, for the user to bind to a custom key.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "XConfig l-\u003e X ()",
        "fct-type": "function",
        "title": "scratchpadSpawnAction"
      },
      "index": {
        "description": "Action to pop up the terminal for the user to bind to custom key",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "scratchpadSpawnAction",
        "normalized": "XConfig a-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Action",
        "signature": "XConfig l-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#v:scratchpadSpawnActionCustom",
      "description": {
        "fct-descr": "\u003cp\u003eAction to pop up any program with the user specifying how to set\n   its resource to \"scratchpad\". For example, with gnome-terminal:\n\u003c/p\u003e\u003cpre\u003e scratchpadSpawnActionCustom \"gnome-terminal --disable-factory --name scratchpad\"\n\u003c/pre\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String-\u003e X ()",
        "fct-type": "function",
        "title": "scratchpadSpawnActionCustom"
      },
      "index": {
        "description": "Action to pop up any program with the user specifying how to set its resource to scratchpad For example with gnome-terminal scratchpadSpawnActionCustom gnome-terminal disable-factory name scratchpad",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "scratchpadSpawnActionCustom",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Action Custom",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Scratchpad.html#v:scratchpadSpawnActionTerminal",
      "description": {
        "fct-descr": "\u003cp\u003eAction to pop up the terminal, with a directly specified terminal.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Scratchpad",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String-\u003e X ()",
        "fct-type": "function",
        "title": "scratchpadSpawnActionTerminal"
      },
      "index": {
        "description": "Action to pop up the terminal with directly specified terminal",
        "hierarchy": "XMonad Util Scratchpad",
        "module": "XMonad.Util.Scratchpad",
        "name": "scratchpadSpawnActionTerminal",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Action Terminal",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-SpawnOnce.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for spawning a command once, and only once.  Useful to start\n status bars and make session settings inside startupHook.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.SpawnOnce",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-SpawnOnce.html",
        "fct-type": "module",
        "title": "SpawnOnce"
      },
      "index": {
        "description": "module for spawning command once and only once Useful to start status bars and make session settings inside startupHook",
        "hierarchy": "XMonad Util SpawnOnce",
        "module": "XMonad.Util.SpawnOnce",
        "name": "SpawnOnce",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Spawn Once",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-SpawnOnce.html#v:spawnOnce",
      "description": {
        "fct-descr": "\u003cp\u003eThe first time \u003ccode\u003e\u003ca\u003espawnOnce\u003c/a\u003e\u003c/code\u003e is executed on a particular command, that\n command is executed.  Subsequent invocations for a command do nothing.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.SpawnOnce",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Util-SpawnOnce.html#spawnOnce",
        "fct-type": "function",
        "title": "spawnOnce"
      },
      "index": {
        "description": "The first time spawnOnce is executed on particular command that command is executed Subsequent invocations for command do nothing",
        "hierarchy": "XMonad Util SpawnOnce",
        "module": "XMonad.Util.SpawnOnce",
        "name": "spawnOnce",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Once",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-StringProp.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eInternal utility functions for storing Strings with the root window.\n\u003c/p\u003e\u003cp\u003eUsed for global state like IORefs with string keys, but more latency,\n persistent between xmonad restarts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.StringProp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-StringProp.html",
        "fct-type": "module",
        "title": "StringProp"
      },
      "index": {
        "description": "Internal utility functions for storing Strings with the root window Used for global state like IORefs with string keys but more latency persistent between xmonad restarts",
        "hierarchy": "XMonad Util StringProp",
        "module": "XMonad.Util.StringProp",
        "name": "StringProp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String Prop",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-StringProp.html#t:StringProp",
      "description": {
        "fct-module": "XMonad.Util.StringProp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Util-StringProp.html#StringProp",
        "fct-type": "type",
        "title": "StringProp"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util StringProp",
        "module": "XMonad.Util.StringProp",
        "name": "StringProp",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String Prop",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-StringProp.html#v:getStringListProp",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a property name, returns its contents as a list. It uses the empty\n list as default value.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.StringProp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e StringProp -\u003e m [String]",
        "fct-source": "src/XMonad-Util-StringProp.html#getStringListProp",
        "fct-type": "function",
        "title": "getStringListProp"
      },
      "index": {
        "description": "Given property name returns its contents as list It uses the empty list as default value",
        "hierarchy": "XMonad Util StringProp",
        "module": "XMonad.Util.StringProp",
        "name": "getStringListProp",
        "normalized": "Display-\u003eStringProp-\u003ea[String]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String List Prop",
        "signature": "Display-\u003eStringProp-\u003em[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-StringProp.html#v:getStringProp",
      "description": {
        "fct-descr": "\u003cp\u003eGet the name of a string property and returns it as a \u003ccode\u003e\u003ca\u003eMaybe\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.StringProp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e StringProp -\u003e m (Maybe [Char])",
        "fct-source": "src/XMonad-Util-StringProp.html#getStringProp",
        "fct-type": "function",
        "title": "getStringProp"
      },
      "index": {
        "description": "Get the name of string property and returns it as Maybe",
        "hierarchy": "XMonad Util StringProp",
        "module": "XMonad.Util.StringProp",
        "name": "getStringProp",
        "normalized": "Display-\u003eStringProp-\u003ea(Maybe[Char])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String Prop",
        "signature": "Display-\u003eStringProp-\u003em(Maybe[Char])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-StringProp.html#v:setStringListProp",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a property name and a list, sets the value of this property with\n the list given as argument.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.StringProp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e StringProp -\u003e [String] -\u003e m ()",
        "fct-source": "src/XMonad-Util-StringProp.html#setStringListProp",
        "fct-type": "function",
        "title": "setStringListProp"
      },
      "index": {
        "description": "Given property name and list sets the value of this property with the list given as argument",
        "hierarchy": "XMonad Util StringProp",
        "module": "XMonad.Util.StringProp",
        "name": "setStringListProp",
        "normalized": "Display-\u003eStringProp-\u003e[String]-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String List Prop",
        "signature": "Display-\u003eStringProp-\u003e[String]-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-StringProp.html#v:setStringProp",
      "description": {
        "fct-descr": "\u003cp\u003eSet the value of a string property.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.StringProp",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e StringProp -\u003e [Char] -\u003e m ()",
        "fct-source": "src/XMonad-Util-StringProp.html#setStringProp",
        "fct-type": "function",
        "title": "setStringProp"
      },
      "index": {
        "description": "Set the value of string property",
        "hierarchy": "XMonad Util StringProp",
        "module": "XMonad.Util.StringProp",
        "name": "setStringProp",
        "normalized": "Display-\u003eStringProp-\u003e[Char]-\u003ea()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "String Prop",
        "signature": "Display-\u003eStringProp-\u003e[Char]-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA (hopefully) growing collection of themes for decorated layouts.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Themes.html",
        "fct-type": "module",
        "title": "Themes"
      },
      "index": {
        "description": "hopefully growing collection of themes for decorated layouts",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "Themes",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Themes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#t:ThemeInfo",
      "description": {
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Themes.html#ThemeInfo",
        "fct-type": "data",
        "title": "ThemeInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "ThemeInfo",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:TI",
      "description": {
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TI",
        "fct-source": "src/XMonad-Util-Themes.html#ThemeInfo",
        "fct-type": "function",
        "title": "TI"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "TI",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "TI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:deiflTheme",
      "description": {
        "fct-descr": "\u003cp\u003edeifl's Theme, by deifl.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#deiflTheme",
        "fct-type": "function",
        "title": "deiflTheme"
      },
      "index": {
        "description": "deifl Theme by deifl",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "deiflTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:donaldTheme",
      "description": {
        "fct-descr": "\u003cp\u003eDon's prefered colors - from DynamicLog...;)\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#donaldTheme",
        "fct-type": "function",
        "title": "donaldTheme"
      },
      "index": {
        "description": "Don prefered colors from DynamicLog",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "donaldTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonAutumnTheme",
      "description": {
        "fct-descr": "\u003cp\u003eAutumn colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonAutumnTheme",
        "fct-type": "function",
        "title": "kavonAutumnTheme"
      },
      "index": {
        "description": "Autumn colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonAutumnTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Autumn Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonBluesTheme",
      "description": {
        "fct-descr": "\u003cp\u003eBlue colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonBluesTheme",
        "fct-type": "function",
        "title": "kavonBluesTheme"
      },
      "index": {
        "description": "Blue colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonBluesTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Blues Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonChristmasTheme",
      "description": {
        "fct-descr": "\u003cp\u003eChristmas colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonChristmasTheme",
        "fct-type": "function",
        "title": "kavonChristmasTheme"
      },
      "index": {
        "description": "Christmas colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonChristmasTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Christmas Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonFireTheme",
      "description": {
        "fct-descr": "\u003cp\u003eFire colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonFireTheme",
        "fct-type": "function",
        "title": "kavonFireTheme"
      },
      "index": {
        "description": "Fire colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonFireTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Fire Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonForestTheme",
      "description": {
        "fct-descr": "\u003cp\u003eForest colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonForestTheme",
        "fct-type": "function",
        "title": "kavonForestTheme"
      },
      "index": {
        "description": "Forest colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonForestTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Forest Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonLakeTheme",
      "description": {
        "fct-descr": "\u003cp\u003eLake (blue/green) colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonLakeTheme",
        "fct-type": "function",
        "title": "kavonLakeTheme"
      },
      "index": {
        "description": "Lake blue green colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonLakeTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Lake Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonPeacockTheme",
      "description": {
        "fct-descr": "\u003cp\u003ePeacock colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonPeacockTheme",
        "fct-type": "function",
        "title": "kavonPeacockTheme"
      },
      "index": {
        "description": "Peacock colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonPeacockTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Peacock Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:kavonVioGreenTheme",
      "description": {
        "fct-descr": "\u003cp\u003eViolet-Green colours, by Kathryn Andersen\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#kavonVioGreenTheme",
        "fct-type": "function",
        "title": "kavonVioGreenTheme"
      },
      "index": {
        "description": "Violet-Green colours by Kathryn Andersen",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "kavonVioGreenTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Vio Green Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:listOfThemes",
      "description": {
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[ThemeInfo]",
        "fct-source": "src/XMonad-Util-Themes.html#listOfThemes",
        "fct-type": "function",
        "title": "listOfThemes"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "listOfThemes",
        "normalized": "[ThemeInfo]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Of Themes",
        "signature": "[ThemeInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:oxymor00nTheme",
      "description": {
        "fct-descr": "\u003cp\u003eoxymor00n's theme, by Tom Rauchenwald.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#oxymor00nTheme",
        "fct-type": "function",
        "title": "oxymor00nTheme"
      },
      "index": {
        "description": "oxymor00n theme by Tom Rauchenwald",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "oxymor00nTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:ppThemeInfo",
      "description": {
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo -\u003e String",
        "fct-source": "src/XMonad-Util-Themes.html#ppThemeInfo",
        "fct-type": "function",
        "title": "ppThemeInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "ppThemeInfo",
        "normalized": "ThemeInfo-\u003eString",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme Info",
        "signature": "ThemeInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:robertTheme",
      "description": {
        "fct-descr": "\u003cp\u003eFfrom Robert Manea's prompt theme.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#robertTheme",
        "fct-type": "function",
        "title": "robertTheme"
      },
      "index": {
        "description": "Ffrom Robert Manea prompt theme",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "robertTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:smallClean",
      "description": {
        "fct-descr": "\u003cp\u003eSmall decorations with a Ion3 remembrance, by Andrea Rossato.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#smallClean",
        "fct-type": "function",
        "title": "smallClean"
      },
      "index": {
        "description": "Small decorations with Ion3 remembrance by Andrea Rossato",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "smallClean",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Clean",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:theme",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Theme",
        "fct-source": "src/XMonad-Util-Themes.html#ThemeInfo",
        "fct-type": "function",
        "title": "theme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "theme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:themeAuthor",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Util-Themes.html#ThemeInfo",
        "fct-type": "function",
        "title": "themeAuthor"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "themeAuthor",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Author",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:themeDescription",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Util-Themes.html#ThemeInfo",
        "fct-type": "function",
        "title": "themeDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "themeDescription",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:themeName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String",
        "fct-source": "src/XMonad-Util-Themes.html#ThemeInfo",
        "fct-type": "function",
        "title": "themeName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "themeName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:wfarrTheme",
      "description": {
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#wfarrTheme",
        "fct-type": "function",
        "title": "wfarrTheme"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "wfarrTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Themes.html#v:xmonadTheme",
      "description": {
        "fct-descr": "\u003cp\u003eThe default xmonad theme, by David Roundy.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Themes",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ThemeInfo",
        "fct-source": "src/XMonad-Util-Themes.html#xmonadTheme",
        "fct-type": "function",
        "title": "xmonadTheme"
      },
      "index": {
        "description": "The default xmonad theme by David Roundy",
        "hierarchy": "XMonad Util Themes",
        "module": "XMonad.Util.Themes",
        "name": "xmonadTheme",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Theme",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Timer.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for setting up timers\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Timer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Timer.html",
        "fct-type": "module",
        "title": "Timer"
      },
      "index": {
        "description": "module for setting up timers",
        "hierarchy": "XMonad Util Timer",
        "module": "XMonad.Util.Timer",
        "name": "Timer",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Timer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Timer.html#t:TimerId",
      "description": {
        "fct-module": "XMonad.Util.Timer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Util-Timer.html#TimerId",
        "fct-type": "type",
        "title": "TimerId"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Timer",
        "module": "XMonad.Util.Timer",
        "name": "TimerId",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Timer Id",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Timer.html#v:handleTimer",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a \u003ccode\u003e\u003ca\u003eTimerId\u003c/a\u003e\u003c/code\u003e and an \u003ccode\u003e\u003ca\u003eEvent\u003c/a\u003e\u003c/code\u003e, run an action when the \u003ccode\u003e\u003ca\u003eEvent\u003c/a\u003e\u003c/code\u003e\n has been sent by the timer specified by the \u003ccode\u003e\u003ca\u003eTimerId\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Timer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "TimerId -\u003e Event -\u003e X (Maybe a) -\u003e X (Maybe a)",
        "fct-source": "src/XMonad-Util-Timer.html#handleTimer",
        "fct-type": "function",
        "title": "handleTimer"
      },
      "index": {
        "description": "Given TimerId and an Event run an action when the Event has been sent by the timer specified by the TimerId",
        "hierarchy": "XMonad Util Timer",
        "module": "XMonad.Util.Timer",
        "name": "handleTimer",
        "normalized": "TimerId-\u003eEvent-\u003eX(Maybe a)-\u003eX(Maybe a)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Timer",
        "signature": "TimerId-\u003eEvent-\u003eX(Maybe a)-\u003eX(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Timer.html#v:startTimer",
      "description": {
        "fct-descr": "\u003cp\u003eStart a timer, which will send a ClientMessageEvent after some\n time (in seconds).\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Timer",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rational -\u003e X TimerId",
        "fct-source": "src/XMonad-Util-Timer.html#startTimer",
        "fct-type": "function",
        "title": "startTimer"
      },
      "index": {
        "description": "Start timer which will send ClientMessageEvent after some time in seconds",
        "hierarchy": "XMonad Util Timer",
        "module": "XMonad.Util.Timer",
        "name": "startTimer",
        "normalized": "Rational-\u003eX TimerId",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Timer",
        "signature": "Rational-\u003eX TimerId"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMiscellaneous commonly used types.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-Types.html",
        "fct-type": "module",
        "title": "Types"
      },
      "index": {
        "description": "Miscellaneous commonly used types",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "Types",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Types",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#t:Direction1D",
      "description": {
        "fct-descr": "\u003cp\u003eOne-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "data",
        "title": "Direction1D"
      },
      "index": {
        "description": "One-dimensional directions",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "Direction1D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#t:Direction2D",
      "description": {
        "fct-descr": "\u003cp\u003eTwo-dimensional directions:\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "data",
        "title": "Direction2D"
      },
      "index": {
        "description": "Two-dimensional directions",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "Direction2D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Direction",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#v:D",
      "description": {
        "fct-descr": "\u003cp\u003eDown\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "D",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "D"
      },
      "index": {
        "description": "Down",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "D",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#v:L",
      "description": {
        "fct-descr": "\u003cp\u003eLeft\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "L",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "L"
      },
      "index": {
        "description": "Left",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "L",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#v:Next",
      "description": {
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Next",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Next"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "Next",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Next",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#v:Prev",
      "description": {
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Prev",
        "fct-source": "src/XMonad-Util-Types.html#Direction1D",
        "fct-type": "function",
        "title": "Prev"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "Prev",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prev",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#v:R",
      "description": {
        "fct-descr": "\u003cp\u003eRight\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "R",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "R"
      },
      "index": {
        "description": "Right",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "R",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-Types.html#v:U",
      "description": {
        "fct-descr": "\u003cp\u003eUp\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.Types",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "U",
        "fct-source": "src/XMonad-Util-Types.html#Direction2D",
        "fct-type": "function",
        "title": "U"
      },
      "index": {
        "description": "Up",
        "hierarchy": "XMonad Util Types",
        "module": "XMonad.Util.Types",
        "name": "U",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eEDSL for specifying window properties; various utilities related to window\n properties.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-WindowProperties.html",
        "fct-type": "module",
        "title": "WindowProperties"
      },
      "index": {
        "description": "EDSL for specifying window properties various utilities related to window properties",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "WindowProperties",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window Properties",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#t:Property",
      "description": {
        "fct-descr": "\u003cp\u003eMost of the property constructors are quite self-explaining.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "data",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "data",
        "title": "Property"
      },
      "index": {
        "description": "Most of the property constructors are quite self-explaining",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Property",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:And",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "And Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "And"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "And",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:ClassName",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "ClassName String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "ClassName"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "ClassName",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Class Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Const",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Const Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Const"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Const",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Const",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Machine",
      "description": {
        "fct-descr": "\u003cp\u003eWM_CLIENT_MACHINE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Machine String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Machine"
      },
      "index": {
        "description": "WM CLIENT MACHINE property",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Machine",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Machine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Not",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Not Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Not"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Not",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Or",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Or Property Property",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Or"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Or",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Or",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Resource",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Resource String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Resource"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Resource",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Resource",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Role",
      "description": {
        "fct-descr": "\u003cp\u003eWM_WINDOW_ROLE property\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Role String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Role"
      },
      "index": {
        "description": "WM WINDOW ROLE property",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Role",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Role",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:Title",
      "description": {
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Title String",
        "fct-source": "src/XMonad-Util-WindowProperties.html#Property",
        "fct-type": "function",
        "title": "Title"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "Title",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Title",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:allWithProperty",
      "description": {
        "fct-descr": "\u003cp\u003eFind all existing windows with specified property\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Property -\u003e X [Window]",
        "fct-source": "src/XMonad-Util-WindowProperties.html#allWithProperty",
        "fct-type": "function",
        "title": "allWithProperty"
      },
      "index": {
        "description": "Find all existing windows with specified property",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "allWithProperty",
        "normalized": "Property-\u003eX[Window]",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "With Property",
        "signature": "Property-\u003eX[Window]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:focusedHasProperty",
      "description": {
        "fct-descr": "\u003cp\u003eDoes the focused window have this property?\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Property -\u003e X Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#focusedHasProperty",
        "fct-type": "function",
        "title": "focusedHasProperty"
      },
      "index": {
        "description": "Does the focused window have this property",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "focusedHasProperty",
        "normalized": "Property-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Has Property",
        "signature": "Property-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:getProp32",
      "description": {
        "fct-descr": "\u003cp\u003eGet a window property from atom\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Atom -\u003e Window -\u003e X (Maybe [CLong])",
        "fct-source": "src/XMonad-Util-WindowProperties.html#getProp32",
        "fct-type": "function",
        "title": "getProp32"
      },
      "index": {
        "description": "Get window property from atom",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "getProp32",
        "normalized": "Atom-\u003eWindow-\u003eX(Maybe[CLong])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prop",
        "signature": "Atom-\u003eWindow-\u003eX(Maybe[CLong])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:getProp32s",
      "description": {
        "fct-descr": "\u003cp\u003eGet a window property from string\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e Window -\u003e X (Maybe [CLong])",
        "fct-source": "src/XMonad-Util-WindowProperties.html#getProp32s",
        "fct-type": "function",
        "title": "getProp32s"
      },
      "index": {
        "description": "Get window property from string",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "getProp32s",
        "normalized": "String-\u003eWindow-\u003eX(Maybe[CLong])",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prop",
        "signature": "String-\u003eWindow-\u003eX(Maybe[CLong])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:hasProperty",
      "description": {
        "fct-descr": "\u003cp\u003eDoes given window have this property?\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Property -\u003e Window -\u003e X Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#hasProperty",
        "fct-type": "function",
        "title": "hasProperty"
      },
      "index": {
        "description": "Does given window have this property",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "hasProperty",
        "normalized": "Property-\u003eWindow-\u003eX Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Property",
        "signature": "Property-\u003eWindow-\u003eX Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WindowProperties.html#v:propertyToQuery",
      "description": {
        "fct-descr": "\u003cp\u003eConvert property to \u003ccode\u003e\u003ca\u003eQuery\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003eBool\u003c/a\u003e\u003c/code\u003e (see \u003ca\u003eXMonad.ManageHook\u003c/a\u003e)\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WindowProperties",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Property -\u003e Query Bool",
        "fct-source": "src/XMonad-Util-WindowProperties.html#propertyToQuery",
        "fct-type": "function",
        "title": "propertyToQuery"
      },
      "index": {
        "description": "Convert property to Query Bool see XMonad.ManageHook",
        "hierarchy": "XMonad Util WindowProperties",
        "module": "XMonad.Util.WindowProperties",
        "name": "propertyToQuery",
        "normalized": "Property-\u003eQuery Bool",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Query",
        "signature": "Property-\u003eQuery Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#",
      "description": {
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html",
        "fct-type": "module",
        "title": "WorkspaceCompare"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "WorkspaceCompare",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Compare",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#t:WorkspaceCompare",
      "description": {
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#WorkspaceCompare",
        "fct-type": "type",
        "title": "WorkspaceCompare"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "WorkspaceCompare",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Compare",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#t:WorkspaceSort",
      "description": {
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "type",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#WorkspaceSort",
        "fct-type": "type",
        "title": "WorkspaceSort"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "WorkspaceSort",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Workspace Sort",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getSortByIndex",
      "description": {
        "fct-descr": "\u003cp\u003eSort several workspaces according to their tags' indices in the\n   user's config.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceSort",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getSortByIndex",
        "fct-type": "function",
        "title": "getSortByIndex"
      },
      "index": {
        "description": "Sort several workspaces according to their tags indices in the user config",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getSortByIndex",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort By Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getSortByTag",
      "description": {
        "fct-descr": "\u003cp\u003eSort workspaces lexicographically by tag.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceSort",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getSortByTag",
        "fct-type": "function",
        "title": "getSortByTag"
      },
      "index": {
        "description": "Sort workspaces lexicographically by tag",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getSortByTag",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort By Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getSortByXineramaPhysicalRule",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003egetSortByXineramaRule\u003c/a\u003e\u003c/code\u003e, but uses physical locations for screens.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceSort",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getSortByXineramaPhysicalRule",
        "fct-type": "function",
        "title": "getSortByXineramaPhysicalRule"
      },
      "index": {
        "description": "Like getSortByXineramaRule but uses physical locations for screens",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getSortByXineramaPhysicalRule",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort By Xinerama Physical Rule",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getSortByXineramaRule",
      "description": {
        "fct-descr": "\u003cp\u003eSort serveral workspaces for xinerama displays, in the same order\n   produced by \u003ccode\u003eXMonad.Hooks.DynamicLog.pprWindowSetXinerama\u003c/code\u003e: first\n   visible workspaces, sorted by screen, then hidden workspaces,\n   sorted by tag.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceSort",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getSortByXineramaRule",
        "fct-type": "function",
        "title": "getSortByXineramaRule"
      },
      "index": {
        "description": "Sort serveral workspaces for xinerama displays in the same order produced by XMonad.Hooks.DynamicLog.pprWindowSetXinerama first visible workspaces sorted by screen then hidden workspaces sorted by tag",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getSortByXineramaRule",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Sort By Xinerama Rule",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getWsCompare",
      "description": {
        "fct-descr": "\u003cp\u003eA comparison function for WorkspaceId, based on the index of the\n   tags in the user's config.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceCompare",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getWsCompare",
        "fct-type": "function",
        "title": "getWsCompare"
      },
      "index": {
        "description": "comparison function for WorkspaceId based on the index of the tags in the user config",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getWsCompare",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws Compare",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getWsCompareByTag",
      "description": {
        "fct-descr": "\u003cp\u003eA simple comparison function that orders workspaces\n   lexicographically by tag.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceCompare",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getWsCompareByTag",
        "fct-type": "function",
        "title": "getWsCompareByTag"
      },
      "index": {
        "description": "simple comparison function that orders workspaces lexicographically by tag",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getWsCompareByTag",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws Compare By Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getWsIndex",
      "description": {
        "fct-descr": "\u003cp\u003eLookup the index of a workspace id in the user's config, return Nothing\n if that workspace does not exist in the config.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X (WorkspaceId -\u003e Maybe Int)",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getWsIndex",
        "fct-type": "function",
        "title": "getWsIndex"
      },
      "index": {
        "description": "Lookup the index of workspace id in the user config return Nothing if that workspace does not exist in the config",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getWsIndex",
        "normalized": "X(WorkspaceId-\u003eMaybe Int)",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws Index",
        "signature": "X(WorkspaceId-\u003eMaybe Int)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getXineramaPhysicalWsCompare",
      "description": {
        "fct-descr": "\u003cp\u003eA comparison function like \u003ccode\u003e\u003ca\u003egetXineramaWsCompare\u003c/a\u003e\u003c/code\u003e, but uses physical locations for screens.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceCompare",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getXineramaPhysicalWsCompare",
        "fct-type": "function",
        "title": "getXineramaPhysicalWsCompare"
      },
      "index": {
        "description": "comparison function like getXineramaWsCompare but uses physical locations for screens",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getXineramaPhysicalWsCompare",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Xinerama Physical Ws Compare",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:getXineramaWsCompare",
      "description": {
        "fct-descr": "\u003cp\u003eA comparison function for Xinerama based on visibility, workspace\n   and screen id. It produces the same ordering as\n   \u003ccode\u003eXMonad.Hooks.DynamicLog.pprWindowSetXinerama\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceCompare",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#getXineramaWsCompare",
        "fct-type": "function",
        "title": "getXineramaWsCompare"
      },
      "index": {
        "description": "comparison function for Xinerama based on visibility workspace and screen id It produces the same ordering as XMonad.Hooks.DynamicLog.pprWindowSetXinerama",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "getXineramaWsCompare",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Xinerama Ws Compare",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-WorkspaceCompare.html#v:mkWsSort",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a workspace sorting function from a workspace comparison\n   function.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.WorkspaceCompare",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "X WorkspaceCompare -\u003e X WorkspaceSort",
        "fct-source": "src/XMonad-Util-WorkspaceCompare.html#mkWsSort",
        "fct-type": "function",
        "title": "mkWsSort"
      },
      "index": {
        "description": "Create workspace sorting function from workspace comparison function",
        "hierarchy": "XMonad Util WorkspaceCompare",
        "module": "XMonad.Util.WorkspaceCompare",
        "name": "mkWsSort",
        "normalized": "X WorkspaceCompare-\u003eX WorkspaceSort",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Ws Sort",
        "signature": "X WorkspaceCompare-\u003eX WorkspaceSort"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XSelection.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for accessing and manipulating X Window's mouse selection (the buffer used in copy and pasting).\n\u003ccode\u003e\u003ca\u003egetSelection\u003c/a\u003e\u003c/code\u003e is an adaptation of Hxsel.hs and Hxput.hs from the XMonad-utils, available:\n\u003c/p\u003e\u003cpre\u003e $ darcs get \u003chttp://gorgias.mine.nu/repos/xmonad-utils\u003e\n\u003c/pre\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.XSelection",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-XSelection.html",
        "fct-type": "module",
        "title": "XSelection"
      },
      "index": {
        "description": "module for accessing and manipulating Window mouse selection the buffer used in copy and pasting getSelection is an adaptation of Hxsel.hs and Hxput.hs from the XMonad-utils available darcs get http gorgias.mine.nu repos xmonad-utils",
        "hierarchy": "XMonad Util XSelection",
        "module": "XMonad.Util.XSelection",
        "name": "XSelection",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XSelection",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XSelection.html#v:getSelection",
      "description": {
        "fct-descr": "\u003cp\u003eReturns a String corresponding to the current mouse selection in X; if there is none, an empty string is returned. Note that this is\n really only reliable for ASCII text and currently escapes or otherwise mangles more complex UTF-8 characters.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XSelection",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "m String",
        "fct-source": "src/XMonad-Util-XSelection.html#getSelection",
        "fct-type": "function",
        "title": "getSelection"
      },
      "index": {
        "description": "Returns String corresponding to the current mouse selection in if there is none an empty string is returned Note that this is really only reliable for ASCII text and currently escapes or otherwise mangles more complex UTF-8 characters",
        "hierarchy": "XMonad Util XSelection",
        "module": "XMonad.Util.XSelection",
        "name": "getSelection",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selection",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XSelection.html#v:promptSelection",
      "description": {
        "fct-module": "XMonad.Util.XSelection",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Util-XSelection.html#promptSelection",
        "fct-type": "function",
        "title": "promptSelection"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util XSelection",
        "module": "XMonad.Util.XSelection",
        "name": "promptSelection",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Selection",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XSelection.html#v:safePromptSelection",
      "description": {
        "fct-descr": "\u003cp\u003eA wrapper around \u003ccode\u003e\u003ca\u003egetSelection\u003c/a\u003e\u003c/code\u003e. Makes it convenient to run a program with the current selection as an argument.\nThis is convenient for handling URLs, in particular. For example, in your Config.hs you could bind a key to\n         \u003ccode\u003epromptSelection \"firefox\"\u003c/code\u003e;\nthis would allow you to highlight a URL string and then immediately open it up in Firefox.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u003ca\u003epromptSelection\u003c/a\u003e\u003c/code\u003e passes strings through the system shell, /bin/sh; if you do not wish your selected text\nto be interpreted or mangled by the shell, use \u003ccode\u003e\u003ca\u003esafePromptSelection\u003c/a\u003e\u003c/code\u003e. safePromptSelection will bypass the\nshell using \u003ccode\u003e\u003ca\u003esafeSpawn\u003c/a\u003e\u003c/code\u003e from \u003ca\u003eXMonad.Util.Run\u003c/a\u003e; see its documentation for more\ndetails on the advantages and disadvantages of using safeSpawn. \n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XSelection",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "String -\u003e X ()",
        "fct-source": "src/XMonad-Util-XSelection.html#safePromptSelection",
        "fct-type": "function",
        "title": "safePromptSelection"
      },
      "index": {
        "description": "wrapper around getSelection Makes it convenient to run program with the current selection as an argument This is convenient for handling URLs in particular For example in your Config.hs you could bind key to promptSelection firefox this would allow you to highlight URL string and then immediately open it up in Firefox promptSelection passes strings through the system shell bin sh if you do not wish your selected text to be interpreted or mangled by the shell use safePromptSelection safePromptSelection will bypass the shell using safeSpawn from XMonad.Util.Run see its documentation for more details on the advantages and disadvantages of using safeSpawn",
        "hierarchy": "XMonad Util XSelection",
        "module": "XMonad.Util.XSelection",
        "name": "safePromptSelection",
        "normalized": "String-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt Selection",
        "signature": "String-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XSelection.html#v:transformPromptSelection",
      "description": {
        "fct-module": "XMonad.Util.XSelection",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e String) -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Util-XSelection.html#transformPromptSelection",
        "fct-type": "function",
        "title": "transformPromptSelection"
      },
      "index": {
        "description": "",
        "hierarchy": "XMonad Util XSelection",
        "module": "XMonad.Util.XSelection",
        "name": "transformPromptSelection",
        "normalized": "(String-\u003eString)-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Prompt Selection",
        "signature": "(String-\u003eString)-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XSelection.html#v:transformSafePromptSelection",
      "description": {
        "fct-descr": "\u003cp\u003eA wrapper around \u003ccode\u003e\u003ca\u003epromptSelection\u003c/a\u003e\u003c/code\u003e and its safe variant. They take two parameters, the first is a function that transforms strings, and the second is the application to run. The transformer essentially transforms the selection in X.\nOne example is to wrap code, such as a command line action copied out of the browser to be run as \u003ccode\u003e\u003ca\u003esudo\u003c/a\u003e ++ cmd\u003c/code\u003e or \u003ccode\u003e\u003ca\u003esu - -c \"\u003c/a\u003e++ cmd ++\u003ca\u003e\"\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XSelection",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "(String -\u003e String) -\u003e String -\u003e X ()",
        "fct-source": "src/XMonad-Util-XSelection.html#transformSafePromptSelection",
        "fct-type": "function",
        "title": "transformSafePromptSelection"
      },
      "index": {
        "description": "wrapper around promptSelection and its safe variant They take two parameters the first is function that transforms strings and the second is the application to run The transformer essentially transforms the selection in One example is to wrap code such as command line action copied out of the browser to be run as sudo cmd or su cmd",
        "hierarchy": "XMonad Util XSelection",
        "module": "XMonad.Util.XSelection",
        "name": "transformSafePromptSelection",
        "normalized": "(String-\u003eString)-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Safe Prompt Selection",
        "signature": "(String-\u003eString)-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for painting on the screen\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "module",
        "fct-source": "src/XMonad-Util-XUtils.html",
        "fct-type": "module",
        "title": "XUtils"
      },
      "index": {
        "description": "module for painting on the screen",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "XUtils",
        "normalized": "",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "XUtils",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:averagePixels",
      "description": {
        "fct-descr": "\u003cp\u003eCompute the weighted average the colors of two given Pixel values.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Pixel -\u003e Pixel -\u003e Double -\u003e X Pixel",
        "fct-source": "src/XMonad-Util-XUtils.html#averagePixels",
        "fct-type": "function",
        "title": "averagePixels"
      },
      "index": {
        "description": "Compute the weighted average the colors of two given Pixel values",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "averagePixels",
        "normalized": "Pixel-\u003ePixel-\u003eDouble-\u003eX Pixel",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Pixels",
        "signature": "Pixel-\u003ePixel-\u003eDouble-\u003eX Pixel"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:createNewWindow",
      "description": {
        "fct-descr": "\u003cp\u003eCreate a simple window given a rectangle. If Nothing is given\n only the exposureMask will be set, otherwise the Just value.\n Use \u003ccode\u003e\u003ca\u003eshowWindow\u003c/a\u003e\u003c/code\u003e to map and hideWindow to unmap.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Rectangle -\u003e Maybe EventMask -\u003e String -\u003e Bool -\u003e X Window",
        "fct-source": "src/XMonad-Util-XUtils.html#createNewWindow",
        "fct-type": "function",
        "title": "createNewWindow"
      },
      "index": {
        "description": "Create simple window given rectangle If Nothing is given only the exposureMask will be set otherwise the Just value Use showWindow to map and hideWindow to unmap",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "createNewWindow",
        "normalized": "Rectangle-\u003eMaybe EventMask-\u003eString-\u003eBool-\u003eX Window",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "New Window",
        "signature": "Rectangle-\u003eMaybe EventMask-\u003eString-\u003eBool-\u003eX Window"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:deleteWindow",
      "description": {
        "fct-descr": "\u003cp\u003edestroy a window\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Util-XUtils.html#deleteWindow",
        "fct-type": "function",
        "title": "deleteWindow"
      },
      "index": {
        "description": "destroy window",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "deleteWindow",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:deleteWindows",
      "description": {
        "fct-descr": "\u003cp\u003ethe list version\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Window] -\u003e X ()",
        "fct-source": "src/XMonad-Util-XUtils.html#deleteWindows",
        "fct-type": "function",
        "title": "deleteWindows"
      },
      "index": {
        "description": "the list version",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "deleteWindows",
        "normalized": "[Window]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Windows",
        "signature": "[Window]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:fi",
      "description": {
        "fct-descr": "\u003cp\u003eShort-hand for \u003ccode\u003e\u003ca\u003efromIntegral\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "a -\u003e b",
        "fct-source": "src/XMonad-Util-XUtils.html#fi",
        "fct-type": "function",
        "title": "fi"
      },
      "index": {
        "description": "Short-hand for fromIntegral",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "fi",
        "normalized": "a-\u003eb",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "",
        "signature": "a-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:hideWindow",
      "description": {
        "fct-descr": "\u003cp\u003eunmap a window\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Util-XUtils.html#hideWindow",
        "fct-type": "function",
        "title": "hideWindow"
      },
      "index": {
        "description": "unmap window",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "hideWindow",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:hideWindows",
      "description": {
        "fct-descr": "\u003cp\u003ethe list version\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Window] -\u003e X ()",
        "fct-source": "src/XMonad-Util-XUtils.html#hideWindows",
        "fct-type": "function",
        "title": "hideWindows"
      },
      "index": {
        "description": "the list version",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "hideWindows",
        "normalized": "[Window]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Windows",
        "signature": "[Window]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:paintAndWrite",
      "description": {
        "fct-descr": "\u003cp\u003eFill a window with a rectangle and a border, and write\n | a number of strings to given positions\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window-\u003e XMonadFont-\u003e Dimension-\u003e Dimension-\u003e Dimension-\u003e String-\u003e String-\u003e String-\u003e String-\u003e [Align]-\u003e [String]-\u003e X ()",
        "fct-type": "function",
        "title": "paintAndWrite"
      },
      "index": {
        "description": "Fill window with rectangle and border and write number of strings to given positions",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "paintAndWrite",
        "normalized": "Window-\u003eXMonadFont-\u003eDimension-\u003eDimension-\u003eDimension-\u003eString-\u003eString-\u003eString-\u003eString-\u003e[Align]-\u003e[String]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "And Write",
        "signature": "Window-\u003eXMonadFont-\u003eDimension-\u003eDimension-\u003eDimension-\u003eString-\u003eString-\u003eString-\u003eString-\u003e[Align]-\u003e[String]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:paintWindow",
      "description": {
        "fct-descr": "\u003cp\u003eFill a window with a rectangle and a border\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window-\u003e Dimension-\u003e Dimension-\u003e Dimension-\u003e String-\u003e String-\u003e X ()",
        "fct-type": "function",
        "title": "paintWindow"
      },
      "index": {
        "description": "Fill window with rectangle and border",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "paintWindow",
        "normalized": "Window-\u003eDimension-\u003eDimension-\u003eDimension-\u003eString-\u003eString-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Window-\u003eDimension-\u003eDimension-\u003eDimension-\u003eString-\u003eString-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:showWindow",
      "description": {
        "fct-descr": "\u003cp\u003eMap a window\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Window -\u003e X ()",
        "fct-source": "src/XMonad-Util-XUtils.html#showWindow",
        "fct-type": "function",
        "title": "showWindow"
      },
      "index": {
        "description": "Map window",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "showWindow",
        "normalized": "Window-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Window",
        "signature": "Window-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:showWindows",
      "description": {
        "fct-descr": "\u003cp\u003ethe list version\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "[Window] -\u003e X ()",
        "fct-source": "src/XMonad-Util-XUtils.html#showWindows",
        "fct-type": "function",
        "title": "showWindows"
      },
      "index": {
        "description": "the list version",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "showWindows",
        "normalized": "[Window]-\u003eX()",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "Windows",
        "signature": "[Window]-\u003eX()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/xmonad-contrib-bluetilebranch/docs/XMonad-Util-XUtils.html#v:stringToPixel",
      "description": {
        "fct-descr": "\u003cp\u003eGet the Pixel value for a named color: if an invalid name is\n given the black pixel will be returned.\n\u003c/p\u003e",
        "fct-module": "XMonad.Util.XUtils",
        "fct-package": "xmonad-contrib-bluetilebranch",
        "fct-signature": "Display -\u003e String -\u003e m Pixel",
        "fct-source": "src/XMonad-Util-Font.html#stringToPixel",
        "fct-type": "function",
        "title": "stringToPixel"
      },
      "index": {
        "description": "Get the Pixel value for named color if an invalid name is given the black pixel will be returned",
        "hierarchy": "XMonad Util XUtils",
        "module": "XMonad.Util.XUtils",
        "name": "stringToPixel",
        "normalized": "Display-\u003eString-\u003ea Pixel",
        "package": "xmonad-contrib-bluetilebranch",
        "partial": "To Pixel",
        "signature": "Display-\u003eString-\u003em Pixel"
      }
    }
  }
]