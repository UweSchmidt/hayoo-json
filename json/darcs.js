[
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eGZIp and MMap IO for ByteStrings, encoding utilities, and miscellaneous\n functions for Data.ByteString\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/ByteStringUtils.html",
        "fct-type": "module",
        "title": "ByteStringUtils"
      },
      "index": {
        "description": "GZIp and MMap IO for ByteStrings encoding utilities and miscellaneous functions for Data.ByteString",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "ByteStringUtils",
        "normalized": "",
        "package": "darcs",
        "partial": "Byte String Utils",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:betweenLinesPS",
      "description": {
        "fct-descr": "\u003cp\u003ebetweenLinesPS returns the B.ByteString between the two lines given,\n or Nothing if they do not appear.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ByteString -\u003e ByteString -\u003e Maybe ByteString",
        "fct-source": "src/ByteStringUtils.html#betweenLinesPS",
        "fct-type": "function",
        "title": "betweenLinesPS"
      },
      "index": {
        "description": "betweenLinesPS returns the B.ByteString between the two lines given or Nothing if they do not appear",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "betweenLinesPS",
        "normalized": "ByteString-\u003eByteString-\u003eByteString-\u003eMaybe ByteString",
        "package": "darcs",
        "partial": "Lines PS",
        "signature": "ByteString-\u003eByteString-\u003eByteString-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:breakAfterNthNewline",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e ByteString -\u003e Maybe (ByteString, ByteString)",
        "fct-source": "src/ByteStringUtils.html#breakAfterNthNewline",
        "fct-type": "function",
        "title": "breakAfterNthNewline"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "breakAfterNthNewline",
        "normalized": "Int-\u003eByteString-\u003eMaybe(ByteString,ByteString)",
        "package": "darcs",
        "partial": "After Nth Newline",
        "signature": "Int-\u003eByteString-\u003eMaybe(ByteString,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:breakBeforeNthNewline",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e ByteString -\u003e (ByteString, ByteString)",
        "fct-source": "src/ByteStringUtils.html#breakBeforeNthNewline",
        "fct-type": "function",
        "title": "breakBeforeNthNewline"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "breakBeforeNthNewline",
        "normalized": "Int-\u003eByteString-\u003e(ByteString,ByteString)",
        "package": "darcs",
        "partial": "Before Nth Newline",
        "signature": "Int-\u003eByteString-\u003e(ByteString,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:breakFirstPS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e ByteString -\u003e Maybe (ByteString, ByteString)",
        "fct-source": "src/ByteStringUtils.html#breakFirstPS",
        "fct-type": "function",
        "title": "breakFirstPS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "breakFirstPS",
        "normalized": "Char-\u003eByteString-\u003eMaybe(ByteString,ByteString)",
        "package": "darcs",
        "partial": "First PS",
        "signature": "Char-\u003eByteString-\u003eMaybe(ByteString,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:breakLastPS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e ByteString -\u003e Maybe (ByteString, ByteString)",
        "fct-source": "src/ByteStringUtils.html#breakLastPS",
        "fct-type": "function",
        "title": "breakLastPS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "breakLastPS",
        "normalized": "Char-\u003eByteString-\u003eMaybe(ByteString,ByteString)",
        "package": "darcs",
        "partial": "Last PS",
        "signature": "Char-\u003eByteString-\u003eMaybe(ByteString,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:breakSpace",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ebreakSpace\u003c/a\u003e\u003c/code\u003e returns the pair of ByteStrings when the argument is\n broken at the first whitespace byte. I.e.\n\u003c/p\u003e\u003cpre\u003e break isSpace == breakSpace\n\u003c/pre\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e (ByteString, ByteString)",
        "fct-source": "src/ByteStringUtils.html#breakSpace",
        "fct-type": "function",
        "title": "breakSpace"
      },
      "index": {
        "description": "breakSpace returns the pair of ByteStrings when the argument is broken at the first whitespace byte I.e break isSpace breakSpace",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "breakSpace",
        "normalized": "ByteString-\u003e(ByteString,ByteString)",
        "package": "darcs",
        "partial": "Space",
        "signature": "ByteString-\u003e(ByteString,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:decodeLocale",
      "description": {
        "fct-descr": "\u003cp\u003eDecode a ByteString to a String according to the current locale\n unsafePerformIO in the locale function is ratified by the fact that GHC 6.12\n and above also supply locale conversion with functions with a pure type.\n Unrecognized byte sequences in the input are skipped.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e String",
        "fct-source": "src/ByteStringUtils.html#decodeLocale",
        "fct-type": "function",
        "title": "decodeLocale"
      },
      "index": {
        "description": "Decode ByteString to String according to the current locale unsafePerformIO in the locale function is ratified by the fact that GHC and above also supply locale conversion with functions with pure type Unrecognized byte sequences in the input are skipped",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "decodeLocale",
        "normalized": "ByteString-\u003eString",
        "package": "darcs",
        "partial": "Locale",
        "signature": "ByteString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:decodeString",
      "description": {
        "fct-descr": "\u003cp\u003eTake a \u003ccode\u003eString\u003c/code\u003e that represents byte values and re-decode it acording to\n the current locale.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/ByteStringUtils.html#decodeString",
        "fct-type": "function",
        "title": "decodeString"
      },
      "index": {
        "description": "Take String that represents byte values and re-decode it acording to the current locale",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "decodeString",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "String",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:dropSpace",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003edropSpace\u003c/a\u003e\u003c/code\u003e efficiently returns the \u003ccode\u003eByteString\u003c/code\u003e argument with\n white space Chars removed from the front. It is more efficient than\n calling dropWhile for removing whitespace. I.e.\n\u003c/p\u003e\u003cpre\u003e dropWhile isSpace == dropSpace\n\u003c/pre\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ByteString",
        "fct-source": "src/ByteStringUtils.html#dropSpace",
        "fct-type": "function",
        "title": "dropSpace"
      },
      "index": {
        "description": "dropSpace efficiently returns the ByteString argument with white space Chars removed from the front It is more efficient than calling dropWhile for removing whitespace I.e dropWhile isSpace dropSpace",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "dropSpace",
        "normalized": "ByteString-\u003eByteString",
        "package": "darcs",
        "partial": "Space",
        "signature": "ByteString-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:encodeLocale",
      "description": {
        "fct-descr": "\u003cp\u003eEncode a String to a ByteString according to the current locale\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e ByteString",
        "fct-source": "src/ByteStringUtils.html#encodeLocale",
        "fct-type": "function",
        "title": "encodeLocale"
      },
      "index": {
        "description": "Encode String to ByteString according to the current locale",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "encodeLocale",
        "normalized": "String-\u003eByteString",
        "package": "darcs",
        "partial": "Locale",
        "signature": "String-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:fromHex2PS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ByteString",
        "fct-source": "src/ByteStringUtils.html#fromHex2PS",
        "fct-type": "function",
        "title": "fromHex2PS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "fromHex2PS",
        "normalized": "ByteString-\u003eByteString",
        "package": "darcs",
        "partial": "Hex PS",
        "signature": "ByteString-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:fromPS2Hex",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ByteString",
        "fct-source": "src/ByteStringUtils.html#fromPS2Hex",
        "fct-type": "function",
        "title": "fromPS2Hex"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "fromPS2Hex",
        "normalized": "ByteString-\u003eByteString",
        "package": "darcs",
        "partial": "PS Hex",
        "signature": "ByteString-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:gzDecompress",
      "description": {
        "fct-descr": "\u003cp\u003eDecompress the given bytestring into a lazy list of chunks, along with a boolean\n flag indicating (if True) that the CRC was corrupted.\n Inspecting the flag will cause the entire list of chunks to be evaluated (but if\n you throw away the list immediately this should run in constant space).\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int -\u003e ByteString -\u003e ([ByteString], Bool)",
        "fct-source": "src/ByteStringUtils.html#gzDecompress",
        "fct-type": "function",
        "title": "gzDecompress"
      },
      "index": {
        "description": "Decompress the given bytestring into lazy list of chunks along with boolean flag indicating if True that the CRC was corrupted Inspecting the flag will cause the entire list of chunks to be evaluated but if you throw away the list immediately this should run in constant space",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "gzDecompress",
        "normalized": "Maybe Int-\u003eByteString-\u003e([ByteString],Bool)",
        "package": "darcs",
        "partial": "Decompress",
        "signature": "Maybe Int-\u003eByteString-\u003e([ByteString],Bool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:gzReadFilePS",
      "description": {
        "fct-descr": "\u003cp\u003eRead an entire file, which may or may not be gzip compressed, directly\n into a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ByteString",
        "fct-source": "src/ByteStringUtils.html#gzReadFilePS",
        "fct-type": "function",
        "title": "gzReadFilePS"
      },
      "index": {
        "description": "Read an entire file which may or may not be gzip compressed directly into ByteString",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "gzReadFilePS",
        "normalized": "FilePath-\u003eIO ByteString",
        "package": "darcs",
        "partial": "Read File PS",
        "signature": "FilePath-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:gzReadStdin",
      "description": {
        "fct-descr": "\u003cp\u003eRead standard input, which may or may not be gzip compressed, directly\n into a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "IO ByteString",
        "fct-source": "src/ByteStringUtils.html#gzReadStdin",
        "fct-type": "function",
        "title": "gzReadStdin"
      },
      "index": {
        "description": "Read standard input which may or may not be gzip compressed directly into ByteString",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "gzReadStdin",
        "normalized": "",
        "package": "darcs",
        "partial": "Read Stdin",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:gzWriteFilePS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e ByteString -\u003e IO ()",
        "fct-source": "src/ByteStringUtils.html#gzWriteFilePS",
        "fct-type": "function",
        "title": "gzWriteFilePS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "gzWriteFilePS",
        "normalized": "FilePath-\u003eByteString-\u003eIO()",
        "package": "darcs",
        "partial": "Write File PS",
        "signature": "FilePath-\u003eByteString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:gzWriteFilePSs",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e [ByteString] -\u003e IO ()",
        "fct-source": "src/ByteStringUtils.html#gzWriteFilePSs",
        "fct-type": "function",
        "title": "gzWriteFilePSs"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "gzWriteFilePSs",
        "normalized": "FilePath-\u003e[ByteString]-\u003eIO()",
        "package": "darcs",
        "partial": "Write File PSs",
        "signature": "FilePath-\u003e[ByteString]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:hashPS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Int32",
        "fct-source": "src/ByteStringUtils.html#hashPS",
        "fct-type": "function",
        "title": "hashPS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "hashPS",
        "normalized": "ByteString-\u003eInt",
        "package": "darcs",
        "partial": "PS",
        "signature": "ByteString-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:intercalate",
      "description": {
        "fct-descr": "\u003cp\u003e\u003cem\u003eO(n)\u003c/em\u003e The \u003ccode\u003e\u003ca\u003eintercalate\u003c/a\u003e\u003c/code\u003e function takes a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e and a list of\n \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003es and concatenates the list after interspersing the first\n argument between each element of the list.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e [ByteString] -\u003e ByteString",
        "fct-type": "function",
        "title": "intercalate"
      },
      "index": {
        "description": "The intercalate function takes ByteString and list of ByteString and concatenates the list after interspersing the first argument between each element of the list",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "intercalate",
        "normalized": "ByteString-\u003e[ByteString]-\u003eByteString",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003e[ByteString]-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:isAscii",
      "description": {
        "fct-descr": "\u003cp\u003eTest if a ByteString is made of ascii characters\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Bool",
        "fct-source": "src/ByteStringUtils.html#isAscii",
        "fct-type": "function",
        "title": "isAscii"
      },
      "index": {
        "description": "Test if ByteString is made of ascii characters",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "isAscii",
        "normalized": "ByteString-\u003eBool",
        "package": "darcs",
        "partial": "Ascii",
        "signature": "ByteString-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:isFunky",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Bool",
        "fct-source": "src/ByteStringUtils.html#isFunky",
        "fct-type": "function",
        "title": "isFunky"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "isFunky",
        "normalized": "ByteString-\u003eBool",
        "package": "darcs",
        "partial": "Funky",
        "signature": "ByteString-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:isGZFile",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO (Maybe Int)",
        "fct-source": "src/ByteStringUtils.html#isGZFile",
        "fct-type": "function",
        "title": "isGZFile"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "isGZFile",
        "normalized": "FilePath-\u003eIO(Maybe Int)",
        "package": "darcs",
        "partial": "GZFile",
        "signature": "FilePath-\u003eIO(Maybe Int)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:linesPS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e [ByteString]",
        "fct-source": "src/ByteStringUtils.html#linesPS",
        "fct-type": "function",
        "title": "linesPS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "linesPS",
        "normalized": "ByteString-\u003e[ByteString]",
        "package": "darcs",
        "partial": "PS",
        "signature": "ByteString-\u003e[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:mmapFilePS",
      "description": {
        "fct-descr": "\u003cp\u003eLike readFilePS, this reads an entire file directly into a\n \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e, but it is even more efficient.  It involves directly\n mapping the file to memory.  This has the advantage that the contents of\n the file never need to be copied.  Also, under memory pressure the page\n may simply be discarded, wile in the case of readFilePS it would need to\n be written to swap.  If you read many small files, mmapFilePS will be\n less memory-efficient than readFilePS, since each mmapFilePS takes up a\n separate page of memory.  Also, you can run into bus errors if the file\n is modified.  NOTE: as with \u003ccode\u003ereadFilePS\u003c/code\u003e, the string representation in\n the file is assumed to be ISO-8859-1.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ByteString",
        "fct-source": "src/ByteStringUtils.html#mmapFilePS",
        "fct-type": "function",
        "title": "mmapFilePS"
      },
      "index": {
        "description": "Like readFilePS this reads an entire file directly into ByteString but it is even more efficient It involves directly mapping the file to memory This has the advantage that the contents of the file never need to be copied Also under memory pressure the page may simply be discarded wile in the case of readFilePS it would need to be written to swap If you read many small files mmapFilePS will be less memory-efficient than readFilePS since each mmapFilePS takes up separate page of memory Also you can run into bus errors if the file is modified NOTE as with readFilePS the string representation in the file is assumed to be ISO-8859-1",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "mmapFilePS",
        "normalized": "FilePath-\u003eIO ByteString",
        "package": "darcs",
        "partial": "File PS",
        "signature": "FilePath-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:packStringToUTF8",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e ByteString",
        "fct-source": "src/ByteStringUtils.html#packStringToUTF8",
        "fct-type": "function",
        "title": "packStringToUTF8"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "packStringToUTF8",
        "normalized": "String-\u003eByteString",
        "package": "darcs",
        "partial": "String To UTF",
        "signature": "String-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:readIntPS",
      "description": {
        "fct-descr": "\u003cp\u003ereadIntPS skips any whitespace at the beginning of its argument, and\n reads an Int from the beginning of the PackedString.  If there is no\n integer at the beginning of the string, it returns Nothing, otherwise it\n just returns the int read, along with a B.ByteString containing the\n remainder of its input.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Maybe (Int, ByteString)",
        "fct-source": "src/ByteStringUtils.html#readIntPS",
        "fct-type": "function",
        "title": "readIntPS"
      },
      "index": {
        "description": "readIntPS skips any whitespace at the beginning of its argument and reads an Int from the beginning of the PackedString If there is no integer at the beginning of the string it returns Nothing otherwise it just returns the int read along with B.ByteString containing the remainder of its input",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "readIntPS",
        "normalized": "ByteString-\u003eMaybe(Int,ByteString)",
        "package": "darcs",
        "partial": "Int PS",
        "signature": "ByteString-\u003eMaybe(Int,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:substrPS",
      "description": {
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ByteString -\u003e Maybe Int",
        "fct-source": "src/ByteStringUtils.html#substrPS",
        "fct-type": "function",
        "title": "substrPS"
      },
      "index": {
        "description": "",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "substrPS",
        "normalized": "ByteString-\u003eByteString-\u003eMaybe Int",
        "package": "darcs",
        "partial": "PS",
        "signature": "ByteString-\u003eByteString-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:unlinesPS",
      "description": {
        "fct-descr": "\u003cp\u003eThis function acts exactly like the \u003ca\u003ePrelude\u003c/a\u003e unlines function, or like\n\u003ca\u003eData.ByteString.Char8\u003c/a\u003e \u003ccode\u003e\u003ca\u003eunlines\u003c/a\u003e\u003c/code\u003e, but with one important difference: it will\nproduce a string which may not end with a newline! That is:\n\u003c/p\u003e\u003cpre\u003e unlinesPS [\"foo\", \"bar\"]\n\u003c/pre\u003e\u003cp\u003eevaluates to \"foo\\nbar\", not \"foo\\nbar\\n\"! This point should hold true for\n\u003ccode\u003e\u003ca\u003elinesPS\u003c/a\u003e\u003c/code\u003e as well.\n\u003c/p\u003e\u003cp\u003eTODO: rename this function. \n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "[ByteString] -\u003e ByteString",
        "fct-source": "src/ByteStringUtils.html#unlinesPS",
        "fct-type": "function",
        "title": "unlinesPS"
      },
      "index": {
        "description": "This function acts exactly like the Prelude unlines function or like Data.ByteString.Char8 unlines but with one important difference it will produce string which may not end with newline That is unlinesPS foo bar evaluates to foo nbar not foo nbar This point should hold true for linesPS as well TODO rename this function",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "unlinesPS",
        "normalized": "[ByteString]-\u003eByteString",
        "package": "darcs",
        "partial": "PS",
        "signature": "[ByteString]-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:unpackPSFromUTF8",
      "description": {
        "fct-descr": "\u003cp\u003eDecodes a \u003ccode\u003eByteString\u003c/code\u003e containing UTF-8 to a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e. Decoding errors are\n   flagged with the U+FFFD character.\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e String",
        "fct-source": "src/ByteStringUtils.html#unpackPSFromUTF8",
        "fct-type": "function",
        "title": "unpackPSFromUTF8"
      },
      "index": {
        "description": "Decodes ByteString containing UTF-8 to String Decoding errors are flagged with the FFFD character",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "unpackPSFromUTF8",
        "normalized": "ByteString-\u003eString",
        "package": "darcs",
        "partial": "PSFrom UTF",
        "signature": "ByteString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/ByteStringUtils.html#v:unsafeWithInternals",
      "description": {
        "fct-descr": "\u003cp\u003eDo something with the internals of a PackedString. Beware of\n altering the contents!\n\u003c/p\u003e",
        "fct-module": "ByteStringUtils",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e (Ptr Word8 -\u003e Int -\u003e IO a) -\u003e IO a",
        "fct-source": "src/ByteStringUtils.html#unsafeWithInternals",
        "fct-type": "function",
        "title": "unsafeWithInternals"
      },
      "index": {
        "description": "Do something with the internals of PackedString Beware of altering the contents",
        "hierarchy": "ByteStringUtils",
        "module": "ByteStringUtils",
        "name": "unsafeWithInternals",
        "normalized": "ByteString-\u003e(Ptr Word-\u003eInt-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "With Internals",
        "signature": "ByteString-\u003e(Ptr Word-\u003eInt-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/CommandLine.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003e|A parser for commandlines, returns an arg list and expands\n format strings given in a translation table. Additionally\n the commandline can end with \u003ca\u003e%\u003c\u003c/a\u003e specifying that the command\n expects input on stdin.\n\u003c/p\u003e\u003cp\u003eSome tests for the parser.\n\u003c/p\u003e\u003cpre\u003e formatTable = [('s',\"\u003cinsert subject here\u003e\"),\n                ('a',\"\u003cinsert author here\u003e\")]\n\n testParser :: (Show a, Eq a) =\u003e Parser a -\u003e String -\u003e a -\u003e a\n testParser p s ok = case parse p \"\" s of\n                     Left e -\u003e error $ \"Parser failed with: \" ++ (show e)\n                     Right res -\u003e if res == ok\n                                  then res\n                                  else error $ \"Parser failed: got \"\n                                         ++ (show res) ++ \", expected \"\n                                         ++ (show ok)\n\n testCases = [(\"a b\",([\"a\",\"b\"], False)),\n              (\"a b %\u003c\",([\"a\",\"b\"], True)),\n              (\"a b %\u003c \",([\"a\",\"b\"], True)),\n              (\"\\\"arg0 contains spaces \\\\\\\"quotes\\\\\\\"\\\" b\",\n               ([\"arg0 contains spaces \\\"quotes\\\"\",\"b\"],False)),\n              (\"a %s %\u003c\",([\"a\",\"\u003cinsert subject here\u003e\"], True))]\n\n runTests = map (uncurry $ testParser (commandline formatTable)) testCases\n\u003c/pre\u003e\u003c/div\u003e",
        "fct-module": "CommandLine",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/CommandLine.html",
        "fct-type": "module",
        "title": "CommandLine"
      },
      "index": {
        "description": "parser for commandlines returns an arg list and expands format strings given in translation table Additionally the commandline can end with specifying that the command expects input on stdin Some tests for the parser formatTable insert subject here insert author here testParser Show Eq Parser String testParser ok case parse of Left error Parser failed with show Right res if res ok then res else error Parser failed got show res expected show ok testCases False True True arg0 contains spaces quotes arg0 contains spaces quotes False insert subject here True runTests map uncurry testParser commandline formatTable testCases",
        "hierarchy": "CommandLine",
        "module": "CommandLine",
        "name": "CommandLine",
        "normalized": "",
        "package": "darcs",
        "partial": "Command Line",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/CommandLine.html#v:addUrlencoded",
      "description": {
        "fct-descr": "\u003cp\u003efor every mapping (c,s), add a mapping with uppercase c\n and the urlencoded string s\n\u003c/p\u003e",
        "fct-module": "CommandLine",
        "fct-package": "darcs",
        "fct-signature": "FTable -\u003e FTable",
        "fct-source": "src/CommandLine.html#addUrlencoded",
        "fct-type": "function",
        "title": "addUrlencoded"
      },
      "index": {
        "description": "for every mapping add mapping with uppercase and the urlencoded string",
        "hierarchy": "CommandLine",
        "module": "CommandLine",
        "name": "addUrlencoded",
        "normalized": "FTable-\u003eFTable",
        "package": "darcs",
        "partial": "Urlencoded",
        "signature": "FTable-\u003eFTable"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/CommandLine.html#v:parseCmd",
      "description": {
        "fct-descr": "\u003cp\u003eparse a commandline returning a list of strings\n (intended to be used as argv) and a bool value which\n specifies if the command expects input on stdin\n format specifiers with a mapping in ftable are accepted\n and replaced by the given strings. E.g. if the ftable is\n [(\u003ccode\u003es\u003c/code\u003e,\u003ca\u003eSome subject\u003c/a\u003e)], then \u003ca\u003e%s\u003c/a\u003e is replaced by \u003ca\u003eSome subject\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "CommandLine",
        "fct-package": "darcs",
        "fct-signature": "FTable -\u003e String -\u003e Either ParseError ([String], Bool)",
        "fct-source": "src/CommandLine.html#parseCmd",
        "fct-type": "function",
        "title": "parseCmd"
      },
      "index": {
        "description": "parse commandline returning list of strings intended to be used as argv and bool value which specifies if the command expects input on stdin format specifiers with mapping in ftable are accepted and replaced by the given strings E.g if the ftable is Some subject then is replaced by Some subject",
        "hierarchy": "CommandLine",
        "module": "CommandLine",
        "name": "parseCmd",
        "normalized": "FTable-\u003eString-\u003eEither ParseError([String],Bool)",
        "package": "darcs",
        "partial": "Cmd",
        "signature": "FTable-\u003eString-\u003eEither ParseError([String],Bool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Crypt-SHA256.html#",
      "description": {
        "fct-module": "Crypt.SHA256",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Crypt-SHA256.html",
        "fct-type": "module",
        "title": "SHA256"
      },
      "index": {
        "description": "",
        "hierarchy": "Crypt SHA256",
        "module": "Crypt.SHA256",
        "name": "SHA256",
        "normalized": "",
        "package": "darcs",
        "partial": "SHA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Crypt-SHA256.html#v:sha256sum",
      "description": {
        "fct-module": "Crypt.SHA256",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e String",
        "fct-source": "src/Crypt-SHA256.html#sha256sum",
        "fct-type": "function",
        "title": "sha256sum"
      },
      "index": {
        "description": "",
        "hierarchy": "Crypt SHA256",
        "module": "Crypt.SHA256",
        "name": "sha256sum",
        "normalized": "ByteString-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Annotate.html#",
      "description": {
        "fct-module": "Darcs.Annotate",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Annotate.html",
        "fct-type": "module",
        "title": "Annotate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Annotate",
        "module": "Darcs.Annotate",
        "name": "Annotate",
        "normalized": "",
        "package": "darcs",
        "partial": "Annotate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Annotate.html#v:annotate",
      "description": {
        "fct-module": "Darcs.Annotate",
        "fct-package": "darcs",
        "fct-signature": "FL (PatchInfoAnd p) x y -\u003e FileName -\u003e ByteString -\u003e Annotated",
        "fct-source": "src/Darcs-Annotate.html#annotate",
        "fct-type": "function",
        "title": "annotate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Annotate",
        "module": "Darcs.Annotate",
        "name": "annotate",
        "normalized": "FL(PatchInfoAnd a)b c-\u003eFileName-\u003eByteString-\u003eAnnotated",
        "package": "darcs",
        "partial": "",
        "signature": "FL(PatchInfoAnd p)x y-\u003eFileName-\u003eByteString-\u003eAnnotated"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Annotate.html#v:annotateDirectory",
      "description": {
        "fct-module": "Darcs.Annotate",
        "fct-package": "darcs",
        "fct-signature": "FL (PatchInfoAnd p) x y -\u003e FileName -\u003e [FileName] -\u003e Annotated",
        "fct-source": "src/Darcs-Annotate.html#annotateDirectory",
        "fct-type": "function",
        "title": "annotateDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Annotate",
        "module": "Darcs.Annotate",
        "name": "annotateDirectory",
        "normalized": "FL(PatchInfoAnd a)b c-\u003eFileName-\u003e[FileName]-\u003eAnnotated",
        "package": "darcs",
        "partial": "Directory",
        "signature": "FL(PatchInfoAnd p)x y-\u003eFileName-\u003e[FileName]-\u003eAnnotated"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Annotate.html#v:format",
      "description": {
        "fct-module": "Darcs.Annotate",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Annotated -\u003e String",
        "fct-source": "src/Darcs-Annotate.html#format",
        "fct-type": "function",
        "title": "format"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Annotate",
        "module": "Darcs.Annotate",
        "name": "format",
        "normalized": "ByteString-\u003eAnnotated-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003eAnnotated-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Annotate.html#v:machineFormat",
      "description": {
        "fct-module": "Darcs.Annotate",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Annotated -\u003e String",
        "fct-source": "src/Darcs-Annotate.html#machineFormat",
        "fct-type": "function",
        "title": "machineFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Annotate",
        "module": "Darcs.Annotate",
        "name": "machineFormat",
        "normalized": "ByteString-\u003eAnnotated-\u003eString",
        "package": "darcs",
        "partial": "Format",
        "signature": "ByteString-\u003eAnnotated-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ArgumentDefaults.html#",
      "description": {
        "fct-module": "Darcs.ArgumentDefaults",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-ArgumentDefaults.html",
        "fct-type": "module",
        "title": "ArgumentDefaults"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ArgumentDefaults",
        "module": "Darcs.ArgumentDefaults",
        "name": "ArgumentDefaults",
        "normalized": "",
        "package": "darcs",
        "partial": "Argument Defaults",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ArgumentDefaults.html#v:getDefaultFlags",
      "description": {
        "fct-module": "Darcs.ArgumentDefaults",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [DarcsOption] -\u003e [DarcsFlag] -\u003e IO [DarcsFlag]",
        "fct-source": "src/Darcs-ArgumentDefaults.html#getDefaultFlags",
        "fct-type": "function",
        "title": "getDefaultFlags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ArgumentDefaults",
        "module": "Darcs.ArgumentDefaults",
        "name": "getDefaultFlags",
        "normalized": "String-\u003e[DarcsOption]-\u003e[DarcsFlag]-\u003eIO[DarcsFlag]",
        "package": "darcs",
        "partial": "Default Flags",
        "signature": "String-\u003e[DarcsOption]-\u003e[DarcsFlag]-\u003eIO[DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Arguments.html",
        "fct-type": "module",
        "title": "Arguments"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Arguments",
        "normalized": "",
        "package": "darcs",
        "partial": "Arguments",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#t:DarcsAtomicOption",
      "description": {
        "fct-descr": "\u003cp\u003eA type for darcs' options. The value contains the command line\n switch(es) for the option, a help string, and a function to build a\n \u003ccode\u003eDarcsFlag\u003c/code\u003e from the command line arguments.  for each constructor,\n \u003ccode\u003eshortSwitches\u003c/code\u003e represents the list of short command line switches\n which invoke the option, longSwitches the list of long command line\n switches, optDescr the description of the option, and argDescr the description\n of its argument, if any. mkFlag is a function which makes a \u003ccode\u003eDarcsFlag\u003c/code\u003e from\n the arguments of the option.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "data",
        "title": "DarcsAtomicOption"
      },
      "index": {
        "description": "type for darcs options The value contains the command line switch es for the option help string and function to build DarcsFlag from the command line arguments for each constructor shortSwitches represents the list of short command line switches which invoke the option longSwitches the list of long command line switches optDescr the description of the option and argDescr the description of its argument if any mkFlag is function which makes DarcsFlag from the arguments of the option",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsAtomicOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Atomic Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#t:DarcsFlag",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003eDarcsFlag\u003c/a\u003e\u003c/code\u003e type is a list of all flags that can ever be\n passed to darcs, or to one of its commands.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "data",
        "title": "DarcsFlag"
      },
      "index": {
        "description": "The DarcsFlag type is list of all flags that can ever be passed to darcs or to one of its commands",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsFlag",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Flag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#t:DarcsOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Arguments.html#DarcsOption",
        "fct-type": "data",
        "title": "DarcsOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AfterPatch",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AfterPatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AfterPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AfterPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "After Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AfterPattern",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AfterPattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AfterPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AfterPattern",
        "normalized": "",
        "package": "darcs",
        "partial": "After Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AfterTag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AfterTag String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AfterTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AfterTag",
        "normalized": "",
        "package": "darcs",
        "partial": "After Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:All",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "All",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "All"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "All",
        "normalized": "",
        "package": "darcs",
        "partial": "All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AllowCaseOnly",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AllowCaseOnly",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowCaseOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AllowCaseOnly",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Case Only",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AllowConflicts",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AllowConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AllowConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AllowUnrelatedRepos",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AllowUnrelatedRepos",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowUnrelatedRepos"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AllowUnrelatedRepos",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Unrelated Repos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AllowWindowsReserved",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AllowWindowsReserved",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowWindowsReserved"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AllowWindowsReserved",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Windows Reserved",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AmendUnrecord",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AmendUnrecord",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AmendUnrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AmendUnrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "Amend Unrecord",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AnyOrder",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AnyOrder",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AnyOrder"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AnyOrder",
        "normalized": "",
        "package": "darcs",
        "partial": "Any Order",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ApplyAs",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "ApplyAs String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ApplyAs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ApplyAs",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply As",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ApplyOnDisk",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "ApplyOnDisk",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ApplyOnDisk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ApplyOnDisk",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply On Disk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AskDeps",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AskDeps",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AskDeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AskDeps",
        "normalized": "",
        "package": "darcs",
        "partial": "Ask Deps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AskPosthook",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AskPosthook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AskPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AskPosthook",
        "normalized": "",
        "package": "darcs",
        "partial": "Ask Posthook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:AskPrehook",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AskPrehook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AskPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "AskPrehook",
        "normalized": "",
        "package": "darcs",
        "partial": "Ask Prehook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Author",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Author String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Author"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Author",
        "normalized": "",
        "package": "darcs",
        "partial": "Author",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Bisect",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Bisect",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Bisect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Bisect",
        "normalized": "",
        "package": "darcs",
        "partial": "Bisect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Boring",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Boring",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Boring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Boring",
        "normalized": "",
        "package": "darcs",
        "partial": "Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Cc",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Cc String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Cc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Cc",
        "normalized": "",
        "package": "darcs",
        "partial": "Cc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ChangesToAllFiles",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "ChangesToAllFiles",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ChangesToAllFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ChangesToAllFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Changes To All Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Charset",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Charset String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Charset"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Charset",
        "normalized": "",
        "package": "darcs",
        "partial": "Charset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Check",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Check",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Check"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Check",
        "normalized": "",
        "package": "darcs",
        "partial": "Check",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Complement",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Complement",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Complement"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Complement",
        "normalized": "",
        "package": "darcs",
        "partial": "Complement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Complete",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Complete",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Complete"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Complete",
        "normalized": "",
        "package": "darcs",
        "partial": "Complete",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Compress",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Compress",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Compress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Compress",
        "normalized": "",
        "package": "darcs",
        "partial": "Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Context",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Context AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Context"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Context",
        "normalized": "",
        "package": "darcs",
        "partial": "Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Count",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Count",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Count"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Count",
        "normalized": "",
        "package": "darcs",
        "partial": "Count",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:CreatorHash",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "CreatorHash String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "CreatorHash"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "CreatorHash",
        "normalized": "",
        "package": "darcs",
        "partial": "Creator Hash",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsAbsPathOption",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eDarcsAbsPathOption shortSwitches longSwitches mkFlag ArgDescr OptDescr\u003c/code\u003e\n The constructor for options with an absolute path argument, such as\n \u003ccode\u003e--sibling\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsAbsPathOption [Char] [String] (AbsolutePath -\u003e DarcsFlag) String String",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "function",
        "title": "DarcsAbsPathOption"
      },
      "index": {
        "description": "DarcsAbsPathOption shortSwitches longSwitches mkFlag ArgDescr OptDescr The constructor for options with an absolute path argument such as sibling",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsAbsPathOption",
        "normalized": "DarcsAbsPathOption[Char][String](AbsolutePath-\u003eDarcsFlag)String String",
        "package": "darcs",
        "partial": "Darcs Abs Path Option",
        "signature": "DarcsAbsPathOption[Char][String](AbsolutePath-\u003eDarcsFlag)String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsAbsPathOrStdOption",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eDarcsAbsPathOrStdOption shortSwitches longSwitches mkFlag ArgDescr OptDescr\u003c/code\u003e\n The constructor for options with a path argument, such as \u003ccode\u003e-o\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsAbsPathOrStdOption [Char] [String] (AbsolutePathOrStd -\u003e DarcsFlag) String String",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "function",
        "title": "DarcsAbsPathOrStdOption"
      },
      "index": {
        "description": "DarcsAbsPathOrStdOption shortSwitches longSwitches mkFlag ArgDescr OptDescr The constructor for options with path argument such as",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsAbsPathOrStdOption",
        "normalized": "DarcsAbsPathOrStdOption[Char][String](AbsolutePathOrStd-\u003eDarcsFlag)String String",
        "package": "darcs",
        "partial": "Darcs Abs Path Or Std Option",
        "signature": "DarcsAbsPathOrStdOption[Char][String](AbsolutePathOrStd-\u003eDarcsFlag)String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsArgOption",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eDarcsArgOption shortSwitches longSwitches mkFlag ArgDescr OptDescr\u003c/code\u003e\n The constructor for options with a string argument, such as\n \u003ccode\u003e--tag\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsArgOption [Char] [String] (String -\u003e DarcsFlag) String String",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "function",
        "title": "DarcsArgOption"
      },
      "index": {
        "description": "DarcsArgOption shortSwitches longSwitches mkFlag ArgDescr OptDescr The constructor for options with string argument such as tag",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsArgOption",
        "normalized": "DarcsArgOption[Char][String](String-\u003eDarcsFlag)String String",
        "package": "darcs",
        "partial": "Darcs Arg Option",
        "signature": "DarcsArgOption[Char][String](String-\u003eDarcsFlag)String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsInternalOption",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eDarcsInternalOption\u003c/code\u003e\n An option just for internal use (e.g. defaulting), not directly available to the user.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsInternalOption DarcsFlag",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "function",
        "title": "DarcsInternalOption"
      },
      "index": {
        "description": "DarcsInternalOption An option just for internal use e.g defaulting not directly available to the user",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsInternalOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Internal Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsMultipleChoiceOption",
      "description": {
        "fct-descr": "\u003cp\u003eA constructor for grouping related options together, such as\n \u003ccode\u003e--hashed\u003c/code\u003e and \u003ccode\u003e--darcs-2\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsMultipleChoiceOption [DarcsAtomicOption]",
        "fct-source": "src/Darcs-Arguments.html#DarcsOption",
        "fct-type": "function",
        "title": "DarcsMultipleChoiceOption"
      },
      "index": {
        "description": "constructor for grouping related options together such as hashed and darcs-2",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsMultipleChoiceOption",
        "normalized": "DarcsMultipleChoiceOption[DarcsAtomicOption]",
        "package": "darcs",
        "partial": "Darcs Multiple Choice Option",
        "signature": "DarcsMultipleChoiceOption[DarcsAtomicOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsMutuallyExclusive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsMutuallyExclusive [DarcsAtomicOption] ([DarcsFlag] -\u003e [DarcsFlag])",
        "fct-source": "src/Darcs-Arguments.html#DarcsOption",
        "fct-type": "function",
        "title": "DarcsMutuallyExclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsMutuallyExclusive",
        "normalized": "DarcsMutuallyExclusive[DarcsAtomicOption]([DarcsFlag]-\u003e[DarcsFlag])",
        "package": "darcs",
        "partial": "Darcs Mutually Exclusive",
        "signature": "DarcsMutuallyExclusive[DarcsAtomicOption]([DarcsFlag]-\u003e[DarcsFlag])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsNoArgOption",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eDarcsNoArgOption shortSwitches longSwitches mkFlag optDescr\u003c/code\u003e\n The constructon fon options with no arguments.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsNoArgOption [Char] [String] DarcsFlag String",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "function",
        "title": "DarcsNoArgOption"
      },
      "index": {
        "description": "DarcsNoArgOption shortSwitches longSwitches mkFlag optDescr The constructon fon options with no arguments",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsNoArgOption",
        "normalized": "DarcsNoArgOption[Char][String]DarcsFlag String",
        "package": "darcs",
        "partial": "Darcs No Arg Option",
        "signature": "DarcsNoArgOption[Char][String]DarcsFlag String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsOptAbsPathOption",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eDarcsOptAbsPathOrStdOption shortSwitches longSwitches defaultPath\n mkFlag ArgDescr OptDescr\u003c/code\u003e where defaultPath is a default value\n for the Path, as a string to be parsed as if it had been given\n on the command line.\n The constructor for options with an optional path argument, such as \u003ccode\u003e-O\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOptAbsPathOption [Char] [String] String (AbsolutePath -\u003e DarcsFlag) String String",
        "fct-source": "src/Darcs-Arguments.html#DarcsAtomicOption",
        "fct-type": "function",
        "title": "DarcsOptAbsPathOption"
      },
      "index": {
        "description": "DarcsOptAbsPathOrStdOption shortSwitches longSwitches defaultPath mkFlag ArgDescr OptDescr where defaultPath is default value for the Path as string to be parsed as if it had been given on the command line The constructor for options with an optional path argument such as",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsOptAbsPathOption",
        "normalized": "DarcsOptAbsPathOption[Char][String]String(AbsolutePath-\u003eDarcsFlag)String String",
        "package": "darcs",
        "partial": "Darcs Opt Abs Path Option",
        "signature": "DarcsOptAbsPathOption[Char][String]String(AbsolutePath-\u003eDarcsFlag)String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DarcsSingleOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsSingleOption DarcsAtomicOption",
        "fct-source": "src/Darcs-Arguments.html#DarcsOption",
        "fct-type": "function",
        "title": "DarcsSingleOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DarcsSingleOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Single Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Debug",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Debug",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Debug"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Debug",
        "normalized": "",
        "package": "darcs",
        "partial": "Debug",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DebugHTTP",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DebugHTTP",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DebugHTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DebugHTTP",
        "normalized": "",
        "package": "darcs",
        "partial": "Debug HTTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DebugVerbose",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DebugVerbose",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DebugVerbose"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DebugVerbose",
        "normalized": "",
        "package": "darcs",
        "partial": "Debug Verbose",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DiffCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DiffCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DiffCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DiffCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Diff Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DiffFlags",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DiffFlags String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DiffFlags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DiffFlags",
        "normalized": "",
        "package": "darcs",
        "partial": "Diff Flags",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Directories",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Directories",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Directories"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Directories",
        "normalized": "",
        "package": "darcs",
        "partial": "Directories",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Disable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Disable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Disable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Disable",
        "normalized": "",
        "package": "darcs",
        "partial": "Disable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DistName",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DistName String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DistName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DistName",
        "normalized": "",
        "package": "darcs",
        "partial": "Dist Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontAllowCaseOnly",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontAllowCaseOnly",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontAllowCaseOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontAllowCaseOnly",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Allow Case Only",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontAllowWindowsReserved",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontAllowWindowsReserved",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontAllowWindowsReserved"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontAllowWindowsReserved",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Allow Windows Reserved",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontGrabDeps",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontGrabDeps",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontGrabDeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontGrabDeps",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Grab Deps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontIgnoreTimes",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontIgnoreTimes",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontIgnoreTimes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontIgnoreTimes",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Ignore Times",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontPromptForDependencies",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontPromptForDependencies",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontPromptForDependencies"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontPromptForDependencies",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Prompt For Dependencies",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontRestrictPaths",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontRestrictPaths",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontRestrictPaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontRestrictPaths",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Restrict Paths",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontRmLogFile",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontRmLogFile",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontRmLogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontRmLogFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Rm Log File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DontSetScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DontSetScriptsExecutable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontSetScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DontSetScriptsExecutable",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Set Scripts Executable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:DryRun",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DryRun",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DryRun"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "DryRun",
        "normalized": "",
        "package": "darcs",
        "partial": "Dry Run",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:EditDescription",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "EditDescription",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "EditDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "EditDescription",
        "normalized": "",
        "package": "darcs",
        "partial": "Edit Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:EditLongComment",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "EditLongComment",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "EditLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "EditLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "Edit Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ExternalMerge",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "ExternalMerge String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ExternalMerge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ExternalMerge",
        "normalized": "",
        "package": "darcs",
        "partial": "External Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Files",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Files",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Files"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Files",
        "normalized": "",
        "package": "darcs",
        "partial": "Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:FixFilePath",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "FixFilePath AbsolutePath AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "FixFilePath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "FixFilePath",
        "normalized": "",
        "package": "darcs",
        "partial": "Fix File Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ForceReplace",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "ForceReplace",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ForceReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ForceReplace",
        "normalized": "",
        "package": "darcs",
        "partial": "Force Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Forward",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Forward",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Forward"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Forward",
        "normalized": "",
        "package": "darcs",
        "partial": "Forward",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:GenContext",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "GenContext",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "GenContext"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "GenContext",
        "normalized": "",
        "package": "darcs",
        "partial": "Gen Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:HappyForwarding",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "HappyForwarding",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "HappyForwarding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "HappyForwarding",
        "normalized": "",
        "package": "darcs",
        "partial": "Happy Forwarding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Help",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Help",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Help"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Help",
        "normalized": "",
        "package": "darcs",
        "partial": "Help",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:HumanReadable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "HumanReadable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "HumanReadable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "HumanReadable",
        "normalized": "",
        "package": "darcs",
        "partial": "Human Readable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:IgnoreTimes",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "IgnoreTimes",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "IgnoreTimes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "IgnoreTimes",
        "normalized": "",
        "package": "darcs",
        "partial": "Ignore Times",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:InReplyTo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "InReplyTo String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "InReplyTo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "InReplyTo",
        "normalized": "",
        "package": "darcs",
        "partial": "In Reply To",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Interactive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Interactive",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Interactive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Interactive",
        "normalized": "",
        "package": "darcs",
        "partial": "Interactive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Intersection",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Intersection",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Intersection"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Intersection",
        "normalized": "",
        "package": "darcs",
        "partial": "Intersection",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:JustThisRepo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "JustThisRepo",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "JustThisRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "JustThisRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Just This Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:KeepDate",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "KeepDate",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "KeepDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "KeepDate",
        "normalized": "",
        "package": "darcs",
        "partial": "Keep Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:LastN",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "LastN Int",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LastN"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "LastN",
        "normalized": "",
        "package": "darcs",
        "partial": "Last",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Lazy",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Lazy",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Lazy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Lazy",
        "normalized": "",
        "package": "darcs",
        "partial": "Lazy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:LeaveTestDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "LeaveTestDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LeaveTestDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "LeaveTestDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Leave Test Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ListOptions",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "ListOptions",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ListOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ListOptions",
        "normalized": "",
        "package": "darcs",
        "partial": "List Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:LogFile",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "LogFile AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "LogFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Log File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:LookForAdds",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "LookForAdds",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LookForAdds"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "LookForAdds",
        "normalized": "",
        "package": "darcs",
        "partial": "Look For Adds",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:MachineReadable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "MachineReadable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "MachineReadable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "MachineReadable",
        "normalized": "",
        "package": "darcs",
        "partial": "Machine Readable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:MarkConflicts",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "MarkConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "MarkConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "MarkConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Mark Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:MaxCount",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "MaxCount Int",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "MaxCount"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "MaxCount",
        "normalized": "",
        "package": "darcs",
        "partial": "Max Count",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NewRepo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NewRepo String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NewRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NewRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "New Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoAllowConflicts",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoAllowConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoAllowConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoAllowConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "No Allow Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoAmendUnrecord",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoAmendUnrecord",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoAmendUnrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoAmendUnrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "No Amend Unrecord",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoAskDeps",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoAskDeps",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoAskDeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoAskDeps",
        "normalized": "",
        "package": "darcs",
        "partial": "No Ask Deps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoCache",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoCache",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoCache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoCache",
        "normalized": "",
        "package": "darcs",
        "partial": "No Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoCompress",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoCompress",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoCompress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoCompress",
        "normalized": "",
        "package": "darcs",
        "partial": "No Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoDirectories",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoDirectories",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoDirectories"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoDirectories",
        "normalized": "",
        "package": "darcs",
        "partial": "No Directories",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoEditDescription",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoEditDescription",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoEditDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoEditDescription",
        "normalized": "",
        "package": "darcs",
        "partial": "No Edit Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoEditLongComment",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoEditLongComment",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoEditLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoEditLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "No Edit Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoFiles",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoFiles",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "No Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoHTTPPipelining",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoHTTPPipelining",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoHTTPPipelining"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoHTTPPipelining",
        "normalized": "",
        "package": "darcs",
        "partial": "No HTTPPipelining",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoHappyForwarding",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoHappyForwarding",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoHappyForwarding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoHappyForwarding",
        "normalized": "",
        "package": "darcs",
        "partial": "No Happy Forwarding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoKeepDate",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoKeepDate",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoKeepDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoKeepDate",
        "normalized": "",
        "package": "darcs",
        "partial": "No Keep Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoLeaveTestDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoLeaveTestDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoLeaveTestDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoLeaveTestDir",
        "normalized": "",
        "package": "darcs",
        "partial": "No Leave Test Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoLookForAdds",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoLookForAdds",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoLookForAdds"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoLookForAdds",
        "normalized": "",
        "package": "darcs",
        "partial": "No Look For Adds",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoPacks",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoPacks",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPacks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoPacks",
        "normalized": "",
        "package": "darcs",
        "partial": "No Packs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoPauseForGui",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoPauseForGui",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPauseForGui"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoPauseForGui",
        "normalized": "",
        "package": "darcs",
        "partial": "No Pause For Gui",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoPending",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoPending",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoPending",
        "normalized": "",
        "package": "darcs",
        "partial": "No Pending",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoPosthook",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoPosthook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoPosthook",
        "normalized": "",
        "package": "darcs",
        "partial": "No Posthook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoPrehook",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoPrehook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoPrehook",
        "normalized": "",
        "package": "darcs",
        "partial": "No Prehook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoRecordRollback",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoRecordRollback",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoRecordRollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoRecordRollback",
        "normalized": "",
        "package": "darcs",
        "partial": "No Record Rollback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoRecursive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoRecursive",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoRecursive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoRecursive",
        "normalized": "",
        "package": "darcs",
        "partial": "No Recursive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoSetDefault",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoSetDefault Bool",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoSetDefault"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoSetDefault",
        "normalized": "",
        "package": "darcs",
        "partial": "No Set Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoSign",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoSign",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoSign"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoSign",
        "normalized": "",
        "package": "darcs",
        "partial": "No Sign",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoSummary",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoSummary",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoSummary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoSummary",
        "normalized": "",
        "package": "darcs",
        "partial": "No Summary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoTest",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoTest",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoTest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoTest",
        "normalized": "",
        "package": "darcs",
        "partial": "No Test",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NoUpdateWorking",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NoUpdateWorking",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoUpdateWorking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NoUpdateWorking",
        "normalized": "",
        "package": "darcs",
        "partial": "No Update Working",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NonApply",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NonApply",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NonApply",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NonForce",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NonForce",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonForce"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NonForce",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Force",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NonUnified",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NonUnified",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonUnified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NonUnified",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Unified",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NonVerify",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NonVerify",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonVerify"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NonVerify",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Verify",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NormalVerbosity",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NormalVerbosity",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NormalVerbosity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NormalVerbosity",
        "normalized": "",
        "package": "darcs",
        "partial": "Normal Verbosity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NullFlag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NullFlag",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NullFlag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NullFlag",
        "normalized": "",
        "package": "darcs",
        "partial": "Null Flag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:NumberPatches",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "NumberPatches",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NumberPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "NumberPatches",
        "normalized": "",
        "package": "darcs",
        "partial": "Number Patches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OnePatch",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OnePatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OnePatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OnePatch",
        "normalized": "",
        "package": "darcs",
        "partial": "One Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OnePattern",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OnePattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OnePattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OnePattern",
        "normalized": "",
        "package": "darcs",
        "partial": "One Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OneTag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OneTag String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OneTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OneTag",
        "normalized": "",
        "package": "darcs",
        "partial": "One Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OnlyChangesToFiles",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OnlyChangesToFiles",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OnlyChangesToFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OnlyChangesToFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Only Changes To Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OptimizeHTTP",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OptimizeHTTP",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OptimizeHTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OptimizeHTTP",
        "normalized": "",
        "package": "darcs",
        "partial": "Optimize HTTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OptimizePristine",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OptimizePristine",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OptimizePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OptimizePristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Optimize Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Output",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Output AbsolutePathOrStd",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Output"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Output",
        "normalized": "",
        "package": "darcs",
        "partial": "Output",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:OutputAutoName",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "OutputAutoName AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OutputAutoName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "OutputAutoName",
        "normalized": "",
        "package": "darcs",
        "partial": "Output Auto Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Packs",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Packs",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Packs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Packs",
        "normalized": "",
        "package": "darcs",
        "partial": "Packs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PatchIndexRange",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PatchIndexRange Int Int",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PatchIndexRange"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PatchIndexRange",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Index Range",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PatchName",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PatchName String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PatchName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PatchName",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PauseForGui",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PauseForGui",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PauseForGui"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PauseForGui",
        "normalized": "",
        "package": "darcs",
        "partial": "Pause For Gui",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Pending",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Pending",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Pending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Pending",
        "normalized": "",
        "package": "darcs",
        "partial": "Pending",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Pipe",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Pipe",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Pipe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Pipe",
        "normalized": "",
        "package": "darcs",
        "partial": "Pipe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PosthookCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PosthookCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PosthookCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PosthookCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Posthook Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PrehookCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PrehookCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PrehookCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PrehookCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Prehook Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PromptForDependencies",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PromptForDependencies",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PromptForDependencies"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PromptForDependencies",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt For Dependencies",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:PromptLongComment",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "PromptLongComment",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PromptLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "PromptLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Quiet",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Quiet",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Quiet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Quiet",
        "normalized": "",
        "package": "darcs",
        "partial": "Quiet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RecordRollback",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RecordRollback",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RecordRollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RecordRollback",
        "normalized": "",
        "package": "darcs",
        "partial": "Record Rollback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Recursive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Recursive",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Recursive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Recursive",
        "normalized": "",
        "package": "darcs",
        "partial": "Recursive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Relink",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Relink",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Relink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Relink",
        "normalized": "",
        "package": "darcs",
        "partial": "Relink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RemoteDarcsOpt",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RemoteDarcsOpt String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RemoteDarcsOpt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RemoteDarcsOpt",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Darcs Opt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RemoteRepo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RemoteRepo String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RemoteRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RemoteRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Reorder",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Reorder",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Reorder"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Reorder",
        "normalized": "",
        "package": "darcs",
        "partial": "Reorder",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Repair",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Repair",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Repair"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Repair",
        "normalized": "",
        "package": "darcs",
        "partial": "Repair",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Reply",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Reply String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Reply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Reply",
        "normalized": "",
        "package": "darcs",
        "partial": "Reply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RestrictPaths",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RestrictPaths",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RestrictPaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RestrictPaths",
        "normalized": "",
        "package": "darcs",
        "partial": "Restrict Paths",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Reverse",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Reverse",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Reverse"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Reverse",
        "normalized": "",
        "package": "darcs",
        "partial": "Reverse",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RmLogFile",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RmLogFile",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RmLogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RmLogFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Rm Log File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RunPosthook",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RunPosthook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RunPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RunPosthook",
        "normalized": "",
        "package": "darcs",
        "partial": "Run Posthook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:RunPrehook",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "RunPrehook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RunPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "RunPrehook",
        "normalized": "",
        "package": "darcs",
        "partial": "Run Prehook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SendmailCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SendmailCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SendmailCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SendmailCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Sendmail Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SetDefault",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SetDefault Bool",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SetDefault"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SetDefault",
        "normalized": "",
        "package": "darcs",
        "partial": "Set Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SetScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SetScriptsExecutable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SetScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SetScriptsExecutable",
        "normalized": "",
        "package": "darcs",
        "partial": "Set Scripts Executable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SeveralPatch",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SeveralPatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SeveralPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SeveralPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Several Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SeveralPattern",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SeveralPattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SeveralPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SeveralPattern",
        "normalized": "",
        "package": "darcs",
        "partial": "Several Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Sibling",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Sibling AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Sibling"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Sibling",
        "normalized": "",
        "package": "darcs",
        "partial": "Sibling",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Sign",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Sign",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Sign"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Sign",
        "normalized": "",
        "package": "darcs",
        "partial": "Sign",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SignAs",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SignAs String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SignAs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SignAs",
        "normalized": "",
        "package": "darcs",
        "partial": "Sign As",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SignSSL",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SignSSL String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SignSSL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SignSSL",
        "normalized": "",
        "package": "darcs",
        "partial": "Sign SSL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SkipBoring",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SkipBoring",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SkipBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SkipBoring",
        "normalized": "",
        "package": "darcs",
        "partial": "Skip Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:SkipConflicts",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "SkipConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SkipConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "SkipConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Skip Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:StoreInMemory",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "StoreInMemory",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "StoreInMemory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "StoreInMemory",
        "normalized": "",
        "package": "darcs",
        "partial": "Store In Memory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Subject",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Subject String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Subject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Subject",
        "normalized": "",
        "package": "darcs",
        "partial": "Subject",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Summary",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Summary",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Summary",
        "normalized": "",
        "package": "darcs",
        "partial": "Summary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:TagName",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "TagName String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "TagName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "TagName",
        "normalized": "",
        "package": "darcs",
        "partial": "Tag Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Target",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Target String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Target"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Target",
        "normalized": "",
        "package": "darcs",
        "partial": "Target",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Test",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Test",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Test"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Test",
        "normalized": "",
        "package": "darcs",
        "partial": "Test",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Timings",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Timings",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Timings"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Timings",
        "normalized": "",
        "package": "darcs",
        "partial": "Timings",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Toks",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Toks String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Toks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Toks",
        "normalized": "",
        "package": "darcs",
        "partial": "Toks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UMask",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UMask String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UMask"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UMask",
        "normalized": "",
        "package": "darcs",
        "partial": "UMask",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UnCompress",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UnCompress",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UnCompress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UnCompress",
        "normalized": "",
        "package": "darcs",
        "partial": "Un Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Unified",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Unified",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Unified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Unified",
        "normalized": "",
        "package": "darcs",
        "partial": "Unified",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Union",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Union",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Union"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Union",
        "normalized": "",
        "package": "darcs",
        "partial": "Union",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UpToPatch",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UpToPatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpToPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UpToPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Up To Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UpToPattern",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UpToPattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpToPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UpToPattern",
        "normalized": "",
        "package": "darcs",
        "partial": "Up To Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UpToTag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UpToTag String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpToTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UpToTag",
        "normalized": "",
        "package": "darcs",
        "partial": "Up To Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UpgradeFormat",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UpgradeFormat",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpgradeFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UpgradeFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Upgrade Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UseFormat2",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UseFormat2",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseFormat2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UseFormat2",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UseHashedInventory",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UseHashedInventory",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseHashedInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UseHashedInventory",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Hashed Inventory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UseNoWorkingDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UseNoWorkingDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseNoWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UseNoWorkingDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Use No Working Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:UseWorkingDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "UseWorkingDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "UseWorkingDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Working Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Verbose",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Verbose",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Verbose"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Verbose",
        "normalized": "",
        "package": "darcs",
        "partial": "Verbose",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:Verify",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Verify AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Verify"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "Verify",
        "normalized": "",
        "package": "darcs",
        "partial": "Verify",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:VerifySSL",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "VerifySSL AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "VerifySSL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "VerifySSL",
        "normalized": "",
        "package": "darcs",
        "partial": "Verify SSL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:WorkRepoDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "WorkRepoDir String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "WorkRepoDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "WorkRepoDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Work Repo Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:WorkRepoUrl",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "WorkRepoUrl String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "WorkRepoUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "WorkRepoUrl",
        "normalized": "",
        "package": "darcs",
        "partial": "Work Repo Url",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:XMLOutput",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "XMLOutput",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "XMLOutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "XMLOutput",
        "normalized": "",
        "package": "darcs",
        "partial": "XMLOutput",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:allInteractive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#allInteractive",
        "fct-type": "function",
        "title": "allInteractive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "allInteractive",
        "normalized": "",
        "package": "darcs",
        "partial": "Interactive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:allPipeInteractive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#allPipeInteractive",
        "fct-type": "function",
        "title": "allPipeInteractive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "allPipeInteractive",
        "normalized": "",
        "package": "darcs",
        "partial": "Pipe Interactive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:allowProblematicFilenames",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#allowProblematicFilenames",
        "fct-type": "function",
        "title": "allowProblematicFilenames"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "allowProblematicFilenames",
        "normalized": "",
        "package": "darcs",
        "partial": "Problematic Filenames",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:allowUnrelatedRepos",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#allowUnrelatedRepos",
        "fct-type": "function",
        "title": "allowUnrelatedRepos"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "allowUnrelatedRepos",
        "normalized": "",
        "package": "darcs",
        "partial": "Unrelated Repos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:amendUnrecord",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#amendUnrecord",
        "fct-type": "function",
        "title": "amendUnrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "amendUnrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "Unrecord",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:anyVerbosity",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption]",
        "fct-source": "src/Darcs-Arguments.html#anyVerbosity",
        "fct-type": "function",
        "title": "anyVerbosity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "anyVerbosity",
        "normalized": "[DarcsOption]",
        "package": "darcs",
        "partial": "Verbosity",
        "signature": "[DarcsOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:applyConflictOptions",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#applyConflictOptions",
        "fct-type": "function",
        "title": "applyConflictOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "applyConflictOptions",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflict Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:applyDefaults",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption] -\u003e [DarcsFlag] -\u003e [DarcsFlag]",
        "fct-source": "src/Darcs-Arguments.html#applyDefaults",
        "fct-type": "function",
        "title": "applyDefaults"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "applyDefaults",
        "normalized": "[DarcsOption]-\u003e[DarcsFlag]-\u003e[DarcsFlag]",
        "package": "darcs",
        "partial": "Defaults",
        "signature": "[DarcsOption]-\u003e[DarcsFlag]-\u003e[DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:applyas",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#applyas",
        "fct-type": "function",
        "title": "applyas"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "applyas",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:arein",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption -\u003e [DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Arguments.html#arein",
        "fct-type": "function",
        "title": "arein"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "arein",
        "normalized": "DarcsOption-\u003e[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "DarcsOption-\u003e[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:askLongComment",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#askLongComment",
        "fct-type": "function",
        "title": "askLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "askLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:askdeps",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#askdeps",
        "fct-type": "function",
        "title": "askdeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "askdeps",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:atomicOptions",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption -\u003e [DarcsAtomicOption]",
        "fct-source": "src/Darcs-Arguments.html#atomicOptions",
        "fct-type": "function",
        "title": "atomicOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "atomicOptions",
        "normalized": "DarcsOption-\u003e[DarcsAtomicOption]",
        "package": "darcs",
        "partial": "Options",
        "signature": "DarcsOption-\u003e[DarcsAtomicOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:author",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#author",
        "fct-type": "function",
        "title": "author"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "author",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:bisect",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#bisect",
        "fct-type": "function",
        "title": "bisect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "bisect",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ccApply",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#ccApply",
        "fct-type": "function",
        "title": "ccApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ccApply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ccSend",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#ccSend",
        "fct-type": "function",
        "title": "ccSend"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ccSend",
        "normalized": "",
        "package": "darcs",
        "partial": "Send",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:changesFormat",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#changesFormat",
        "fct-type": "function",
        "title": "changesFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "changesFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:changesReverse",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#changesReverse",
        "fct-type": "function",
        "title": "changesReverse"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "changesReverse",
        "normalized": "",
        "package": "darcs",
        "partial": "Reverse",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:charset",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#charset",
        "fct-type": "function",
        "title": "charset"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "charset",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:checkOrRepair",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#checkOrRepair",
        "fct-type": "function",
        "title": "checkOrRepair"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "checkOrRepair",
        "normalized": "",
        "package": "darcs",
        "partial": "Or Repair",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:creatorhash",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#creatorhash",
        "fct-type": "function",
        "title": "creatorhash"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "creatorhash",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:depsSel",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#depsSel",
        "fct-type": "function",
        "title": "depsSel"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "depsSel",
        "normalized": "",
        "package": "darcs",
        "partial": "Sel",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:diffCmdFlag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#diffCmdFlag",
        "fct-type": "function",
        "title": "diffCmdFlag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "diffCmdFlag",
        "normalized": "",
        "package": "darcs",
        "partial": "Cmd Flag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:diffflags",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#diffflags",
        "fct-type": "function",
        "title": "diffflags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "diffflags",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:directories",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#directories",
        "fct-type": "function",
        "title": "directories"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "directories",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:disable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#disable",
        "fct-type": "function",
        "title": "disable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "disable",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:distnameOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#distnameOption",
        "fct-type": "function",
        "title": "distnameOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "distnameOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:dryRun",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption]",
        "fct-source": "src/Darcs-Arguments.html#dryRun",
        "fct-type": "function",
        "title": "dryRun"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "dryRun",
        "normalized": "[DarcsOption]",
        "package": "darcs",
        "partial": "Run",
        "signature": "[DarcsOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:dryRunNoxml",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#dryRunNoxml",
        "fct-type": "function",
        "title": "dryRunNoxml"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "dryRunNoxml",
        "normalized": "",
        "package": "darcs",
        "partial": "Run Noxml",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:editDescription",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#editDescription",
        "fct-type": "function",
        "title": "editDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "editDescription",
        "normalized": "",
        "package": "darcs",
        "partial": "Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:environmentHelpEmail",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Arguments.html#environmentHelpEmail",
        "fct-type": "function",
        "title": "environmentHelpEmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "environmentHelpEmail",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Email",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:environmentHelpSendmail",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Arguments.html#environmentHelpSendmail",
        "fct-type": "function",
        "title": "environmentHelpSendmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "environmentHelpSendmail",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Sendmail",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:fileHelpAuthor",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[String]",
        "fct-source": "src/Darcs-Arguments.html#fileHelpAuthor",
        "fct-type": "function",
        "title": "fileHelpAuthor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "fileHelpAuthor",
        "normalized": "[String]",
        "package": "darcs",
        "partial": "Help Author",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:files",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#files",
        "fct-type": "function",
        "title": "files"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "files",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:fixFilePathOrStd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e FilePath -\u003e IO AbsolutePathOrStd",
        "fct-source": "src/Darcs-Arguments.html#fixFilePathOrStd",
        "fct-type": "function",
        "title": "fixFilePathOrStd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "fixFilePathOrStd",
        "normalized": "[DarcsFlag]-\u003eFilePath-\u003eIO AbsolutePathOrStd",
        "package": "darcs",
        "partial": "File Path Or Std",
        "signature": "[DarcsFlag]-\u003eFilePath-\u003eIO AbsolutePathOrStd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:fixSubPaths",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efixSubPaths files\u003c/code\u003e returns the \u003ccode\u003eSubPath\u003c/code\u003es for the paths in \u003ccode\u003efiles\u003c/code\u003e that\n are inside the repository, preserving their order. Paths in \u003ccode\u003efiles\u003c/code\u003e that are\n outside the repository directory are not in the result.\n\u003c/p\u003e\u003cp\u003eWhen converting a relative path to an absolute one, this function first tries\n to interpret the relative path with respect to the current working directory.\n If that fails, it tries to interpret it with respect to the repository\n directory. Only when that fails does it omit the path from the result.\n\u003c/p\u003e\u003cp\u003eIt is intended for validating file arguments to darcs commands.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [FilePath] -\u003e IO [SubPath]",
        "fct-source": "src/Darcs-Arguments.html#fixSubPaths",
        "fct-type": "function",
        "title": "fixSubPaths"
      },
      "index": {
        "description": "fixSubPaths files returns the SubPath for the paths in files that are inside the repository preserving their order Paths in files that are outside the repository directory are not in the result When converting relative path to an absolute one this function first tries to interpret the relative path with respect to the current working directory If that fails it tries to interpret it with respect to the repository directory Only when that fails does it omit the path from the result It is intended for validating file arguments to darcs commands",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "fixSubPaths",
        "normalized": "[DarcsFlag]-\u003e[FilePath]-\u003eIO[SubPath]",
        "package": "darcs",
        "partial": "Sub Paths",
        "signature": "[DarcsFlag]-\u003e[FilePath]-\u003eIO[SubPath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:fixUrl",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String -\u003e IO String",
        "fct-source": "src/Darcs-Arguments.html#fixUrl",
        "fct-type": "function",
        "title": "fixUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "fixUrl",
        "normalized": "[DarcsFlag]-\u003eString-\u003eIO String",
        "package": "darcs",
        "partial": "Url",
        "signature": "[DarcsFlag]-\u003eString-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:fixUrlFlag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e DarcsFlag -\u003e IO DarcsFlag",
        "fct-source": "src/Darcs-Arguments.html#fixUrlFlag",
        "fct-type": "function",
        "title": "fixUrlFlag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "fixUrlFlag",
        "normalized": "[DarcsFlag]-\u003eDarcsFlag-\u003eIO DarcsFlag",
        "package": "darcs",
        "partial": "Url Flag",
        "signature": "[DarcsFlag]-\u003eDarcsFlag-\u003eIO DarcsFlag"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:flagToString",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption] -\u003e DarcsFlag -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#flagToString",
        "fct-type": "function",
        "title": "flagToString"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "flagToString",
        "normalized": "[DarcsOption]-\u003eDarcsFlag-\u003eMaybe String",
        "package": "darcs",
        "partial": "To String",
        "signature": "[DarcsOption]-\u003eDarcsFlag-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:flagsToSiblings",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eflagsToSiblings\u003c/a\u003e\u003c/code\u003e collects the contents of all \u003ccode\u003eSibling\u003c/code\u003e flags in a list of flags.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [AbsolutePath]",
        "fct-source": "src/Darcs-Arguments.html#flagsToSiblings",
        "fct-type": "function",
        "title": "flagsToSiblings"
      },
      "index": {
        "description": "flagsToSiblings collects the contents of all Sibling flags in list of flags",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "flagsToSiblings",
        "normalized": "[DarcsFlag]-\u003e[AbsolutePath]",
        "package": "darcs",
        "partial": "To Siblings",
        "signature": "[DarcsFlag]-\u003e[AbsolutePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:forceReplace",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#forceReplace",
        "fct-type": "function",
        "title": "forceReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "forceReplace",
        "normalized": "",
        "package": "darcs",
        "partial": "Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:fromOpt",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#fromOpt",
        "fct-type": "function",
        "title": "fromOpt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "fromOpt",
        "normalized": "",
        "package": "darcs",
        "partial": "Opt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getAuthor",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetAuthor\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the author of the\n change specified by \u003ccode\u003eAuthor \"Leo Tolstoy\"\u003c/code\u003e in that list of flags, if any.\n Otherwise, if \u003ccode\u003ePipe\u003c/code\u003e is present, asks the user who is the author and\n returns the answer. If neither are present, try to guess the author,\n from \u003ccode\u003e_darcs/prefs\u003c/code\u003e, and if it's not possible, ask the user.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO String",
        "fct-source": "src/Darcs-Arguments.html#getAuthor",
        "fct-type": "function",
        "title": "getAuthor"
      },
      "index": {
        "description": "getAuthor takes list of flags and returns the author of the change specified by Author Leo Tolstoy in that list of flags if any Otherwise if Pipe is present asks the user who is the author and returns the answer If neither are present try to guess the author from darcs prefs and if it not possible ask the user",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getAuthor",
        "normalized": "[DarcsFlag]-\u003eIO String",
        "package": "darcs",
        "partial": "Author",
        "signature": "[DarcsFlag]-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getCc",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetCc\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the addresses to send a copy of\n the patch bundle to when using \u003ccode\u003edarcs send\u003c/code\u003e.\n looks for a cc address specified by \u003ccode\u003eCc \"address\"\u003c/code\u003e in that list of flags.\n Returns the addresses as a comma separated string.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String",
        "fct-source": "src/Darcs-Arguments.html#getCc",
        "fct-type": "function",
        "title": "getCc"
      },
      "index": {
        "description": "getCc takes list of flags and returns the addresses to send copy of the patch bundle to when using darcs send looks for cc address specified by Cc address in that list of flags Returns the addresses as comma separated string",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getCc",
        "normalized": "[DarcsFlag]-\u003eString",
        "package": "darcs",
        "partial": "Cc",
        "signature": "[DarcsFlag]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getCharset",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#getCharset",
        "fct-type": "function",
        "title": "getCharset"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getCharset",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "Charset",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getContext",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetContext\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the context\n specified by \u003ccode\u003eContext c\u003c/code\u003e in that list of flags, if any.\n This flag is present if darcs was invoked with \u003ccode\u003e--context=FILE\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe AbsolutePath",
        "fct-source": "src/Darcs-Arguments.html#getContext",
        "fct-type": "function",
        "title": "getContext"
      },
      "index": {
        "description": "getContext takes list of flags and returns the context specified by Context in that list of flags if any This flag is present if darcs was invoked with context FILE",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getContext",
        "normalized": "[DarcsFlag]-\u003eMaybe AbsolutePath",
        "package": "darcs",
        "partial": "Context",
        "signature": "[DarcsFlag]-\u003eMaybe AbsolutePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getEasyAuthor",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetEasyAuthor\u003c/a\u003e\u003c/code\u003e tries to get the author name first from the repository preferences,\n then from global preferences, then from environment variables.  Returns \u003ccode\u003e[]\u003c/code\u003e\n if it could not get it.  Note that it may only return multiple possibilities when\n reading from global preferences\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Arguments.html#getEasyAuthor",
        "fct-type": "function",
        "title": "getEasyAuthor"
      },
      "index": {
        "description": "getEasyAuthor tries to get the author name first from the repository preferences then from global preferences then from environment variables Returns if it could not get it Note that it may only return multiple possibilities when reading from global preferences",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getEasyAuthor",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Easy Author",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getInReplyTo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#getInReplyTo",
        "fct-type": "function",
        "title": "getInReplyTo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getInReplyTo",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "In Reply To",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getOutput",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e FilePath -\u003e Maybe AbsolutePathOrStd",
        "fct-source": "src/Darcs-Arguments.html#getOutput",
        "fct-type": "function",
        "title": "getOutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getOutput",
        "normalized": "[DarcsFlag]-\u003eFilePath-\u003eMaybe AbsolutePathOrStd",
        "package": "darcs",
        "partial": "Output",
        "signature": "[DarcsFlag]-\u003eFilePath-\u003eMaybe AbsolutePathOrStd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getPosthookCmd",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetPosthookCmd\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the posthook command\n  specified by \u003ccode\u003ePosthookCmd a\u003c/code\u003e in that list of flags, if any.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#getPosthookCmd",
        "fct-type": "function",
        "title": "getPosthookCmd"
      },
      "index": {
        "description": "getPosthookCmd takes list of flags and returns the posthook command specified by PosthookCmd in that list of flags if any",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getPosthookCmd",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "Posthook Cmd",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getPrehookCmd",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetPrehookCmd\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the prehook command\n  specified by \u003ccode\u003ePrehookCmd a\u003c/code\u003e in that list of flags, if any.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#getPrehookCmd",
        "fct-type": "function",
        "title": "getPrehookCmd"
      },
      "index": {
        "description": "getPrehookCmd takes list of flags and returns the prehook command specified by PrehookCmd in that list of flags if any",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getPrehookCmd",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "Prehook Cmd",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getRepourl",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetRepourl\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the url of the\n repository specified by \u003ccode\u003eRepodir \"directory\"\u003c/code\u003e in that list of flags, if any.\n This flag is present if darcs was invoked with \u003ccode\u003e--repodir=DIRECTORY\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#getRepourl",
        "fct-type": "function",
        "title": "getRepourl"
      },
      "index": {
        "description": "getRepourl takes list of flags and returns the url of the repository specified by Repodir directory in that list of flags if any This flag is present if darcs was invoked with repodir DIRECTORY",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getRepourl",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "Repourl",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getSendmailCmd",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetSendmailCmd\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the sendmail command\n to be used by \u003ccode\u003edarcs send\u003c/code\u003e. Looks for a command specified by\n \u003ccode\u003eSendmailCmd \"command\"\u003c/code\u003e in that list of flags, if any.\n This flag is present if darcs was invoked with \u003ccode\u003e--sendmail-command=COMMAND\u003c/code\u003e\n Alternatively the user can set \u003ccode\u003e$S\u003c/code\u003e\u003ccode\u003eENDMAIL\u003c/code\u003e which will be used as a fallback if present.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO String",
        "fct-source": "src/Darcs-Arguments.html#getSendmailCmd",
        "fct-type": "function",
        "title": "getSendmailCmd"
      },
      "index": {
        "description": "getSendmailCmd takes list of flags and returns the sendmail command to be used by darcs send Looks for command specified by SendmailCmd command in that list of flags if any This flag is present if darcs was invoked with sendmail-command COMMAND Alternatively the user can set ENDMAIL which will be used as fallback if present",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getSendmailCmd",
        "normalized": "[DarcsFlag]-\u003eIO String",
        "package": "darcs",
        "partial": "Sendmail Cmd",
        "signature": "[DarcsFlag]-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:getSubject",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetSubject\u003c/a\u003e\u003c/code\u003e takes a list of flags and returns the subject of the mail\n to be sent by \u003ccode\u003edarcs send\u003c/code\u003e. Looks for a subject specified by\n \u003ccode\u003eSubject \"subject\"\u003c/code\u003e in that list of flags, if any.\n This flag is present if darcs was invoked with \u003ccode\u003e--subject=SUBJECT\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Arguments.html#getSubject",
        "fct-type": "function",
        "title": "getSubject"
      },
      "index": {
        "description": "getSubject takes list of flags and returns the subject of the mail to be sent by darcs send Looks for subject specified by Subject subject in that list of flags if any This flag is present if darcs was invoked with subject SUBJECT",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "getSubject",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "Subject",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:happyForwarding",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#happyForwarding",
        "fct-type": "function",
        "title": "happyForwarding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "happyForwarding",
        "normalized": "",
        "package": "darcs",
        "partial": "Forwarding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:help",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#help",
        "fct-type": "function",
        "title": "help"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "help",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:humanReadable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#humanReadable",
        "fct-type": "function",
        "title": "humanReadable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "humanReadable",
        "normalized": "",
        "package": "darcs",
        "partial": "Readable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:ignoretimes",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#ignoretimes",
        "fct-type": "function",
        "title": "ignoretimes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "ignoretimes",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:inReplyTo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#inReplyTo",
        "fct-type": "function",
        "title": "inReplyTo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "inReplyTo",
        "normalized": "",
        "package": "darcs",
        "partial": "Reply To",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:isin",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsAtomicOption -\u003e [DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Arguments.html#isin",
        "fct-type": "function",
        "title": "isin"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "isin",
        "normalized": "DarcsAtomicOption-\u003e[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "DarcsAtomicOption-\u003e[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:justThisRepo",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#justThisRepo",
        "fct-type": "function",
        "title": "justThisRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "justThisRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "This Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:keepDate",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#keepDate",
        "fct-type": "function",
        "title": "keepDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "keepDate",
        "normalized": "",
        "package": "darcs",
        "partial": "Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:leaveTestDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#leaveTestDir",
        "fct-type": "function",
        "title": "leaveTestDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "leaveTestDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Test Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:listFiles",
      "description": {
        "fct-descr": "\u003cp\u003eGet a list of all non-boring files and directories in the working copy.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Arguments.html#listFiles",
        "fct-type": "function",
        "title": "listFiles"
      },
      "index": {
        "description": "Get list of all non-boring files and directories in the working copy",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "listFiles",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Files",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:listOptions",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003elist_option\u003c/code\u003e is an option which lists the command's arguments\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#listOptions",
        "fct-type": "function",
        "title": "listOptions"
      },
      "index": {
        "description": "list option is an option which lists the command arguments",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "listOptions",
        "normalized": "",
        "package": "darcs",
        "partial": "Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:listRegisteredFiles",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003elistRegisteredFiles\u003c/a\u003e\u003c/code\u003e returns the list of all registered files in the repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Arguments.html#listRegisteredFiles",
        "fct-type": "function",
        "title": "listRegisteredFiles"
      },
      "index": {
        "description": "listRegisteredFiles returns the list of all registered files in the repository",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "listRegisteredFiles",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Registered Files",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:listUnregisteredFiles",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003elistUnregisteredFiles\u003c/a\u003e\u003c/code\u003e returns the list of all non-boring unregistered\n files in the repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Arguments.html#listUnregisteredFiles",
        "fct-type": "function",
        "title": "listUnregisteredFiles"
      },
      "index": {
        "description": "listUnregisteredFiles returns the list of all non-boring unregistered files in the repository",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "listUnregisteredFiles",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Unregistered Files",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:logfile",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#logfile",
        "fct-type": "function",
        "title": "logfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "logfile",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:lookforadds",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#lookforadds",
        "fct-type": "function",
        "title": "lookforadds"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "lookforadds",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:machineReadable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#machineReadable",
        "fct-type": "function",
        "title": "machineReadable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "machineReadable",
        "normalized": "",
        "package": "darcs",
        "partial": "Readable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:makeScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Arguments.html#makeScriptsExecutable",
        "fct-type": "function",
        "title": "makeScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "makeScriptsExecutable",
        "normalized": "[DarcsFlag]-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Scripts Executable",
        "signature": "[DarcsFlag]-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchMaxcount",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchMaxcount",
        "fct-type": "function",
        "title": "matchMaxcount"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchMaxcount",
        "normalized": "",
        "package": "darcs",
        "partial": "Maxcount",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchOne",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchOne",
        "fct-type": "function",
        "title": "matchOne"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchOne",
        "normalized": "",
        "package": "darcs",
        "partial": "One",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchOneContext",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchOneContext",
        "fct-type": "function",
        "title": "matchOneContext"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchOneContext",
        "normalized": "",
        "package": "darcs",
        "partial": "One Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchOneNontag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchOneNontag",
        "fct-type": "function",
        "title": "matchOneNontag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchOneNontag",
        "normalized": "",
        "package": "darcs",
        "partial": "One Nontag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchRange",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchRange",
        "fct-type": "function",
        "title": "matchRange"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchRange",
        "normalized": "",
        "package": "darcs",
        "partial": "Range",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchSeveral",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchSeveral",
        "fct-type": "function",
        "title": "matchSeveral"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchSeveral",
        "normalized": "",
        "package": "darcs",
        "partial": "Several",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchSeveralOrLast",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchSeveralOrLast",
        "fct-type": "function",
        "title": "matchSeveralOrLast"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchSeveralOrLast",
        "normalized": "",
        "package": "darcs",
        "partial": "Several Or Last",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:matchSeveralOrRange",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#matchSeveralOrRange",
        "fct-type": "function",
        "title": "matchSeveralOrRange"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "matchSeveralOrRange",
        "normalized": "",
        "package": "darcs",
        "partial": "Several Or Range",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:maxCount",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe Int",
        "fct-source": "src/Darcs-Flags.html#maxCount",
        "fct-type": "function",
        "title": "maxCount"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "maxCount",
        "normalized": "[DarcsFlag]-\u003eMaybe Int",
        "package": "darcs",
        "partial": "Count",
        "signature": "[DarcsFlag]-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:maybeFixSubPaths",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003emaybeFixSubPaths files\u003c/code\u003e tries to turn the file paths in its argument into\n \u003ccode\u003eSubPath\u003c/code\u003es.\n\u003c/p\u003e\u003cp\u003eWhen converting a relative path to an absolute one, this function first tries\n to interpret the relative path with respect to the current working directory.\n If that fails, it tries to interpret it with respect to the repository\n directory. Only when that fails does it put a \u003ccode\u003eNothing\u003c/code\u003e in the result at the\n position of the path that cannot be converted.\n\u003c/p\u003e\u003cp\u003eIt is intended for validating file arguments to darcs commands.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [FilePath] -\u003e IO [Maybe SubPath]",
        "fct-source": "src/Darcs-Arguments.html#maybeFixSubPaths",
        "fct-type": "function",
        "title": "maybeFixSubPaths"
      },
      "index": {
        "description": "maybeFixSubPaths files tries to turn the file paths in its argument into SubPath When converting relative path to an absolute one this function first tries to interpret the relative path with respect to the current working directory If that fails it tries to interpret it with respect to the repository directory Only when that fails does it put Nothing in the result at the position of the path that cannot be converted It is intended for validating file arguments to darcs commands",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "maybeFixSubPaths",
        "normalized": "[DarcsFlag]-\u003e[FilePath]-\u003eIO[Maybe SubPath]",
        "package": "darcs",
        "partial": "Fix Sub Paths",
        "signature": "[DarcsFlag]-\u003e[FilePath]-\u003eIO[Maybe SubPath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:networkOptions",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption]",
        "fct-source": "src/Darcs-Arguments.html#networkOptions",
        "fct-type": "function",
        "title": "networkOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "networkOptions",
        "normalized": "[DarcsOption]",
        "package": "darcs",
        "partial": "Options",
        "signature": "[DarcsOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:noCache",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#noCache",
        "fct-type": "function",
        "title": "noCache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "noCache",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:nocompress",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#nocompress",
        "fct-type": "function",
        "title": "nocompress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "nocompress",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:noskipBoring",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#noskipBoring",
        "fct-type": "function",
        "title": "noskipBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "noskipBoring",
        "normalized": "",
        "package": "darcs",
        "partial": "Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:notest",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#notest",
        "fct-type": "function",
        "title": "notest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "notest",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:nubOptions",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption] -\u003e [DarcsFlag] -\u003e [DarcsFlag]",
        "fct-source": "src/Darcs-Arguments.html#nubOptions",
        "fct-type": "function",
        "title": "nubOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "nubOptions",
        "normalized": "[DarcsOption]-\u003e[DarcsFlag]-\u003e[DarcsFlag]",
        "package": "darcs",
        "partial": "Options",
        "signature": "[DarcsOption]-\u003e[DarcsFlag]-\u003e[DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:nullFlag",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#nullFlag",
        "fct-type": "function",
        "title": "nullFlag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "nullFlag",
        "normalized": "",
        "package": "darcs",
        "partial": "Flag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:onlyToFiles",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#onlyToFiles",
        "fct-type": "function",
        "title": "onlyToFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "onlyToFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "To Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:optimizeHTTP",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#optimizeHTTP",
        "fct-type": "function",
        "title": "optimizeHTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "optimizeHTTP",
        "normalized": "",
        "package": "darcs",
        "partial": "HTTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:optimizePristine",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#optimizePristine",
        "fct-type": "function",
        "title": "optimizePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "optimizePristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:optionFromDarcsOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePath -\u003e DarcsOption -\u003e [OptDescr DarcsFlag]",
        "fct-source": "src/Darcs-Arguments.html#optionFromDarcsOption",
        "fct-type": "function",
        "title": "optionFromDarcsOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "optionFromDarcsOption",
        "normalized": "AbsolutePath-\u003eDarcsOption-\u003e[OptDescr DarcsFlag]",
        "package": "darcs",
        "partial": "From Darcs Option",
        "signature": "AbsolutePath-\u003eDarcsOption-\u003e[OptDescr DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:optionsLatex",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption] -\u003e String",
        "fct-source": "src/Darcs-Arguments.html#optionsLatex",
        "fct-type": "function",
        "title": "optionsLatex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "optionsLatex",
        "normalized": "[DarcsOption]-\u003eString",
        "package": "darcs",
        "partial": "Latex",
        "signature": "[DarcsOption]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:output",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#output",
        "fct-type": "function",
        "title": "output"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "output",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:outputAutoName",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#outputAutoName",
        "fct-type": "function",
        "title": "outputAutoName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "outputAutoName",
        "normalized": "",
        "package": "darcs",
        "partial": "Auto Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:partial",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#partial",
        "fct-type": "function",
        "title": "partial"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "partial",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:patchFormatChoices",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#patchFormatChoices",
        "fct-type": "function",
        "title": "patchFormatChoices"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "patchFormatChoices",
        "normalized": "",
        "package": "darcs",
        "partial": "Format Choices",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:patchSelectFlag",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003epatchSelectFlag\u003c/a\u003e\u003c/code\u003e f\u003c/code\u003e holds whenever \u003ccode\u003ef\u003c/code\u003e is a way of selecting\n patches such as \u003ccode\u003ePatchName n\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsFlag -\u003e Bool",
        "fct-source": "src/Darcs-Arguments.html#patchSelectFlag",
        "fct-type": "function",
        "title": "patchSelectFlag"
      },
      "index": {
        "description": "patchSelectFlag holds whenever is way of selecting patches such as PatchName",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "patchSelectFlag",
        "normalized": "DarcsFlag-\u003eBool",
        "package": "darcs",
        "partial": "Select Flag",
        "signature": "DarcsFlag-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:patchnameOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#patchnameOption",
        "fct-type": "function",
        "title": "patchnameOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "patchnameOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:pauseForGui",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#pauseForGui",
        "fct-type": "function",
        "title": "pauseForGui"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "pauseForGui",
        "normalized": "",
        "package": "darcs",
        "partial": "For Gui",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:pending",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#pending",
        "fct-type": "function",
        "title": "pending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "pending",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:pipeInteractive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#pipeInteractive",
        "fct-type": "function",
        "title": "pipeInteractive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "pipeInteractive",
        "normalized": "",
        "package": "darcs",
        "partial": "Interactive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:possiblyRemoteRepoDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#possiblyRemoteRepoDir",
        "fct-type": "function",
        "title": "possiblyRemoteRepoDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "possiblyRemoteRepoDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Repo Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:posthookCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#posthookCmd",
        "fct-type": "function",
        "title": "posthookCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "posthookCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:posthookPrompt",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#posthookPrompt",
        "fct-type": "function",
        "title": "posthookPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "posthookPrompt",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:prehookCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#prehookCmd",
        "fct-type": "function",
        "title": "prehookCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "prehookCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:prehookPrompt",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#prehookPrompt",
        "fct-type": "function",
        "title": "prehookPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "prehookPrompt",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:printDryRunMessageAndExit",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003eprintDryRunMessageAndExit\u003c/a\u003e\u003c/code\u003e action opts patches\u003c/code\u003e prints a string\n representing the action that would be taken if the \u003ccode\u003e--dry-run\u003c/code\u003e option\n had not been passed to darcs. Then darcs exits successfully.\n \u003ccode\u003eaction\u003c/code\u003e is the name of the action being taken, like \u003ccode\u003e\"push\"\u003c/code\u003e\n \u003ccode\u003eopts\u003c/code\u003e is the list of flags which were sent to darcs\n \u003ccode\u003epatches\u003c/code\u003e is the sequence of patches which would be touched by \u003ccode\u003eaction\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [DarcsFlag] -\u003e FL (PatchInfoAnd p) x y -\u003e IO ()",
        "fct-source": "src/Darcs-Arguments.html#printDryRunMessageAndExit",
        "fct-type": "function",
        "title": "printDryRunMessageAndExit"
      },
      "index": {
        "description": "printDryRunMessageAndExit action opts patches prints string representing the action that would be taken if the dry-run option had not been passed to darcs Then darcs exits successfully action is the name of the action being taken like push opts is the list of flags which were sent to darcs patches is the sequence of patches which would be touched by action",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "printDryRunMessageAndExit",
        "normalized": "String-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd a)b c-\u003eIO()",
        "package": "darcs",
        "partial": "Dry Run Message And Exit",
        "signature": "String-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd p)x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:pullConflictOptions",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#pullConflictOptions",
        "fct-type": "function",
        "title": "pullConflictOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "pullConflictOptions",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflict Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:recordRollback",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#recordRollback",
        "fct-type": "function",
        "title": "recordRollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "recordRollback",
        "normalized": "",
        "package": "darcs",
        "partial": "Rollback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:recursive",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#recursive",
        "fct-type": "function",
        "title": "recursive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "recursive",
        "normalized": "String-\u003eDarcsOption",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eDarcsOption"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:relink",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#relink",
        "fct-type": "function",
        "title": "relink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "relink",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:remoteRepo",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eremoteRepo\u003c/a\u003e\u003c/code\u003e is the option used to specify the URL of the remote\n repository to work with\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#remoteRepo",
        "fct-type": "function",
        "title": "remoteRepo"
      },
      "index": {
        "description": "remoteRepo is the option used to specify the URL of the remote repository to work with",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "remoteRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:reorderPatches",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#reorderPatches",
        "fct-type": "function",
        "title": "reorderPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "reorderPatches",
        "normalized": "",
        "package": "darcs",
        "partial": "Patches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:reply",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#reply",
        "fct-type": "function",
        "title": "reply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "reply",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:repoCombinator",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#repoCombinator",
        "fct-type": "function",
        "title": "repoCombinator"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "repoCombinator",
        "normalized": "",
        "package": "darcs",
        "partial": "Combinator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:reponame",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#reponame",
        "fct-type": "function",
        "title": "reponame"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "reponame",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:restrictPaths",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#restrictPaths",
        "fct-type": "function",
        "title": "restrictPaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "restrictPaths",
        "normalized": "",
        "package": "darcs",
        "partial": "Paths",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:rmlogfile",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#rmlogfile",
        "fct-type": "function",
        "title": "rmlogfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "rmlogfile",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:sendToContext",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#sendToContext",
        "fct-type": "function",
        "title": "sendToContext"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "sendToContext",
        "normalized": "",
        "package": "darcs",
        "partial": "To Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:sendmailCmd",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#sendmailCmd",
        "fct-type": "function",
        "title": "sendmailCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "sendmailCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:setDefault",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "Bool -\u003e DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#setDefault",
        "fct-type": "function",
        "title": "setDefault"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "setDefault",
        "normalized": "Bool-\u003eDarcsOption",
        "package": "darcs",
        "partial": "Default",
        "signature": "Bool-\u003eDarcsOption"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:setEnvDarcsFiles",
      "description": {
        "fct-descr": "\u003cp\u003eSet the DARCS_FILES environment variable to the files touched by the\n given patch, one per line, for use in post-hooks.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Arguments.html#setEnvDarcsFiles",
        "fct-type": "function",
        "title": "setEnvDarcsFiles"
      },
      "index": {
        "description": "Set the DARCS FILES environment variable to the files touched by the given patch one per line for use in post-hooks",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "setEnvDarcsFiles",
        "normalized": "a b c-\u003eIO()",
        "package": "darcs",
        "partial": "Env Darcs Files",
        "signature": "p x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:setEnvDarcsPatches",
      "description": {
        "fct-descr": "\u003cp\u003eSet the DARCS_PATCHES and DARCS_PATCHES_XML environment variables\n with info about the given patches, for use in post-hooks.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "FL (PatchInfoAnd p) x y -\u003e IO ()",
        "fct-source": "src/Darcs-Arguments.html#setEnvDarcsPatches",
        "fct-type": "function",
        "title": "setEnvDarcsPatches"
      },
      "index": {
        "description": "Set the DARCS PATCHES and DARCS PATCHES XML environment variables with info about the given patches for use in post-hooks",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "setEnvDarcsPatches",
        "normalized": "FL(PatchInfoAnd a)b c-\u003eIO()",
        "package": "darcs",
        "partial": "Env Darcs Patches",
        "signature": "FL(PatchInfoAnd p)x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:setScriptsExecutableOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#setScriptsExecutableOption",
        "fct-type": "function",
        "title": "setScriptsExecutableOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "setScriptsExecutableOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Scripts Executable Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:showFriendly",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003eshowFriendly\u003c/a\u003e\u003c/code\u003e flags patch\u003c/code\u003e returns a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e representing the right\n way to show \u003ccode\u003epatch\u003c/code\u003e given the list \u003ccode\u003eflags\u003c/code\u003e of flags darcs was invoked with.\n\u003c/p\u003e",
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e p x y -\u003e Doc",
        "fct-source": "src/Darcs-Arguments.html#showFriendly",
        "fct-type": "function",
        "title": "showFriendly"
      },
      "index": {
        "description": "showFriendly flags patch returns Doc representing the right way to show patch given the list flags of flags darcs was invoked with",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "showFriendly",
        "normalized": "[DarcsFlag]-\u003ea b c-\u003eDoc",
        "package": "darcs",
        "partial": "Friendly",
        "signature": "[DarcsFlag]-\u003ep x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:sibling",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#sibling",
        "fct-type": "function",
        "title": "sibling"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "sibling",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:sign",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#sign",
        "fct-type": "function",
        "title": "sign"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "sign",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:storeInMemory",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#storeInMemory",
        "fct-type": "function",
        "title": "storeInMemory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "storeInMemory",
        "normalized": "",
        "package": "darcs",
        "partial": "In Memory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:subject",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#subject",
        "fct-type": "function",
        "title": "subject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "subject",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:summary",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#summary",
        "fct-type": "function",
        "title": "summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "summary",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:target",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#target",
        "fct-type": "function",
        "title": "target"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "target",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:test",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#test",
        "fct-type": "function",
        "title": "test"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "test",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:tokens",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#tokens",
        "fct-type": "function",
        "title": "tokens"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "tokens",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:umaskOption",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#umaskOption",
        "fct-type": "function",
        "title": "umaskOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "umaskOption",
        "normalized": "",
        "package": "darcs",
        "partial": "Option",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:uncompressNocompress",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#uncompressNocompress",
        "fct-type": "function",
        "title": "uncompressNocompress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "uncompressNocompress",
        "normalized": "",
        "package": "darcs",
        "partial": "Nocompress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:unidiff",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#unidiff",
        "fct-type": "function",
        "title": "unidiff"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "unidiff",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:unified",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#unified",
        "fct-type": "function",
        "title": "unified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "unified",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:upgradeFormat",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#upgradeFormat",
        "fct-type": "function",
        "title": "upgradeFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "upgradeFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:useExternalMerge",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#useExternalMerge",
        "fct-type": "function",
        "title": "useExternalMerge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "useExternalMerge",
        "normalized": "",
        "package": "darcs",
        "partial": "External Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:usePacks",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#usePacks",
        "fct-type": "function",
        "title": "usePacks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "usePacks",
        "normalized": "",
        "package": "darcs",
        "partial": "Packs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:useWorkingDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#useWorkingDir",
        "fct-type": "function",
        "title": "useWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "useWorkingDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Working Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:verify",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#verify",
        "fct-type": "function",
        "title": "verify"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "verify",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:workingRepoDir",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#workingRepoDir",
        "fct-type": "function",
        "title": "workingRepoDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "workingRepoDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Arguments.html#v:xmloutput",
      "description": {
        "fct-module": "Darcs.Arguments",
        "fct-package": "darcs",
        "fct-signature": "DarcsOption",
        "fct-source": "src/Darcs-Arguments.html#xmloutput",
        "fct-type": "function",
        "title": "xmloutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Arguments",
        "module": "Darcs.Arguments",
        "name": "xmloutput",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Bug.html#",
      "description": {
        "fct-module": "Darcs.Bug",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Bug.html",
        "fct-type": "module",
        "title": "Bug"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Bug",
        "module": "Darcs.Bug",
        "name": "Bug",
        "normalized": "",
        "package": "darcs",
        "partial": "Bug",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Bug.html#v:_bug",
      "description": {
        "fct-module": "Darcs.Bug",
        "fct-package": "darcs",
        "fct-signature": "BugStuff -\u003e String -\u003e a",
        "fct-source": "src/Darcs-Bug.html#_bug",
        "fct-type": "function",
        "title": "_bug"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Bug",
        "module": "Darcs.Bug",
        "name": "_bug",
        "normalized": "BugStuff-\u003eString-\u003ea",
        "package": "darcs",
        "partial": "",
        "signature": "BugStuff-\u003eString-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Bug.html#v:_bugDoc",
      "description": {
        "fct-module": "Darcs.Bug",
        "fct-package": "darcs",
        "fct-signature": "BugStuff -\u003e Doc -\u003e a",
        "fct-source": "src/Darcs-Bug.html#_bugDoc",
        "fct-type": "function",
        "title": "_bugDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Bug",
        "module": "Darcs.Bug",
        "name": "_bugDoc",
        "normalized": "BugStuff-\u003eDoc-\u003ea",
        "package": "darcs",
        "partial": "Doc",
        "signature": "BugStuff-\u003eDoc-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Bug.html#v:_fromJust",
      "description": {
        "fct-module": "Darcs.Bug",
        "fct-package": "darcs",
        "fct-signature": "BugStuff -\u003e Maybe a -\u003e a",
        "fct-source": "src/Darcs-Bug.html#_fromJust",
        "fct-type": "function",
        "title": "_fromJust"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Bug",
        "module": "Darcs.Bug",
        "name": "_fromJust",
        "normalized": "BugStuff-\u003eMaybe a-\u003ea",
        "package": "darcs",
        "partial": "Just",
        "signature": "BugStuff-\u003eMaybe a-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Bug.html#v:_impossible",
      "description": {
        "fct-module": "Darcs.Bug",
        "fct-package": "darcs",
        "fct-signature": "BugStuff -\u003e a",
        "fct-source": "src/Darcs-Bug.html#_impossible",
        "fct-type": "function",
        "title": "_impossible"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Bug",
        "module": "Darcs.Bug",
        "name": "_impossible",
        "normalized": "BugStuff-\u003ea",
        "package": "darcs",
        "partial": "",
        "signature": "BugStuff-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ColorPrinter.html#",
      "description": {
        "fct-module": "Darcs.ColorPrinter",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-ColorPrinter.html",
        "fct-type": "module",
        "title": "ColorPrinter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ColorPrinter",
        "module": "Darcs.ColorPrinter",
        "name": "ColorPrinter",
        "normalized": "",
        "package": "darcs",
        "partial": "Color Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ColorPrinter.html#v:assertDoc",
      "description": {
        "fct-module": "Darcs.ColorPrinter",
        "fct-package": "darcs",
        "fct-signature": "Maybe Doc -\u003e a -\u003e a",
        "fct-source": "src/Darcs-ColorPrinter.html#assertDoc",
        "fct-type": "function",
        "title": "assertDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ColorPrinter",
        "module": "Darcs.ColorPrinter",
        "name": "assertDoc",
        "normalized": "Maybe Doc-\u003ea-\u003ea",
        "package": "darcs",
        "partial": "Doc",
        "signature": "Maybe Doc-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ColorPrinter.html#v:errorDoc",
      "description": {
        "fct-module": "Darcs.ColorPrinter",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e a",
        "fct-source": "src/Darcs-ColorPrinter.html#errorDoc",
        "fct-type": "function",
        "title": "errorDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ColorPrinter",
        "module": "Darcs.ColorPrinter",
        "name": "errorDoc",
        "normalized": "Doc-\u003ea",
        "package": "darcs",
        "partial": "Doc",
        "signature": "Doc-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ColorPrinter.html#v:fancyPrinters",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003efancyPrinters\u003c/a\u003e\u003c/code\u003e h\u003c/code\u003e returns a set of printers suitable for outputting\n to \u003ccode\u003eh\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.ColorPrinter",
        "fct-package": "darcs",
        "fct-signature": "Printers",
        "fct-source": "src/Darcs-ColorPrinter.html#fancyPrinters",
        "fct-type": "function",
        "title": "fancyPrinters"
      },
      "index": {
        "description": "fancyPrinters returns set of printers suitable for outputting to",
        "hierarchy": "Darcs ColorPrinter",
        "module": "Darcs.ColorPrinter",
        "name": "fancyPrinters",
        "normalized": "",
        "package": "darcs",
        "partial": "Printers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ColorPrinter.html#v:traceDoc",
      "description": {
        "fct-module": "Darcs.ColorPrinter",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e a -\u003e a",
        "fct-source": "src/Darcs-ColorPrinter.html#traceDoc",
        "fct-type": "function",
        "title": "traceDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ColorPrinter",
        "module": "Darcs.ColorPrinter",
        "name": "traceDoc",
        "normalized": "Doc-\u003ea-\u003ea",
        "package": "darcs",
        "partial": "Doc",
        "signature": "Doc-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Add.html#",
      "description": {
        "fct-module": "Darcs.Commands.Add",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Add.html",
        "fct-type": "module",
        "title": "Add"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Add",
        "module": "Darcs.Commands.Add",
        "name": "Add",
        "normalized": "",
        "package": "darcs",
        "partial": "Add",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Add.html#v:add",
      "description": {
        "fct-module": "Darcs.Commands.Add",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Add.html#add",
        "fct-type": "function",
        "title": "add"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Add",
        "module": "Darcs.Commands.Add",
        "name": "add",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Add.html#v:expandDirs",
      "description": {
        "fct-module": "Darcs.Commands.Add",
        "fct-package": "darcs",
        "fct-signature": "[SubPath] -\u003e IO [SubPath]",
        "fct-source": "src/Darcs-Commands-Add.html#expandDirs",
        "fct-type": "function",
        "title": "expandDirs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Add",
        "module": "Darcs.Commands.Add",
        "name": "expandDirs",
        "normalized": "[SubPath]-\u003eIO[SubPath]",
        "package": "darcs",
        "partial": "Dirs",
        "signature": "[SubPath]-\u003eIO[SubPath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-AmendRecord.html#",
      "description": {
        "fct-module": "Darcs.Commands.AmendRecord",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-AmendRecord.html",
        "fct-type": "module",
        "title": "AmendRecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands AmendRecord",
        "module": "Darcs.Commands.AmendRecord",
        "name": "AmendRecord",
        "normalized": "",
        "package": "darcs",
        "partial": "Amend Record",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-AmendRecord.html#v:amendrecord",
      "description": {
        "fct-module": "Darcs.Commands.AmendRecord",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-AmendRecord.html#amendrecord",
        "fct-type": "function",
        "title": "amendrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands AmendRecord",
        "module": "Darcs.Commands.AmendRecord",
        "name": "amendrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-AmendRecord.html#v:amendunrecord",
      "description": {
        "fct-module": "Darcs.Commands.AmendRecord",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-AmendRecord.html#amendunrecord",
        "fct-type": "function",
        "title": "amendunrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands AmendRecord",
        "module": "Darcs.Commands.AmendRecord",
        "name": "amendunrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Annotate.html#",
      "description": {
        "fct-module": "Darcs.Commands.Annotate",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Annotate.html",
        "fct-type": "module",
        "title": "Annotate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Annotate",
        "module": "Darcs.Commands.Annotate",
        "name": "Annotate",
        "normalized": "",
        "package": "darcs",
        "partial": "Annotate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Annotate.html#v:annotate",
      "description": {
        "fct-module": "Darcs.Commands.Annotate",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Annotate.html#annotate",
        "fct-type": "function",
        "title": "annotate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Annotate",
        "module": "Darcs.Commands.Annotate",
        "name": "annotate",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Apply.html#",
      "description": {
        "fct-module": "Darcs.Commands.Apply",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Apply.html",
        "fct-type": "module",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Apply",
        "module": "Darcs.Commands.Apply",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Apply.html#v:apply",
      "description": {
        "fct-module": "Darcs.Commands.Apply",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Apply.html#apply",
        "fct-type": "function",
        "title": "apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Apply",
        "module": "Darcs.Commands.Apply",
        "name": "apply",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Apply.html#v:getPatchBundle",
      "description": {
        "fct-module": "Darcs.Commands.Apply",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e ByteString -\u003e IO (Either String (SealedPatchSet p Origin))",
        "fct-source": "src/Darcs-Commands-Apply.html#getPatchBundle",
        "fct-type": "function",
        "title": "getPatchBundle"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Apply",
        "module": "Darcs.Commands.Apply",
        "name": "getPatchBundle",
        "normalized": "[DarcsFlag]-\u003eByteString-\u003eIO(Either String(SealedPatchSet a Origin))",
        "package": "darcs",
        "partial": "Patch Bundle",
        "signature": "[DarcsFlag]-\u003eByteString-\u003eIO(Either String(SealedPatchSet p Origin))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Changes.html#",
      "description": {
        "fct-module": "Darcs.Commands.Changes",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Changes.html",
        "fct-type": "module",
        "title": "Changes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Changes",
        "module": "Darcs.Commands.Changes",
        "name": "Changes",
        "normalized": "",
        "package": "darcs",
        "partial": "Changes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Changes.html#v:changes",
      "description": {
        "fct-module": "Darcs.Commands.Changes",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Changes.html#changes",
        "fct-type": "function",
        "title": "changes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Changes",
        "module": "Darcs.Commands.Changes",
        "name": "changes",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Changes.html#v:log",
      "description": {
        "fct-module": "Darcs.Commands.Changes",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Changes.html#log",
        "fct-type": "function",
        "title": "log"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Changes",
        "module": "Darcs.Commands.Changes",
        "name": "log",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Check.html#",
      "description": {
        "fct-module": "Darcs.Commands.Check",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Check.html",
        "fct-type": "module",
        "title": "Check"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Check",
        "module": "Darcs.Commands.Check",
        "name": "Check",
        "normalized": "",
        "package": "darcs",
        "partial": "Check",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Check.html#v:check",
      "description": {
        "fct-module": "Darcs.Commands.Check",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Check.html#check",
        "fct-type": "function",
        "title": "check"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Check",
        "module": "Darcs.Commands.Check",
        "name": "check",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Check.html#v:repair",
      "description": {
        "fct-module": "Darcs.Commands.Check",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Check.html#repair",
        "fct-type": "function",
        "title": "repair"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Check",
        "module": "Darcs.Commands.Check",
        "name": "repair",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Convert.html#",
      "description": {
        "fct-module": "Darcs.Commands.Convert",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Convert.html",
        "fct-type": "module",
        "title": "Convert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Convert",
        "module": "Darcs.Commands.Convert",
        "name": "Convert",
        "normalized": "",
        "package": "darcs",
        "partial": "Convert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Convert.html#v:convert",
      "description": {
        "fct-module": "Darcs.Commands.Convert",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Convert.html#convert",
        "fct-type": "function",
        "title": "convert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Convert",
        "module": "Darcs.Commands.Convert",
        "name": "convert",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Diff.html#",
      "description": {
        "fct-module": "Darcs.Commands.Diff",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Diff.html",
        "fct-type": "module",
        "title": "Diff"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Diff",
        "module": "Darcs.Commands.Diff",
        "name": "Diff",
        "normalized": "",
        "package": "darcs",
        "partial": "Diff",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Diff.html#v:diffCommand",
      "description": {
        "fct-module": "Darcs.Commands.Diff",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Diff.html#diffCommand",
        "fct-type": "function",
        "title": "diffCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Diff",
        "module": "Darcs.Commands.Diff",
        "name": "diffCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Dist.html#",
      "description": {
        "fct-module": "Darcs.Commands.Dist",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Dist.html",
        "fct-type": "module",
        "title": "Dist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Dist",
        "module": "Darcs.Commands.Dist",
        "name": "Dist",
        "normalized": "",
        "package": "darcs",
        "partial": "Dist",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Dist.html#v:dist",
      "description": {
        "fct-module": "Darcs.Commands.Dist",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Dist.html#dist",
        "fct-type": "function",
        "title": "dist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Dist",
        "module": "Darcs.Commands.Dist",
        "name": "dist",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-GZCRCs.html#",
      "description": {
        "fct-module": "Darcs.Commands.GZCRCs",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-GZCRCs.html",
        "fct-type": "module",
        "title": "GZCRCs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands GZCRCs",
        "module": "Darcs.Commands.GZCRCs",
        "name": "GZCRCs",
        "normalized": "",
        "package": "darcs",
        "partial": "GZCRCs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-GZCRCs.html#v:doCRCWarnings",
      "description": {
        "fct-descr": "\u003cp\u003eThis is designed for use in an atexit handler, e.g. in Darcs.RunCommand\n\u003c/p\u003e",
        "fct-module": "Darcs.Commands.GZCRCs",
        "fct-package": "darcs",
        "fct-signature": "Bool -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-GZCRCs.html#doCRCWarnings",
        "fct-type": "function",
        "title": "doCRCWarnings"
      },
      "index": {
        "description": "This is designed for use in an atexit handler e.g in Darcs.RunCommand",
        "hierarchy": "Darcs Commands GZCRCs",
        "module": "Darcs.Commands.GZCRCs",
        "name": "doCRCWarnings",
        "normalized": "Bool-\u003eIO()",
        "package": "darcs",
        "partial": "CRCWarnings",
        "signature": "Bool-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-GZCRCs.html#v:gzcrcs",
      "description": {
        "fct-module": "Darcs.Commands.GZCRCs",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-GZCRCs.html#gzcrcs",
        "fct-type": "function",
        "title": "gzcrcs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands GZCRCs",
        "module": "Darcs.Commands.GZCRCs",
        "name": "gzcrcs",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Get.html#",
      "description": {
        "fct-module": "Darcs.Commands.Get",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Get.html",
        "fct-type": "module",
        "title": "Get"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Get",
        "module": "Darcs.Commands.Get",
        "name": "Get",
        "normalized": "",
        "package": "darcs",
        "partial": "Get",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Get.html#v:clone",
      "description": {
        "fct-module": "Darcs.Commands.Get",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Get.html#clone",
        "fct-type": "function",
        "title": "clone"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Get",
        "module": "Darcs.Commands.Get",
        "name": "clone",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Get.html#v:get",
      "description": {
        "fct-module": "Darcs.Commands.Get",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Get.html#get",
        "fct-type": "function",
        "title": "get"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Get",
        "module": "Darcs.Commands.Get",
        "name": "get",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Help.html#",
      "description": {
        "fct-module": "Darcs.Commands.Help",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Help.html",
        "fct-type": "module",
        "title": "Help"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Help",
        "module": "Darcs.Commands.Help",
        "name": "Help",
        "normalized": "",
        "package": "darcs",
        "partial": "Help",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Help.html#v:commandControlList",
      "description": {
        "fct-module": "Darcs.Commands.Help",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl]",
        "fct-source": "src/Darcs-Commands-Help.html#commandControlList",
        "fct-type": "function",
        "title": "commandControlList"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Help",
        "module": "Darcs.Commands.Help",
        "name": "commandControlList",
        "normalized": "[CommandControl]",
        "package": "darcs",
        "partial": "Control List",
        "signature": "[CommandControl]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Help.html#v:environmentHelp",
      "description": {
        "fct-descr": "\u003cp\u003eHelp on each environment variable in which Darcs is interested.\n\u003c/p\u003e",
        "fct-module": "Darcs.Commands.Help",
        "fct-package": "darcs",
        "fct-signature": "[([String], [String])]",
        "fct-source": "src/Darcs-Commands-Help.html#environmentHelp",
        "fct-type": "function",
        "title": "environmentHelp"
      },
      "index": {
        "description": "Help on each environment variable in which Darcs is interested",
        "hierarchy": "Darcs Commands Help",
        "module": "Darcs.Commands.Help",
        "name": "environmentHelp",
        "normalized": "[([String],[String])]",
        "package": "darcs",
        "partial": "Help",
        "signature": "[([String],[String])]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Help.html#v:helpCmd",
      "description": {
        "fct-module": "Darcs.Commands.Help",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-Help.html#helpCmd",
        "fct-type": "function",
        "title": "helpCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Help",
        "module": "Darcs.Commands.Help",
        "name": "helpCmd",
        "normalized": "[DarcsFlag]-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Cmd",
        "signature": "[DarcsFlag]-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Help.html#v:listAvailableCommands",
      "description": {
        "fct-module": "Darcs.Commands.Help",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Commands-Help.html#listAvailableCommands",
        "fct-type": "function",
        "title": "listAvailableCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Help",
        "module": "Darcs.Commands.Help",
        "name": "listAvailableCommands",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Available Commands",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Help.html#v:printVersion",
      "description": {
        "fct-module": "Darcs.Commands.Help",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Commands-Help.html#printVersion",
        "fct-type": "function",
        "title": "printVersion"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Help",
        "module": "Darcs.Commands.Help",
        "name": "printVersion",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Version",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Init.html#",
      "description": {
        "fct-module": "Darcs.Commands.Init",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Init.html",
        "fct-type": "module",
        "title": "Init"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Init",
        "module": "Darcs.Commands.Init",
        "name": "Init",
        "normalized": "",
        "package": "darcs",
        "partial": "Init",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Init.html#v:initialize",
      "description": {
        "fct-module": "Darcs.Commands.Init",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Init.html#initialize",
        "fct-type": "function",
        "title": "initialize"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Init",
        "module": "Darcs.Commands.Init",
        "name": "initialize",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Init.html#v:initializeCmd",
      "description": {
        "fct-module": "Darcs.Commands.Init",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-Init.html#initializeCmd",
        "fct-type": "function",
        "title": "initializeCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Init",
        "module": "Darcs.Commands.Init",
        "name": "initializeCmd",
        "normalized": "[DarcsFlag]-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Cmd",
        "signature": "[DarcsFlag]-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-MarkConflicts.html#",
      "description": {
        "fct-module": "Darcs.Commands.MarkConflicts",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-MarkConflicts.html",
        "fct-type": "module",
        "title": "MarkConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands MarkConflicts",
        "module": "Darcs.Commands.MarkConflicts",
        "name": "MarkConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Mark Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-MarkConflicts.html#v:markconflicts",
      "description": {
        "fct-module": "Darcs.Commands.MarkConflicts",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-MarkConflicts.html#markconflicts",
        "fct-type": "function",
        "title": "markconflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands MarkConflicts",
        "module": "Darcs.Commands.MarkConflicts",
        "name": "markconflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Move.html#",
      "description": {
        "fct-module": "Darcs.Commands.Move",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Move.html",
        "fct-type": "module",
        "title": "Move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Move",
        "module": "Darcs.Commands.Move",
        "name": "Move",
        "normalized": "",
        "package": "darcs",
        "partial": "Move",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Move.html#v:move",
      "description": {
        "fct-module": "Darcs.Commands.Move",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Move.html#move",
        "fct-type": "function",
        "title": "move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Move",
        "module": "Darcs.Commands.Move",
        "name": "move",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Move.html#v:mv",
      "description": {
        "fct-module": "Darcs.Commands.Move",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Move.html#mv",
        "fct-type": "function",
        "title": "mv"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Move",
        "module": "Darcs.Commands.Move",
        "name": "mv",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Optimize.html#",
      "description": {
        "fct-module": "Darcs.Commands.Optimize",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Optimize.html",
        "fct-type": "module",
        "title": "Optimize"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Optimize",
        "module": "Darcs.Commands.Optimize",
        "name": "Optimize",
        "normalized": "",
        "package": "darcs",
        "partial": "Optimize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Optimize.html#v:optimize",
      "description": {
        "fct-module": "Darcs.Commands.Optimize",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Optimize.html#optimize",
        "fct-type": "function",
        "title": "optimize"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Optimize",
        "module": "Darcs.Commands.Optimize",
        "name": "optimize",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Pull.html#",
      "description": {
        "fct-module": "Darcs.Commands.Pull",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Pull.html",
        "fct-type": "module",
        "title": "Pull"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Pull",
        "module": "Darcs.Commands.Pull",
        "name": "Pull",
        "normalized": "",
        "package": "darcs",
        "partial": "Pull",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Pull.html#v:fetch",
      "description": {
        "fct-module": "Darcs.Commands.Pull",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Pull.html#fetch",
        "fct-type": "function",
        "title": "fetch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Pull",
        "module": "Darcs.Commands.Pull",
        "name": "fetch",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Pull.html#v:pull",
      "description": {
        "fct-module": "Darcs.Commands.Pull",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Pull.html#pull",
        "fct-type": "function",
        "title": "pull"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Pull",
        "module": "Darcs.Commands.Pull",
        "name": "pull",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Push.html#",
      "description": {
        "fct-module": "Darcs.Commands.Push",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Push.html",
        "fct-type": "module",
        "title": "Push"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Push",
        "module": "Darcs.Commands.Push",
        "name": "Push",
        "normalized": "",
        "package": "darcs",
        "partial": "Push",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Push.html#v:push",
      "description": {
        "fct-module": "Darcs.Commands.Push",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Push.html#push",
        "fct-type": "function",
        "title": "push"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Push",
        "module": "Darcs.Commands.Push",
        "name": "push",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Put.html#",
      "description": {
        "fct-module": "Darcs.Commands.Put",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Put.html",
        "fct-type": "module",
        "title": "Put"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Put",
        "module": "Darcs.Commands.Put",
        "name": "Put",
        "normalized": "",
        "package": "darcs",
        "partial": "Put",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Put.html#v:put",
      "description": {
        "fct-module": "Darcs.Commands.Put",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Put.html#put",
        "fct-type": "function",
        "title": "put"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Put",
        "module": "Darcs.Commands.Put",
        "name": "put",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Record.html#",
      "description": {
        "fct-module": "Darcs.Commands.Record",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Record.html",
        "fct-type": "module",
        "title": "Record"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Record",
        "module": "Darcs.Commands.Record",
        "name": "Record",
        "normalized": "",
        "package": "darcs",
        "partial": "Record",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Record.html#v:askAboutDepends",
      "description": {
        "fct-module": "Darcs.Commands.Record",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) t y -\u003e [DarcsFlag] -\u003e [PatchInfo] -\u003e IO [PatchInfo]",
        "fct-source": "src/Darcs-Commands-Record.html#askAboutDepends",
        "fct-type": "function",
        "title": "askAboutDepends"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Record",
        "module": "Darcs.Commands.Record",
        "name": "askAboutDepends",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)d e-\u003e[DarcsFlag]-\u003e[PatchInfo]-\u003eIO[PatchInfo]",
        "package": "darcs",
        "partial": "About Depends",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)t y-\u003e[DarcsFlag]-\u003e[PatchInfo]-\u003eIO[PatchInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Record.html#v:commit",
      "description": {
        "fct-module": "Darcs.Commands.Record",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Record.html#commit",
        "fct-type": "function",
        "title": "commit"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Record",
        "module": "Darcs.Commands.Record",
        "name": "commit",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Record.html#v:getDate",
      "description": {
        "fct-module": "Darcs.Commands.Record",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO String",
        "fct-source": "src/Darcs-Commands-Record.html#getDate",
        "fct-type": "function",
        "title": "getDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Record",
        "module": "Darcs.Commands.Record",
        "name": "getDate",
        "normalized": "[DarcsFlag]-\u003eIO String",
        "package": "darcs",
        "partial": "Date",
        "signature": "[DarcsFlag]-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Record.html#v:getLog",
      "description": {
        "fct-module": "Darcs.Commands.Record",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe (String, [String]) -\u003e IO String -\u003e FL prim x y -\u003e IO (String, [String], Maybe String)",
        "fct-source": "src/Darcs-Commands-Record.html#getLog",
        "fct-type": "function",
        "title": "getLog"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Record",
        "module": "Darcs.Commands.Record",
        "name": "getLog",
        "normalized": "[DarcsFlag]-\u003eMaybe(String,[String])-\u003eIO String-\u003eFL a b c-\u003eIO(String,[String],Maybe String)",
        "package": "darcs",
        "partial": "Log",
        "signature": "[DarcsFlag]-\u003eMaybe(String,[String])-\u003eIO String-\u003eFL prim x y-\u003eIO(String,[String],Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Record.html#v:record",
      "description": {
        "fct-module": "Darcs.Commands.Record",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Record.html#record",
        "fct-type": "function",
        "title": "record"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Record",
        "module": "Darcs.Commands.Record",
        "name": "record",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Remove.html#",
      "description": {
        "fct-module": "Darcs.Commands.Remove",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Remove.html",
        "fct-type": "module",
        "title": "Remove"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Remove",
        "module": "Darcs.Commands.Remove",
        "name": "Remove",
        "normalized": "",
        "package": "darcs",
        "partial": "Remove",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Remove.html#v:remove",
      "description": {
        "fct-module": "Darcs.Commands.Remove",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Remove.html#remove",
        "fct-type": "function",
        "title": "remove"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Remove",
        "module": "Darcs.Commands.Remove",
        "name": "remove",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Remove.html#v:rm",
      "description": {
        "fct-module": "Darcs.Commands.Remove",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Remove.html#rm",
        "fct-type": "function",
        "title": "rm"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Remove",
        "module": "Darcs.Commands.Remove",
        "name": "rm",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Remove.html#v:unadd",
      "description": {
        "fct-module": "Darcs.Commands.Remove",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Remove.html#unadd",
        "fct-type": "function",
        "title": "unadd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Remove",
        "module": "Darcs.Commands.Remove",
        "name": "unadd",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Replace.html#",
      "description": {
        "fct-module": "Darcs.Commands.Replace",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Replace.html",
        "fct-type": "module",
        "title": "Replace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Replace",
        "module": "Darcs.Commands.Replace",
        "name": "Replace",
        "normalized": "",
        "package": "darcs",
        "partial": "Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Replace.html#v:defaultToks",
      "description": {
        "fct-module": "Darcs.Commands.Replace",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Commands-Replace.html#defaultToks",
        "fct-type": "function",
        "title": "defaultToks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Replace",
        "module": "Darcs.Commands.Replace",
        "name": "defaultToks",
        "normalized": "",
        "package": "darcs",
        "partial": "Toks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Replace.html#v:replace",
      "description": {
        "fct-module": "Darcs.Commands.Replace",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Replace.html#replace",
        "fct-type": "function",
        "title": "replace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Replace",
        "module": "Darcs.Commands.Replace",
        "name": "replace",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Revert.html#",
      "description": {
        "fct-module": "Darcs.Commands.Revert",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Revert.html",
        "fct-type": "module",
        "title": "Revert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Revert",
        "module": "Darcs.Commands.Revert",
        "name": "Revert",
        "normalized": "",
        "package": "darcs",
        "partial": "Revert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Revert.html#v:revert",
      "description": {
        "fct-module": "Darcs.Commands.Revert",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Revert.html#revert",
        "fct-type": "function",
        "title": "revert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Revert",
        "module": "Darcs.Commands.Revert",
        "name": "revert",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Rollback.html#",
      "description": {
        "fct-module": "Darcs.Commands.Rollback",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Rollback.html",
        "fct-type": "module",
        "title": "Rollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Rollback",
        "module": "Darcs.Commands.Rollback",
        "name": "Rollback",
        "normalized": "",
        "package": "darcs",
        "partial": "Rollback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Rollback.html#v:rollback",
      "description": {
        "fct-module": "Darcs.Commands.Rollback",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Rollback.html#rollback",
        "fct-type": "function",
        "title": "rollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Rollback",
        "module": "Darcs.Commands.Rollback",
        "name": "rollback",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Send.html#",
      "description": {
        "fct-module": "Darcs.Commands.Send",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Send.html",
        "fct-type": "module",
        "title": "Send"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Send",
        "module": "Darcs.Commands.Send",
        "name": "Send",
        "normalized": "",
        "package": "darcs",
        "partial": "Send",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Send.html#v:send",
      "description": {
        "fct-module": "Darcs.Commands.Send",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Send.html#send",
        "fct-type": "function",
        "title": "send"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Send",
        "module": "Darcs.Commands.Send",
        "name": "send",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-SetPref.html#",
      "description": {
        "fct-module": "Darcs.Commands.SetPref",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-SetPref.html",
        "fct-type": "module",
        "title": "SetPref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands SetPref",
        "module": "Darcs.Commands.SetPref",
        "name": "SetPref",
        "normalized": "",
        "package": "darcs",
        "partial": "Set Pref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-SetPref.html#v:setpref",
      "description": {
        "fct-module": "Darcs.Commands.SetPref",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-SetPref.html#setpref",
        "fct-type": "function",
        "title": "setpref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands SetPref",
        "module": "Darcs.Commands.SetPref",
        "name": "setpref",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Show.html#",
      "description": {
        "fct-module": "Darcs.Commands.Show",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Show.html",
        "fct-type": "module",
        "title": "Show"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Show",
        "module": "Darcs.Commands.Show",
        "name": "Show",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Show.html#v:list",
      "description": {
        "fct-module": "Darcs.Commands.Show",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Show.html#list",
        "fct-type": "function",
        "title": "list"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Show",
        "module": "Darcs.Commands.Show",
        "name": "list",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Show.html#v:query",
      "description": {
        "fct-module": "Darcs.Commands.Show",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Show.html#query",
        "fct-type": "function",
        "title": "query"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Show",
        "module": "Darcs.Commands.Show",
        "name": "query",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Show.html#v:showCommand",
      "description": {
        "fct-module": "Darcs.Commands.Show",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Show.html#showCommand",
        "fct-type": "function",
        "title": "showCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Show",
        "module": "Darcs.Commands.Show",
        "name": "showCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowAuthors.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowAuthors",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowAuthors.html",
        "fct-type": "module",
        "title": "ShowAuthors"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowAuthors",
        "module": "Darcs.Commands.ShowAuthors",
        "name": "ShowAuthors",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Authors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowAuthors.html#v:showAuthors",
      "description": {
        "fct-module": "Darcs.Commands.ShowAuthors",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowAuthors.html#showAuthors",
        "fct-type": "function",
        "title": "showAuthors"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowAuthors",
        "module": "Darcs.Commands.ShowAuthors",
        "name": "showAuthors",
        "normalized": "",
        "package": "darcs",
        "partial": "Authors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowBug.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowBug",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowBug.html",
        "fct-type": "module",
        "title": "ShowBug"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowBug",
        "module": "Darcs.Commands.ShowBug",
        "name": "ShowBug",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Bug",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowBug.html#v:showBug",
      "description": {
        "fct-module": "Darcs.Commands.ShowBug",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowBug.html#showBug",
        "fct-type": "function",
        "title": "showBug"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowBug",
        "module": "Darcs.Commands.ShowBug",
        "name": "showBug",
        "normalized": "",
        "package": "darcs",
        "partial": "Bug",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowContents.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowContents",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowContents.html",
        "fct-type": "module",
        "title": "ShowContents"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowContents",
        "module": "Darcs.Commands.ShowContents",
        "name": "ShowContents",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowContents.html#v:showContents",
      "description": {
        "fct-module": "Darcs.Commands.ShowContents",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowContents.html#showContents",
        "fct-type": "function",
        "title": "showContents"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowContents",
        "module": "Darcs.Commands.ShowContents",
        "name": "showContents",
        "normalized": "",
        "package": "darcs",
        "partial": "Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowFiles.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowFiles",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowFiles.html",
        "fct-type": "module",
        "title": "ShowFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowFiles",
        "module": "Darcs.Commands.ShowFiles",
        "name": "ShowFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowFiles.html#v:manifest",
      "description": {
        "fct-module": "Darcs.Commands.ShowFiles",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [String] -\u003e IO [FilePath]",
        "fct-source": "src/Darcs-Commands-ShowFiles.html#manifest",
        "fct-type": "function",
        "title": "manifest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowFiles",
        "module": "Darcs.Commands.ShowFiles",
        "name": "manifest",
        "normalized": "[DarcsFlag]-\u003e[String]-\u003eIO[FilePath]",
        "package": "darcs",
        "partial": "",
        "signature": "[DarcsFlag]-\u003e[String]-\u003eIO[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowFiles.html#v:manifestCmd",
      "description": {
        "fct-module": "Darcs.Commands.ShowFiles",
        "fct-package": "darcs",
        "fct-signature": "([DarcsFlag] -\u003e Tree IO -\u003e [FilePath]) -\u003e [DarcsFlag] -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-ShowFiles.html#manifestCmd",
        "fct-type": "function",
        "title": "manifestCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowFiles",
        "module": "Darcs.Commands.ShowFiles",
        "name": "manifestCmd",
        "normalized": "([DarcsFlag]-\u003eTree IO-\u003e[FilePath])-\u003e[DarcsFlag]-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Cmd",
        "signature": "([DarcsFlag]-\u003eTree IO-\u003e[FilePath])-\u003e[DarcsFlag]-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowFiles.html#v:showFiles",
      "description": {
        "fct-module": "Darcs.Commands.ShowFiles",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowFiles.html#showFiles",
        "fct-type": "function",
        "title": "showFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowFiles",
        "module": "Darcs.Commands.ShowFiles",
        "name": "showFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowFiles.html#v:toListManifest",
      "description": {
        "fct-module": "Darcs.Commands.ShowFiles",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Tree m -\u003e [FilePath]",
        "fct-source": "src/Darcs-Commands-ShowFiles.html#toListManifest",
        "fct-type": "function",
        "title": "toListManifest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowFiles",
        "module": "Darcs.Commands.ShowFiles",
        "name": "toListManifest",
        "normalized": "[DarcsFlag]-\u003eTree a-\u003e[FilePath]",
        "package": "darcs",
        "partial": "List Manifest",
        "signature": "[DarcsFlag]-\u003eTree m-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowIndex.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowIndex",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowIndex.html",
        "fct-type": "module",
        "title": "ShowIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowIndex",
        "module": "Darcs.Commands.ShowIndex",
        "name": "ShowIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowIndex.html#v:showIndex",
      "description": {
        "fct-module": "Darcs.Commands.ShowIndex",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowIndex.html#showIndex",
        "fct-type": "function",
        "title": "showIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowIndex",
        "module": "Darcs.Commands.ShowIndex",
        "name": "showIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowIndex.html#v:showPristineCmd",
      "description": {
        "fct-module": "Darcs.Commands.ShowIndex",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-ShowIndex.html#showPristineCmd",
        "fct-type": "function",
        "title": "showPristineCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowIndex",
        "module": "Darcs.Commands.ShowIndex",
        "name": "showPristineCmd",
        "normalized": "[DarcsFlag]-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Pristine Cmd",
        "signature": "[DarcsFlag]-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowRepo.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowRepo",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowRepo.html",
        "fct-type": "module",
        "title": "ShowRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowRepo",
        "module": "Darcs.Commands.ShowRepo",
        "name": "ShowRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowRepo.html#v:showRepo",
      "description": {
        "fct-module": "Darcs.Commands.ShowRepo",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowRepo.html#showRepo",
        "fct-type": "function",
        "title": "showRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowRepo",
        "module": "Darcs.Commands.ShowRepo",
        "name": "showRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowTags.html#",
      "description": {
        "fct-module": "Darcs.Commands.ShowTags",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-ShowTags.html",
        "fct-type": "module",
        "title": "ShowTags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowTags",
        "module": "Darcs.Commands.ShowTags",
        "name": "ShowTags",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Tags",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-ShowTags.html#v:showTags",
      "description": {
        "fct-module": "Darcs.Commands.ShowTags",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-ShowTags.html#showTags",
        "fct-type": "function",
        "title": "showTags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands ShowTags",
        "module": "Darcs.Commands.ShowTags",
        "name": "showTags",
        "normalized": "",
        "package": "darcs",
        "partial": "Tags",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Tag.html#",
      "description": {
        "fct-module": "Darcs.Commands.Tag",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Tag.html",
        "fct-type": "module",
        "title": "Tag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Tag",
        "module": "Darcs.Commands.Tag",
        "name": "Tag",
        "normalized": "",
        "package": "darcs",
        "partial": "Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Tag.html#v:tag",
      "description": {
        "fct-module": "Darcs.Commands.Tag",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Tag.html#tag",
        "fct-type": "function",
        "title": "tag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Tag",
        "module": "Darcs.Commands.Tag",
        "name": "tag",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Test.html#",
      "description": {
        "fct-module": "Darcs.Commands.Test",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Test.html",
        "fct-type": "module",
        "title": "Test"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Test",
        "module": "Darcs.Commands.Test",
        "name": "Test",
        "normalized": "",
        "package": "darcs",
        "partial": "Test",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Test.html#v:test",
      "description": {
        "fct-module": "Darcs.Commands.Test",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Test.html#test",
        "fct-type": "function",
        "title": "test"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Test",
        "module": "Darcs.Commands.Test",
        "name": "test",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-TrackDown.html#",
      "description": {
        "fct-module": "Darcs.Commands.TrackDown",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-TrackDown.html",
        "fct-type": "module",
        "title": "TrackDown"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands TrackDown",
        "module": "Darcs.Commands.TrackDown",
        "name": "TrackDown",
        "normalized": "",
        "package": "darcs",
        "partial": "Track Down",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-TrackDown.html#v:trackdown",
      "description": {
        "fct-module": "Darcs.Commands.TrackDown",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-TrackDown.html#trackdown",
        "fct-type": "function",
        "title": "trackdown"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands TrackDown",
        "module": "Darcs.Commands.TrackDown",
        "name": "trackdown",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-TransferMode.html#",
      "description": {
        "fct-module": "Darcs.Commands.TransferMode",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-TransferMode.html",
        "fct-type": "module",
        "title": "TransferMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands TransferMode",
        "module": "Darcs.Commands.TransferMode",
        "name": "TransferMode",
        "normalized": "",
        "package": "darcs",
        "partial": "Transfer Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-TransferMode.html#v:transferMode",
      "description": {
        "fct-module": "Darcs.Commands.TransferMode",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-TransferMode.html#transferMode",
        "fct-type": "function",
        "title": "transferMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands TransferMode",
        "module": "Darcs.Commands.TransferMode",
        "name": "transferMode",
        "normalized": "",
        "package": "darcs",
        "partial": "Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrecord.html#",
      "description": {
        "fct-module": "Darcs.Commands.Unrecord",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Unrecord.html",
        "fct-type": "module",
        "title": "Unrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrecord",
        "module": "Darcs.Commands.Unrecord",
        "name": "Unrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "Unrecord",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrecord.html#v:getLastPatches",
      "description": {
        "fct-module": "Darcs.Commands.Unrecord",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchSet p Origin r -\u003e (PatchSet p :\u003e FL (PatchInfoAnd p)) Origin r",
        "fct-source": "src/Darcs-Commands-Unrecord.html#getLastPatches",
        "fct-type": "function",
        "title": "getLastPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrecord",
        "module": "Darcs.Commands.Unrecord",
        "name": "getLastPatches",
        "normalized": "[DarcsFlag]-\u003ePatchSet a Origin b-\u003e(PatchSet a FL(PatchInfoAnd a))Origin b",
        "package": "darcs",
        "partial": "Last Patches",
        "signature": "[DarcsFlag]-\u003ePatchSet p Origin r-\u003e(PatchSet p FL(PatchInfoAnd p))Origin r"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrecord.html#v:obliterate",
      "description": {
        "fct-module": "Darcs.Commands.Unrecord",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Unrecord.html#obliterate",
        "fct-type": "function",
        "title": "obliterate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrecord",
        "module": "Darcs.Commands.Unrecord",
        "name": "obliterate",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrecord.html#v:unpull",
      "description": {
        "fct-module": "Darcs.Commands.Unrecord",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Unrecord.html#unpull",
        "fct-type": "function",
        "title": "unpull"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrecord",
        "module": "Darcs.Commands.Unrecord",
        "name": "unpull",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrecord.html#v:unrecord",
      "description": {
        "fct-module": "Darcs.Commands.Unrecord",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Unrecord.html#unrecord",
        "fct-type": "function",
        "title": "unrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrecord",
        "module": "Darcs.Commands.Unrecord",
        "name": "unrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrevert.html#",
      "description": {
        "fct-module": "Darcs.Commands.Unrevert",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Unrevert.html",
        "fct-type": "module",
        "title": "Unrevert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrevert",
        "module": "Darcs.Commands.Unrevert",
        "name": "Unrevert",
        "normalized": "",
        "package": "darcs",
        "partial": "Unrevert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrevert.html#v:unrevert",
      "description": {
        "fct-module": "Darcs.Commands.Unrevert",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-Unrevert.html#unrevert",
        "fct-type": "function",
        "title": "unrevert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrevert",
        "module": "Darcs.Commands.Unrevert",
        "name": "unrevert",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Unrevert.html#v:writeUnrevert",
      "description": {
        "fct-module": "Darcs.Commands.Unrevert",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) x y -\u003e Tree IO -\u003e FL (PrimOf p) r x -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-Unrevert.html#writeUnrevert",
        "fct-type": "function",
        "title": "writeUnrevert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Unrevert",
        "module": "Darcs.Commands.Unrevert",
        "name": "writeUnrevert",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)e f-\u003eTree IO-\u003eFL(PrimOf a)b e-\u003eIO()",
        "package": "darcs",
        "partial": "Unrevert",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)x y-\u003eTree IO-\u003eFL(PrimOf p)r x-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Util.html#",
      "description": {
        "fct-module": "Darcs.Commands.Util",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-Util.html",
        "fct-type": "module",
        "title": "Util"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Util",
        "module": "Darcs.Commands.Util",
        "name": "Util",
        "normalized": "",
        "package": "darcs",
        "partial": "Util",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Util.html#v:announceFiles",
      "description": {
        "fct-module": "Darcs.Commands.Util",
        "fct-package": "darcs",
        "fct-signature": "Maybe [SubPath] -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Commands-Util.html#announceFiles",
        "fct-type": "function",
        "title": "announceFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Util",
        "module": "Darcs.Commands.Util",
        "name": "announceFiles",
        "normalized": "Maybe[SubPath]-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Files",
        "signature": "Maybe[SubPath]-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-Util.html#v:filterExistingFiles",
      "description": {
        "fct-module": "Darcs.Commands.Util",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [SubPath] -\u003e IO [SubPath]",
        "fct-source": "src/Darcs-Commands-Util.html#filterExistingFiles",
        "fct-type": "function",
        "title": "filterExistingFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands Util",
        "module": "Darcs.Commands.Util",
        "name": "filterExistingFiles",
        "normalized": "Repository a b c d-\u003e[SubPath]-\u003eIO[SubPath]",
        "package": "darcs",
        "partial": "Existing Files",
        "signature": "Repository p r u t-\u003e[SubPath]-\u003eIO[SubPath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-WhatsNew.html#",
      "description": {
        "fct-module": "Darcs.Commands.WhatsNew",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands-WhatsNew.html",
        "fct-type": "module",
        "title": "WhatsNew"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands WhatsNew",
        "module": "Darcs.Commands.WhatsNew",
        "name": "WhatsNew",
        "normalized": "",
        "package": "darcs",
        "partial": "Whats New",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-WhatsNew.html#v:status",
      "description": {
        "fct-descr": "\u003cp\u003estatus is an alias for whatsnew, with implicit Summary and LookForAdds\n flags. We override the default description, to include the implicit flags.\n\u003c/p\u003e",
        "fct-module": "Darcs.Commands.WhatsNew",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-WhatsNew.html#status",
        "fct-type": "function",
        "title": "status"
      },
      "index": {
        "description": "status is an alias for whatsnew with implicit Summary and LookForAdds flags We override the default description to include the implicit flags",
        "hierarchy": "Darcs Commands WhatsNew",
        "module": "Darcs.Commands.WhatsNew",
        "name": "status",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands-WhatsNew.html#v:whatsnew",
      "description": {
        "fct-module": "Darcs.Commands.WhatsNew",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands-WhatsNew.html#whatsnew",
        "fct-type": "function",
        "title": "whatsnew"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands WhatsNew",
        "module": "Darcs.Commands.WhatsNew",
        "name": "whatsnew",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Commands.html",
        "fct-type": "module",
        "title": "Commands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "Commands",
        "normalized": "",
        "package": "darcs",
        "partial": "Commands",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#t:CommandArgs",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Commands.html#CommandArgs",
        "fct-type": "data",
        "title": "CommandArgs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "CommandArgs",
        "normalized": "",
        "package": "darcs",
        "partial": "Command Args",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#t:CommandControl",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Commands.html#CommandControl",
        "fct-type": "data",
        "title": "CommandControl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "CommandControl",
        "normalized": "",
        "package": "darcs",
        "partial": "Command Control",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#t:DarcsCommand",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "data",
        "title": "DarcsCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "DarcsCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:CommandData",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "CommandData DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#CommandControl",
        "fct-type": "function",
        "title": "CommandData"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "CommandData",
        "normalized": "",
        "package": "darcs",
        "partial": "Command Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:CommandOnly",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "CommandOnly DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#CommandArgs",
        "fct-type": "function",
        "title": "CommandOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "CommandOnly",
        "normalized": "",
        "package": "darcs",
        "partial": "Command Only",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:DarcsCommand",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "DarcsCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "DarcsCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:GroupName",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "GroupName String",
        "fct-source": "src/Darcs-Commands.html#CommandControl",
        "fct-type": "function",
        "title": "GroupName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "GroupName",
        "normalized": "",
        "package": "darcs",
        "partial": "Group Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:HiddenCommand",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "HiddenCommand DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#CommandControl",
        "fct-type": "function",
        "title": "HiddenCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "HiddenCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Hidden Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:SuperCommand",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "SuperCommand",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "SuperCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "SuperCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Super Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:SuperCommandOnly",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "SuperCommandOnly DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#CommandArgs",
        "fct-type": "function",
        "title": "SuperCommandOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "SuperCommandOnly",
        "normalized": "",
        "package": "darcs",
        "partial": "Super Command Only",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:SuperCommandSub",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "SuperCommandSub DarcsCommand DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#CommandArgs",
        "fct-type": "function",
        "title": "SuperCommandSub"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "SuperCommandSub",
        "normalized": "",
        "package": "darcs",
        "partial": "Super Command Sub",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:abortRun",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Commands.html#abortRun",
        "fct-type": "function",
        "title": "abortRun"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "abortRun",
        "normalized": "[DarcsFlag]-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Run",
        "signature": "[DarcsFlag]-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:chompNewline",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Darcs-Commands.html#chompNewline",
        "fct-type": "function",
        "title": "chompNewline"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "chompNewline",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "Newline",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandAdvancedOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption]",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandAdvancedOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandAdvancedOptions",
        "normalized": "[DarcsOption]",
        "package": "darcs",
        "partial": "Advanced Options",
        "signature": "[DarcsOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandAlias",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Maybe DarcsCommand -\u003e DarcsCommand -\u003e DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#commandAlias",
        "fct-type": "function",
        "title": "commandAlias"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandAlias",
        "normalized": "String-\u003eMaybe DarcsCommand-\u003eDarcsCommand-\u003eDarcsCommand",
        "package": "darcs",
        "partial": "Alias",
        "signature": "String-\u003eMaybe DarcsCommand-\u003eDarcsCommand-\u003eDarcsCommand"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandAlloptions",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand -\u003e ([DarcsOption], [DarcsOption])",
        "fct-source": "src/Darcs-Commands.html#commandAlloptions",
        "fct-type": "function",
        "title": "commandAlloptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandAlloptions",
        "normalized": "DarcsCommand-\u003e([DarcsOption],[DarcsOption])",
        "package": "darcs",
        "partial": "Alloptions",
        "signature": "DarcsCommand-\u003e([DarcsOption],[DarcsOption])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandArgdefaults",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e AbsolutePath -\u003e [String] -\u003e IO [String]",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandArgdefaults"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandArgdefaults",
        "normalized": "[DarcsFlag]-\u003eAbsolutePath-\u003e[String]-\u003eIO[String]",
        "package": "darcs",
        "partial": "Argdefaults",
        "signature": "[DarcsFlag]-\u003eAbsolutePath-\u003e[String]-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandBasicOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsOption]",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandBasicOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandBasicOptions",
        "normalized": "[DarcsOption]",
        "package": "darcs",
        "partial": "Basic Options",
        "signature": "[DarcsOption]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandCommand",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandCommand",
        "normalized": "[DarcsFlag]-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Command",
        "signature": "[DarcsFlag]-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandDescription",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandDescription",
        "normalized": "",
        "package": "darcs",
        "partial": "Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandExtraArgHelp",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[String]",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandExtraArgHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandExtraArgHelp",
        "normalized": "[String]",
        "package": "darcs",
        "partial": "Extra Arg Help",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandExtraArgs",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "Int",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandExtraArgs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandExtraArgs",
        "normalized": "",
        "package": "darcs",
        "partial": "Extra Args",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandGetArgPossibilities",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandGetArgPossibilities"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandGetArgPossibilities",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Get Arg Possibilities",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandHelp",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandHelp",
        "normalized": "",
        "package": "darcs",
        "partial": "Help",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandName",
        "normalized": "",
        "package": "darcs",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandOptions",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePath -\u003e DarcsCommand -\u003e ([OptDescr DarcsFlag], [OptDescr DarcsFlag])",
        "fct-source": "src/Darcs-Commands.html#commandOptions",
        "fct-type": "function",
        "title": "commandOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandOptions",
        "normalized": "AbsolutePath-\u003eDarcsCommand-\u003e([OptDescr DarcsFlag],[OptDescr DarcsFlag])",
        "package": "darcs",
        "partial": "Options",
        "signature": "AbsolutePath-\u003eDarcsCommand-\u003e([OptDescr DarcsFlag],[OptDescr DarcsFlag])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandPrereq",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandPrereq"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandPrereq",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "Prereq",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandProgramName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandProgramName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandProgramName",
        "normalized": "",
        "package": "darcs",
        "partial": "Program Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandStub",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e DarcsCommand -\u003e DarcsCommand",
        "fct-source": "src/Darcs-Commands.html#commandStub",
        "fct-type": "function",
        "title": "commandStub"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandStub",
        "normalized": "String-\u003eString-\u003eString-\u003eDarcsCommand-\u003eDarcsCommand",
        "package": "darcs",
        "partial": "Stub",
        "signature": "String-\u003eString-\u003eString-\u003eDarcsCommand-\u003eDarcsCommand"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:commandSubCommands",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl]",
        "fct-source": "src/Darcs-Commands.html#DarcsCommand",
        "fct-type": "function",
        "title": "commandSubCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "commandSubCommands",
        "normalized": "[CommandControl]",
        "package": "darcs",
        "partial": "Sub Commands",
        "signature": "[CommandControl]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:disambiguateCommands",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl] -\u003e String -\u003e [String] -\u003e Either String (CommandArgs, [String])",
        "fct-source": "src/Darcs-Commands.html#disambiguateCommands",
        "fct-type": "function",
        "title": "disambiguateCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "disambiguateCommands",
        "normalized": "[CommandControl]-\u003eString-\u003e[String]-\u003eEither String(CommandArgs,[String])",
        "package": "darcs",
        "partial": "Commands",
        "signature": "[CommandControl]-\u003eString-\u003e[String]-\u003eEither String(CommandArgs,[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:extractCommands",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl] -\u003e [DarcsCommand]",
        "fct-source": "src/Darcs-Commands.html#extractCommands",
        "fct-type": "function",
        "title": "extractCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "extractCommands",
        "normalized": "[CommandControl]-\u003e[DarcsCommand]",
        "package": "darcs",
        "partial": "Commands",
        "signature": "[CommandControl]-\u003e[DarcsCommand]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:getCommandHelp",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "Maybe DarcsCommand -\u003e DarcsCommand -\u003e String",
        "fct-source": "src/Darcs-Commands.html#getCommandHelp",
        "fct-type": "function",
        "title": "getCommandHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "getCommandHelp",
        "normalized": "Maybe DarcsCommand-\u003eDarcsCommand-\u003eString",
        "package": "darcs",
        "partial": "Command Help",
        "signature": "Maybe DarcsCommand-\u003eDarcsCommand-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:getCommandMiniHelp",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "Maybe DarcsCommand -\u003e DarcsCommand -\u003e String",
        "fct-source": "src/Darcs-Commands.html#getCommandMiniHelp",
        "fct-type": "function",
        "title": "getCommandMiniHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "getCommandMiniHelp",
        "normalized": "Maybe DarcsCommand-\u003eDarcsCommand-\u003eString",
        "package": "darcs",
        "partial": "Command Mini Help",
        "signature": "Maybe DarcsCommand-\u003eDarcsCommand-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:getSubcommands",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand -\u003e [CommandControl]",
        "fct-source": "src/Darcs-Commands.html#getSubcommands",
        "fct-type": "function",
        "title": "getSubcommands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "getSubcommands",
        "normalized": "DarcsCommand-\u003e[CommandControl]",
        "package": "darcs",
        "partial": "Subcommands",
        "signature": "DarcsCommand-\u003e[CommandControl]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:nodefaults",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e AbsolutePath -\u003e [String] -\u003e IO [String]",
        "fct-source": "src/Darcs-Commands.html#nodefaults",
        "fct-type": "function",
        "title": "nodefaults"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "nodefaults",
        "normalized": "[DarcsFlag]-\u003eAbsolutePath-\u003e[String]-\u003eIO[String]",
        "package": "darcs",
        "partial": "",
        "signature": "[DarcsFlag]-\u003eAbsolutePath-\u003e[String]-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:putInfo",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Commands.html#putInfo",
        "fct-type": "function",
        "title": "putInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "putInfo",
        "normalized": "[DarcsFlag]-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Info",
        "signature": "[DarcsFlag]-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:putVerbose",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Commands.html#putVerbose",
        "fct-type": "function",
        "title": "putVerbose"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "putVerbose",
        "normalized": "[DarcsFlag]-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Verbose",
        "signature": "[DarcsFlag]-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:putWarning",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Commands.html#putWarning",
        "fct-type": "function",
        "title": "putWarning"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "putWarning",
        "normalized": "[DarcsFlag]-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Warning",
        "signature": "[DarcsFlag]-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:subusage",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "DarcsCommand -\u003e String",
        "fct-source": "src/Darcs-Commands.html#subusage",
        "fct-type": "function",
        "title": "subusage"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "subusage",
        "normalized": "DarcsCommand-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "DarcsCommand-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:superName",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "Maybe DarcsCommand -\u003e String",
        "fct-source": "src/Darcs-Commands.html#superName",
        "fct-type": "function",
        "title": "superName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "superName",
        "normalized": "Maybe DarcsCommand-\u003eString",
        "package": "darcs",
        "partial": "Name",
        "signature": "Maybe DarcsCommand-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:usage",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl] -\u003e String",
        "fct-source": "src/Darcs-Commands.html#usage",
        "fct-type": "function",
        "title": "usage"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "usage",
        "normalized": "[CommandControl]-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "[CommandControl]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Commands.html#v:usageHelper",
      "description": {
        "fct-module": "Darcs.Commands",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl] -\u003e String",
        "fct-source": "src/Darcs-Commands.html#usageHelper",
        "fct-type": "function",
        "title": "usageHelper"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Commands",
        "module": "Darcs.Commands",
        "name": "usageHelper",
        "normalized": "[CommandControl]-\u003eString",
        "package": "darcs",
        "partial": "Helper",
        "signature": "[CommandControl]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-CommandsAux.html#",
      "description": {
        "fct-module": "Darcs.CommandsAux",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-CommandsAux.html",
        "fct-type": "module",
        "title": "CommandsAux"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs CommandsAux",
        "module": "Darcs.CommandsAux",
        "name": "CommandsAux",
        "normalized": "",
        "package": "darcs",
        "partial": "Commands Aux",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-CommandsAux.html#v:checkPaths",
      "description": {
        "fct-descr": "\u003cp\u003eA convenience function to call from all darcs command functions before\n  applying any patches. It checks for malicious paths in patches, and\n  prints an error message and fails if it finds one.\n\u003c/p\u003e",
        "fct-module": "Darcs.CommandsAux",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e FL p x y -\u003e IO ()",
        "fct-source": "src/Darcs-CommandsAux.html#checkPaths",
        "fct-type": "function",
        "title": "checkPaths"
      },
      "index": {
        "description": "convenience function to call from all darcs command functions before applying any patches It checks for malicious paths in patches and prints an error message and fails if it finds one",
        "hierarchy": "Darcs CommandsAux",
        "module": "Darcs.CommandsAux",
        "name": "checkPaths",
        "normalized": "[DarcsFlag]-\u003eFL a b c-\u003eIO()",
        "package": "darcs",
        "partial": "Paths",
        "signature": "[DarcsFlag]-\u003eFL p x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-CommandsAux.html#v:hasMaliciousPath",
      "description": {
        "fct-module": "Darcs.CommandsAux",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Bool",
        "fct-source": "src/Darcs-CommandsAux.html#hasMaliciousPath",
        "fct-type": "function",
        "title": "hasMaliciousPath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs CommandsAux",
        "module": "Darcs.CommandsAux",
        "name": "hasMaliciousPath",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Malicious Path",
        "signature": "p x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-CommandsAux.html#v:isMaliciousPath",
      "description": {
        "fct-descr": "\u003cp\u003eWhat is a malicious path?\n\u003c/p\u003e\u003cp\u003eA spoofed path is a malicious path.\n\u003c/p\u003e\u003col\u003e\u003cli\u003e Darcs only creates explicitly relative paths (beginning with \u003ccode\u003e\"./\"\u003c/code\u003e),\n     so any not explicitly relative path is surely spoofed.\n\u003c/li\u003e\u003cli\u003e Darcs normalizes paths so they never contain \u003ccode\u003e\"/../\"\u003c/code\u003e, so paths with\n     \u003ccode\u003e\"/../\"\u003c/code\u003e are surely spoofed.\n\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eA path to a darcs repository's meta data can modify \"trusted\" patches or\n  change safety defaults in that repository, so we check for paths\n  containing \u003ccode\u003e\"/_darcs/\"\u003c/code\u003e which is the entry to darcs meta data.\n\u003c/p\u003e\u003cp\u003eTo do?\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e How about get repositories?\n\u003c/li\u003e\u003cli\u003e Would it be worth adding a --semi-safe-paths option for allowing\n    changes to certain preference files (_darcs/prefs/) in sub\n    repositories'?\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Darcs.CommandsAux",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-CommandsAux.html#isMaliciousPath",
        "fct-type": "function",
        "title": "isMaliciousPath"
      },
      "index": {
        "description": "What is malicious path spoofed path is malicious path Darcs only creates explicitly relative paths beginning with so any not explicitly relative path is surely spoofed Darcs normalizes paths so they never contain so paths with are surely spoofed path to darcs repository meta data can modify trusted patches or change safety defaults in that repository so we check for paths containing darcs which is the entry to darcs meta data To do How about get repositories Would it be worth adding semi-safe-paths option for allowing changes to certain preference files darcs prefs in sub repositories",
        "hierarchy": "Darcs CommandsAux",
        "module": "Darcs.CommandsAux",
        "name": "isMaliciousPath",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Malicious Path",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-CommandsAux.html#v:isMaliciousSubPath",
      "description": {
        "fct-descr": "\u003cp\u003eWarning : this is less rigorous than isMaliciousPath\n   but it's to allow for subpath representations that\n   don't start with ./\n\u003c/p\u003e",
        "fct-module": "Darcs.CommandsAux",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-CommandsAux.html#isMaliciousSubPath",
        "fct-type": "function",
        "title": "isMaliciousSubPath"
      },
      "index": {
        "description": "Warning this is less rigorous than isMaliciousPath but it to allow for subpath representations that don start with",
        "hierarchy": "Darcs CommandsAux",
        "module": "Darcs.CommandsAux",
        "name": "isMaliciousSubPath",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Malicious Sub Path",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-CommandsAux.html#v:maliciousPatches",
      "description": {
        "fct-descr": "\u003cp\u003eFilter out patches that contains some malicious file path\n\u003c/p\u003e",
        "fct-module": "Darcs.CommandsAux",
        "fct-package": "darcs",
        "fct-signature": "[Sealed2 p] -\u003e [Sealed2 p]",
        "fct-source": "src/Darcs-CommandsAux.html#maliciousPatches",
        "fct-type": "function",
        "title": "maliciousPatches"
      },
      "index": {
        "description": "Filter out patches that contains some malicious file path",
        "hierarchy": "Darcs CommandsAux",
        "module": "Darcs.CommandsAux",
        "name": "maliciousPatches",
        "normalized": "[Sealed a]-\u003e[Sealed a]",
        "package": "darcs",
        "partial": "Patches",
        "signature": "[Sealed p]-\u003e[Sealed p]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Compat.html",
        "fct-type": "module",
        "title": "Compat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "Compat",
        "normalized": "",
        "package": "darcs",
        "partial": "Compat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#v:atomicCreate",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Compat.html#atomicCreate",
        "fct-type": "function",
        "title": "atomicCreate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "atomicCreate",
        "normalized": "FilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Create",
        "signature": "FilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#v:canonFilename",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO FilePath",
        "fct-source": "src/Darcs-Compat.html#canonFilename",
        "fct-type": "function",
        "title": "canonFilename"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "canonFilename",
        "normalized": "FilePath-\u003eIO FilePath",
        "package": "darcs",
        "partial": "Filename",
        "signature": "FilePath-\u003eIO FilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#v:maybeRelink",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO Bool",
        "fct-source": "src/Darcs-Compat.html#maybeRelink",
        "fct-type": "function",
        "title": "maybeRelink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "maybeRelink",
        "normalized": "String-\u003eString-\u003eIO Bool",
        "package": "darcs",
        "partial": "Relink",
        "signature": "String-\u003eString-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#v:mkStdoutTemp",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO String",
        "fct-source": "src/Darcs-Compat.html#mkStdoutTemp",
        "fct-type": "function",
        "title": "mkStdoutTemp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "mkStdoutTemp",
        "normalized": "String-\u003eIO String",
        "package": "darcs",
        "partial": "Stdout Temp",
        "signature": "String-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#v:sloppyAtomicCreate",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Compat.html#sloppyAtomicCreate",
        "fct-type": "function",
        "title": "sloppyAtomicCreate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "sloppyAtomicCreate",
        "normalized": "FilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Atomic Create",
        "signature": "FilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Compat.html#v:stdoutIsAPipe",
      "description": {
        "fct-module": "Darcs.Compat",
        "fct-package": "darcs",
        "fct-signature": "IO Bool",
        "fct-source": "src/Darcs-SignalHandler.html#stdoutIsAPipe",
        "fct-type": "function",
        "title": "stdoutIsAPipe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Compat",
        "module": "Darcs.Compat",
        "name": "stdoutIsAPipe",
        "normalized": "",
        "package": "darcs",
        "partial": "Is APipe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Diff.html#",
      "description": {
        "fct-module": "Darcs.Diff",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Diff.html",
        "fct-type": "module",
        "title": "Diff"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Diff",
        "module": "Darcs.Diff",
        "name": "Diff",
        "normalized": "",
        "package": "darcs",
        "partial": "Diff",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Diff.html#v:treeDiff",
      "description": {
        "fct-module": "Darcs.Diff",
        "fct-package": "darcs",
        "fct-signature": "(FilePath -\u003e FileType) -\u003e Tree m -\u003e Tree m -\u003e m (w (FL prim))",
        "fct-source": "src/Darcs-Diff.html#treeDiff",
        "fct-type": "function",
        "title": "treeDiff"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Diff",
        "module": "Darcs.Diff",
        "name": "treeDiff",
        "normalized": "(FilePath-\u003eFileType)-\u003eTree a-\u003eTree a-\u003ea(b(FL c))",
        "package": "darcs",
        "partial": "Diff",
        "signature": "(FilePath-\u003eFileType)-\u003eTree m-\u003eTree m-\u003em(w(FL prim))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Email.html#",
      "description": {
        "fct-module": "Darcs.Email",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Email.html",
        "fct-type": "module",
        "title": "Email"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Email",
        "module": "Darcs.Email",
        "name": "Email",
        "normalized": "",
        "package": "darcs",
        "partial": "Email",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Email.html#v:formatHeader",
      "description": {
        "fct-descr": "\u003cp\u003eFormats an e-mail header by encoding any non-ascii characters using UTF-8\n   and Q-encoding, and folding lines at appropriate points. It doesn't do\n   more than that, so the header name and header value should be\n   well-formatted give or take line length and encoding. So no non-ASCII\n   characters within quoted-string, quoted-pair, or atom; no semantically\n   meaningful signs in names; no non-ASCII characters in the header name;\n   etcetera.\n\u003c/p\u003e",
        "fct-module": "Darcs.Email",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e ByteString",
        "fct-source": "src/Darcs-Email.html#formatHeader",
        "fct-type": "function",
        "title": "formatHeader"
      },
      "index": {
        "description": "Formats an e-mail header by encoding any non-ascii characters using UTF-8 and Q-encoding and folding lines at appropriate points It doesn do more than that so the header name and header value should be well-formatted give or take line length and encoding So no non-ASCII characters within quoted-string quoted-pair or atom no semantically meaningful signs in names no non-ASCII characters in the header name etcetera",
        "hierarchy": "Darcs Email",
        "module": "Darcs.Email",
        "name": "formatHeader",
        "normalized": "String-\u003eString-\u003eByteString",
        "package": "darcs",
        "partial": "Header",
        "signature": "String-\u003eString-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Email.html#v:makeEmail",
      "description": {
        "fct-module": "Darcs.Email",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [(String, String)] -\u003e Maybe Doc -\u003e Maybe String -\u003e Doc -\u003e Maybe String -\u003e Doc",
        "fct-source": "src/Darcs-Email.html#makeEmail",
        "fct-type": "function",
        "title": "makeEmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Email",
        "module": "Darcs.Email",
        "name": "makeEmail",
        "normalized": "String-\u003e[(String,String)]-\u003eMaybe Doc-\u003eMaybe String-\u003eDoc-\u003eMaybe String-\u003eDoc",
        "package": "darcs",
        "partial": "Email",
        "signature": "String-\u003e[(String,String)]-\u003eMaybe Doc-\u003eMaybe String-\u003eDoc-\u003eMaybe String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Email.html#v:readEmail",
      "description": {
        "fct-module": "Darcs.Email",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ByteString",
        "fct-source": "src/Darcs-Email.html#readEmail",
        "fct-type": "function",
        "title": "readEmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Email",
        "module": "Darcs.Email",
        "name": "readEmail",
        "normalized": "ByteString-\u003eByteString",
        "package": "darcs",
        "partial": "Email",
        "signature": "ByteString-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-External.html",
        "fct-type": "module",
        "title": "External"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "External",
        "normalized": "",
        "package": "darcs",
        "partial": "External",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#t:Cachable",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "data",
        "title": "Cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "Cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Cachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:Cachable",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "Cachable",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "Cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "Cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Cachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:MaxAge",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "MaxAge !CInt",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "MaxAge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "MaxAge",
        "normalized": "",
        "package": "darcs",
        "partial": "Max Age",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:Uncachable",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "Uncachable",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "Uncachable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "Uncachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Uncachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:backupByCopying",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#backupByCopying",
        "fct-type": "function",
        "title": "backupByCopying"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "backupByCopying",
        "normalized": "FilePath-\u003eIO()",
        "package": "darcs",
        "partial": "By Copying",
        "signature": "FilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:backupByRenaming",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#backupByRenaming",
        "fct-type": "function",
        "title": "backupByRenaming"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "backupByRenaming",
        "normalized": "FilePath-\u003eIO()",
        "package": "darcs",
        "partial": "By Renaming",
        "signature": "FilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:cloneFile",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#cloneFile",
        "fct-type": "function",
        "title": "cloneFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "cloneFile",
        "normalized": "FilePath-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "File",
        "signature": "FilePath-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:cloneTree",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#cloneTree",
        "fct-type": "function",
        "title": "cloneTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "cloneTree",
        "normalized": "FilePath-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Tree",
        "signature": "FilePath-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:cloneTreeExcept",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "[FilePath] -\u003e FilePath -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#cloneTreeExcept",
        "fct-type": "function",
        "title": "cloneTreeExcept"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "cloneTreeExcept",
        "normalized": "[FilePath]-\u003eFilePath-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Tree Except",
        "signature": "[FilePath]-\u003eFilePath-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:copyFileOrUrl",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "RemoteDarcs -\u003e FilePath -\u003e FilePath -\u003e Cachable -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#copyFileOrUrl",
        "fct-type": "function",
        "title": "copyFileOrUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "copyFileOrUrl",
        "normalized": "RemoteDarcs-\u003eFilePath-\u003eFilePath-\u003eCachable-\u003eIO()",
        "package": "darcs",
        "partial": "File Or Url",
        "signature": "RemoteDarcs-\u003eFilePath-\u003eFilePath-\u003eCachable-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:copyLocal",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#copyLocal",
        "fct-type": "function",
        "title": "copyLocal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "copyLocal",
        "normalized": "String-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Local",
        "signature": "String-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:darcsProgram",
      "description": {
        "fct-descr": "\u003cp\u003eGet the name of the darcs executable (as supplied by \u003ccode\u003egetProgName\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "IO String",
        "fct-source": "src/Darcs-External.html#darcsProgram",
        "fct-type": "function",
        "title": "darcsProgram"
      },
      "index": {
        "description": "Get the name of the darcs executable as supplied by getProgName",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "darcsProgram",
        "normalized": "",
        "package": "darcs",
        "partial": "Program",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:diffProgram",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "IO String",
        "fct-source": "src/Darcs-External.html#diffProgram",
        "fct-type": "function",
        "title": "diffProgram"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "diffProgram",
        "normalized": "",
        "package": "darcs",
        "partial": "Program",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:execDocPipe",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String] -\u003e Doc -\u003e IO Doc",
        "fct-source": "src/Darcs-External.html#execDocPipe",
        "fct-type": "function",
        "title": "execDocPipe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "execDocPipe",
        "normalized": "String-\u003e[String]-\u003eDoc-\u003eIO Doc",
        "package": "darcs",
        "partial": "Doc Pipe",
        "signature": "String-\u003e[String]-\u003eDoc-\u003eIO Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:execPipeIgnoreError",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String] -\u003e Doc -\u003e IO Doc",
        "fct-source": "src/Darcs-External.html#execPipeIgnoreError",
        "fct-type": "function",
        "title": "execPipeIgnoreError"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "execPipeIgnoreError",
        "normalized": "String-\u003e[String]-\u003eDoc-\u003eIO Doc",
        "package": "darcs",
        "partial": "Pipe Ignore Error",
        "signature": "String-\u003e[String]-\u003eDoc-\u003eIO Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:execSSH",
      "description": {
        "fct-descr": "\u003cp\u003eRun a command on a remote location without passing it any input or\n   reading its output.  Return its ExitCode\n\u003c/p\u003e",
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "SshFilePath -\u003e String -\u003e IO ExitCode",
        "fct-source": "src/Darcs-External.html#execSSH",
        "fct-type": "function",
        "title": "execSSH"
      },
      "index": {
        "description": "Run command on remote location without passing it any input or reading its output Return its ExitCode",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "execSSH",
        "normalized": "SshFilePath-\u003eString-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "SSH",
        "signature": "SshFilePath-\u003eString-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:fetchFileLazyPS",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efetchFileLazyPS fileOrUrl cache\u003c/code\u003e lazily reads the content of its argument\n (either a file or an URL). Warning: this function may constitute a fd leak;\n make sure to force consumption of file contents to avoid that. See\n \u003ca\u003efetchFilePS\u003c/a\u003e for details.\n\u003c/p\u003e",
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Cachable -\u003e IO ByteString",
        "fct-source": "src/Darcs-External.html#fetchFileLazyPS",
        "fct-type": "function",
        "title": "fetchFileLazyPS"
      },
      "index": {
        "description": "fetchFileLazyPS fileOrUrl cache lazily reads the content of its argument either file or an URL Warning this function may constitute fd leak make sure to force consumption of file contents to avoid that See fetchFilePS for details",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "fetchFileLazyPS",
        "normalized": "String-\u003eCachable-\u003eIO ByteString",
        "package": "darcs",
        "partial": "File Lazy PS",
        "signature": "String-\u003eCachable-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:fetchFilePS",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efetchFile fileOrUrl cache\u003c/code\u003e returns the content of its argument (either a\n file or an URL). If it has to download an url, then it will use a cache as\n required by its second argument.\n\u003c/p\u003e\u003cp\u003eWe always use default remote darcs, since it is not fatal if the remote\n darcs does not exist or is too old -- anything that supports transfer-mode\n should do, and if not, we will fall back to SFTP or SCP.\n\u003c/p\u003e",
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Cachable -\u003e IO ByteString",
        "fct-source": "src/Darcs-External.html#fetchFilePS",
        "fct-type": "function",
        "title": "fetchFilePS"
      },
      "index": {
        "description": "fetchFile fileOrUrl cache returns the content of its argument either file or an URL If it has to download an url then it will use cache as required by its second argument We always use default remote darcs since it is not fatal if the remote darcs does not exist or is too old anything that supports transfer-mode should do and if not we will fall back to SFTP or SCP",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "fetchFilePS",
        "normalized": "String-\u003eCachable-\u003eIO ByteString",
        "package": "darcs",
        "partial": "File PS",
        "signature": "String-\u003eCachable-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:generateEmail",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "Handle-\u003e String-\u003e String-\u003e String-\u003e String-\u003e Doc-\u003e IO ()",
        "fct-type": "function",
        "title": "generateEmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "generateEmail",
        "normalized": "Handle-\u003eString-\u003eString-\u003eString-\u003eString-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Email",
        "signature": "Handle-\u003eString-\u003eString-\u003eString-\u003eString-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:getTermNColors",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "IO Int",
        "fct-source": "src/Darcs-External.html#getTermNColors",
        "fct-type": "function",
        "title": "getTermNColors"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "getTermNColors",
        "normalized": "",
        "package": "darcs",
        "partial": "Term NColors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:gzFetchFilePS",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Cachable -\u003e IO ByteString",
        "fct-source": "src/Darcs-External.html#gzFetchFilePS",
        "fct-type": "function",
        "title": "gzFetchFilePS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "gzFetchFilePS",
        "normalized": "String-\u003eCachable-\u003eIO ByteString",
        "package": "darcs",
        "partial": "Fetch File PS",
        "signature": "String-\u003eCachable-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:haveSendmail",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "IO Bool",
        "fct-source": "src/Darcs-External.html#haveSendmail",
        "fct-type": "function",
        "title": "haveSendmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "haveSendmail",
        "normalized": "",
        "package": "darcs",
        "partial": "Sendmail",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:maybeURLCmd",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO (Maybe String)",
        "fct-source": "src/Darcs-External.html#maybeURLCmd",
        "fct-type": "function",
        "title": "maybeURLCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "maybeURLCmd",
        "normalized": "String-\u003eString-\u003eIO(Maybe String)",
        "package": "darcs",
        "partial": "URLCmd",
        "signature": "String-\u003eString-\u003eIO(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:pipeDoc",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String] -\u003e Doc -\u003e IO ExitCode",
        "fct-source": "src/Darcs-External.html#pipeDoc",
        "fct-type": "function",
        "title": "pipeDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "pipeDoc",
        "normalized": "String-\u003e[String]-\u003eDoc-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Doc",
        "signature": "String-\u003e[String]-\u003eDoc-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:pipeDocSSH",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "SshFilePath -\u003e [String] -\u003e Doc -\u003e IO ExitCode",
        "fct-source": "src/Darcs-External.html#pipeDocSSH",
        "fct-type": "function",
        "title": "pipeDocSSH"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "pipeDocSSH",
        "normalized": "SshFilePath-\u003e[String]-\u003eDoc-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Doc SSH",
        "signature": "SshFilePath-\u003e[String]-\u003eDoc-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:resendEmail",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e ByteString -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#resendEmail",
        "fct-type": "function",
        "title": "resendEmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "resendEmail",
        "normalized": "String-\u003eString-\u003eByteString-\u003eIO()",
        "package": "darcs",
        "partial": "Email",
        "signature": "String-\u003eString-\u003eByteString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:sendEmail",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e String -\u003e String -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#sendEmail",
        "fct-type": "function",
        "title": "sendEmail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "sendEmail",
        "normalized": "String-\u003eString-\u003eString-\u003eString-\u003eString-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Email",
        "signature": "String-\u003eString-\u003eString-\u003eString-\u003eString-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:sendEmailDoc",
      "description": {
        "fct-descr": "\u003cp\u003eSend an email, optionally containing a patch bundle\n   (more precisely, its description and the bundle itself)\n\u003c/p\u003e",
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String-\u003e String-\u003e String-\u003e String-\u003e String-\u003e Maybe (Doc, Doc)-\u003e Doc-\u003e IO ()",
        "fct-type": "function",
        "title": "sendEmailDoc"
      },
      "index": {
        "description": "Send an email optionally containing patch bundle more precisely its description and the bundle itself",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "sendEmailDoc",
        "normalized": "String-\u003eString-\u003eString-\u003eString-\u003eString-\u003eMaybe(Doc,Doc)-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Email Doc",
        "signature": "String-\u003eString-\u003eString-\u003eString-\u003eString-\u003eMaybe(Doc,Doc)-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:sendmailPath",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "IO String",
        "fct-source": "src/Darcs-External.html#sendmailPath",
        "fct-type": "function",
        "title": "sendmailPath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "sendmailPath",
        "normalized": "",
        "package": "darcs",
        "partial": "Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:signString",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Doc -\u003e IO Doc",
        "fct-source": "src/Darcs-External.html#signString",
        "fct-type": "function",
        "title": "signString"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "signString",
        "normalized": "[DarcsFlag]-\u003eDoc-\u003eIO Doc",
        "package": "darcs",
        "partial": "String",
        "signature": "[DarcsFlag]-\u003eDoc-\u003eIO Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:speculateFileOrUrl",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#speculateFileOrUrl",
        "fct-type": "function",
        "title": "speculateFileOrUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "speculateFileOrUrl",
        "normalized": "String-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "File Or Url",
        "signature": "String-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:verifyPS",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e ByteString -\u003e IO (Maybe ByteString)",
        "fct-source": "src/Darcs-External.html#verifyPS",
        "fct-type": "function",
        "title": "verifyPS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "verifyPS",
        "normalized": "[DarcsFlag]-\u003eByteString-\u003eIO(Maybe ByteString)",
        "package": "darcs",
        "partial": "PS",
        "signature": "[DarcsFlag]-\u003eByteString-\u003eIO(Maybe ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:viewDoc",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#viewDoc",
        "fct-type": "function",
        "title": "viewDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "viewDoc",
        "normalized": "Doc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc",
        "signature": "Doc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-External.html#v:viewDocWith",
      "description": {
        "fct-module": "Darcs.External",
        "fct-package": "darcs",
        "fct-signature": "Printers -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-External.html#viewDocWith",
        "fct-type": "function",
        "title": "viewDocWith"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs External",
        "module": "Darcs.External",
        "name": "viewDocWith",
        "normalized": "Printers-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc With",
        "signature": "Printers-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Flags.html",
        "fct-type": "module",
        "title": "Flags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Flags",
        "normalized": "",
        "package": "darcs",
        "partial": "Flags",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#t:Compression",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#Compression",
        "fct-type": "data",
        "title": "Compression"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Compression",
        "normalized": "",
        "package": "darcs",
        "partial": "Compression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#t:DarcsFlag",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003eDarcsFlag\u003c/a\u003e\u003c/code\u003e type is a list of all flags that can ever be\n passed to darcs, or to one of its commands.\n\u003c/p\u003e",
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "data",
        "title": "DarcsFlag"
      },
      "index": {
        "description": "The DarcsFlag type is list of all flags that can ever be passed to darcs or to one of its commands",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DarcsFlag",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Flag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#t:RemoteDarcs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#RemoteDarcs",
        "fct-type": "data",
        "title": "RemoteDarcs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RemoteDarcs",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Darcs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#t:ScanKnown",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "data",
        "title": "ScanKnown"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ScanKnown",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan Known",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#t:UseIndex",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#UseIndex",
        "fct-type": "data",
        "title": "UseIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UseIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AfterPatch",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AfterPatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AfterPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AfterPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "After Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AfterPattern",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AfterPattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AfterPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AfterPattern",
        "normalized": "",
        "package": "darcs",
        "partial": "After Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AfterTag",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AfterTag String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AfterTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AfterTag",
        "normalized": "",
        "package": "darcs",
        "partial": "After Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:All",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "All",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "All"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "All",
        "normalized": "",
        "package": "darcs",
        "partial": "All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AllowCaseOnly",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AllowCaseOnly",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowCaseOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AllowCaseOnly",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Case Only",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AllowConflicts",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AllowConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AllowConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AllowUnrelatedRepos",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AllowUnrelatedRepos",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowUnrelatedRepos"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AllowUnrelatedRepos",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Unrelated Repos",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AllowWindowsReserved",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AllowWindowsReserved",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AllowWindowsReserved"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AllowWindowsReserved",
        "normalized": "",
        "package": "darcs",
        "partial": "Allow Windows Reserved",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AmendUnrecord",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AmendUnrecord",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AmendUnrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AmendUnrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "Amend Unrecord",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AnyOrder",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AnyOrder",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AnyOrder"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AnyOrder",
        "normalized": "",
        "package": "darcs",
        "partial": "Any Order",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ApplyAs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ApplyAs String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ApplyAs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ApplyAs",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply As",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ApplyOnDisk",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ApplyOnDisk",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ApplyOnDisk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ApplyOnDisk",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply On Disk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AskDeps",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AskDeps",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AskDeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AskDeps",
        "normalized": "",
        "package": "darcs",
        "partial": "Ask Deps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AskPosthook",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AskPosthook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AskPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AskPosthook",
        "normalized": "",
        "package": "darcs",
        "partial": "Ask Posthook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:AskPrehook",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "AskPrehook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "AskPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "AskPrehook",
        "normalized": "",
        "package": "darcs",
        "partial": "Ask Prehook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Author",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Author String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Author"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Author",
        "normalized": "",
        "package": "darcs",
        "partial": "Author",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Bisect",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Bisect",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Bisect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Bisect",
        "normalized": "",
        "package": "darcs",
        "partial": "Bisect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Boring",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Boring",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Boring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Boring",
        "normalized": "",
        "package": "darcs",
        "partial": "Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Cc",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Cc String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Cc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Cc",
        "normalized": "",
        "package": "darcs",
        "partial": "Cc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ChangesToAllFiles",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ChangesToAllFiles",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ChangesToAllFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ChangesToAllFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Changes To All Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Charset",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Charset String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Charset"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Charset",
        "normalized": "",
        "package": "darcs",
        "partial": "Charset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Check",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Check",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Check"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Check",
        "normalized": "",
        "package": "darcs",
        "partial": "Check",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Complement",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Complement",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Complement"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Complement",
        "normalized": "",
        "package": "darcs",
        "partial": "Complement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Complete",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Complete",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Complete"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Complete",
        "normalized": "",
        "package": "darcs",
        "partial": "Complete",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Compress",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Compress",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Compress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Compress",
        "normalized": "",
        "package": "darcs",
        "partial": "Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Context",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Context AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Context"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Context",
        "normalized": "",
        "package": "darcs",
        "partial": "Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Count",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Count",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Count"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Count",
        "normalized": "",
        "package": "darcs",
        "partial": "Count",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:CreatorHash",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "CreatorHash String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "CreatorHash"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "CreatorHash",
        "normalized": "",
        "package": "darcs",
        "partial": "Creator Hash",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Debug",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Debug",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Debug"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Debug",
        "normalized": "",
        "package": "darcs",
        "partial": "Debug",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DebugHTTP",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DebugHTTP",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DebugHTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DebugHTTP",
        "normalized": "",
        "package": "darcs",
        "partial": "Debug HTTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DebugVerbose",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DebugVerbose",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DebugVerbose"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DebugVerbose",
        "normalized": "",
        "package": "darcs",
        "partial": "Debug Verbose",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DefaultRemoteDarcs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DefaultRemoteDarcs",
        "fct-source": "src/Darcs-Flags.html#RemoteDarcs",
        "fct-type": "function",
        "title": "DefaultRemoteDarcs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DefaultRemoteDarcs",
        "normalized": "",
        "package": "darcs",
        "partial": "Default Remote Darcs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DiffCmd",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DiffCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DiffCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DiffCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Diff Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DiffFlags",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DiffFlags String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DiffFlags"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DiffFlags",
        "normalized": "",
        "package": "darcs",
        "partial": "Diff Flags",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Directories",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Directories",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Directories"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Directories",
        "normalized": "",
        "package": "darcs",
        "partial": "Directories",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Disable",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Disable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Disable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Disable",
        "normalized": "",
        "package": "darcs",
        "partial": "Disable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DistName",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DistName String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DistName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DistName",
        "normalized": "",
        "package": "darcs",
        "partial": "Dist Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontAllowCaseOnly",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontAllowCaseOnly",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontAllowCaseOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontAllowCaseOnly",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Allow Case Only",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontAllowWindowsReserved",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontAllowWindowsReserved",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontAllowWindowsReserved"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontAllowWindowsReserved",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Allow Windows Reserved",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontGrabDeps",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontGrabDeps",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontGrabDeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontGrabDeps",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Grab Deps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontIgnoreTimes",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontIgnoreTimes",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontIgnoreTimes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontIgnoreTimes",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Ignore Times",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontPromptForDependencies",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontPromptForDependencies",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontPromptForDependencies"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontPromptForDependencies",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Prompt For Dependencies",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontRestrictPaths",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontRestrictPaths",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontRestrictPaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontRestrictPaths",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Restrict Paths",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontRmLogFile",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontRmLogFile",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontRmLogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontRmLogFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Rm Log File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DontSetScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DontSetScriptsExecutable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DontSetScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DontSetScriptsExecutable",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Set Scripts Executable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:DryRun",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "DryRun",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "DryRun"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "DryRun",
        "normalized": "",
        "package": "darcs",
        "partial": "Dry Run",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:EditDescription",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "EditDescription",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "EditDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "EditDescription",
        "normalized": "",
        "package": "darcs",
        "partial": "Edit Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:EditLongComment",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "EditLongComment",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "EditLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "EditLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "Edit Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ExternalMerge",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ExternalMerge String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ExternalMerge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ExternalMerge",
        "normalized": "",
        "package": "darcs",
        "partial": "External Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Files",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Files",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Files"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Files",
        "normalized": "",
        "package": "darcs",
        "partial": "Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:FixFilePath",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "FixFilePath AbsolutePath AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "FixFilePath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "FixFilePath",
        "normalized": "",
        "package": "darcs",
        "partial": "Fix File Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ForceReplace",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ForceReplace",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ForceReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ForceReplace",
        "normalized": "",
        "package": "darcs",
        "partial": "Force Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Forward",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Forward",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Forward"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Forward",
        "normalized": "",
        "package": "darcs",
        "partial": "Forward",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:GenContext",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "GenContext",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "GenContext"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "GenContext",
        "normalized": "",
        "package": "darcs",
        "partial": "Gen Context",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:GzipCompression",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "GzipCompression",
        "fct-source": "src/Darcs-Flags.html#Compression",
        "fct-type": "function",
        "title": "GzipCompression"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "GzipCompression",
        "normalized": "",
        "package": "darcs",
        "partial": "Gzip Compression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:HappyForwarding",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "HappyForwarding",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "HappyForwarding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "HappyForwarding",
        "normalized": "",
        "package": "darcs",
        "partial": "Happy Forwarding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Help",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Help",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Help"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Help",
        "normalized": "",
        "package": "darcs",
        "partial": "Help",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:HumanReadable",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "HumanReadable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "HumanReadable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "HumanReadable",
        "normalized": "",
        "package": "darcs",
        "partial": "Human Readable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:IgnoreIndex",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "IgnoreIndex",
        "fct-source": "src/Darcs-Flags.html#UseIndex",
        "fct-type": "function",
        "title": "IgnoreIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "IgnoreIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Ignore Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:IgnoreTimes",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "IgnoreTimes",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "IgnoreTimes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "IgnoreTimes",
        "normalized": "",
        "package": "darcs",
        "partial": "Ignore Times",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:InReplyTo",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "InReplyTo String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "InReplyTo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "InReplyTo",
        "normalized": "",
        "package": "darcs",
        "partial": "In Reply To",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Interactive",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Interactive",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Interactive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Interactive",
        "normalized": "",
        "package": "darcs",
        "partial": "Interactive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Intersection",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Intersection",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Intersection"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Intersection",
        "normalized": "",
        "package": "darcs",
        "partial": "Intersection",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:JustThisRepo",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "JustThisRepo",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "JustThisRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "JustThisRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Just This Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:KeepDate",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "KeepDate",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "KeepDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "KeepDate",
        "normalized": "",
        "package": "darcs",
        "partial": "Keep Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:LastN",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "LastN Int",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LastN"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "LastN",
        "normalized": "",
        "package": "darcs",
        "partial": "Last",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Lazy",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Lazy",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Lazy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Lazy",
        "normalized": "",
        "package": "darcs",
        "partial": "Lazy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:LeaveTestDir",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "LeaveTestDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LeaveTestDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "LeaveTestDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Leave Test Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ListOptions",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ListOptions",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "ListOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ListOptions",
        "normalized": "",
        "package": "darcs",
        "partial": "List Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:LogFile",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "LogFile AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "LogFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Log File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:LookForAdds",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "LookForAdds",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "LookForAdds"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "LookForAdds",
        "normalized": "",
        "package": "darcs",
        "partial": "Look For Adds",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:MachineReadable",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "MachineReadable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "MachineReadable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "MachineReadable",
        "normalized": "",
        "package": "darcs",
        "partial": "Machine Readable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:MarkConflicts",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "MarkConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "MarkConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "MarkConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Mark Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:MaxCount",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "MaxCount Int",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "MaxCount"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "MaxCount",
        "normalized": "",
        "package": "darcs",
        "partial": "Max Count",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NewRepo",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NewRepo String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NewRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NewRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "New Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoAllowConflicts",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoAllowConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoAllowConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoAllowConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "No Allow Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoAmendUnrecord",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoAmendUnrecord",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoAmendUnrecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoAmendUnrecord",
        "normalized": "",
        "package": "darcs",
        "partial": "No Amend Unrecord",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoAskDeps",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoAskDeps",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoAskDeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoAskDeps",
        "normalized": "",
        "package": "darcs",
        "partial": "No Ask Deps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoCache",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoCache",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoCache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoCache",
        "normalized": "",
        "package": "darcs",
        "partial": "No Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoCompress",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoCompress",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoCompress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoCompress",
        "normalized": "",
        "package": "darcs",
        "partial": "No Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoCompression",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoCompression",
        "fct-source": "src/Darcs-Flags.html#Compression",
        "fct-type": "function",
        "title": "NoCompression"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoCompression",
        "normalized": "",
        "package": "darcs",
        "partial": "No Compression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoDirectories",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoDirectories",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoDirectories"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoDirectories",
        "normalized": "",
        "package": "darcs",
        "partial": "No Directories",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoEditDescription",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoEditDescription",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoEditDescription"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoEditDescription",
        "normalized": "",
        "package": "darcs",
        "partial": "No Edit Description",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoEditLongComment",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoEditLongComment",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoEditLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoEditLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "No Edit Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoFiles",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoFiles",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "No Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoHTTPPipelining",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoHTTPPipelining",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoHTTPPipelining"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoHTTPPipelining",
        "normalized": "",
        "package": "darcs",
        "partial": "No HTTPPipelining",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoHappyForwarding",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoHappyForwarding",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoHappyForwarding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoHappyForwarding",
        "normalized": "",
        "package": "darcs",
        "partial": "No Happy Forwarding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoKeepDate",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoKeepDate",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoKeepDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoKeepDate",
        "normalized": "",
        "package": "darcs",
        "partial": "No Keep Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoLeaveTestDir",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoLeaveTestDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoLeaveTestDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoLeaveTestDir",
        "normalized": "",
        "package": "darcs",
        "partial": "No Leave Test Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoLookForAdds",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoLookForAdds",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoLookForAdds"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoLookForAdds",
        "normalized": "",
        "package": "darcs",
        "partial": "No Look For Adds",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoPacks",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoPacks",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPacks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoPacks",
        "normalized": "",
        "package": "darcs",
        "partial": "No Packs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoPauseForGui",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoPauseForGui",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPauseForGui"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoPauseForGui",
        "normalized": "",
        "package": "darcs",
        "partial": "No Pause For Gui",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoPending",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoPending",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoPending",
        "normalized": "",
        "package": "darcs",
        "partial": "No Pending",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoPosthook",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoPosthook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoPosthook",
        "normalized": "",
        "package": "darcs",
        "partial": "No Posthook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoPrehook",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoPrehook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoPrehook",
        "normalized": "",
        "package": "darcs",
        "partial": "No Prehook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoRecordRollback",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoRecordRollback",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoRecordRollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoRecordRollback",
        "normalized": "",
        "package": "darcs",
        "partial": "No Record Rollback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoRecursive",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoRecursive",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoRecursive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoRecursive",
        "normalized": "",
        "package": "darcs",
        "partial": "No Recursive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoSetDefault",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoSetDefault Bool",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoSetDefault"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoSetDefault",
        "normalized": "",
        "package": "darcs",
        "partial": "No Set Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoSign",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoSign",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoSign"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoSign",
        "normalized": "",
        "package": "darcs",
        "partial": "No Sign",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoSummary",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoSummary",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoSummary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoSummary",
        "normalized": "",
        "package": "darcs",
        "partial": "No Summary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoTest",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoTest",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoTest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoTest",
        "normalized": "",
        "package": "darcs",
        "partial": "No Test",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NoUpdateWorking",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NoUpdateWorking",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NoUpdateWorking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NoUpdateWorking",
        "normalized": "",
        "package": "darcs",
        "partial": "No Update Working",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NonApply",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NonApply",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NonApply",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NonForce",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NonForce",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonForce"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NonForce",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Force",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NonUnified",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NonUnified",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonUnified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NonUnified",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Unified",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NonVerify",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NonVerify",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NonVerify"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NonVerify",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Verify",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NormalVerbosity",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NormalVerbosity",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NormalVerbosity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NormalVerbosity",
        "normalized": "",
        "package": "darcs",
        "partial": "Normal Verbosity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NullFlag",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NullFlag",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NullFlag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NullFlag",
        "normalized": "",
        "package": "darcs",
        "partial": "Null Flag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:NumberPatches",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "NumberPatches",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "NumberPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "NumberPatches",
        "normalized": "",
        "package": "darcs",
        "partial": "Number Patches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OnePatch",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OnePatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OnePatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OnePatch",
        "normalized": "",
        "package": "darcs",
        "partial": "One Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OnePattern",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OnePattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OnePattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OnePattern",
        "normalized": "",
        "package": "darcs",
        "partial": "One Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OneTag",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OneTag String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OneTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OneTag",
        "normalized": "",
        "package": "darcs",
        "partial": "One Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OnlyChangesToFiles",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OnlyChangesToFiles",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OnlyChangesToFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OnlyChangesToFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Only Changes To Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OptimizeHTTP",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OptimizeHTTP",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OptimizeHTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OptimizeHTTP",
        "normalized": "",
        "package": "darcs",
        "partial": "Optimize HTTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OptimizePristine",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OptimizePristine",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OptimizePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OptimizePristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Optimize Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Output",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Output AbsolutePathOrStd",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Output"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Output",
        "normalized": "",
        "package": "darcs",
        "partial": "Output",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:OutputAutoName",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "OutputAutoName AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "OutputAutoName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "OutputAutoName",
        "normalized": "",
        "package": "darcs",
        "partial": "Output Auto Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Packs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Packs",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Packs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Packs",
        "normalized": "",
        "package": "darcs",
        "partial": "Packs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PatchIndexRange",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PatchIndexRange Int Int",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PatchIndexRange"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PatchIndexRange",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Index Range",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PatchName",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PatchName String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PatchName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PatchName",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PauseForGui",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PauseForGui",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PauseForGui"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PauseForGui",
        "normalized": "",
        "package": "darcs",
        "partial": "Pause For Gui",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Pending",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Pending",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Pending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Pending",
        "normalized": "",
        "package": "darcs",
        "partial": "Pending",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Pipe",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Pipe",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Pipe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Pipe",
        "normalized": "",
        "package": "darcs",
        "partial": "Pipe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PosthookCmd",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PosthookCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PosthookCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PosthookCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Posthook Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PrehookCmd",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PrehookCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PrehookCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PrehookCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Prehook Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PromptForDependencies",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PromptForDependencies",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PromptForDependencies"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PromptForDependencies",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt For Dependencies",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:PromptLongComment",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "PromptLongComment",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "PromptLongComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "PromptLongComment",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt Long Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Quiet",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Quiet",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Quiet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Quiet",
        "normalized": "",
        "package": "darcs",
        "partial": "Quiet",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RecordRollback",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RecordRollback",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RecordRollback"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RecordRollback",
        "normalized": "",
        "package": "darcs",
        "partial": "Record Rollback",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Recursive",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Recursive",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Recursive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Recursive",
        "normalized": "",
        "package": "darcs",
        "partial": "Recursive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Relink",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Relink",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Relink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Relink",
        "normalized": "",
        "package": "darcs",
        "partial": "Relink",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RemoteDarcs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RemoteDarcs String",
        "fct-source": "src/Darcs-Flags.html#RemoteDarcs",
        "fct-type": "function",
        "title": "RemoteDarcs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RemoteDarcs",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Darcs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RemoteDarcsOpt",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RemoteDarcsOpt String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RemoteDarcsOpt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RemoteDarcsOpt",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Darcs Opt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RemoteRepo",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RemoteRepo String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RemoteRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RemoteRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Reorder",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Reorder",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Reorder"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Reorder",
        "normalized": "",
        "package": "darcs",
        "partial": "Reorder",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Repair",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Repair",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Repair"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Repair",
        "normalized": "",
        "package": "darcs",
        "partial": "Repair",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Reply",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Reply String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Reply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Reply",
        "normalized": "",
        "package": "darcs",
        "partial": "Reply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RestrictPaths",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RestrictPaths",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RestrictPaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RestrictPaths",
        "normalized": "",
        "package": "darcs",
        "partial": "Restrict Paths",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Reverse",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Reverse",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Reverse"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Reverse",
        "normalized": "",
        "package": "darcs",
        "partial": "Reverse",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RmLogFile",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RmLogFile",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RmLogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RmLogFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Rm Log File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RunPosthook",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RunPosthook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RunPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RunPosthook",
        "normalized": "",
        "package": "darcs",
        "partial": "Run Posthook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:RunPrehook",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "RunPrehook",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "RunPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "RunPrehook",
        "normalized": "",
        "package": "darcs",
        "partial": "Run Prehook",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ScanAll",
      "description": {
        "fct-descr": "\u003cp\u003eAll files, i.e. look for new ones\n\u003c/p\u003e",
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ScanAll",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "function",
        "title": "ScanAll"
      },
      "index": {
        "description": "All files i.e look for new ones",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ScanAll",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ScanBoring",
      "description": {
        "fct-descr": "\u003cp\u003eAll files, even boring ones\n\u003c/p\u003e",
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ScanBoring",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "function",
        "title": "ScanBoring"
      },
      "index": {
        "description": "All files even boring ones",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ScanBoring",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:ScanKnown",
      "description": {
        "fct-descr": "\u003cp\u003eJust files already known to darcs\n\u003c/p\u003e",
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "ScanKnown",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "function",
        "title": "ScanKnown"
      },
      "index": {
        "description": "Just files already known to darcs",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "ScanKnown",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan Known",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SendmailCmd",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SendmailCmd String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SendmailCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SendmailCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "Sendmail Cmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SetDefault",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SetDefault Bool",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SetDefault"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SetDefault",
        "normalized": "",
        "package": "darcs",
        "partial": "Set Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SetScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SetScriptsExecutable",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SetScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SetScriptsExecutable",
        "normalized": "",
        "package": "darcs",
        "partial": "Set Scripts Executable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SeveralPatch",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SeveralPatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SeveralPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SeveralPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Several Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SeveralPattern",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SeveralPattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SeveralPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SeveralPattern",
        "normalized": "",
        "package": "darcs",
        "partial": "Several Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Sibling",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Sibling AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Sibling"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Sibling",
        "normalized": "",
        "package": "darcs",
        "partial": "Sibling",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Sign",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Sign",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Sign"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Sign",
        "normalized": "",
        "package": "darcs",
        "partial": "Sign",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SignAs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SignAs String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SignAs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SignAs",
        "normalized": "",
        "package": "darcs",
        "partial": "Sign As",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SignSSL",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SignSSL String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SignSSL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SignSSL",
        "normalized": "",
        "package": "darcs",
        "partial": "Sign SSL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SkipBoring",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SkipBoring",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SkipBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SkipBoring",
        "normalized": "",
        "package": "darcs",
        "partial": "Skip Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:SkipConflicts",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "SkipConflicts",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "SkipConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "SkipConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Skip Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:StoreInMemory",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "StoreInMemory",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "StoreInMemory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "StoreInMemory",
        "normalized": "",
        "package": "darcs",
        "partial": "Store In Memory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Subject",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Subject String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Subject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Subject",
        "normalized": "",
        "package": "darcs",
        "partial": "Subject",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Summary",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Summary",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Summary",
        "normalized": "",
        "package": "darcs",
        "partial": "Summary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:TagName",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "TagName String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "TagName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "TagName",
        "normalized": "",
        "package": "darcs",
        "partial": "Tag Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Target",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Target String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Target"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Target",
        "normalized": "",
        "package": "darcs",
        "partial": "Target",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Test",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Test",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Test"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Test",
        "normalized": "",
        "package": "darcs",
        "partial": "Test",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Timings",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Timings",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Timings"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Timings",
        "normalized": "",
        "package": "darcs",
        "partial": "Timings",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Toks",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Toks String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Toks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Toks",
        "normalized": "",
        "package": "darcs",
        "partial": "Toks",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UMask",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UMask String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UMask"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UMask",
        "normalized": "",
        "package": "darcs",
        "partial": "UMask",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UnCompress",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UnCompress",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UnCompress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UnCompress",
        "normalized": "",
        "package": "darcs",
        "partial": "Un Compress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Unified",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Unified",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Unified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Unified",
        "normalized": "",
        "package": "darcs",
        "partial": "Unified",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Union",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Union",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Union"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Union",
        "normalized": "",
        "package": "darcs",
        "partial": "Union",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UpToPatch",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UpToPatch String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpToPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UpToPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Up To Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UpToPattern",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UpToPattern PatchMatch",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpToPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UpToPattern",
        "normalized": "",
        "package": "darcs",
        "partial": "Up To Pattern",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UpToTag",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UpToTag String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpToTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UpToTag",
        "normalized": "",
        "package": "darcs",
        "partial": "Up To Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UpgradeFormat",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UpgradeFormat",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UpgradeFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UpgradeFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Upgrade Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UseFormat2",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UseFormat2",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseFormat2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UseFormat2",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UseHashedInventory",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UseHashedInventory",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseHashedInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UseHashedInventory",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Hashed Inventory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UseIndex",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UseIndex",
        "fct-source": "src/Darcs-Flags.html#UseIndex",
        "fct-type": "function",
        "title": "UseIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UseIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UseNoWorkingDir",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UseNoWorkingDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseNoWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UseNoWorkingDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Use No Working Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:UseWorkingDir",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "UseWorkingDir",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "UseWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "UseWorkingDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Working Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Verbose",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Verbose",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Verbose"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Verbose",
        "normalized": "",
        "package": "darcs",
        "partial": "Verbose",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:Verify",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "Verify AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "Verify"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "Verify",
        "normalized": "",
        "package": "darcs",
        "partial": "Verify",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:VerifySSL",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "VerifySSL AbsolutePath",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "VerifySSL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "VerifySSL",
        "normalized": "",
        "package": "darcs",
        "partial": "Verify SSL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:WorkRepoDir",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "WorkRepoDir String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "WorkRepoDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "WorkRepoDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Work Repo Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:WorkRepoUrl",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "WorkRepoUrl String",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "WorkRepoUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "WorkRepoUrl",
        "normalized": "",
        "package": "darcs",
        "partial": "Work Repo Url",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:XMLOutput",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "XMLOutput",
        "fct-source": "src/Darcs-Flags.html#DarcsFlag",
        "fct-type": "function",
        "title": "XMLOutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "XMLOutput",
        "normalized": "",
        "package": "darcs",
        "partial": "XMLOutput",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:compression",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Compression",
        "fct-source": "src/Darcs-Flags.html#compression",
        "fct-type": "function",
        "title": "compression"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "compression",
        "normalized": "[DarcsFlag]-\u003eCompression",
        "package": "darcs",
        "partial": "",
        "signature": "[DarcsFlag]-\u003eCompression"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:defaultFlag",
      "description": {
        "fct-descr": "\u003cp\u003eSet flags to a default value, but only one has not already been provided\n\u003c/p\u003e",
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag]-\u003e DarcsFlag-\u003e [DarcsFlag]-\u003e [DarcsFlag]",
        "fct-type": "function",
        "title": "defaultFlag"
      },
      "index": {
        "description": "Set flags to default value but only one has not already been provided",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "defaultFlag",
        "normalized": "[DarcsFlag]-\u003eDarcsFlag-\u003e[DarcsFlag]-\u003e[DarcsFlag]",
        "package": "darcs",
        "partial": "Flag",
        "signature": "[DarcsFlag]-\u003eDarcsFlag-\u003e[DarcsFlag]-\u003e[DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:diffingOpts",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e (UseIndex, ScanKnown)",
        "fct-source": "src/Darcs-Flags.html#diffingOpts",
        "fct-type": "function",
        "title": "diffingOpts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "diffingOpts",
        "normalized": "[DarcsFlag]-\u003e(UseIndex,ScanKnown)",
        "package": "darcs",
        "partial": "Opts",
        "signature": "[DarcsFlag]-\u003e(UseIndex,ScanKnown)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:doAllowCaseOnly",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#doAllowCaseOnly",
        "fct-type": "function",
        "title": "doAllowCaseOnly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "doAllowCaseOnly",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Allow Case Only",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:doAllowWindowsReserved",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#doAllowWindowsReserved",
        "fct-type": "function",
        "title": "doAllowWindowsReserved"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "doAllowWindowsReserved",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Allow Windows Reserved",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:doHappyForwarding",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#doHappyForwarding",
        "fct-type": "function",
        "title": "doHappyForwarding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "doHappyForwarding",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Happy Forwarding",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:doReverse",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#doReverse",
        "fct-type": "function",
        "title": "doReverse"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "doReverse",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Reverse",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:includeBoring",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#includeBoring",
        "fct-type": "function",
        "title": "includeBoring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "includeBoring",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Boring",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:isInteractive",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#isInteractive",
        "fct-type": "function",
        "title": "isInteractive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "isInteractive",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Interactive",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:isNotUnified",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#isNotUnified",
        "fct-type": "function",
        "title": "isNotUnified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "isNotUnified",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Not Unified",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:isUnified",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#isUnified",
        "fct-type": "function",
        "title": "isUnified"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "isUnified",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Unified",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:maxCount",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe Int",
        "fct-source": "src/Darcs-Flags.html#maxCount",
        "fct-type": "function",
        "title": "maxCount"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "maxCount",
        "normalized": "[DarcsFlag]-\u003eMaybe Int",
        "package": "darcs",
        "partial": "Count",
        "signature": "[DarcsFlag]-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:remoteDarcs",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RemoteDarcs",
        "fct-source": "src/Darcs-Flags.html#remoteDarcs",
        "fct-type": "function",
        "title": "remoteDarcs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "remoteDarcs",
        "normalized": "[DarcsFlag]-\u003eRemoteDarcs",
        "package": "darcs",
        "partial": "Darcs",
        "signature": "[DarcsFlag]-\u003eRemoteDarcs"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:removeFromAmended",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#removeFromAmended",
        "fct-type": "function",
        "title": "removeFromAmended"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "removeFromAmended",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "From Amended",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:rollbackInWorkingDir",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#rollbackInWorkingDir",
        "fct-type": "function",
        "title": "rollbackInWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "rollbackInWorkingDir",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "In Working Dir",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:showChangesOnlyToFiles",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#showChangesOnlyToFiles",
        "fct-type": "function",
        "title": "showChangesOnlyToFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "showChangesOnlyToFiles",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Changes Only To Files",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:usePacks",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#usePacks",
        "fct-type": "function",
        "title": "usePacks"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "usePacks",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Packs",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:wantExternalMerge",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-Flags.html#wantExternalMerge",
        "fct-type": "function",
        "title": "wantExternalMerge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "wantExternalMerge",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "External Merge",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:wantGuiPause",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#wantGuiPause",
        "fct-type": "function",
        "title": "wantGuiPause"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "wantGuiPause",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Gui Pause",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:willIgnoreTimes",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#willIgnoreTimes",
        "fct-type": "function",
        "title": "willIgnoreTimes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "willIgnoreTimes",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Ignore Times",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Flags.html#v:willRemoveLogFile",
      "description": {
        "fct-module": "Darcs.Flags",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Flags.html#willRemoveLogFile",
        "fct-type": "function",
        "title": "willRemoveLogFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Flags",
        "module": "Darcs.Flags",
        "name": "willRemoveLogFile",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Remove Log File",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis was originally Tomasz Zielonka's AtExit module, slightly generalised\n to include global variables.  Here, we attempt to cover broad, global\n features, such as exit handlers.  These features slightly break the Haskellian\n purity of darcs, in favour of programming convenience.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Global.html",
        "fct-type": "module",
        "title": "Global"
      },
      "index": {
        "description": "This was originally Tomasz Zielonka AtExit module slightly generalised to include global variables Here we attempt to cover broad global features such as exit handlers These features slightly break the Haskellian purity of darcs in favour of programming convenience",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "Global",
        "normalized": "",
        "package": "darcs",
        "partial": "Global",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#t:SshSettings",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Global.html#SshSettings",
        "fct-type": "data",
        "title": "SshSettings"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "SshSettings",
        "normalized": "",
        "package": "darcs",
        "partial": "Ssh Settings",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:SshSettings",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "SshSettings",
        "fct-source": "src/Darcs-Global.html#SshSettings",
        "fct-type": "function",
        "title": "SshSettings"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "SshSettings",
        "normalized": "",
        "package": "darcs",
        "partial": "Ssh Settings",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:addBadSource",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#addBadSource",
        "fct-type": "function",
        "title": "addBadSource"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "addBadSource",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Bad Source",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:addCRCWarning",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#addCRCWarning",
        "fct-type": "function",
        "title": "addCRCWarning"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "addCRCWarning",
        "normalized": "FilePath-\u003eIO()",
        "package": "darcs",
        "partial": "CRCWarning",
        "signature": "FilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:addReachableSource",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#addReachableSource",
        "fct-type": "function",
        "title": "addReachableSource"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "addReachableSource",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Reachable Source",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:atexit",
      "description": {
        "fct-descr": "\u003cp\u003eRegisters an IO action to run just before darcs exits. Useful for removing\n temporary files and directories, for example. Referenced in Issue1914.\n\u003c/p\u003e",
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO () -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#atexit",
        "fct-type": "function",
        "title": "atexit"
      },
      "index": {
        "description": "Registers an IO action to run just before darcs exits Useful for removing temporary files and directories for example Referenced in Issue1914",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "atexit",
        "normalized": "IO()-\u003eIO()",
        "package": "darcs",
        "partial": "",
        "signature": "IO()-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:darcsdir",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Global.html#darcsdir",
        "fct-type": "function",
        "title": "darcsdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "darcsdir",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:debugFail",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO a",
        "fct-source": "src/Darcs-Global.html#debugFail",
        "fct-type": "function",
        "title": "debugFail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "debugFail",
        "normalized": "String-\u003eIO a",
        "package": "darcs",
        "partial": "Fail",
        "signature": "String-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:debugMessage",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#debugMessage",
        "fct-type": "function",
        "title": "debugMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "debugMessage",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Message",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:defaultSsh",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "SshSettings",
        "fct-source": "src/Darcs-Global.html#defaultSsh",
        "fct-type": "function",
        "title": "defaultSsh"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "defaultSsh",
        "normalized": "",
        "package": "darcs",
        "partial": "Ssh",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:getBadSourcesList",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Global.html#getBadSourcesList",
        "fct-type": "function",
        "title": "getBadSourcesList"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "getBadSourcesList",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Bad Sources List",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:getCRCWarnings",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO [FilePath]",
        "fct-source": "src/Darcs-Global.html#getCRCWarnings",
        "fct-type": "function",
        "title": "getCRCWarnings"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "getCRCWarnings",
        "normalized": "IO[FilePath]",
        "package": "darcs",
        "partial": "CRCWarnings",
        "signature": "IO[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:isBadSource",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO (String -\u003e Bool)",
        "fct-source": "src/Darcs-Global.html#isBadSource",
        "fct-type": "function",
        "title": "isBadSource"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "isBadSource",
        "normalized": "IO(String-\u003eBool)",
        "package": "darcs",
        "partial": "Bad Source",
        "signature": "IO(String-\u003eBool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:isReachableSource",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO (String -\u003e Bool)",
        "fct-source": "src/Darcs-Global.html#isReachableSource",
        "fct-type": "function",
        "title": "isReachableSource"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "isReachableSource",
        "normalized": "IO(String-\u003eBool)",
        "package": "darcs",
        "partial": "Reachable Source",
        "signature": "IO(String-\u003eBool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:putTiming",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Global.html#putTiming",
        "fct-type": "function",
        "title": "putTiming"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "putTiming",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Timing",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:resetCRCWarnings",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Global.html#resetCRCWarnings",
        "fct-type": "function",
        "title": "resetCRCWarnings"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "resetCRCWarnings",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "CRCWarnings",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:scp",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Global.html#SshSettings",
        "fct-type": "function",
        "title": "scp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "scp",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:setDebugMode",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Global.html#setDebugMode",
        "fct-type": "function",
        "title": "setDebugMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "setDebugMode",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Debug Mode",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:setTimingsMode",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Global.html#setTimingsMode",
        "fct-type": "function",
        "title": "setTimingsMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "setTimingsMode",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Timings Mode",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:sftp",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Global.html#SshSettings",
        "fct-type": "function",
        "title": "sftp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "sftp",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:ssh",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Global.html#SshSettings",
        "fct-type": "function",
        "title": "ssh"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "ssh",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:timingsMode",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "Bool",
        "fct-source": "src/Darcs-Global.html#timingsMode",
        "fct-type": "function",
        "title": "timingsMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "timingsMode",
        "normalized": "",
        "package": "darcs",
        "partial": "Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:whenDebugMode",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO () -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#whenDebugMode",
        "fct-type": "function",
        "title": "whenDebugMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "whenDebugMode",
        "normalized": "IO()-\u003eIO()",
        "package": "darcs",
        "partial": "Debug Mode",
        "signature": "IO()-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:windows",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "Bool",
        "fct-source": "src/Darcs-Global.html#windows",
        "fct-type": "function",
        "title": "windows"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "windows",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:withAtexit",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a",
        "fct-source": "src/Darcs-Global.html#withAtexit",
        "fct-type": "function",
        "title": "withAtexit"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "withAtexit",
        "normalized": "IO a-\u003eIO a",
        "package": "darcs",
        "partial": "Atexit",
        "signature": "IO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Global.html#v:withDebugMode",
      "description": {
        "fct-module": "Darcs.Global",
        "fct-package": "darcs",
        "fct-signature": "(Bool -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Global.html#withDebugMode",
        "fct-type": "function",
        "title": "withDebugMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Global",
        "module": "Darcs.Global",
        "name": "withDebugMode",
        "normalized": "(Bool-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Debug Mode",
        "signature": "(Bool-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-IO.html#",
      "description": {
        "fct-module": "Darcs.IO",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-IO.html",
        "fct-type": "module",
        "title": "IO"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs IO",
        "module": "Darcs.IO",
        "name": "IO",
        "normalized": "",
        "package": "darcs",
        "partial": "IO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-IO.html#v:runSilently",
      "description": {
        "fct-module": "Darcs.IO",
        "fct-package": "darcs",
        "fct-signature": "SilentIO a -\u003e IO a",
        "fct-source": "src/Darcs-IO.html#runSilently",
        "fct-type": "function",
        "title": "runSilently"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs IO",
        "module": "Darcs.IO",
        "name": "runSilently",
        "normalized": "SilentIO a-\u003eIO a",
        "package": "darcs",
        "partial": "Silently",
        "signature": "SilentIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-IO.html#v:runTolerantly",
      "description": {
        "fct-module": "Darcs.IO",
        "fct-package": "darcs",
        "fct-signature": "TolerantIO a -\u003e IO a",
        "fct-source": "src/Darcs-IO.html#runTolerantly",
        "fct-type": "function",
        "title": "runTolerantly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs IO",
        "module": "Darcs.IO",
        "name": "runTolerantly",
        "normalized": "TolerantIO a-\u003eIO a",
        "package": "darcs",
        "partial": "Tolerantly",
        "signature": "TolerantIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Lock.html",
        "fct-type": "module",
        "title": "Lock"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "Lock",
        "normalized": "",
        "package": "darcs",
        "partial": "Lock",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:appendBinFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#appendBinFile",
        "fct-type": "function",
        "title": "appendBinFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "appendBinFile",
        "normalized": "a-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Bin File",
        "signature": "p-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:appendDocBinFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#appendDocBinFile",
        "fct-type": "function",
        "title": "appendDocBinFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "appendDocBinFile",
        "normalized": "a-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc Bin File",
        "signature": "p-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:appendToFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e (Handle -\u003e IO ()) -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#appendToFile",
        "fct-type": "function",
        "title": "appendToFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "appendToFile",
        "normalized": "a-\u003e(Handle-\u003eIO())-\u003eIO()",
        "package": "darcs",
        "partial": "To File",
        "signature": "p-\u003e(Handle-\u003eIO())-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:canonFilename",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO FilePath",
        "fct-source": "src/Darcs-Compat.html#canonFilename",
        "fct-type": "function",
        "title": "canonFilename"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "canonFilename",
        "normalized": "FilePath-\u003eIO FilePath",
        "package": "darcs",
        "partial": "Filename",
        "signature": "FilePath-\u003eIO FilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:editText",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e ByteString -\u003e IO ByteString",
        "fct-source": "src/Darcs-Lock.html#editText",
        "fct-type": "function",
        "title": "editText"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "editText",
        "normalized": "String-\u003eByteString-\u003eIO ByteString",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eByteString-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:environmentHelpKeepTmpdir",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Lock.html#environmentHelpKeepTmpdir",
        "fct-type": "function",
        "title": "environmentHelpKeepTmpdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "environmentHelpKeepTmpdir",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Keep Tmpdir",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:environmentHelpTmpdir",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Lock.html#environmentHelpTmpdir",
        "fct-type": "function",
        "title": "environmentHelpTmpdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "environmentHelpTmpdir",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Tmpdir",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:gzWriteAtomicFilePS",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e ByteString -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#gzWriteAtomicFilePS",
        "fct-type": "function",
        "title": "gzWriteAtomicFilePS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "gzWriteAtomicFilePS",
        "normalized": "a-\u003eByteString-\u003eIO()",
        "package": "darcs",
        "partial": "Write Atomic File PS",
        "signature": "p-\u003eByteString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:gzWriteAtomicFilePSs",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e [ByteString] -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#gzWriteAtomicFilePSs",
        "fct-type": "function",
        "title": "gzWriteAtomicFilePSs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "gzWriteAtomicFilePSs",
        "normalized": "a-\u003e[ByteString]-\u003eIO()",
        "package": "darcs",
        "partial": "Write Atomic File PSs",
        "signature": "p-\u003e[ByteString]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:gzWriteDocFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#gzWriteDocFile",
        "fct-type": "function",
        "title": "gzWriteDocFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "gzWriteDocFile",
        "normalized": "a-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Write Doc File",
        "signature": "p-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:maybeRelink",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO Bool",
        "fct-source": "src/Darcs-Compat.html#maybeRelink",
        "fct-type": "function",
        "title": "maybeRelink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "maybeRelink",
        "normalized": "String-\u003eString-\u003eIO Bool",
        "package": "darcs",
        "partial": "Relink",
        "signature": "String-\u003eString-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:readBinFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO String",
        "fct-source": "src/Darcs-Lock.html#readBinFile",
        "fct-type": "function",
        "title": "readBinFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "readBinFile",
        "normalized": "a-\u003eIO String",
        "package": "darcs",
        "partial": "Bin File",
        "signature": "p-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:readDocBinFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO Doc",
        "fct-source": "src/Darcs-Lock.html#readDocBinFile",
        "fct-type": "function",
        "title": "readDocBinFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "readDocBinFile",
        "normalized": "a-\u003eIO Doc",
        "package": "darcs",
        "partial": "Doc Bin File",
        "signature": "p-\u003eIO Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:readLocaleFile",
      "description": {
        "fct-descr": "\u003cp\u003eReads a file. Differs from readBinFile in that it interprets the file in\n   the current locale instead of as ISO-8859-1.\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO String",
        "fct-source": "src/Darcs-Lock.html#readLocaleFile",
        "fct-type": "function",
        "title": "readLocaleFile"
      },
      "index": {
        "description": "Reads file Differs from readBinFile in that it interprets the file in the current locale instead of as ISO-8859-1",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "readLocaleFile",
        "normalized": "a-\u003eIO String",
        "package": "darcs",
        "partial": "Locale File",
        "signature": "p-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:removeFileMayNotExist",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#removeFileMayNotExist",
        "fct-type": "function",
        "title": "removeFileMayNotExist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "removeFileMayNotExist",
        "normalized": "a-\u003eIO()",
        "package": "darcs",
        "partial": "File May Not Exist",
        "signature": "p-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:rmRecursive",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#rmRecursive",
        "fct-type": "function",
        "title": "rmRecursive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "rmRecursive",
        "normalized": "FilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Recursive",
        "signature": "FilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:tempdirLoc",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "IO FilePath",
        "fct-source": "src/Darcs-Lock.html#tempdirLoc",
        "fct-type": "function",
        "title": "tempdirLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "tempdirLoc",
        "normalized": "",
        "package": "darcs",
        "partial": "Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withDelayedDir",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (AbsolutePath -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withDelayedDir",
        "fct-type": "function",
        "title": "withDelayedDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withDelayedDir",
        "normalized": "String-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Delayed Dir",
        "signature": "String-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withLock",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withLock",
        "fct-type": "function",
        "title": "withLock"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withLock",
        "normalized": "String-\u003eIO a-\u003eIO a",
        "package": "darcs",
        "partial": "Lock",
        "signature": "String-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withLockCanFail",
      "description": {
        "fct-descr": "\u003cp\u003eTries to perform some task if it can obtain the lock,\n Otherwise, just gives up without doing the task\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO a -\u003e IO (Either () a)",
        "fct-source": "src/Darcs-Lock.html#withLockCanFail",
        "fct-type": "function",
        "title": "withLockCanFail"
      },
      "index": {
        "description": "Tries to perform some task if it can obtain the lock Otherwise just gives up without doing the task",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withLockCanFail",
        "normalized": "String-\u003eIO a-\u003eIO(Either()a)",
        "package": "darcs",
        "partial": "Lock Can Fail",
        "signature": "String-\u003eIO a-\u003eIO(Either()a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withNamedTemp",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (String -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withNamedTemp",
        "fct-type": "function",
        "title": "withNamedTemp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withNamedTemp",
        "normalized": "String-\u003e(String-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Named Temp",
        "signature": "String-\u003e(String-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withOpenTemp",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ewithOpenTemp\u003c/a\u003e\u003c/code\u003e creates a temporary file, and opens it.\n Both of them run their argument and then delete the file.  Also,\n both of them (to my knowledge) are not susceptible to race conditions on\n the temporary file (as long as you never delete the temporary file; that\n would reintroduce a race condition).\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "((Handle, String) -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withOpenTemp",
        "fct-type": "function",
        "title": "withOpenTemp"
      },
      "index": {
        "description": "withOpenTemp creates temporary file and opens it Both of them run their argument and then delete the file Also both of them to my knowledge are not susceptible to race conditions on the temporary file as long as you never delete the temporary file that would reintroduce race condition",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withOpenTemp",
        "normalized": "((Handle,String)-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Open Temp",
        "signature": "((Handle,String)-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withPermDir",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ewithPermDir\u003c/a\u003e\u003c/code\u003e is like \u003ccode\u003e\u003ca\u003ewithTempDir\u003c/a\u003e\u003c/code\u003e, except that it doesn't\n delete the directory afterwards.\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (AbsolutePath -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withPermDir",
        "fct-type": "function",
        "title": "withPermDir"
      },
      "index": {
        "description": "withPermDir is like withTempDir except that it doesn delete the directory afterwards",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withPermDir",
        "normalized": "String-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Perm Dir",
        "signature": "String-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withStdoutTemp",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "(String -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withStdoutTemp",
        "fct-type": "function",
        "title": "withStdoutTemp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withStdoutTemp",
        "normalized": "(String-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Stdout Temp",
        "signature": "(String-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withTemp",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ewithTemp\u003c/a\u003e\u003c/code\u003e safely creates an empty file (not open for writing) and\n returns its name.\n\u003c/p\u003e\u003cp\u003eThe temp file operations are rather similar to the locking operations, in\n that they both should always try to clean up, so exitWith causes trouble.\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "(String -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withTemp",
        "fct-type": "function",
        "title": "withTemp"
      },
      "index": {
        "description": "withTemp safely creates an empty file not open for writing and returns its name The temp file operations are rather similar to the locking operations in that they both should always try to clean up so exitWith causes trouble",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withTemp",
        "normalized": "(String-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Temp",
        "signature": "(String-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:withTempDir",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ewithTempDir\u003c/a\u003e\u003c/code\u003e creates an empty directory and then removes it when it\n is no longer needed.  withTempDir creates a temporary directory.  The\n location of that directory is determined by the contents of\n _darcs\u003cem\u003eprefs\u003c/em\u003etmpdir, if it exists, otherwise by \u003ccode\u003e$DARCS_TMPDIR\u003c/code\u003e, and if\n that doesn't exist then whatever your operating system considers to be a\n a temporary directory (e.g. \u003ccode\u003e$TMPDIR\u003c/code\u003e under Unix, \u003ccode\u003e$TEMP\u003c/code\u003e under\n Windows).\n\u003c/p\u003e\u003cp\u003eIf none of those exist it creates the temporary directory\n in the current directory, unless the current directory is under a _darcs\n directory, in which case the temporary directory in the parent of the highest\n _darcs directory to avoid accidentally corrupting darcs's internals.\n This should not fail, but if it does indeed fail, we go ahead and use the\n current directory anyway. If \u003ccode\u003e$DARCS_KEEP_TMPDIR\u003c/code\u003e variable is set\n temporary directory is not removed, this can be useful for debugging.\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (AbsolutePath -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Lock.html#withTempDir",
        "fct-type": "function",
        "title": "withTempDir"
      },
      "index": {
        "description": "withTempDir creates an empty directory and then removes it when it is no longer needed withTempDir creates temporary directory The location of that directory is determined by the contents of darcs prefs tmpdir if it exists otherwise by DARCS TMPDIR and if that doesn exist then whatever your operating system considers to be temporary directory e.g TMPDIR under Unix TEMP under Windows If none of those exist it creates the temporary directory in the current directory unless the current directory is under darcs directory in which case the temporary directory in the parent of the highest darcs directory to avoid accidentally corrupting darcs internals This should not fail but if it does indeed fail we go ahead and use the current directory anyway If DARCS KEEP TMPDIR variable is set temporary directory is not removed this can be useful for debugging",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "withTempDir",
        "normalized": "String-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Temp Dir",
        "signature": "String-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:worldReadableTemp",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO String",
        "fct-source": "src/Darcs-Lock.html#worldReadableTemp",
        "fct-type": "function",
        "title": "worldReadableTemp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "worldReadableTemp",
        "normalized": "String-\u003eIO String",
        "package": "darcs",
        "partial": "Readable Temp",
        "signature": "String-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:writeAtomicFilePS",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e ByteString -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#writeAtomicFilePS",
        "fct-type": "function",
        "title": "writeAtomicFilePS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "writeAtomicFilePS",
        "normalized": "a-\u003eByteString-\u003eIO()",
        "package": "darcs",
        "partial": "Atomic File PS",
        "signature": "p-\u003eByteString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:writeBinFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#writeBinFile",
        "fct-type": "function",
        "title": "writeBinFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "writeBinFile",
        "normalized": "a-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Bin File",
        "signature": "p-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:writeDocBinFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#writeDocBinFile",
        "fct-type": "function",
        "title": "writeDocBinFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "writeDocBinFile",
        "normalized": "a-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc Bin File",
        "signature": "p-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:writeLocaleFile",
      "description": {
        "fct-descr": "\u003cp\u003eWrites a file. Differs from writeBinFile in that it writes the string\n   encoded with the current locale instead of what GHC thinks is right.\n\u003c/p\u003e",
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#writeLocaleFile",
        "fct-type": "function",
        "title": "writeLocaleFile"
      },
      "index": {
        "description": "Writes file Differs from writeBinFile in that it writes the string encoded with the current locale instead of what GHC thinks is right",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "writeLocaleFile",
        "normalized": "a-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Locale File",
        "signature": "p-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Lock.html#v:writeToFile",
      "description": {
        "fct-module": "Darcs.Lock",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e (Handle -\u003e IO ()) -\u003e IO ()",
        "fct-source": "src/Darcs-Lock.html#writeToFile",
        "fct-type": "function",
        "title": "writeToFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Lock",
        "module": "Darcs.Lock",
        "name": "writeToFile",
        "normalized": "a-\u003e(Handle-\u003eIO())-\u003eIO()",
        "package": "darcs",
        "partial": "To File",
        "signature": "p-\u003e(Handle-\u003eIO())-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003e\u003cem\u003eFirst matcher, Second matcher and Nonrange matcher\u003c/em\u003e\n\u003c/p\u003e\u003cp\u003eWhen we match for patches, we have a PatchSet, of which we want a\n subset. This subset is formed by the patches in a given interval\n which match a given criterion. If we represent time going left to\n right, then we have (up to) three \u003ccode\u003e\u003ca\u003eMatcher\u003c/a\u003e\u003c/code\u003es:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e the \u003ccode\u003efirstMatcher\u003c/code\u003e is the left bound of the interval,\n\u003c/li\u003e\u003cli\u003e the \u003ccode\u003esecondMatcher\u003c/code\u003e is the right bound, and\n\u003c/li\u003e\u003cli\u003e the \u003ccode\u003e\u003ca\u003enonrangeMatcher\u003c/a\u003e\u003c/code\u003e is the criterion we use to select among\n   patches in the interval.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Match.html",
        "fct-type": "module",
        "title": "Match"
      },
      "index": {
        "description": "First matcher Second matcher and Nonrange matcher When we match for patches we have PatchSet of which we want subset This subset is formed by the patches in given interval which match given criterion If we represent time going left to right then we have up to three Matcher the firstMatcher is the left bound of the interval the secondMatcher is the right bound and the nonrangeMatcher is the criterion we use to select among patches in the interval",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "Match",
        "normalized": "",
        "package": "darcs",
        "partial": "Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#t:InclusiveOrExclusive",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Match.html#InclusiveOrExclusive",
        "fct-type": "data",
        "title": "InclusiveOrExclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "InclusiveOrExclusive",
        "normalized": "",
        "package": "darcs",
        "partial": "Inclusive Or Exclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:Exclusive",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Exclusive",
        "fct-source": "src/Darcs-Match.html#InclusiveOrExclusive",
        "fct-type": "function",
        "title": "Exclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "Exclusive",
        "normalized": "",
        "package": "darcs",
        "partial": "Exclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:Inclusive",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Inclusive",
        "fct-source": "src/Darcs-Match.html#InclusiveOrExclusive",
        "fct-type": "function",
        "title": "Inclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "Inclusive",
        "normalized": "",
        "package": "darcs",
        "partial": "Inclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:applyInvToMatcher",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "InclusiveOrExclusive -\u003e Matcher p -\u003e PatchSet p Origin x -\u003e m ()",
        "fct-source": "src/Darcs-Match.html#applyInvToMatcher",
        "fct-type": "function",
        "title": "applyInvToMatcher"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "applyInvToMatcher",
        "normalized": "InclusiveOrExclusive-\u003eMatcher a-\u003ePatchSet a Origin b-\u003ec()",
        "package": "darcs",
        "partial": "Inv To Matcher",
        "signature": "InclusiveOrExclusive-\u003eMatcher p-\u003ePatchSet p Origin x-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:applyNInv",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eapplyNInv\u003c/code\u003e n ps applies the inverse of the last \u003ccode\u003en\u003c/code\u003e patches of \u003ccode\u003eps\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e PatchSet p Origin x -\u003e m ()",
        "fct-source": "src/Darcs-Match.html#applyNInv",
        "fct-type": "function",
        "title": "applyNInv"
      },
      "index": {
        "description": "applyNInv ps applies the inverse of the last patches of ps",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "applyNInv",
        "normalized": "Int-\u003ePatchSet a Origin b-\u003ec()",
        "package": "darcs",
        "partial": "NInv",
        "signature": "Int-\u003ePatchSet p Origin x-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:checkMatchSyntax",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO ()",
        "fct-source": "src/Darcs-Match.html#checkMatchSyntax",
        "fct-type": "function",
        "title": "checkMatchSyntax"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "checkMatchSyntax",
        "normalized": "[DarcsFlag]-\u003eIO()",
        "package": "darcs",
        "partial": "Match Syntax",
        "signature": "[DarcsFlag]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:firstMatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efirstMatch fs\u003c/code\u003e tells whether \u003ccode\u003efs\u003c/code\u003e implies a \u003ca\u003efirst match\u003c/a\u003e, that\n is if we match against patches from a point in the past on, rather\n than against all patches since the creation of the repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#firstMatch",
        "fct-type": "function",
        "title": "firstMatch"
      },
      "index": {
        "description": "firstMatch fs tells whether fs implies first match that is if we match against patches from point in the past on rather than against all patches since the creation of the repository",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "firstMatch",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Match",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getFirstMatch",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e IO ()",
        "fct-source": "src/Darcs-Match.html#getFirstMatch",
        "fct-type": "function",
        "title": "getFirstMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getFirstMatch",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eIO()",
        "package": "darcs",
        "partial": "First Match",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getNonrangeMatch",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e IO ()",
        "fct-source": "src/Darcs-Match.html#getNonrangeMatch",
        "fct-type": "function",
        "title": "getNonrangeMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getNonrangeMatch",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eIO()",
        "package": "darcs",
        "partial": "Nonrange Match",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getNonrangeMatchS",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchSet p Origin x -\u003e m ()",
        "fct-source": "src/Darcs-Match.html#getNonrangeMatchS",
        "fct-type": "function",
        "title": "getNonrangeMatchS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getNonrangeMatchS",
        "normalized": "[DarcsFlag]-\u003ePatchSet a Origin b-\u003ec()",
        "package": "darcs",
        "partial": "Nonrange Match",
        "signature": "[DarcsFlag]-\u003ePatchSet p Origin x-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getOnePatchset",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e IO (SealedPatchSet p Origin)",
        "fct-source": "src/Darcs-Match.html#getOnePatchset",
        "fct-type": "function",
        "title": "getOnePatchset"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getOnePatchset",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eIO(SealedPatchSet a Origin)",
        "package": "darcs",
        "partial": "One Patchset",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eIO(SealedPatchSet p Origin)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getPartialFirstMatch",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e Maybe [FileName] -\u003e IO ()",
        "fct-source": "src/Darcs-Match.html#getPartialFirstMatch",
        "fct-type": "function",
        "title": "getPartialFirstMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getPartialFirstMatch",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eMaybe[FileName]-\u003eIO()",
        "package": "darcs",
        "partial": "Partial First Match",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eMaybe[FileName]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getPartialNonrangeMatch",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e [FileName] -\u003e IO ()",
        "fct-source": "src/Darcs-Match.html#getPartialNonrangeMatch",
        "fct-type": "function",
        "title": "getPartialNonrangeMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getPartialNonrangeMatch",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003e[FileName]-\u003eIO()",
        "package": "darcs",
        "partial": "Partial Nonrange Match",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003e[FileName]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:getPartialSecondMatch",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e Maybe [FileName] -\u003e IO ()",
        "fct-source": "src/Darcs-Match.html#getPartialSecondMatch",
        "fct-type": "function",
        "title": "getPartialSecondMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "getPartialSecondMatch",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eMaybe[FileName]-\u003eIO()",
        "package": "darcs",
        "partial": "Partial Second Match",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eMaybe[FileName]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:hasIndexRange",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe (Int, Int)",
        "fct-source": "src/Darcs-Match.html#hasIndexRange",
        "fct-type": "function",
        "title": "hasIndexRange"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "hasIndexRange",
        "normalized": "[DarcsFlag]-\u003eMaybe(Int,Int)",
        "package": "darcs",
        "partial": "Index Range",
        "signature": "[DarcsFlag]-\u003eMaybe(Int,Int)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:haveNonrangeMatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehaveNonrangeMatch flags\u003c/code\u003e tells whether there is a flag in\n \u003ccode\u003eflags\u003c/code\u003e which corresponds to a match that is \u003ca\u003enon-range\u003c/a\u003e. Thus,\n \u003ccode\u003e--match\u003c/code\u003e, \u003ccode\u003e--patch\u003c/code\u003e and \u003ccode\u003e--index\u003c/code\u003e make \u003ccode\u003ehaveNonrangeMatch\u003c/code\u003e\n true, but not \u003ccode\u003e--from-patch\u003c/code\u003e or \u003ccode\u003e--to-patch\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#haveNonrangeMatch",
        "fct-type": "function",
        "title": "haveNonrangeMatch"
      },
      "index": {
        "description": "haveNonrangeMatch flags tells whether there is flag in flags which corresponds to match that is non-range Thus match patch and index make haveNonrangeMatch true but not from-patch or to-patch",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "haveNonrangeMatch",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Nonrange Match",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:havePatchsetMatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehavePatchsetMatch flags\u003c/code\u003e tells whether there is a \u003ca\u003epatchset\n match\u003c/a\u003e in the flag list. A patchset match is \u003ccode\u003e--match\u003c/code\u003e or\n \u003ccode\u003e--patch\u003c/code\u003e, or \u003ccode\u003e--context\u003c/code\u003e, but not \u003ccode\u003e--from-patch\u003c/code\u003e nor (!)\n \u003ccode\u003e--index\u003c/code\u003e.\n Question: Is it supposed not to be a subset of \u003ccode\u003ehaveNonrangeMatch\u003c/code\u003e?\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#havePatchsetMatch",
        "fct-type": "function",
        "title": "havePatchsetMatch"
      },
      "index": {
        "description": "havePatchsetMatch flags tells whether there is patchset match in the flag list patchset match is match or patch or context but not from-patch nor index Question Is it supposed not to be subset of haveNonrangeMatch",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "havePatchsetMatch",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Patchset Match",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:matchAPatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ematchAPatch fs p\u003c/code\u003e tells whether \u003ccode\u003ep\u003c/code\u003e matches the matchers in\n the flags \u003ccode\u003efs\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Named p x y -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#matchAPatch",
        "fct-type": "function",
        "title": "matchAPatch"
      },
      "index": {
        "description": "matchAPatch fs tells whether matches the matchers in the flags fs",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "matchAPatch",
        "normalized": "[DarcsFlag]-\u003eNamed a b c-\u003eBool",
        "package": "darcs",
        "partial": "APatch",
        "signature": "[DarcsFlag]-\u003eNamed p x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:matchAPatchread",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ematchAPatchread fs p\u003c/code\u003e tells whether \u003ccode\u003ep\u003c/code\u003e matches the matchers in\n the flags listed in \u003ccode\u003efs\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchInfoAnd p x y -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#matchAPatchread",
        "fct-type": "function",
        "title": "matchAPatchread"
      },
      "index": {
        "description": "matchAPatchread fs tells whether matches the matchers in the flags listed in fs",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "matchAPatchread",
        "normalized": "[DarcsFlag]-\u003ePatchInfoAnd a b c-\u003eBool",
        "package": "darcs",
        "partial": "APatchread",
        "signature": "[DarcsFlag]-\u003ePatchInfoAnd p x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:matchExists",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ematchExists m ps\u003c/code\u003e tells whether there is a patch matching\n \u003ccode\u003em\u003c/code\u003e in \u003ccode\u003eps\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "Matcher p -\u003e PatchSet p start x -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#matchExists",
        "fct-type": "function",
        "title": "matchExists"
      },
      "index": {
        "description": "matchExists ps tells whether there is patch matching in ps",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "matchExists",
        "normalized": "Matcher a-\u003ePatchSet a b c-\u003eBool",
        "package": "darcs",
        "partial": "Exists",
        "signature": "Matcher p-\u003ePatchSet p start x-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:matchFirstPatchset",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ematchFirstPatchset fs ps\u003c/code\u003e returns the part of \u003ccode\u003eps\u003c/code\u003e before its\n first matcher, ie the one that comes first dependencywise. Hence,\n patches in \u003ccode\u003ematchFirstPatchset fs ps\u003c/code\u003e are the context for the ones\n we don't want.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchSet p start x -\u003e SealedPatchSet p start",
        "fct-source": "src/Darcs-Match.html#matchFirstPatchset",
        "fct-type": "function",
        "title": "matchFirstPatchset"
      },
      "index": {
        "description": "matchFirstPatchset fs ps returns the part of ps before its first matcher ie the one that comes first dependencywise Hence patches in matchFirstPatchset fs ps are the context for the ones we don want",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "matchFirstPatchset",
        "normalized": "[DarcsFlag]-\u003ePatchSet a b c-\u003eSealedPatchSet a b",
        "package": "darcs",
        "partial": "First Patchset",
        "signature": "[DarcsFlag]-\u003ePatchSet p start x-\u003eSealedPatchSet p start"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:matchPatch",
      "description": {
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchSet p start x -\u003e Sealed2 (Named p)",
        "fct-source": "src/Darcs-Match.html#matchPatch",
        "fct-type": "function",
        "title": "matchPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "matchPatch",
        "normalized": "[DarcsFlag]-\u003ePatchSet a b c-\u003eSealed(Named a)",
        "package": "darcs",
        "partial": "Patch",
        "signature": "[DarcsFlag]-\u003ePatchSet p start x-\u003eSealed(Named p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:matchSecondPatchset",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ematchSecondPatchset fs ps\u003c/code\u003e returns the part of \u003ccode\u003eps\u003c/code\u003e before its\n second matcher, ie the one that comes last dependencywise.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchSet p start x -\u003e SealedPatchSet p start",
        "fct-source": "src/Darcs-Match.html#matchSecondPatchset",
        "fct-type": "function",
        "title": "matchSecondPatchset"
      },
      "index": {
        "description": "matchSecondPatchset fs ps returns the part of ps before its second matcher ie the one that comes last dependencywise",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "matchSecondPatchset",
        "normalized": "[DarcsFlag]-\u003ePatchSet a b c-\u003eSealedPatchSet a b",
        "package": "darcs",
        "partial": "Second Patchset",
        "signature": "[DarcsFlag]-\u003ePatchSet p start x-\u003eSealedPatchSet p start"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:nonrangeMatcher",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003enonrangeMatcher\u003c/code\u003e is the criterion that is used to match against\n patches in the interval. It is 'Just m' when the \u003ccode\u003e--patch\u003c/code\u003e, \u003ccode\u003e--match\u003c/code\u003e,\n \u003ccode\u003e--tag\u003c/code\u003e options are passed (or their plural variants).\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe (Matcher p)",
        "fct-source": "src/Darcs-Match.html#nonrangeMatcher",
        "fct-type": "function",
        "title": "nonrangeMatcher"
      },
      "index": {
        "description": "nonrangeMatcher is the criterion that is used to match against patches in the interval It is Just when the patch match tag options are passed or their plural variants",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "nonrangeMatcher",
        "normalized": "[DarcsFlag]-\u003eMaybe(Matcher a)",
        "package": "darcs",
        "partial": "Matcher",
        "signature": "[DarcsFlag]-\u003eMaybe(Matcher p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Match.html#v:secondMatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003esecondMatch fs\u003c/code\u003e tells whether \u003ccode\u003efs\u003c/code\u003e implies a \u003ca\u003esecond match\u003c/a\u003e, that\n is if we match against patches up to a point in the past on, rather\n than against all patches until now.\n\u003c/p\u003e",
        "fct-module": "Darcs.Match",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Bool",
        "fct-source": "src/Darcs-Match.html#secondMatch",
        "fct-type": "function",
        "title": "secondMatch"
      },
      "index": {
        "description": "secondMatch fs tells whether fs implies second match that is if we match against patches up to point in the past on rather than against all patches until now",
        "hierarchy": "Darcs Match",
        "module": "Darcs.Match",
        "name": "secondMatch",
        "normalized": "[DarcsFlag]-\u003eBool",
        "package": "darcs",
        "partial": "Match",
        "signature": "[DarcsFlag]-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#",
      "description": {
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-MonadProgress.html",
        "fct-type": "module",
        "title": "MonadProgress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "MonadProgress",
        "normalized": "",
        "package": "darcs",
        "partial": "Monad Progress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#t:MonadProgress",
      "description": {
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-MonadProgress.html#MonadProgress",
        "fct-type": "class",
        "title": "MonadProgress"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "MonadProgress",
        "normalized": "",
        "package": "darcs",
        "partial": "Monad Progress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#t:ProgressAction",
      "description": {
        "fct-descr": "\u003cp\u003ea monadic action, annotated with a progress message that could be printed out\n while running the action, and a message that could be printed out on error.\n Actually printing out these messages is optional to allow non-IO monads to\n just run the action.\n\u003c/p\u003e",
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-MonadProgress.html#ProgressAction",
        "fct-type": "data",
        "title": "ProgressAction"
      },
      "index": {
        "description": "monadic action annotated with progress message that could be printed out while running the action and message that could be printed out on error Actually printing out these messages is optional to allow non-IO monads to just run the action",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "ProgressAction",
        "normalized": "",
        "package": "darcs",
        "partial": "Progress Action",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#v:ProgressAction",
      "description": {
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "ProgressAction",
        "fct-source": "src/Darcs-MonadProgress.html#ProgressAction",
        "fct-type": "function",
        "title": "ProgressAction"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "ProgressAction",
        "normalized": "",
        "package": "darcs",
        "partial": "Progress Action",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#v:paAction",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "m a",
        "fct-source": "src/Darcs-MonadProgress.html#ProgressAction",
        "fct-type": "function",
        "title": "paAction"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "paAction",
        "normalized": "",
        "package": "darcs",
        "partial": "Action",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#v:paMessage",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Darcs-MonadProgress.html#ProgressAction",
        "fct-type": "function",
        "title": "paMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "paMessage",
        "normalized": "",
        "package": "darcs",
        "partial": "Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#v:paOnError",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Darcs-MonadProgress.html#ProgressAction",
        "fct-type": "function",
        "title": "paOnError"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "paOnError",
        "normalized": "",
        "package": "darcs",
        "partial": "On Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#v:runProgressActions",
      "description": {
        "fct-descr": "\u003cp\u003erun a list of \u003ccode\u003e\u003ca\u003eProgressAction\u003c/a\u003e\u003c/code\u003es. In some monads (typically IO-based ones),\n the progress and error messages will be used. In others they will be\n ignored and just the actions will be run.\n\u003c/p\u003e",
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [ProgressAction m ()] -\u003e m ()",
        "fct-source": "src/Darcs-MonadProgress.html#runProgressActions",
        "fct-type": "method",
        "title": "runProgressActions"
      },
      "index": {
        "description": "run list of ProgressAction In some monads typically IO-based ones the progress and error messages will be used In others they will be ignored and just the actions will be run",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "runProgressActions",
        "normalized": "String-\u003e[ProgressAction a()]-\u003ea()",
        "package": "darcs",
        "partial": "Progress Actions",
        "signature": "String-\u003e[ProgressAction m()]-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-MonadProgress.html#v:silentlyRunProgressActions",
      "description": {
        "fct-descr": "\u003cp\u003erun a list of \u003ccode\u003e\u003ca\u003eProgressAction\u003c/a\u003e\u003c/code\u003es without any feedback messages\n\u003c/p\u003e",
        "fct-module": "Darcs.MonadProgress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [ProgressAction m ()] -\u003e m ()",
        "fct-source": "src/Darcs-MonadProgress.html#silentlyRunProgressActions",
        "fct-type": "function",
        "title": "silentlyRunProgressActions"
      },
      "index": {
        "description": "run list of ProgressAction without any feedback messages",
        "hierarchy": "Darcs MonadProgress",
        "module": "Darcs.MonadProgress",
        "name": "silentlyRunProgressActions",
        "normalized": "String-\u003e[ProgressAction a()]-\u003ea()",
        "package": "darcs",
        "partial": "Run Progress Actions",
        "signature": "String-\u003e[ProgressAction m()]-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#",
      "description": {
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Apply.html",
        "fct-type": "module",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#t:Apply",
      "description": {
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Apply.html#Apply",
        "fct-type": "class",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#v:apply",
      "description": {
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m ()",
        "fct-source": "src/Darcs-Patch-Apply.html#apply",
        "fct-type": "method",
        "title": "apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "apply",
        "normalized": "a b c-\u003ed()",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#v:applyToFilePaths",
      "description": {
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe [(FilePath, FilePath)] -\u003e [FilePath] -\u003e ([FilePath], [FilePath], [(FilePath, FilePath)])",
        "fct-source": "src/Darcs-Patch-Apply.html#applyToFilePaths",
        "fct-type": "function",
        "title": "applyToFilePaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "applyToFilePaths",
        "normalized": "a b c-\u003eMaybe[(FilePath,FilePath)]-\u003e[FilePath]-\u003e([FilePath],[FilePath],[(FilePath,FilePath)])",
        "package": "darcs",
        "partial": "To File Paths",
        "signature": "p x y-\u003eMaybe[(FilePath,FilePath)]-\u003e[FilePath]-\u003e([FilePath],[FilePath],[(FilePath,FilePath)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#v:applyToState",
      "description": {
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e ApplyState p m -\u003e m (ApplyState p m)",
        "fct-source": "src/Darcs-Patch-Apply.html#applyToState",
        "fct-type": "function",
        "title": "applyToState"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "applyToState",
        "normalized": "a b c-\u003eApplyState a d-\u003ed(ApplyState a d)",
        "package": "darcs",
        "partial": "To State",
        "signature": "p x y-\u003eApplyState p m-\u003em(ApplyState p m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#v:applyToTree",
      "description": {
        "fct-descr": "\u003cp\u003eApply a patch to a \u003ccode\u003e\u003ca\u003eTree\u003c/a\u003e\u003c/code\u003e, yielding a new \u003ccode\u003e\u003ca\u003eTree\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Tree m -\u003e m (Tree m)",
        "fct-source": "src/Darcs-Patch-Apply.html#applyToTree",
        "fct-type": "function",
        "title": "applyToTree"
      },
      "index": {
        "description": "Apply patch to Tree yielding new Tree",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "applyToTree",
        "normalized": "a b c-\u003eTree d-\u003ed(Tree d)",
        "package": "darcs",
        "partial": "To Tree",
        "signature": "p x y-\u003eTree m-\u003em(Tree m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Apply.html#v:effectOnFilePaths",
      "description": {
        "fct-module": "Darcs.Patch.Apply",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath] -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Apply.html#effectOnFilePaths",
        "fct-type": "function",
        "title": "effectOnFilePaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Apply",
        "module": "Darcs.Patch.Apply",
        "name": "effectOnFilePaths",
        "normalized": "a b c-\u003e[FilePath]-\u003e[FilePath]",
        "package": "darcs",
        "partial": "On File Paths",
        "signature": "p x y-\u003e[FilePath]-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html",
        "fct-type": "module",
        "title": "ApplyMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "ApplyMonad",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#t:ApplyMonad",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#ApplyMonad",
        "fct-type": "class",
        "title": "ApplyMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "ApplyMonad",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#t:ApplyMonadTrans",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#ApplyMonadTrans",
        "fct-type": "class",
        "title": "ApplyMonadTrans"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "ApplyMonadTrans",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply Monad Trans",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#t:ToTree",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#ToTree",
        "fct-type": "class",
        "title": "ToTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "ToTree",
        "normalized": "",
        "package": "darcs",
        "partial": "To Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:editDirectory",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "UUID -\u003e (DirContent -\u003e DirContent) -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#editDirectory",
        "fct-type": "method",
        "title": "editDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "editDirectory",
        "normalized": "UUID-\u003e(DirContent-\u003eDirContent)-\u003ea()",
        "package": "darcs",
        "partial": "Directory",
        "signature": "UUID-\u003e(DirContent-\u003eDirContent)-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:editFile",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "UUID -\u003e (ByteString -\u003e ByteString) -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#editFile",
        "fct-type": "method",
        "title": "editFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "editFile",
        "normalized": "UUID-\u003e(ByteString-\u003eByteString)-\u003ea()",
        "package": "darcs",
        "partial": "File",
        "signature": "UUID-\u003e(ByteString-\u003eByteString)-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:getApplyState",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "m (state (ApplyMonadBase m))",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#getApplyState",
        "fct-type": "method",
        "title": "getApplyState"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "getApplyState",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:liftApply",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "(state (ApplyMonadBase m) -\u003e ApplyMonadBase m x) -\u003e state (ApplyMonadBase m) -\u003e m (x, state (ApplyMonadBase m))",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#liftApply",
        "fct-type": "method",
        "title": "liftApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "liftApply",
        "normalized": "(a(ApplyMonadBase b)-\u003eApplyMonadBase b c)-\u003ea(ApplyMonadBase b)-\u003eb(c,a(ApplyMonadBase b))",
        "package": "darcs",
        "partial": "Apply",
        "signature": "(state(ApplyMonadBase m)-\u003eApplyMonadBase m x)-\u003estate(ApplyMonadBase m)-\u003em(x,state(ApplyMonadBase m))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mChangePref",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mChangePref",
        "fct-type": "method",
        "title": "mChangePref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mChangePref",
        "normalized": "String-\u003eString-\u003eString-\u003ea()",
        "package": "darcs",
        "partial": "Change Pref",
        "signature": "String-\u003eString-\u003eString-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mCreateDirectory",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mCreateDirectory",
        "fct-type": "method",
        "title": "mCreateDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mCreateDirectory",
        "normalized": "FileName-\u003ea()",
        "package": "darcs",
        "partial": "Create Directory",
        "signature": "FileName-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mCreateFile",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mCreateFile",
        "fct-type": "method",
        "title": "mCreateFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mCreateFile",
        "normalized": "FileName-\u003ea()",
        "package": "darcs",
        "partial": "Create File",
        "signature": "FileName-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mDoesDirectoryExist",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m Bool",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mDoesDirectoryExist",
        "fct-type": "method",
        "title": "mDoesDirectoryExist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mDoesDirectoryExist",
        "normalized": "FileName-\u003ea Bool",
        "package": "darcs",
        "partial": "Does Directory Exist",
        "signature": "FileName-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mDoesFileExist",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m Bool",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mDoesFileExist",
        "fct-type": "method",
        "title": "mDoesFileExist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mDoesFileExist",
        "normalized": "FileName-\u003ea Bool",
        "package": "darcs",
        "partial": "Does File Exist",
        "signature": "FileName-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mModifyFilePS",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e (ByteString -\u003e m ByteString) -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mModifyFilePS",
        "fct-type": "method",
        "title": "mModifyFilePS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mModifyFilePS",
        "normalized": "FileName-\u003e(ByteString-\u003ea ByteString)-\u003ea()",
        "package": "darcs",
        "partial": "Modify File PS",
        "signature": "FileName-\u003e(ByteString-\u003em ByteString)-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mModifyFilePSs",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e ([ByteString] -\u003e m [ByteString]) -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mModifyFilePSs",
        "fct-type": "method",
        "title": "mModifyFilePSs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mModifyFilePSs",
        "normalized": "FileName-\u003e([ByteString]-\u003ea[ByteString])-\u003ea()",
        "package": "darcs",
        "partial": "Modify File PSs",
        "signature": "FileName-\u003e([ByteString]-\u003em[ByteString])-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mReadFilePS",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m ByteString",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mReadFilePS",
        "fct-type": "method",
        "title": "mReadFilePS"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mReadFilePS",
        "normalized": "FileName-\u003ea ByteString",
        "package": "darcs",
        "partial": "Read File PS",
        "signature": "FileName-\u003em ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mReadFilePSs",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m [ByteString]",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mReadFilePSs",
        "fct-type": "method",
        "title": "mReadFilePSs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mReadFilePSs",
        "normalized": "FileName-\u003ea[ByteString]",
        "package": "darcs",
        "partial": "Read File PSs",
        "signature": "FileName-\u003em[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mRemoveDirectory",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mRemoveDirectory",
        "fct-type": "method",
        "title": "mRemoveDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mRemoveDirectory",
        "normalized": "FileName-\u003ea()",
        "package": "darcs",
        "partial": "Remove Directory",
        "signature": "FileName-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mRemoveFile",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mRemoveFile",
        "fct-type": "method",
        "title": "mRemoveFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mRemoveFile",
        "normalized": "FileName-\u003ea()",
        "package": "darcs",
        "partial": "Remove File",
        "signature": "FileName-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:mRename",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#mRename",
        "fct-type": "method",
        "title": "mRename"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "mRename",
        "normalized": "FileName-\u003eFileName-\u003ea()",
        "package": "darcs",
        "partial": "Rename",
        "signature": "FileName-\u003eFileName-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:nestedApply",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "m x -\u003e state (ApplyMonadBase m) -\u003e m (x, state (ApplyMonadBase m))",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#nestedApply",
        "fct-type": "method",
        "title": "nestedApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "nestedApply",
        "normalized": "a b-\u003ec(ApplyMonadBase a)-\u003ea(b,c(ApplyMonadBase a))",
        "package": "darcs",
        "partial": "Apply",
        "signature": "m x-\u003estate(ApplyMonadBase m)-\u003em(x,state(ApplyMonadBase m))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:putApplyState",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "state m -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#putApplyState",
        "fct-type": "method",
        "title": "putApplyState"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "putApplyState",
        "normalized": "a b-\u003eb()",
        "package": "darcs",
        "partial": "Apply State",
        "signature": "state m-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:runApplyMonad",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "ApplyMonadOver m state x -\u003e state m -\u003e m (x, state m)",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#runApplyMonad",
        "fct-type": "method",
        "title": "runApplyMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "runApplyMonad",
        "normalized": "ApplyMonadOver a b c-\u003eb a-\u003ea(c,b a)",
        "package": "darcs",
        "partial": "Apply Monad",
        "signature": "ApplyMonadOver m state x-\u003estate m-\u003em(x,state m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:toTree",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "s m -\u003e Tree m",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#toTree",
        "fct-type": "method",
        "title": "toTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "toTree",
        "normalized": "a b-\u003eTree b",
        "package": "darcs",
        "partial": "Tree",
        "signature": "s m-\u003eTree m"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:withFileNames",
      "description": {
        "fct-descr": "\u003cp\u003ewithFileNames takes a maybe list of existing rename-pairs, a list of\n filenames and an action, and returns the resulting triple of affected files,\n updated filename list and new rename details. If the rename-pairs are not\n present, a new list is generated from the filesnames.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "Maybe [OrigFileNameOf] -\u003e [FileName] -\u003e FilePathMonad a -\u003e FilePathMonadState",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#withFileNames",
        "fct-type": "function",
        "title": "withFileNames"
      },
      "index": {
        "description": "withFileNames takes maybe list of existing rename-pairs list of filenames and an action and returns the resulting triple of affected files updated filename list and new rename details If the rename-pairs are not present new list is generated from the filesnames",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "withFileNames",
        "normalized": "Maybe[OrigFileNameOf]-\u003e[FileName]-\u003eFilePathMonad a-\u003eFilePathMonadState",
        "package": "darcs",
        "partial": "File Names",
        "signature": "Maybe[OrigFileNameOf]-\u003e[FileName]-\u003eFilePathMonad a-\u003eFilePathMonadState"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ApplyMonad.html#v:withFiles",
      "description": {
        "fct-module": "Darcs.Patch.ApplyMonad",
        "fct-package": "darcs",
        "fct-signature": "[(FileName, ByteString)] -\u003e RestrictedApply a -\u003e [(FileName, ByteString)]",
        "fct-source": "src/Darcs-Patch-ApplyMonad.html#withFiles",
        "fct-type": "function",
        "title": "withFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ApplyMonad",
        "module": "Darcs.Patch.ApplyMonad",
        "name": "withFiles",
        "normalized": "[(FileName,ByteString)]-\u003eRestrictedApply a-\u003e[(FileName,ByteString)]",
        "package": "darcs",
        "partial": "Files",
        "signature": "[(FileName,ByteString)]-\u003eRestrictedApply a-\u003e[(FileName,ByteString)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed-Instances.html#",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed.Instances",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Bracketed-Instances.html",
        "fct-type": "module",
        "title": "Instances"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed Instances",
        "module": "Darcs.Patch.Bracketed.Instances",
        "name": "Instances",
        "normalized": "",
        "package": "darcs",
        "partial": "Instances",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Bracketed.html",
        "fct-type": "module",
        "title": "Bracketed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "Bracketed",
        "normalized": "",
        "package": "darcs",
        "partial": "Bracketed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#t:Bracketed",
      "description": {
        "fct-descr": "\u003cp\u003eThis type exists for legacy support of on-disk format patch formats.\n It is a wrapper type that explicitly tracks the nesting of braces and parens\n in the on-disk representation of such patches. It is used as an intermediate\n form when reading such patches normally, and also for round-tripping such\n patches when checking the hash in bundles.\n It shouldn't be used for anything else.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Bracketed.html#Bracketed",
        "fct-type": "data",
        "title": "Bracketed"
      },
      "index": {
        "description": "This type exists for legacy support of on-disk format patch formats It is wrapper type that explicitly tracks the nesting of braces and parens in the on-disk representation of such patches It is used as an intermediate form when reading such patches normally and also for round-tripping such patches when checking the hash in bundles It shouldn be used for anything else",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "Bracketed",
        "normalized": "",
        "package": "darcs",
        "partial": "Bracketed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#t:BracketedFL",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Bracketed.html#BracketedFL",
        "fct-type": "type",
        "title": "BracketedFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "BracketedFL",
        "normalized": "",
        "package": "darcs",
        "partial": "Bracketed FL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:Braced",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "BracketedFL p x y -\u003e Bracketed p x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#Bracketed",
        "fct-type": "function",
        "title": "Braced"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "Braced",
        "normalized": "BracketedFL a b c-\u003eBracketed a b c",
        "package": "darcs",
        "partial": "Braced",
        "signature": "BracketedFL p x y-\u003eBracketed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:Parens",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "BracketedFL p x y -\u003e Bracketed p x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#Bracketed",
        "fct-type": "function",
        "title": "Parens"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "Parens",
        "normalized": "BracketedFL a b c-\u003eBracketed a b c",
        "package": "darcs",
        "partial": "Parens",
        "signature": "BracketedFL p x y-\u003eBracketed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:Singleton",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Bracketed p x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#Bracketed",
        "fct-type": "function",
        "title": "Singleton"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "Singleton",
        "normalized": "a b c-\u003eBracketed a b c",
        "package": "darcs",
        "partial": "Singleton",
        "signature": "p x y-\u003eBracketed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:mapBracketed",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "(forall a b.  p a b -\u003e q a b) -\u003e Bracketed p x y -\u003e Bracketed q x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#mapBracketed",
        "fct-type": "function",
        "title": "mapBracketed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "mapBracketed",
        "normalized": "(a b c d b e-\u003ef b e)-\u003eBracketed d g h-\u003eBracketed f g h",
        "package": "darcs",
        "partial": "Bracketed",
        "signature": "(forall a b. p a b-\u003eq a b)-\u003eBracketed p x y-\u003eBracketed q x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:mapBracketedFL_FL",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "(forall a b.  p a b -\u003e q a b) -\u003e BracketedFL p x y -\u003e BracketedFL q x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#mapBracketedFL_FL",
        "fct-type": "function",
        "title": "mapBracketedFL_FL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "mapBracketedFL_FL",
        "normalized": "(a b c d b e-\u003ef b e)-\u003eBracketedFL d g h-\u003eBracketedFL f g h",
        "package": "darcs",
        "partial": "Bracketed FL FL",
        "signature": "(forall a b. p a b-\u003eq a b)-\u003eBracketedFL p x y-\u003eBracketedFL q x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:unBracketed",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "Bracketed p x y -\u003e FL p x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#unBracketed",
        "fct-type": "function",
        "title": "unBracketed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "unBracketed",
        "normalized": "Bracketed a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "Bracketed",
        "signature": "Bracketed p x y-\u003eFL p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bracketed.html#v:unBracketedFL",
      "description": {
        "fct-module": "Darcs.Patch.Bracketed",
        "fct-package": "darcs",
        "fct-signature": "BracketedFL p x y -\u003e FL p x y",
        "fct-source": "src/Darcs-Patch-Bracketed.html#unBracketedFL",
        "fct-type": "function",
        "title": "unBracketedFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bracketed",
        "module": "Darcs.Patch.Bracketed",
        "name": "unBracketedFL",
        "normalized": "BracketedFL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "Bracketed FL",
        "signature": "BracketedFL p x y-\u003eFL p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#",
      "description": {
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Bundle.html",
        "fct-type": "module",
        "title": "Bundle"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "Bundle",
        "normalized": "",
        "package": "darcs",
        "partial": "Bundle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:contextPatches",
      "description": {
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p Origin x -\u003e (PatchSet p :\u003e RL (PatchInfoAnd p)) Origin x",
        "fct-source": "src/Darcs-Patch-Bundle.html#contextPatches",
        "fct-type": "function",
        "title": "contextPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "contextPatches",
        "normalized": "PatchSet a Origin b-\u003e(PatchSet a RL(PatchInfoAnd a))Origin b",
        "package": "darcs",
        "partial": "Patches",
        "signature": "PatchSet p Origin x-\u003e(PatchSet p RL(PatchInfoAnd p))Origin x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:getContext",
      "description": {
        "fct-descr": "\u003cp\u003egetContext parses a context list, returning a tuple containing the list,\n and remaining ByteString input.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e ([PatchInfo], ByteString)",
        "fct-source": "src/Darcs-Patch-Bundle.html#getContext",
        "fct-type": "function",
        "title": "getContext"
      },
      "index": {
        "description": "getContext parses context list returning tuple containing the list and remaining ByteString input",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "getContext",
        "normalized": "ByteString-\u003e([PatchInfo],ByteString)",
        "package": "darcs",
        "partial": "Context",
        "signature": "ByteString-\u003e([PatchInfo],ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:hashBundle",
      "description": {
        "fct-descr": "\u003cp\u003ehashBundle creates a SHA1 string of a given a FL of named patches. This\n allows us to ensure that the patches in a received patchBundle have not been\n modified in transit.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "FL (Named p) x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Bundle.html#hashBundle",
        "fct-type": "function",
        "title": "hashBundle"
      },
      "index": {
        "description": "hashBundle creates SHA1 string of given FL of named patches This allows us to ensure that the patches in received patchBundle have not been modified in transit",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "hashBundle",
        "normalized": "FL(Named a)b c-\u003eString",
        "package": "darcs",
        "partial": "Bundle",
        "signature": "FL(Named p)x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:makeBundle2",
      "description": {
        "fct-descr": "\u003cp\u003eIn makeBundle2, it is presumed that the two patch sequences are\n identical, but that they may be lazily generated.  If two different\n patch sequences are passed, a bundle with a mismatched hash will be\n generated, which is not the end of the world, but isn't very useful\n either.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "Maybe (Tree IO) -\u003e RL (PatchInfoAnd p) start x -\u003e FL (Named p) x y -\u003e FL (Named p) x y -\u003e IO Doc",
        "fct-source": "src/Darcs-Patch-Bundle.html#makeBundle2",
        "fct-type": "function",
        "title": "makeBundle2"
      },
      "index": {
        "description": "In makeBundle2 it is presumed that the two patch sequences are identical but that they may be lazily generated If two different patch sequences are passed bundle with mismatched hash will be generated which is not the end of the world but isn very useful either",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "makeBundle2",
        "normalized": "Maybe(Tree IO)-\u003eRL(PatchInfoAnd a)b c-\u003eFL(Named a)c d-\u003eFL(Named a)c d-\u003eIO Doc",
        "package": "darcs",
        "partial": "Bundle",
        "signature": "Maybe(Tree IO)-\u003eRL(PatchInfoAnd p)start x-\u003eFL(Named p)x y-\u003eFL(Named p)x y-\u003eIO Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:makeBundleN",
      "description": {
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "Maybe (Tree IO) -\u003e PatchSet p start x -\u003e FL (Named p) x y -\u003e IO Doc",
        "fct-source": "src/Darcs-Patch-Bundle.html#makeBundleN",
        "fct-type": "function",
        "title": "makeBundleN"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "makeBundleN",
        "normalized": "Maybe(Tree IO)-\u003ePatchSet a b c-\u003eFL(Named a)c d-\u003eIO Doc",
        "package": "darcs",
        "partial": "Bundle",
        "signature": "Maybe(Tree IO)-\u003ePatchSet p start x-\u003eFL(Named p)x y-\u003eIO Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:parseBundle",
      "description": {
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Either String (Sealed ((PatchSet p :\u003e FL (PatchInfoAnd p)) Origin))",
        "fct-source": "src/Darcs-Patch-Bundle.html#parseBundle",
        "fct-type": "function",
        "title": "parseBundle"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "parseBundle",
        "normalized": "ByteString-\u003eEither String(Sealed((PatchSet a FL(PatchInfoAnd a))Origin))",
        "package": "darcs",
        "partial": "Bundle",
        "signature": "ByteString-\u003eEither String(Sealed((PatchSet p FL(PatchInfoAnd p))Origin))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:patchFilename",
      "description": {
        "fct-descr": "\u003cp\u003epatchFilename maps a patch description string to a safe (lowercased, spaces\n removed and ascii-only characters) patch filename.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Darcs-Patch-Bundle.html#patchFilename",
        "fct-type": "function",
        "title": "patchFilename"
      },
      "index": {
        "description": "patchFilename maps patch description string to safe lowercased spaces removed and ascii-only characters patch filename",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "patchFilename",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "Filename",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:scanBundle",
      "description": {
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Either String (SealedPatchSet p Origin)",
        "fct-source": "src/Darcs-Patch-Bundle.html#scanBundle",
        "fct-type": "function",
        "title": "scanBundle"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "scanBundle",
        "normalized": "ByteString-\u003eEither String(SealedPatchSet a Origin)",
        "package": "darcs",
        "partial": "Bundle",
        "signature": "ByteString-\u003eEither String(SealedPatchSet p Origin)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Bundle.html#v:scanContext",
      "description": {
        "fct-module": "Darcs.Patch.Bundle",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e PatchSet p Origin x",
        "fct-source": "src/Darcs-Patch-Bundle.html#scanContext",
        "fct-type": "function",
        "title": "scanContext"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Bundle",
        "module": "Darcs.Patch.Bundle",
        "name": "scanContext",
        "normalized": "ByteString-\u003ePatchSet a Origin b",
        "package": "darcs",
        "partial": "Context",
        "signature": "ByteString-\u003ePatchSet p Origin x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePatchChoices divides a sequence of patches into three sets: \u003ca\u003efirst\u003c/a\u003e,\n \u003ca\u003emiddle\u003c/a\u003e and \u003ca\u003elast\u003c/a\u003e, such that all patches can be applied, if you first\n apply the first ones then the middle ones and then the last ones.\n Obviously if there are dependencies between the patches that will put a\n constraint on how you can choose to divide them up.  The PatchChoices data\n type and associated functions are here to deal with many of the common\n cases that come up when choosing a subset of a group of patches.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u003ca\u003eforceLast\u003c/a\u003e\u003c/code\u003e tells PatchChoices that a particular patch is required to be in\n the \u003ca\u003elast\u003c/a\u003e group, which also means that any patches that depend on it\n must be in the \u003ca\u003elast\u003c/a\u003e group.\n\u003c/p\u003e\u003cp\u003eInternally, a PatchChoices doesn't always reorder the patches until\n it is asked for the final output (e.g. by \u003ccode\u003eget_first_choice\u003c/code\u003e).\n Instead, each patch is placed in a state of definitely first,\n definitely last and undecided; undecided leans towards\n \u003ca\u003emiddle\u003c/a\u003e. The patches that are first are commuted to the head\n immediately, but patches that are middle and last are mixed\n together. In case you're wondering about the first-middle-last\n language, it's because in some cases the \u003ca\u003eyes\u003c/a\u003e answers will be last\n (as is the case for the revert command), and in others first (as in\n record, pull and push).\n\u003c/p\u003e\u003cp\u003eSome patch marked \u003ca\u003emiddle\u003c/a\u003e may in fact be unselectable because of\n dependencies: when a patch is marked \u003ca\u003elast\u003c/a\u003e, its dependencies are\n not updated until patchSlot is called on them.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Choices.html",
        "fct-type": "module",
        "title": "Choices"
      },
      "index": {
        "description": "PatchChoices divides sequence of patches into three sets first middle and last such that all patches can be applied if you first apply the first ones then the middle ones and then the last ones Obviously if there are dependencies between the patches that will put constraint on how you can choose to divide them up The PatchChoices data type and associated functions are here to deal with many of the common cases that come up when choosing subset of group of patches forceLast tells PatchChoices that particular patch is required to be in the last group which also means that any patches that depend on it must be in the last group Internally PatchChoices doesn always reorder the patches until it is asked for the final output e.g by get first choice Instead each patch is placed in state of definitely first definitely last and undecided undecided leans towards middle The patches that are first are commuted to the head immediately but patches that are middle and last are mixed together In case you re wondering about the first-middle-last language it because in some cases the yes answers will be last as is the case for the revert command and in others first as in record pull and push Some patch marked middle may in fact be unselectable because of dependencies when patch is marked last its dependencies are not updated until patchSlot is called on them",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "Choices",
        "normalized": "",
        "package": "darcs",
        "partial": "Choices",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#t:PatchChoices",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Choices.html#PatchChoices",
        "fct-type": "data",
        "title": "PatchChoices"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "PatchChoices",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Choices",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#t:Slot",
      "description": {
        "fct-descr": "\u003cp\u003eSee module documentation for \u003ccode\u003e\u003ca\u003eChoices\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Choices.html#Slot",
        "fct-type": "data",
        "title": "Slot"
      },
      "index": {
        "description": "See module documentation for Choices",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "Slot",
        "normalized": "",
        "package": "darcs",
        "partial": "Slot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#t:Tag",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eTG\u003c/code\u003e \u003ccode\u003emp i\u003c/code\u003e acts as a temporary identifier to help us keep track of patches\n   during the selection process.  These are useful for finding patches that\n   may have moved around during patch selection (being pushed forwards or\n   backwards as dependencies arise).\n\u003c/p\u003e\u003cp\u003eThe identifier is implemented as a tuple \u003ccode\u003eTG mp i\u003c/code\u003e. The \u003ccode\u003ei\u003c/code\u003e is just some\n   arbitrary label, expected to be unique within the patches being\n   scrutinised.  The \u003ccode\u003emp\u003c/code\u003e is motivated by patch splitting; it\n   provides a convenient way to generate a new identifier from the patch\n   being split.  For example, if we split a patch identified as \u003ccode\u003eTG Nothing\n   5\u003c/code\u003e, the resulting sub-patches could be identified as \u003ccode\u003eTG (TG Nothing 5)\n   1\u003c/code\u003e, \u003ccode\u003eTG (TG Nothing 5) 2\u003c/code\u003e, etc.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Choices.html#Tag",
        "fct-type": "data",
        "title": "Tag"
      },
      "index": {
        "description": "TG mp acts as temporary identifier to help us keep track of patches during the selection process These are useful for finding patches that may have moved around during patch selection being pushed forwards or backwards as dependencies arise The identifier is implemented as tuple TG mp The is just some arbitrary label expected to be unique within the patches being scrutinised The mp is motivated by patch splitting it provides convenient way to generate new identifier from the patch being split For example if we split patch identified as TG Nothing the resulting sub-patches could be identified as TG TG Nothing TG TG Nothing etc",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "Tag",
        "normalized": "",
        "package": "darcs",
        "partial": "Tag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#t:TaggedPatch",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Choices.html#TaggedPatch",
        "fct-type": "data",
        "title": "TaggedPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "TaggedPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Tagged Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:InFirst",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "InFirst",
        "fct-source": "src/Darcs-Patch-Choices.html#Slot",
        "fct-type": "function",
        "title": "InFirst"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "InFirst",
        "normalized": "",
        "package": "darcs",
        "partial": "In First",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:InLast",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "InLast",
        "fct-source": "src/Darcs-Patch-Choices.html#Slot",
        "fct-type": "function",
        "title": "InLast"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "InLast",
        "normalized": "",
        "package": "darcs",
        "partial": "In Last",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:InMiddle",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "InMiddle",
        "fct-source": "src/Darcs-Patch-Choices.html#Slot",
        "fct-type": "function",
        "title": "InMiddle"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "InMiddle",
        "normalized": "",
        "package": "darcs",
        "partial": "In Middle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:forceFirst",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "Tag -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#forceFirst",
        "fct-type": "function",
        "title": "forceFirst"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "forceFirst",
        "normalized": "Tag-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "First",
        "signature": "Tag-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:forceFirsts",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "[Tag] -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#forceFirsts",
        "fct-type": "function",
        "title": "forceFirsts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "forceFirsts",
        "normalized": "[Tag]-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Firsts",
        "signature": "[Tag]-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:forceLast",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "Tag -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#forceLast",
        "fct-type": "function",
        "title": "forceLast"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "forceLast",
        "normalized": "Tag-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Last",
        "signature": "Tag-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:forceLasts",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "[Tag] -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#forceLasts",
        "fct-type": "function",
        "title": "forceLasts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "forceLasts",
        "normalized": "[Tag]-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Lasts",
        "signature": "[Tag]-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:forceMatchingFirst",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  TaggedPatch p x y -\u003e Bool) -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#forceMatchingFirst",
        "fct-type": "function",
        "title": "forceMatchingFirst"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "forceMatchingFirst",
        "normalized": "(a b c TaggedPatch d b e-\u003eBool)-\u003ePatchChoices d f g-\u003ePatchChoices d f g",
        "package": "darcs",
        "partial": "Matching First",
        "signature": "(forall x y. TaggedPatch p x y-\u003eBool)-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:forceMatchingLast",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  TaggedPatch p x y -\u003e Bool) -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#forceMatchingLast",
        "fct-type": "function",
        "title": "forceMatchingLast"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "forceMatchingLast",
        "normalized": "(a b c TaggedPatch d b e-\u003eBool)-\u003ePatchChoices d f g-\u003ePatchChoices d f g",
        "package": "darcs",
        "partial": "Matching Last",
        "signature": "(forall x y. TaggedPatch p x y-\u003eBool)-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:getChoices",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003egetChoices\u003c/code\u003e evaluates a \u003ccode\u003ePatchChoices\u003c/code\u003e into the first, middle and last sequences\n by doing the commutes that were needed.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "PatchChoices p x y -\u003e (FL (TaggedPatch p) :\u003e (FL (TaggedPatch p) :\u003e FL (TaggedPatch p))) x y",
        "fct-source": "src/Darcs-Patch-Choices.html#getChoices",
        "fct-type": "function",
        "title": "getChoices"
      },
      "index": {
        "description": "getChoices evaluates PatchChoices into the first middle and last sequences by doing the commutes that were needed",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "getChoices",
        "normalized": "PatchChoices a b c-\u003e(FL(TaggedPatch a)(FL(TaggedPatch a)FL(TaggedPatch a)))b c",
        "package": "darcs",
        "partial": "Choices",
        "signature": "PatchChoices p x y-\u003e(FL(TaggedPatch p)(FL(TaggedPatch p)FL(TaggedPatch p)))x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:makeEverythingLater",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-Choices.html#makeEverythingLater",
        "fct-type": "function",
        "title": "makeEverythingLater"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "makeEverythingLater",
        "normalized": "PatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Everything Later",
        "signature": "PatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:makeEverythingSooner",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-Choices.html#makeEverythingSooner",
        "fct-type": "function",
        "title": "makeEverythingSooner"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "makeEverythingSooner",
        "normalized": "PatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Everything Sooner",
        "signature": "PatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:makeUncertain",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "Tag -\u003e PatchChoices p a b -\u003e PatchChoices p a b",
        "fct-source": "src/Darcs-Patch-Choices.html#makeUncertain",
        "fct-type": "function",
        "title": "makeUncertain"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "makeUncertain",
        "normalized": "Tag-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Uncertain",
        "signature": "Tag-\u003ePatchChoices p a b-\u003ePatchChoices p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:patchChoices",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-Choices.html#patchChoices",
        "fct-type": "function",
        "title": "patchChoices"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "patchChoices",
        "normalized": "FL a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Choices",
        "signature": "FL p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:patchChoicesTps",
      "description": {
        "fct-descr": "\u003cp\u003eTag a sequence of patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e (PatchChoices p x y, FL (TaggedPatch p) x y)",
        "fct-source": "src/Darcs-Patch-Choices.html#patchChoicesTps",
        "fct-type": "function",
        "title": "patchChoicesTps"
      },
      "index": {
        "description": "Tag sequence of patches",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "patchChoicesTps",
        "normalized": "FL a b c-\u003e(PatchChoices a b c,FL(TaggedPatch a)b c)",
        "package": "darcs",
        "partial": "Choices Tps",
        "signature": "FL p x y-\u003e(PatchChoices p x y,FL(TaggedPatch p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:patchChoicesTpsSub",
      "description": {
        "fct-descr": "\u003cp\u003eTag a sequence of patches as subpatches of an existing tag. This is intended for\n use when substituting a patch for an equivalent patch or patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "Maybe Tag -\u003e FL p x y -\u003e (PatchChoices p x y, FL (TaggedPatch p) x y)",
        "fct-source": "src/Darcs-Patch-Choices.html#patchChoicesTpsSub",
        "fct-type": "function",
        "title": "patchChoicesTpsSub"
      },
      "index": {
        "description": "Tag sequence of patches as subpatches of an existing tag This is intended for use when substituting patch for an equivalent patch or patches",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "patchChoicesTpsSub",
        "normalized": "Maybe Tag-\u003eFL a b c-\u003e(PatchChoices a b c,FL(TaggedPatch a)b c)",
        "package": "darcs",
        "partial": "Choices Tps Sub",
        "signature": "Maybe Tag-\u003eFL p x y-\u003e(PatchChoices p x y,FL(TaggedPatch p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:patchSlot",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "TaggedPatch p a b -\u003e PatchChoices p x y -\u003e (Slot, PatchChoices p x y)",
        "fct-source": "src/Darcs-Patch-Choices.html#patchSlot",
        "fct-type": "function",
        "title": "patchSlot"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "patchSlot",
        "normalized": "TaggedPatch a b c-\u003ePatchChoices a d e-\u003e(Slot,PatchChoices a d e)",
        "package": "darcs",
        "partial": "Slot",
        "signature": "TaggedPatch p a b-\u003ePatchChoices p x y-\u003e(Slot,PatchChoices p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:patchSlot-39-",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "TaggedPatch p a b -\u003e StateT (PatchChoices p x y) Identity Slot",
        "fct-source": "src/Darcs-Patch-Choices.html#patchSlot%27",
        "fct-type": "function",
        "title": "patchSlot'"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "patchSlot'",
        "normalized": "TaggedPatch a b c-\u003eStateT(PatchChoices a d e)Identity Slot",
        "package": "darcs",
        "partial": "Slot'",
        "signature": "TaggedPatch p a b-\u003eStateT(PatchChoices p x y)Identity Slot"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:refineChoices",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003erefineChoices act\u003c/code\u003e performs \u003ccode\u003eact\u003c/code\u003e on the middle part of a sequence\n of choices, in order to hopefully get more patches into the \u003ccode\u003efirst\u003c/code\u003e and\n \u003ccode\u003elast\u003c/code\u003e parts of a \u003ccode\u003ePatchChoices\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "(forall u v.  FL (TaggedPatch p) u v -\u003e PatchChoices p u v -\u003e m (PatchChoices p u v)) -\u003e PatchChoices p x y -\u003e m (PatchChoices p x y)",
        "fct-source": "src/Darcs-Patch-Choices.html#refineChoices",
        "fct-type": "function",
        "title": "refineChoices"
      },
      "index": {
        "description": "refineChoices act performs act on the middle part of sequence of choices in order to hopefully get more patches into the first and last parts of PatchChoices",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "refineChoices",
        "normalized": "(a b c FL(TaggedPatch d)b e-\u003ePatchChoices d b e-\u003ef(PatchChoices d b e))-\u003ePatchChoices d g h-\u003ef(PatchChoices d g h)",
        "package": "darcs",
        "partial": "Choices",
        "signature": "(forall u v. FL(TaggedPatch p)u v-\u003ePatchChoices p u v-\u003em(PatchChoices p u v))-\u003ePatchChoices p x y-\u003em(PatchChoices p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:selectAllMiddles",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "Bool -\u003e PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-Choices.html#selectAllMiddles",
        "fct-type": "function",
        "title": "selectAllMiddles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "selectAllMiddles",
        "normalized": "Bool-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "All Middles",
        "signature": "Bool-\u003ePatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:separateFirstFromMiddleLast",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "PatchChoices p x z -\u003e (FL (TaggedPatch p) :\u003e FL (TaggedPatch p)) x z",
        "fct-source": "src/Darcs-Patch-Choices.html#separateFirstFromMiddleLast",
        "fct-type": "function",
        "title": "separateFirstFromMiddleLast"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "separateFirstFromMiddleLast",
        "normalized": "PatchChoices a b c-\u003e(FL(TaggedPatch a)FL(TaggedPatch a))b c",
        "package": "darcs",
        "partial": "First From Middle Last",
        "signature": "PatchChoices p x z-\u003e(FL(TaggedPatch p)FL(TaggedPatch p))x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:separateFirstMiddleFromLast",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "PatchChoices p x z -\u003e (FL (TaggedPatch p) :\u003e FL (TaggedPatch p)) x z",
        "fct-source": "src/Darcs-Patch-Choices.html#separateFirstMiddleFromLast",
        "fct-type": "function",
        "title": "separateFirstMiddleFromLast"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "separateFirstMiddleFromLast",
        "normalized": "PatchChoices a b c-\u003e(FL(TaggedPatch a)FL(TaggedPatch a))b c",
        "package": "darcs",
        "partial": "First Middle From Last",
        "signature": "PatchChoices p x z-\u003e(FL(TaggedPatch p)FL(TaggedPatch p))x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:substitute",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esubstitute\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e(a :||: bs)\u003c/code\u003e \u003ccode\u003epcs\u003c/code\u003e replaces \u003ccode\u003ea\u003c/code\u003e with \u003ccode\u003ebs\u003c/code\u003e in \u003ccode\u003epcs\u003c/code\u003e preserving the choice\n   associated with \u003ccode\u003ea\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "Sealed2 (TaggedPatch p :||: FL (TaggedPatch p)) -\u003e PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-Choices.html#substitute",
        "fct-type": "function",
        "title": "substitute"
      },
      "index": {
        "description": "substitute bs pcs replaces with bs in pcs preserving the choice associated with",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "substitute",
        "normalized": "Sealed(TaggedPatch a FL(TaggedPatch a))-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "",
        "signature": "Sealed(TaggedPatch p FL(TaggedPatch p))-\u003ePatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:tag",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "TaggedPatch p x y -\u003e Tag",
        "fct-source": "src/Darcs-Patch-Choices.html#tag",
        "fct-type": "function",
        "title": "tag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "tag",
        "normalized": "TaggedPatch a b c-\u003eTag",
        "package": "darcs",
        "partial": "",
        "signature": "TaggedPatch p x y-\u003eTag"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Choices.html#v:tpPatch",
      "description": {
        "fct-module": "Darcs.Patch.Choices",
        "fct-package": "darcs",
        "fct-signature": "TaggedPatch p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Choices.html#tpPatch",
        "fct-type": "function",
        "title": "tpPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Choices",
        "module": "Darcs.Patch.Choices",
        "name": "tpPatch",
        "normalized": "TaggedPatch a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Patch",
        "signature": "TaggedPatch p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#",
      "description": {
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Commute.html",
        "fct-type": "module",
        "title": "Commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "Commute",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#t:Commute",
      "description": {
        "fct-descr": "\u003cp\u003eThings that can commute.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Commute.html#Commute",
        "fct-type": "class",
        "title": "Commute"
      },
      "index": {
        "description": "Things that can commute",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "Commute",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:commute",
      "description": {
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e p) x y -\u003e Maybe ((p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commute",
        "fct-type": "method",
        "title": "commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "commute",
        "normalized": "(a a)b c-\u003eMaybe((a a)b c)",
        "package": "darcs",
        "partial": "",
        "signature": "(p p)x y-\u003eMaybe((p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:commuteFL",
      "description": {
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e FL p) x y -\u003e Maybe ((FL p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commuteFL",
        "fct-type": "function",
        "title": "commuteFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "commuteFL",
        "normalized": "(a FL a)b c-\u003eMaybe((FL a a)b c)",
        "package": "darcs",
        "partial": "FL",
        "signature": "(p FL p)x y-\u003eMaybe((FL p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:commuteFLorComplain",
      "description": {
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e FL p) x y -\u003e Either (Sealed2 p) ((FL p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commuteFLorComplain",
        "fct-type": "function",
        "title": "commuteFLorComplain"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "commuteFLorComplain",
        "normalized": "(a FL a)b c-\u003eEither(Sealed a)((FL a a)b c)",
        "package": "darcs",
        "partial": "FLor Complain",
        "signature": "(p FL p)x y-\u003eEither(Sealed p)((FL p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:commuteRL",
      "description": {
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "(RL p :\u003e p) x y -\u003e Maybe ((p :\u003e RL p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commuteRL",
        "fct-type": "function",
        "title": "commuteRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "commuteRL",
        "normalized": "(RL a a)b c-\u003eMaybe((a RL a)b c)",
        "package": "darcs",
        "partial": "RL",
        "signature": "(RL p p)x y-\u003eMaybe((p RL p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:commuteRLFL",
      "description": {
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "(RL p :\u003e FL p) x y -\u003e Maybe ((FL p :\u003e RL p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commuteRLFL",
        "fct-type": "function",
        "title": "commuteRLFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "commuteRLFL",
        "normalized": "(RL a FL a)b c-\u003eMaybe((FL a RL a)b c)",
        "package": "darcs",
        "partial": "RLFL",
        "signature": "(RL p FL p)x y-\u003eMaybe((FL p RL p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:toFwdCommute",
      "description": {
        "fct-descr": "\u003cp\u003eSwaps the ordered pair type so that commute can be\n called directly.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "((p :\u003c q) x y -\u003e m ((q :\u003c p) x y)) -\u003e (q :\u003e p) x y -\u003e m ((p :\u003e q) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#toFwdCommute",
        "fct-type": "function",
        "title": "toFwdCommute"
      },
      "index": {
        "description": "Swaps the ordered pair type so that commute can be called directly",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "toFwdCommute",
        "normalized": "((a b)c d-\u003ee((b a)c d))-\u003e(b a)c d-\u003ee((a b)c d)",
        "package": "darcs",
        "partial": "Fwd Commute",
        "signature": "((p q)x y-\u003em((q p)x y))-\u003e(q p)x y-\u003em((p q)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Commute.html#v:toRevCommute",
      "description": {
        "fct-descr": "\u003cp\u003eSwaps the ordered pair type from the order expected\n by commute to the reverse order.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Commute",
        "fct-package": "darcs",
        "fct-signature": "((p :\u003e q) x y -\u003e m ((q :\u003e p) x y)) -\u003e (q :\u003c p) x y -\u003e m ((p :\u003c q) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#toRevCommute",
        "fct-type": "function",
        "title": "toRevCommute"
      },
      "index": {
        "description": "Swaps the ordered pair type from the order expected by commute to the reverse order",
        "hierarchy": "Darcs Patch Commute",
        "module": "Darcs.Patch.Commute",
        "name": "toRevCommute",
        "normalized": "((a b)c d-\u003ee((b a)c d))-\u003e(b a)c d-\u003ee((a b)c d)",
        "package": "darcs",
        "partial": "Rev Commute",
        "signature": "((p q)x y-\u003em((q p)x y))-\u003e(q p)x y-\u003em((p q)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Conflict.html",
        "fct-type": "module",
        "title": "Conflict"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "Conflict",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflict",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#t:CommuteNoConflicts",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Conflict.html#CommuteNoConflicts",
        "fct-type": "class",
        "title": "CommuteNoConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "CommuteNoConflicts",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute No Conflicts",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#t:Conflict",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Conflict.html#Conflict",
        "fct-type": "class",
        "title": "Conflict"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "Conflict",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflict",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#t:ConflictState",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Conflict.html#ConflictState",
        "fct-type": "data",
        "title": "ConflictState"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "ConflictState",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflict State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#t:IsConflictedPrim",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Conflict.html#IsConflictedPrim",
        "fct-type": "data",
        "title": "IsConflictedPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "IsConflictedPrim",
        "normalized": "",
        "package": "darcs",
        "partial": "Is Conflicted Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:Conflicted",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "Conflicted",
        "fct-source": "src/Darcs-Patch-Conflict.html#ConflictState",
        "fct-type": "function",
        "title": "Conflicted"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "Conflicted",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflicted",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:Duplicated",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "Duplicated",
        "fct-source": "src/Darcs-Patch-Conflict.html#ConflictState",
        "fct-type": "function",
        "title": "Duplicated"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "Duplicated",
        "normalized": "",
        "package": "darcs",
        "partial": "Duplicated",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:IsC",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "!ConflictState -\u003e !(prim x y) -\u003e IsConflictedPrim prim",
        "fct-source": "src/Darcs-Patch-Conflict.html#IsConflictedPrim",
        "fct-type": "function",
        "title": "IsC"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "IsC",
        "normalized": "ConflictState-\u003e(a b c)-\u003eIsConflictedPrim a",
        "package": "darcs",
        "partial": "Is",
        "signature": "ConflictState-\u003e(prim x y)-\u003eIsConflictedPrim prim"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:Okay",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "Okay",
        "fct-source": "src/Darcs-Patch-Conflict.html#ConflictState",
        "fct-type": "function",
        "title": "Okay"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "Okay",
        "normalized": "",
        "package": "darcs",
        "partial": "Okay",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:commuteNoConflicts",
      "description": {
        "fct-descr": "\u003cp\u003eIf \u003ccode\u003e\u003ca\u003ecommuteNoConflicts\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ex :\u003e y\u003c/code\u003e succeeds, we know that that \u003ccode\u003ex\u003c/code\u003e commutes\n   past \u003ccode\u003ey\u003c/code\u003e without any conflicts.   This function is useful for patch types\n   for which \u003ccode\u003ecommute\u003c/code\u003e is defined to always succeed; so we need some way to\n   pick out the specific cases where commutation succeeds without any conflicts.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e p) x y -\u003e Maybe ((p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Conflict.html#commuteNoConflicts",
        "fct-type": "method",
        "title": "commuteNoConflicts"
      },
      "index": {
        "description": "If commuteNoConflicts succeeds we know that that commutes past without any conflicts This function is useful for patch types for which commute is defined to always succeed so we need some way to pick out the specific cases where commutation succeeds without any conflicts",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "commuteNoConflicts",
        "normalized": "(a a)b c-\u003eMaybe((a a)b c)",
        "package": "darcs",
        "partial": "No Conflicts",
        "signature": "(p p)x y-\u003eMaybe((p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:conflictedEffect",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [IsConflictedPrim (PrimOf p)]",
        "fct-source": "src/Darcs-Patch-Conflict.html#conflictedEffect",
        "fct-type": "method",
        "title": "conflictedEffect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "conflictedEffect",
        "normalized": "a b c-\u003e[IsConflictedPrim(PrimOf a)]",
        "package": "darcs",
        "partial": "Effect",
        "signature": "p x y-\u003e[IsConflictedPrim(PrimOf p)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:listConflictedFiles",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Conflict.html#listConflictedFiles",
        "fct-type": "method",
        "title": "listConflictedFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "listConflictedFiles",
        "normalized": "a b c-\u003e[FilePath]",
        "package": "darcs",
        "partial": "Conflicted Files",
        "signature": "p x y-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Conflict.html#v:resolveConflicts",
      "description": {
        "fct-module": "Darcs.Patch.Conflict",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [[Sealed (FL (PrimOf p) y)]]",
        "fct-source": "src/Darcs-Patch-Conflict.html#resolveConflicts",
        "fct-type": "method",
        "title": "resolveConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Conflict",
        "module": "Darcs.Patch.Conflict",
        "name": "resolveConflicts",
        "normalized": "a b c-\u003e[[Sealed(FL(PrimOf a)c)]]",
        "package": "darcs",
        "partial": "Conflicts",
        "signature": "p x y-\u003e[[Sealed(FL(PrimOf p)y)]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ConflictMarking.html#",
      "description": {
        "fct-module": "Darcs.Patch.ConflictMarking",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-ConflictMarking.html",
        "fct-type": "module",
        "title": "ConflictMarking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ConflictMarking",
        "module": "Darcs.Patch.ConflictMarking",
        "name": "ConflictMarking",
        "normalized": "",
        "package": "darcs",
        "partial": "Conflict Marking",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ConflictMarking.html#v:mangleUnravelled",
      "description": {
        "fct-module": "Darcs.Patch.ConflictMarking",
        "fct-package": "darcs",
        "fct-signature": "[Sealed (FL prim x)] -\u003e Sealed (FL prim x)",
        "fct-source": "src/Darcs-Patch-ConflictMarking.html#mangleUnravelled",
        "fct-type": "function",
        "title": "mangleUnravelled"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ConflictMarking",
        "module": "Darcs.Patch.ConflictMarking",
        "name": "mangleUnravelled",
        "normalized": "[Sealed(FL a b)]-\u003eSealed(FL a b)",
        "package": "darcs",
        "partial": "Unravelled",
        "signature": "[Sealed(FL prim x)]-\u003eSealed(FL prim x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Depends.html",
        "fct-type": "module",
        "title": "Depends"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "Depends",
        "normalized": "",
        "package": "darcs",
        "partial": "Depends",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:areUnrelatedRepos",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Depends.html#areUnrelatedRepos",
        "fct-type": "function",
        "title": "areUnrelatedRepos"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "areUnrelatedRepos",
        "normalized": "PatchSet a b c-\u003ePatchSet a b d-\u003eBool",
        "package": "darcs",
        "partial": "Unrelated Repos",
        "signature": "PatchSet p start x-\u003ePatchSet p start y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:commuteToEnd",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "RL (PatchInfoAnd p) x y -\u003e PatchSet p start y -\u003e (PatchSet p :\u003e RL (PatchInfoAnd p)) start x",
        "fct-source": "src/Darcs-Patch-Depends.html#commuteToEnd",
        "fct-type": "function",
        "title": "commuteToEnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "commuteToEnd",
        "normalized": "RL(PatchInfoAnd a)b c-\u003ePatchSet a d c-\u003e(PatchSet a RL(PatchInfoAnd a))d b",
        "package": "darcs",
        "partial": "To End",
        "signature": "RL(PatchInfoAnd p)x y-\u003ePatchSet p start y-\u003e(PatchSet p RL(PatchInfoAnd p))start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:countUsThem",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start y -\u003e (Int, Int)",
        "fct-source": "src/Darcs-Patch-Depends.html#countUsThem",
        "fct-type": "function",
        "title": "countUsThem"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "countUsThem",
        "normalized": "PatchSet a b c-\u003ePatchSet a b d-\u003e(Int,Int)",
        "package": "darcs",
        "partial": "Us Them",
        "signature": "PatchSet p start x-\u003ePatchSet p start y-\u003e(Int,Int)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:deepOptimizePatchset",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003edeepOptimizePatchset\u003c/code\u003e runs through all patches whether they are in the\n   surface inventory or the deep one.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start x",
        "fct-source": "src/Darcs-Patch-Depends.html#deepOptimizePatchset",
        "fct-type": "function",
        "title": "deepOptimizePatchset"
      },
      "index": {
        "description": "deepOptimizePatchset runs through all patches whether they are in the surface inventory or the deep one",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "deepOptimizePatchset",
        "normalized": "PatchSet a b c-\u003ePatchSet a b c",
        "package": "darcs",
        "partial": "Optimize Patchset",
        "signature": "PatchSet p start x-\u003ePatchSet p start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:findCommonWithThem",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start y -\u003e (PatchSet p :\u003e FL (PatchInfoAnd p)) start x",
        "fct-source": "src/Darcs-Patch-Depends.html#findCommonWithThem",
        "fct-type": "function",
        "title": "findCommonWithThem"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "findCommonWithThem",
        "normalized": "PatchSet a b c-\u003ePatchSet a b d-\u003e(PatchSet a FL(PatchInfoAnd a))b c",
        "package": "darcs",
        "partial": "Common With Them",
        "signature": "PatchSet p start x-\u003ePatchSet p start y-\u003e(PatchSet p FL(PatchInfoAnd p))start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:findUncommon",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start y -\u003e (FL (PatchInfoAnd p) :\\/: FL (PatchInfoAnd p)) x y",
        "fct-source": "src/Darcs-Patch-Depends.html#findUncommon",
        "fct-type": "function",
        "title": "findUncommon"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "findUncommon",
        "normalized": "PatchSet a b c-\u003ePatchSet a b d-\u003e(FL(PatchInfoAnd a)FL(PatchInfoAnd a))c d",
        "package": "darcs",
        "partial": "Uncommon",
        "signature": "PatchSet p start x-\u003ePatchSet p start y-\u003e(FL(PatchInfoAnd p)FL(PatchInfoAnd p))x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:getPatchesBeyondTag",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e PatchSet p start x -\u003e FlippedSeal (RL (PatchInfoAnd p)) x",
        "fct-source": "src/Darcs-Patch-Depends.html#getPatchesBeyondTag",
        "fct-type": "function",
        "title": "getPatchesBeyondTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "getPatchesBeyondTag",
        "normalized": "PatchInfo-\u003ePatchSet a b c-\u003eFlippedSeal(RL(PatchInfoAnd a))c",
        "package": "darcs",
        "partial": "Patches Beyond Tag",
        "signature": "PatchInfo-\u003ePatchSet p start x-\u003eFlippedSeal(RL(PatchInfoAnd p))x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:getPatchesInTag",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003egetPatchesInTag t ps\u003c/code\u003e returns a \u003ccode\u003e\u003ca\u003eSealedPatchSet\u003c/a\u003e\u003c/code\u003e of all\n patches in \u003ccode\u003eps\u003c/code\u003e which are contained in \u003ccode\u003et\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e PatchSet p start x -\u003e SealedPatchSet p start",
        "fct-source": "src/Darcs-Patch-Depends.html#getPatchesInTag",
        "fct-type": "function",
        "title": "getPatchesInTag"
      },
      "index": {
        "description": "getPatchesInTag ps returns SealedPatchSet of all patches in ps which are contained in",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "getPatchesInTag",
        "normalized": "PatchInfo-\u003ePatchSet a b c-\u003eSealedPatchSet a b",
        "package": "darcs",
        "partial": "Patches In Tag",
        "signature": "PatchInfo-\u003ePatchSet p start x-\u003eSealedPatchSet p start"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:getTagsRight",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003egetTagsRight ps\u003c/code\u003e returns the \u003ccode\u003e\u003ca\u003ePatchInfo\u003c/a\u003e\u003c/code\u003e for all the patches in\n   \u003ccode\u003eps\u003c/code\u003e that are not depended on by anything else *through explicit\n   dependencies*. Tags are a likely candidate, although we may also\n   find some non-tag patches in this list.\n\u003c/p\u003e\u003cp\u003eKeep in mind that in a typical repository with a lot of tags, only a small\n   fraction of tags would be returned as they would be at least indirectly\n   depended on by the topmost ones.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e [PatchInfo]",
        "fct-source": "src/Darcs-Patch-Depends.html#getTagsRight",
        "fct-type": "function",
        "title": "getTagsRight"
      },
      "index": {
        "description": "getTagsRight ps returns the PatchInfo for all the patches in ps that are not depended on by anything else through explicit dependencies Tags are likely candidate although we may also find some non-tag patches in this list Keep in mind that in typical repository with lot of tags only small fraction of tags would be returned as they would be at least indirectly depended on by the topmost ones",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "getTagsRight",
        "normalized": "PatchSet a b c-\u003e[PatchInfo]",
        "package": "darcs",
        "partial": "Tags Right",
        "signature": "PatchSet p start x-\u003e[PatchInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:merge2FL",
      "description": {
        "fct-descr": "\u003cp\u003eMerge two FLs (say L and R), starting in a common context. The result is a\n FL starting in the original end context of L, going to a new context that is\n the result of applying all patches from R on top of patches from L.\n\u003c/p\u003e\u003cp\u003eWhile this function is similar to \u003ccode\u003e\u003ca\u003emergeFL\u003c/a\u003e\u003c/code\u003e, there are three important\n differences to keep in mind:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003emergeFL\u003c/a\u003e\u003c/code\u003e does not correctly deal with duplicate patches whereas this one\n   does\n   (Question from Eric Kow: in what sense? Why not fix the mergeFL instance?)\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003emergeFL\u003c/a\u003e\u003c/code\u003e returns both paths of the merge diamond, but this version only\n   returns one, so you'd better choose the order carefully, eg.\n   (\u003ccode\u003emerge2FL l r\u003c/code\u003e)\n\u003c/li\u003e\u003cli\u003e The conventional order we use in this function is reversed from\n   \u003ccode\u003e\u003ca\u003emergeFL\u003c/a\u003e\u003c/code\u003e (so \u003ccode\u003emergeFL r l\u003c/code\u003e vs. \u003ccode\u003emerge2FL l r\u003c/code\u003e. This does not\n   matter so much for the former since you get both paths.\n   (Question from Eric Kow: should we flip merge2FL for more uniformity in\n    the code?)\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "FL (PatchInfoAnd p) x y -\u003e FL (PatchInfoAnd p) x z -\u003e Sealed (FL (PatchInfoAnd p) y)",
        "fct-source": "src/Darcs-Patch-Depends.html#merge2FL",
        "fct-type": "function",
        "title": "merge2FL"
      },
      "index": {
        "description": "Merge two FLs say and starting in common context The result is FL starting in the original end context of going to new context that is the result of applying all patches from on top of patches from While this function is similar to mergeFL there are three important differences to keep in mind mergeFL does not correctly deal with duplicate patches whereas this one does Question from Eric Kow in what sense Why not fix the mergeFL instance mergeFL returns both paths of the merge diamond but this version only returns one so you better choose the order carefully eg merge2FL The conventional order we use in this function is reversed from mergeFL so mergeFL vs merge2FL This does not matter so much for the former since you get both paths Question from Eric Kow should we flip merge2FL for more uniformity in the code",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "merge2FL",
        "normalized": "FL(PatchInfoAnd a)b c-\u003eFL(PatchInfoAnd a)b d-\u003eSealed(FL(PatchInfoAnd a)c)",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL(PatchInfoAnd p)x y-\u003eFL(PatchInfoAnd p)x z-\u003eSealed(FL(PatchInfoAnd p)y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:mergeThem",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start y -\u003e Sealed (FL (PatchInfoAnd p) x)",
        "fct-source": "src/Darcs-Patch-Depends.html#mergeThem",
        "fct-type": "function",
        "title": "mergeThem"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "mergeThem",
        "normalized": "PatchSet a b c-\u003ePatchSet a b d-\u003eSealed(FL(PatchInfoAnd a)c)",
        "package": "darcs",
        "partial": "Them",
        "signature": "PatchSet p start x-\u003ePatchSet p start y-\u003eSealed(FL(PatchInfoAnd p)x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:newsetIntersection",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "[SealedPatchSet p start] -\u003e SealedPatchSet p start",
        "fct-source": "src/Darcs-Patch-Depends.html#newsetIntersection",
        "fct-type": "function",
        "title": "newsetIntersection"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "newsetIntersection",
        "normalized": "[SealedPatchSet a b]-\u003eSealedPatchSet a b",
        "package": "darcs",
        "partial": "Intersection",
        "signature": "[SealedPatchSet p start]-\u003eSealedPatchSet p start"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:newsetUnion",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "[SealedPatchSet p start] -\u003e SealedPatchSet p start",
        "fct-source": "src/Darcs-Patch-Depends.html#newsetUnion",
        "fct-type": "function",
        "title": "newsetUnion"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "newsetUnion",
        "normalized": "[SealedPatchSet a b]-\u003eSealedPatchSet a b",
        "package": "darcs",
        "partial": "Union",
        "signature": "[SealedPatchSet p start]-\u003eSealedPatchSet p start"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:optimizePatchset",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eoptimizePatchset\u003c/code\u003e is similar to \u003ccode\u003eslightlyOptimizePatchset\u003c/code\u003e in\n   that it only works on the surface inventory (see below), but it\n   works a bit harder and can optimize several tags.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e surface inventory: the sequence of patches that corresponds\n     to the \u003ccode\u003e_darcs\u003cem\u003ehashed\\_inventory@ or @\\_darcs\u003c/em\u003einventory\u003c/code\u003e files\n\u003c/li\u003e\u003cli\u003e deep inventory: the sequence of sequences of patches that\n     corresponds to the \u003ccode\u003e_darcs/inventories\u003c/code\u003e directory\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start x",
        "fct-source": "src/Darcs-Patch-Depends.html#optimizePatchset",
        "fct-type": "function",
        "title": "optimizePatchset"
      },
      "index": {
        "description": "optimizePatchset is similar to slightlyOptimizePatchset in that it only works on the surface inventory see below but it works bit harder and can optimize several tags surface inventory the sequence of patches that corresponds to the darcs hashed inventory or darcs inventory files deep inventory the sequence of sequences of patches that corresponds to the darcs inventories directory",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "optimizePatchset",
        "normalized": "PatchSet a b c-\u003ePatchSet a b c",
        "package": "darcs",
        "partial": "Patchset",
        "signature": "PatchSet p start x-\u003ePatchSet p start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:removeFromPatchSet",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "FL (PatchInfoAnd p) x y -\u003e PatchSet p start y -\u003e Maybe (PatchSet p start x)",
        "fct-source": "src/Darcs-Patch-Depends.html#removeFromPatchSet",
        "fct-type": "function",
        "title": "removeFromPatchSet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "removeFromPatchSet",
        "normalized": "FL(PatchInfoAnd a)b c-\u003ePatchSet a d c-\u003eMaybe(PatchSet a d b)",
        "package": "darcs",
        "partial": "From Patch Set",
        "signature": "FL(PatchInfoAnd p)x y-\u003ePatchSet p start y-\u003eMaybe(PatchSet p start x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:slightlyOptimizePatchset",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eslightlyOptimizePatchset\u003c/code\u003e only works on the surface inventory\n   (see \u003ccode\u003e\u003ca\u003eoptimizePatchset\u003c/a\u003e\u003c/code\u003e) and only optimises at most one tag in\n   there, going for the most recent tag which has no non-depended\n   patch after it. Older tags won't be \u003ccode\u003eclean\u003c/code\u003e, which means the\n   PatchSet will not be in 'unclean :\u003c clean' state.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e PatchSet p start x",
        "fct-source": "src/Darcs-Patch-Depends.html#slightlyOptimizePatchset",
        "fct-type": "function",
        "title": "slightlyOptimizePatchset"
      },
      "index": {
        "description": "slightlyOptimizePatchset only works on the surface inventory see optimizePatchset and only optimises at most one tag in there going for the most recent tag which has no non-depended patch after it Older tags won be clean which means the PatchSet will not be in unclean clean state",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "slightlyOptimizePatchset",
        "normalized": "PatchSet a b c-\u003ePatchSet a b c",
        "package": "darcs",
        "partial": "Optimize Patchset",
        "signature": "PatchSet p start x-\u003ePatchSet p start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Depends.html#v:splitOnTag",
      "description": {
        "fct-module": "Darcs.Patch.Depends",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e PatchSet p start x -\u003e (PatchSet p :\u003e RL (PatchInfoAnd p)) start x",
        "fct-source": "src/Darcs-Patch-Depends.html#splitOnTag",
        "fct-type": "function",
        "title": "splitOnTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Depends",
        "module": "Darcs.Patch.Depends",
        "name": "splitOnTag",
        "normalized": "PatchInfo-\u003ePatchSet a b c-\u003e(PatchSet a RL(PatchInfoAnd a))b c",
        "package": "darcs",
        "partial": "On Tag",
        "signature": "PatchInfo-\u003ePatchSet p start x-\u003e(PatchSet p RL(PatchInfoAnd p))start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Dummy.html#",
      "description": {
        "fct-module": "Darcs.Patch.Dummy",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Dummy.html",
        "fct-type": "module",
        "title": "Dummy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Dummy",
        "module": "Darcs.Patch.Dummy",
        "name": "Dummy",
        "normalized": "",
        "package": "darcs",
        "partial": "Dummy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Dummy.html#t:DummyPatch",
      "description": {
        "fct-module": "Darcs.Patch.Dummy",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Dummy.html#DummyPatch",
        "fct-type": "data",
        "title": "DummyPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Dummy",
        "module": "Darcs.Patch.Dummy",
        "name": "DummyPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Dummy Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Effect.html#",
      "description": {
        "fct-module": "Darcs.Patch.Effect",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Effect.html",
        "fct-type": "module",
        "title": "Effect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Effect",
        "module": "Darcs.Patch.Effect",
        "name": "Effect",
        "normalized": "",
        "package": "darcs",
        "partial": "Effect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Effect.html#t:Effect",
      "description": {
        "fct-descr": "\u003cp\u003ePatches whose concrete effect which can be expressed as a list of\n   primitive patches.\n\u003c/p\u003e\u003cp\u003eA minimal definition would be either of \u003ccode\u003eeffect\u003c/code\u003e or \u003ccode\u003eeffectRL\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Effect",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Effect.html#Effect",
        "fct-type": "class",
        "title": "Effect"
      },
      "index": {
        "description": "Patches whose concrete effect which can be expressed as list of primitive patches minimal definition would be either of effect or effectRL",
        "hierarchy": "Darcs Patch Effect",
        "module": "Darcs.Patch.Effect",
        "name": "Effect",
        "normalized": "",
        "package": "darcs",
        "partial": "Effect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Effect.html#v:effect",
      "description": {
        "fct-module": "Darcs.Patch.Effect",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e FL (PrimOf p) x y",
        "fct-source": "src/Darcs-Patch-Effect.html#effect",
        "fct-type": "method",
        "title": "effect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Effect",
        "module": "Darcs.Patch.Effect",
        "name": "effect",
        "normalized": "a b c-\u003eFL(PrimOf a)b c",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eFL(PrimOf p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Effect.html#v:effectRL",
      "description": {
        "fct-module": "Darcs.Patch.Effect",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e RL (PrimOf p) x y",
        "fct-source": "src/Darcs-Patch-Effect.html#effectRL",
        "fct-type": "method",
        "title": "effectRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Effect",
        "module": "Darcs.Patch.Effect",
        "name": "effectRL",
        "normalized": "a b c-\u003eRL(PrimOf a)b c",
        "package": "darcs",
        "partial": "RL",
        "signature": "p x y-\u003eRL(PrimOf p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileHunk.html#",
      "description": {
        "fct-module": "Darcs.Patch.FileHunk",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-FileHunk.html",
        "fct-type": "module",
        "title": "FileHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileHunk",
        "module": "Darcs.Patch.FileHunk",
        "name": "FileHunk",
        "normalized": "",
        "package": "darcs",
        "partial": "File Hunk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileHunk.html#t:FileHunk",
      "description": {
        "fct-module": "Darcs.Patch.FileHunk",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-FileHunk.html#FileHunk",
        "fct-type": "data",
        "title": "FileHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileHunk",
        "module": "Darcs.Patch.FileHunk",
        "name": "FileHunk",
        "normalized": "",
        "package": "darcs",
        "partial": "File Hunk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileHunk.html#t:IsHunk",
      "description": {
        "fct-module": "Darcs.Patch.FileHunk",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-FileHunk.html#IsHunk",
        "fct-type": "class",
        "title": "IsHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileHunk",
        "module": "Darcs.Patch.FileHunk",
        "name": "IsHunk",
        "normalized": "",
        "package": "darcs",
        "partial": "Is Hunk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileHunk.html#v:FileHunk",
      "description": {
        "fct-module": "Darcs.Patch.FileHunk",
        "fct-package": "darcs",
        "fct-signature": "FileHunk !FileName !Int [ByteString] [ByteString]",
        "fct-source": "src/Darcs-Patch-FileHunk.html#FileHunk",
        "fct-type": "function",
        "title": "FileHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileHunk",
        "module": "Darcs.Patch.FileHunk",
        "name": "FileHunk",
        "normalized": "FileHunk FileName Int[ByteString][ByteString]",
        "package": "darcs",
        "partial": "File Hunk",
        "signature": "FileHunk FileName Int[ByteString][ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileHunk.html#v:isHunk",
      "description": {
        "fct-module": "Darcs.Patch.FileHunk",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe (FileHunk x y)",
        "fct-source": "src/Darcs-Patch-FileHunk.html#isHunk",
        "fct-type": "method",
        "title": "isHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileHunk",
        "module": "Darcs.Patch.FileHunk",
        "name": "isHunk",
        "normalized": "a b c-\u003eMaybe(FileHunk b c)",
        "package": "darcs",
        "partial": "Hunk",
        "signature": "p x y-\u003eMaybe(FileHunk x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileHunk.html#v:showFileHunk",
      "description": {
        "fct-module": "Darcs.Patch.FileHunk",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e FileHunk x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-FileHunk.html#showFileHunk",
        "fct-type": "function",
        "title": "showFileHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileHunk",
        "module": "Darcs.Patch.FileHunk",
        "name": "showFileHunk",
        "normalized": "FileNameFormat-\u003eFileHunk a b-\u003eDoc",
        "package": "darcs",
        "partial": "File Hunk",
        "signature": "FileNameFormat-\u003eFileHunk x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFileName is an abstract type intended to facilitate the input and output of\n unicode filenames.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-FileName.html",
        "fct-type": "module",
        "title": "FileName"
      },
      "index": {
        "description": "FileName is an abstract type intended to facilitate the input and output of unicode filenames",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "FileName",
        "normalized": "",
        "package": "darcs",
        "partial": "File Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#t:FileName",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-FileName.html#FileName",
        "fct-type": "data",
        "title": "FileName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "FileName",
        "normalized": "",
        "package": "darcs",
        "partial": "File Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:-47--47--47-",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#%2F%2F%2F",
        "fct-type": "function",
        "title": "(///)"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "(///) ///",
        "normalized": "FileName-\u003eFileName-\u003eFileName",
        "package": "darcs",
        "partial": "",
        "signature": "FileName-\u003eFileName-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:breakOnDir",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e Maybe (FileName, FileName)",
        "fct-source": "src/Darcs-Patch-FileName.html#breakOnDir",
        "fct-type": "function",
        "title": "breakOnDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "breakOnDir",
        "normalized": "FileName-\u003eMaybe(FileName,FileName)",
        "package": "darcs",
        "partial": "On Dir",
        "signature": "FileName-\u003eMaybe(FileName,FileName)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:breakup",
      "description": {
        "fct-descr": "\u003cp\u003eSplit a file path at the slashes\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String]",
        "fct-source": "src/Darcs-Patch-FileName.html#breakup",
        "fct-type": "function",
        "title": "breakup"
      },
      "index": {
        "description": "Split file path at the slashes",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "breakup",
        "normalized": "String-\u003e[String]",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:decodeWhite",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003edecodeWhite\u003c/a\u003e\u003c/code\u003e interprets the Darcs-specific \"encoded\" filenames\n   produced by \u003ccode\u003e\u003ca\u003eencodeWhite\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e decodeWhite \"hello\\32\\there\"  == \"hello there\"\n decodeWhite \"hello\\92\\there\"  == \"hello\\there\"\n decodeWhite \"hello\\there\"   == error \"malformed filename\"\n\u003c/pre\u003e",
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FilePath",
        "fct-source": "src/Darcs-Patch-FileName.html#decodeWhite",
        "fct-type": "function",
        "title": "decodeWhite"
      },
      "index": {
        "description": "decodeWhite interprets the Darcs-specific encoded filenames produced by encodeWhite decodeWhite hello there hello there decodeWhite hello there hello there decodeWhite hello there error malformed filename",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "decodeWhite",
        "normalized": "String-\u003eFilePath",
        "package": "darcs",
        "partial": "White",
        "signature": "String-\u003eFilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:encodeWhite",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eencodeWhite\u003c/a\u003e\u003c/code\u003e translates whitespace in filenames to a darcs-specific\n   format (numerical representation according to \u003ccode\u003e\u003ca\u003eord\u003c/a\u003e\u003c/code\u003e surrounded by\n   backslashes).  Note that backslashes are also escaped since they are used\n   in the encoding.\n\u003c/p\u003e\u003cpre\u003e encodeWhite \"hello there\" == \"hello\\32\\there\"\n encodeWhite \"hello\\there\" == \"hello\\92\\there\"\n\u003c/pre\u003e",
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e String",
        "fct-source": "src/Darcs-Patch-FileName.html#encodeWhite",
        "fct-type": "function",
        "title": "encodeWhite"
      },
      "index": {
        "description": "encodeWhite translates whitespace in filenames to darcs-specific format numerical representation according to ord surrounded by backslashes Note that backslashes are also escaped since they are used in the encoding encodeWhite hello there hello there encodeWhite hello there hello there",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "encodeWhite",
        "normalized": "FilePath-\u003eString",
        "package": "darcs",
        "partial": "White",
        "signature": "FilePath-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:fn2fp",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FilePath",
        "fct-source": "src/Darcs-Patch-FileName.html#fn2fp",
        "fct-type": "function",
        "title": "fn2fp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "fn2fp",
        "normalized": "FileName-\u003eFilePath",
        "package": "darcs",
        "partial": "",
        "signature": "FileName-\u003eFilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:fn2niceps",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e ByteString",
        "fct-source": "src/Darcs-Patch-FileName.html#fn2niceps",
        "fct-type": "function",
        "title": "fn2niceps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "fn2niceps",
        "normalized": "FileName-\u003eByteString",
        "package": "darcs",
        "partial": "",
        "signature": "FileName-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:fn2ps",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e ByteString",
        "fct-source": "src/Darcs-Patch-FileName.html#fn2ps",
        "fct-type": "function",
        "title": "fn2ps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "fn2ps",
        "normalized": "FileName-\u003eByteString",
        "package": "darcs",
        "partial": "",
        "signature": "FileName-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:fp2fn",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#fp2fn",
        "fct-type": "function",
        "title": "fp2fn"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "fp2fn",
        "normalized": "FilePath-\u003eFileName",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:isParentOrEqOf",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName -\u003e Bool",
        "fct-source": "src/Darcs-Patch-FileName.html#isParentOrEqOf",
        "fct-type": "function",
        "title": "isParentOrEqOf"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "isParentOrEqOf",
        "normalized": "FileName-\u003eFileName-\u003eBool",
        "package": "darcs",
        "partial": "Parent Or Eq Of",
        "signature": "FileName-\u003eFileName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:movedirfilename",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName -\u003e FileName -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#movedirfilename",
        "fct-type": "function",
        "title": "movedirfilename"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "movedirfilename",
        "normalized": "FileName-\u003eFileName-\u003eFileName-\u003eFileName",
        "package": "darcs",
        "partial": "",
        "signature": "FileName-\u003eFileName-\u003eFileName-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:niceps2fn",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#niceps2fn",
        "fct-type": "function",
        "title": "niceps2fn"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "niceps2fn",
        "normalized": "ByteString-\u003eFileName",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:normPath",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#normPath",
        "fct-type": "function",
        "title": "normPath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "normPath",
        "normalized": "FileName-\u003eFileName",
        "package": "darcs",
        "partial": "Path",
        "signature": "FileName-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:ownName",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#ownName",
        "fct-type": "function",
        "title": "ownName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "ownName",
        "normalized": "FileName-\u003eFileName",
        "package": "darcs",
        "partial": "Name",
        "signature": "FileName-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:ps2fn",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#ps2fn",
        "fct-type": "function",
        "title": "ps2fn"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "ps2fn",
        "normalized": "ByteString-\u003eFileName",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-FileName.html#v:superName",
      "description": {
        "fct-module": "Darcs.Patch.FileName",
        "fct-package": "darcs",
        "fct-signature": "FileName -\u003e FileName",
        "fct-source": "src/Darcs-Patch-FileName.html#superName",
        "fct-type": "function",
        "title": "superName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch FileName",
        "module": "Darcs.Patch.FileName",
        "name": "superName",
        "normalized": "FileName-\u003eFileName",
        "package": "darcs",
        "partial": "Name",
        "signature": "FileName-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#",
      "description": {
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Format.html",
        "fct-type": "module",
        "title": "Format"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "Format",
        "normalized": "",
        "package": "darcs",
        "partial": "Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#t:FileNameFormat",
      "description": {
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Format.html#FileNameFormat",
        "fct-type": "data",
        "title": "FileNameFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "FileNameFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "File Name Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#t:ListFormat",
      "description": {
        "fct-descr": "\u003cp\u003eThis type is used to tweak the way that lists of \u003ccode\u003ep\u003c/code\u003e are shown for a given\n \u003ccode\u003ePatch\u003c/code\u003e type \u003ccode\u003ep\u003c/code\u003e. It is needed to maintain backwards compatibility for V1 and\n V2 patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Format.html#ListFormat",
        "fct-type": "data",
        "title": "ListFormat"
      },
      "index": {
        "description": "This type is used to tweak the way that lists of are shown for given Patch type It is needed to maintain backwards compatibility for V1 and V2 patches",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "ListFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "List Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#t:PatchListFormat",
      "description": {
        "fct-descr": "\u003cp\u003eShowing and reading lists of patches This class allows us to control how\n lists of patches are formatted on disk. For legacy reasons V1 patches have\n their own special treatment (see \u003ccode\u003e\u003ca\u003eListFormat\u003c/a\u003e\u003c/code\u003e). Other patch types use the\n default format which just puts them in a sequence without separators or any\n prelude/epilogue.\n\u003c/p\u003e\u003cp\u003eThis means that 'FL (FL p)' etc would be ambiguous, so there are no instances\n for 'FL p' or other list types.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Format.html#PatchListFormat",
        "fct-type": "class",
        "title": "PatchListFormat"
      },
      "index": {
        "description": "Showing and reading lists of patches This class allows us to control how lists of patches are formatted on disk For legacy reasons V1 patches have their own special treatment see ListFormat Other patch types use the default format which just puts them in sequence without separators or any prelude epilogue This means that FL FL etc would be ambiguous so there are no instances for FL or other list types",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "PatchListFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch List Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#v:ListFormatDefault",
      "description": {
        "fct-descr": "\u003cp\u003eShow and read lists without braces.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "ListFormatDefault",
        "fct-source": "src/Darcs-Patch-Format.html#ListFormat",
        "fct-type": "function",
        "title": "ListFormatDefault"
      },
      "index": {
        "description": "Show and read lists without braces",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "ListFormatDefault",
        "normalized": "",
        "package": "darcs",
        "partial": "List Format Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#v:ListFormatV1",
      "description": {
        "fct-descr": "\u003cp\u003eShow lists with a single layer of braces around the outside,\n except for singletons which have no braces.\n Read with arbitrary nested braces and parens and flatten them out.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "ListFormatV1",
        "fct-source": "src/Darcs-Patch-Format.html#ListFormat",
        "fct-type": "function",
        "title": "ListFormatV1"
      },
      "index": {
        "description": "Show lists with single layer of braces around the outside except for singletons which have no braces Read with arbitrary nested braces and parens and flatten them out",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "ListFormatV1",
        "normalized": "",
        "package": "darcs",
        "partial": "List Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#v:ListFormatV2",
      "description": {
        "fct-descr": "\u003cp\u003eShow lists without braces\n Read with arbitrary nested parens and flatten them out.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "ListFormatV2",
        "fct-source": "src/Darcs-Patch-Format.html#ListFormat",
        "fct-type": "function",
        "title": "ListFormatV2"
      },
      "index": {
        "description": "Show lists without braces Read with arbitrary nested parens and flatten them out",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "ListFormatV2",
        "normalized": "",
        "package": "darcs",
        "partial": "List Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#v:NewFormat",
      "description": {
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "NewFormat",
        "fct-source": "src/Darcs-Patch-Format.html#FileNameFormat",
        "fct-type": "function",
        "title": "NewFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "NewFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "New Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#v:OldFormat",
      "description": {
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "OldFormat",
        "fct-source": "src/Darcs-Patch-Format.html#FileNameFormat",
        "fct-type": "function",
        "title": "OldFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "OldFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Old Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Format.html#v:patchListFormat",
      "description": {
        "fct-module": "Darcs.Patch.Format",
        "fct-package": "darcs",
        "fct-signature": "ListFormat p",
        "fct-source": "src/Darcs-Patch-Format.html#patchListFormat",
        "fct-type": "method",
        "title": "patchListFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Format",
        "module": "Darcs.Patch.Format",
        "name": "patchListFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "List Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Info.html",
        "fct-type": "module",
        "title": "Info"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "Info",
        "normalized": "",
        "package": "darcs",
        "partial": "Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#t:PatchInfo",
      "description": {
        "fct-descr": "\u003cp\u003eA PatchInfo value contains the metadata of a patch. The date, name, author\n and log fields are UTF-8 encoded text in darcs 2.4 and later, and just\n sequences of bytes (decoded with whatever is the locale when displayed) in\n earlier darcs.\n\u003c/p\u003e\u003cp\u003eThe members with names that start with '_' are not supposed to be used\n directly in code that does not care how the patch info is stored.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "data",
        "title": "PatchInfo"
      },
      "index": {
        "description": "PatchInfo value contains the metadata of patch The date name author and log fields are UTF-8 encoded text in darcs and later and just sequences of bytes decoded with whatever is the locale when displayed in earlier darcs The members with names that start with are not supposed to be used directly in code that does not care how the patch info is stored",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "PatchInfo",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#t:RepoPatchInfo",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Info.html#RepoPatchInfo",
        "fct-type": "data",
        "title": "RepoPatchInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "RepoPatchInfo",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Patch Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:PatchInfo",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "function",
        "title": "PatchInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "PatchInfo",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:_piAuthor",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "!ByteString",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "function",
        "title": "_piAuthor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "_piAuthor",
        "normalized": "",
        "package": "darcs",
        "partial": "Author",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:_piDate",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "!ByteString",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "function",
        "title": "_piDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "_piDate",
        "normalized": "",
        "package": "darcs",
        "partial": "Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:_piLog",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "![ByteString]",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "function",
        "title": "_piLog"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "_piLog",
        "normalized": "[ByteString]",
        "package": "darcs",
        "partial": "Log",
        "signature": "[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:_piName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "!ByteString",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "function",
        "title": "_piName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "_piName",
        "normalized": "",
        "package": "darcs",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:addJunk",
      "description": {
        "fct-descr": "\u003cp\u003eaddJunk adds a line that contains a random number to make the patch\n   unique.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e IO PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#addJunk",
        "fct-type": "function",
        "title": "addJunk"
      },
      "index": {
        "description": "addJunk adds line that contains random number to make the patch unique",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "addJunk",
        "normalized": "PatchInfo-\u003eIO PatchInfo",
        "package": "darcs",
        "partial": "Junk",
        "signature": "PatchInfo-\u003eIO PatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:escapeXML",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Info.html#escapeXML",
        "fct-type": "function",
        "title": "escapeXML"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "escapeXML",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "XML",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:humanFriendly",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Info.html#humanFriendly",
        "fct-type": "function",
        "title": "humanFriendly"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "humanFriendly",
        "normalized": "PatchInfo-\u003eDoc",
        "package": "darcs",
        "partial": "Friendly",
        "signature": "PatchInfo-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:idpatchinfo",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#idpatchinfo",
        "fct-type": "function",
        "title": "idpatchinfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "idpatchinfo",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:invertName",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#invertName",
        "fct-type": "function",
        "title": "invertName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "invertName",
        "normalized": "PatchInfo-\u003ePatchInfo",
        "package": "darcs",
        "partial": "Name",
        "signature": "PatchInfo-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:isInverted",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "!Bool",
        "fct-source": "src/Darcs-Patch-Info.html#PatchInfo",
        "fct-type": "function",
        "title": "isInverted"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "isInverted",
        "normalized": "",
        "package": "darcs",
        "partial": "Inverted",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:isTag",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Info.html#isTag",
        "fct-type": "function",
        "title": "isTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "isTag",
        "normalized": "PatchInfo-\u003eBool",
        "package": "darcs",
        "partial": "Tag",
        "signature": "PatchInfo-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:justAuthor",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the author of a patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#justAuthor",
        "fct-type": "function",
        "title": "justAuthor"
      },
      "index": {
        "description": "Returns the author of patch",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "justAuthor",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Author",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:justLog",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#justLog",
        "fct-type": "function",
        "title": "justLog"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "justLog",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Log",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:justName",
      "description": {
        "fct-descr": "\u003cp\u003eGet the name, including an \u003ca\u003eUNDO: \u003c/a\u003e prefix if the patch is inverted.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#justName",
        "fct-type": "function",
        "title": "justName"
      },
      "index": {
        "description": "Get the name including an UNDO prefix if the patch is inverted",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "justName",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Name",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:makeAltFilename",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#makeAltFilename",
        "fct-type": "function",
        "title": "makeAltFilename"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "makeAltFilename",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Alt Filename",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:makeFilename",
      "description": {
        "fct-descr": "\u003cp\u003eThis makes darcs-1 (non-hashed repos) filenames, and is also generally\n used in both in hashed and non-hashed repo code for making patch \u003ca\u003ehashes\u003c/a\u003e.\n\u003c/p\u003e\u003cp\u003eThe name consists of three segments:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e timestamp (ISO8601-compatible yyyymmmddHHMMSS, UTC)\n\u003c/li\u003e\u003cli\u003e SHA1 hash of the author\n\u003c/li\u003e\u003cli\u003e SHA1 hash of the patch name, author, date, log, and \"inverted\"\n    flag.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#makeFilename",
        "fct-type": "function",
        "title": "makeFilename"
      },
      "index": {
        "description": "This makes darcs-1 non-hashed repos filenames and is also generally used in both in hashed and non-hashed repo code for making patch hashes The name consists of three segments timestamp ISO8601-compatible yyyymmmddHHMMSS UTC SHA1 hash of the author SHA1 hash of the patch name author date log and inverted flag",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "makeFilename",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Filename",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:makePatchname",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#makePatchname",
        "fct-type": "function",
        "title": "makePatchname"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "makePatchname",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Patchname",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:patchinfo",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e [String] -\u003e IO PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#patchinfo",
        "fct-type": "function",
        "title": "patchinfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "patchinfo",
        "normalized": "String-\u003eString-\u003eString-\u003e[String]-\u003eIO PatchInfo",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003e[String]-\u003eIO PatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piAuthor",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the author of a patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#piAuthor",
        "fct-type": "function",
        "title": "piAuthor"
      },
      "index": {
        "description": "Returns the author of patch",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piAuthor",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Author",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piDate",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e CalendarTime",
        "fct-source": "src/Darcs-Patch-Info.html#piDate",
        "fct-type": "function",
        "title": "piDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piDate",
        "normalized": "PatchInfo-\u003eCalendarTime",
        "package": "darcs",
        "partial": "Date",
        "signature": "PatchInfo-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piDateBytestring",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e ByteString",
        "fct-source": "src/Darcs-Patch-Info.html#piDateBytestring",
        "fct-type": "function",
        "title": "piDateBytestring"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piDateBytestring",
        "normalized": "PatchInfo-\u003eByteString",
        "package": "darcs",
        "partial": "Date Bytestring",
        "signature": "PatchInfo-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piDateString",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#piDateString",
        "fct-type": "function",
        "title": "piDateString"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piDateString",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Date String",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piLog",
      "description": {
        "fct-descr": "\u003cp\u003eGet the log message of a patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e [String]",
        "fct-source": "src/Darcs-Patch-Info.html#piLog",
        "fct-type": "function",
        "title": "piLog"
      },
      "index": {
        "description": "Get the log message of patch",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piLog",
        "normalized": "PatchInfo-\u003e[String]",
        "package": "darcs",
        "partial": "Log",
        "signature": "PatchInfo-\u003e[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piName",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the name of the patch. Unlike \u003ccode\u003e\u003ca\u003ejustName\u003c/a\u003e\u003c/code\u003e, it does not preprend\n   \u003ca\u003eUNDO: \u003c/a\u003e to the name if the patch is inverted.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String",
        "fct-source": "src/Darcs-Patch-Info.html#piName",
        "fct-type": "function",
        "title": "piName"
      },
      "index": {
        "description": "Returns the name of the patch Unlike justName it does not preprend UNDO to the name if the patch is inverted",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piName",
        "normalized": "PatchInfo-\u003eString",
        "package": "darcs",
        "partial": "Name",
        "signature": "PatchInfo-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piRename",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e String -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#piRename",
        "fct-type": "function",
        "title": "piRename"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piRename",
        "normalized": "PatchInfo-\u003eString-\u003ePatchInfo",
        "package": "darcs",
        "partial": "Rename",
        "signature": "PatchInfo-\u003eString-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:piTag",
      "description": {
        "fct-descr": "\u003cp\u003eGet the tag name, if the patch is a tag patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Maybe String",
        "fct-source": "src/Darcs-Patch-Info.html#piTag",
        "fct-type": "function",
        "title": "piTag"
      },
      "index": {
        "description": "Get the tag name if the patch is tag patch",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "piTag",
        "normalized": "PatchInfo-\u003eMaybe String",
        "package": "darcs",
        "partial": "Tag",
        "signature": "PatchInfo-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:readPatchInfo",
      "description": {
        "fct-descr": "\u003cp\u003eParser for \u003ccode\u003e\u003ca\u003ePatchInfo\u003c/a\u003e\u003c/code\u003e as stored in patch bundles and inventory files,\n for example:\n\u003c/p\u003e\u003cpre\u003e [Document the foo interface\n John Doe \u003cjohn.doe@example.com\u003e**20110615084241\n  Ignore-this: 85b94f67d377c4ab671101266ef9c229\n  Nobody knows what a 'foo' is, so describe it.\n ]\n\u003c/pre\u003e\u003cp\u003eSee \u003ccode\u003e\u003ca\u003eshowPatchInfo\u003c/a\u003e\u003c/code\u003e for the inverse operation.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "m PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#readPatchInfo",
        "fct-type": "function",
        "title": "readPatchInfo"
      },
      "index": {
        "description": "Parser for PatchInfo as stored in patch bundles and inventory files for example Document the foo interface John Doe john.doe@example.com Ignore-this b94f67d377c4ab671101266ef9c229 Nobody knows what foo is so describe it See showPatchInfo for the inverse operation",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "readPatchInfo",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:readPatchInfos",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e [PatchInfo]",
        "fct-source": "src/Darcs-Patch-Info.html#readPatchInfos",
        "fct-type": "function",
        "title": "readPatchInfos"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "readPatchInfos",
        "normalized": "ByteString-\u003e[PatchInfo]",
        "package": "darcs",
        "partial": "Patch Infos",
        "signature": "ByteString-\u003e[PatchInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:repopatchinfo",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e PatchInfo -\u003e RepoPatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#repopatchinfo",
        "fct-type": "function",
        "title": "repopatchinfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "repopatchinfo",
        "normalized": "String-\u003ePatchInfo-\u003eRepoPatchInfo",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003ePatchInfo-\u003eRepoPatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:setPiDate",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e PatchInfo -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-Info.html#setPiDate",
        "fct-type": "function",
        "title": "setPiDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "setPiDate",
        "normalized": "String-\u003ePatchInfo-\u003ePatchInfo",
        "package": "darcs",
        "partial": "Pi Date",
        "signature": "String-\u003ePatchInfo-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:showPatchInfo",
      "description": {
        "fct-descr": "\u003cp\u003ePatch is stored between square brackets.\n\u003c/p\u003e\u003cpre\u003e [ \u003cpatch name\u003e\n \u003cpatch author\u003e*\u003cpatch date\u003e\n  \u003cpatch log (may be empty)\u003e (indented one)\n  \u003ccan have multiple lines in patch log,\u003e\n  \u003cas long as they're preceded by a space\u003e\n  \u003cand don't end with a square bracket.\u003e\n ]\n\u003c/pre\u003e\u003cp\u003enote that below I assume the name has no newline in it.\n See \u003ccode\u003e\u003ca\u003ereadPatchInfo\u003c/a\u003e\u003c/code\u003e for the inverse operation.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Info.html#showPatchInfo",
        "fct-type": "function",
        "title": "showPatchInfo"
      },
      "index": {
        "description": "Patch is stored between square brackets patch name patch author patch date patch log may be empty indented one can have multiple lines in patch log as long as they re preceded by space and don end with square bracket note that below assume the name has no newline in it See readPatchInfo for the inverse operation",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "showPatchInfo",
        "normalized": "PatchInfo-\u003eDoc",
        "package": "darcs",
        "partial": "Patch Info",
        "signature": "PatchInfo-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Info.html#v:toXml",
      "description": {
        "fct-module": "Darcs.Patch.Info",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Info.html#toXml",
        "fct-type": "function",
        "title": "toXml"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Info",
        "module": "Darcs.Patch.Info",
        "name": "toXml",
        "normalized": "PatchInfo-\u003eDoc",
        "package": "darcs",
        "partial": "Xml",
        "signature": "PatchInfo-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Inspect.html#",
      "description": {
        "fct-module": "Darcs.Patch.Inspect",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Inspect.html",
        "fct-type": "module",
        "title": "Inspect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Inspect",
        "module": "Darcs.Patch.Inspect",
        "name": "Inspect",
        "normalized": "",
        "package": "darcs",
        "partial": "Inspect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Inspect.html#t:PatchInspect",
      "description": {
        "fct-module": "Darcs.Patch.Inspect",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Inspect.html#PatchInspect",
        "fct-type": "class",
        "title": "PatchInspect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Inspect",
        "module": "Darcs.Patch.Inspect",
        "name": "PatchInspect",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Inspect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Inspect.html#v:hunkMatches",
      "description": {
        "fct-module": "Darcs.Patch.Inspect",
        "fct-package": "darcs",
        "fct-signature": "(ByteString -\u003e Bool) -\u003e p x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Inspect.html#hunkMatches",
        "fct-type": "method",
        "title": "hunkMatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Inspect",
        "module": "Darcs.Patch.Inspect",
        "name": "hunkMatches",
        "normalized": "(ByteString-\u003eBool)-\u003ea b c-\u003eBool",
        "package": "darcs",
        "partial": "Matches",
        "signature": "(ByteString-\u003eBool)-\u003ep x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Inspect.html#v:listTouchedFiles",
      "description": {
        "fct-module": "Darcs.Patch.Inspect",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Inspect.html#listTouchedFiles",
        "fct-type": "method",
        "title": "listTouchedFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Inspect",
        "module": "Darcs.Patch.Inspect",
        "name": "listTouchedFiles",
        "normalized": "a b c-\u003e[FilePath]",
        "package": "darcs",
        "partial": "Touched Files",
        "signature": "p x y-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Invert.html#",
      "description": {
        "fct-module": "Darcs.Patch.Invert",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Invert.html",
        "fct-type": "module",
        "title": "Invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Invert",
        "module": "Darcs.Patch.Invert",
        "name": "Invert",
        "normalized": "",
        "package": "darcs",
        "partial": "Invert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Invert.html#t:Invert",
      "description": {
        "fct-module": "Darcs.Patch.Invert",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Invert.html#Invert",
        "fct-type": "class",
        "title": "Invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Invert",
        "module": "Darcs.Patch.Invert",
        "name": "Invert",
        "normalized": "",
        "package": "darcs",
        "partial": "Invert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Invert.html#v:invert",
      "description": {
        "fct-module": "Darcs.Patch.Invert",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invert",
        "fct-type": "method",
        "title": "invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Invert",
        "module": "Darcs.Patch.Invert",
        "name": "invert",
        "normalized": "a b c-\u003ea c b",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003ep y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Invert.html#v:invertFL",
      "description": {
        "fct-module": "Darcs.Patch.Invert",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e RL p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invertFL",
        "fct-type": "function",
        "title": "invertFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Invert",
        "module": "Darcs.Patch.Invert",
        "name": "invertFL",
        "normalized": "FL a b c-\u003eRL a c b",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL p x y-\u003eRL p y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Invert.html#v:invertRL",
      "description": {
        "fct-module": "Darcs.Patch.Invert",
        "fct-package": "darcs",
        "fct-signature": "RL p x y -\u003e FL p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invertRL",
        "fct-type": "function",
        "title": "invertRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Invert",
        "module": "Darcs.Patch.Invert",
        "name": "invertRL",
        "normalized": "RL a b c-\u003eFL a c b",
        "package": "darcs",
        "partial": "RL",
        "signature": "RL p x y-\u003eFL p y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Match.html",
        "fct-type": "module",
        "title": "Match"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "Match",
        "normalized": "",
        "package": "darcs",
        "partial": "Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#t:MatchFun",
      "description": {
        "fct-descr": "\u003cp\u003eA type for predicates over patches which do not care about\n contexts\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Match.html#MatchFun",
        "fct-type": "type",
        "title": "MatchFun"
      },
      "index": {
        "description": "type for predicates over patches which do not care about contexts",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "MatchFun",
        "normalized": "",
        "package": "darcs",
        "partial": "Match Fun",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#t:Matcher",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003eMatcher\u003c/code\u003e is made of a \u003ccode\u003e\u003ca\u003eMatchFun\u003c/a\u003e\u003c/code\u003e which we will use to match\n patches and a \u003ccode\u003eString\u003c/code\u003e representing it.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Match.html#Matcher",
        "fct-type": "data",
        "title": "Matcher"
      },
      "index": {
        "description": "Matcher is made of MatchFun which we will use to match patches and String representing it",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "Matcher",
        "normalized": "",
        "package": "darcs",
        "partial": "Matcher",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#t:PatchMatch",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-MatchData.html#PatchMatch",
        "fct-type": "data",
        "title": "PatchMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "PatchMatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:applyMatcher",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eapplyMatcher\u003c/code\u003e applies a matcher to a patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "Matcher p -\u003e PatchInfoAnd p x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Match.html#applyMatcher",
        "fct-type": "function",
        "title": "applyMatcher"
      },
      "index": {
        "description": "applyMatcher applies matcher to patch",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "applyMatcher",
        "normalized": "Matcher a-\u003ePatchInfoAnd a b c-\u003eBool",
        "package": "darcs",
        "partial": "Matcher",
        "signature": "Matcher p-\u003ePatchInfoAnd p x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:helpOnMatchers",
      "description": {
        "fct-descr": "\u003cp\u003eThe string that is emitted when the user runs \u003ccode\u003edarcs help --match\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Patch-Match.html#helpOnMatchers",
        "fct-type": "function",
        "title": "helpOnMatchers"
      },
      "index": {
        "description": "The string that is emitted when the user runs darcs help match",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "helpOnMatchers",
        "normalized": "",
        "package": "darcs",
        "partial": "On Matchers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:makeMatcher",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (Sealed2 (PatchInfoAnd p) -\u003e Bool) -\u003e Matcher p",
        "fct-source": "src/Darcs-Patch-Match.html#makeMatcher",
        "fct-type": "function",
        "title": "makeMatcher"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "makeMatcher",
        "normalized": "String-\u003e(Sealed(PatchInfoAnd a)-\u003eBool)-\u003eMatcher a",
        "package": "darcs",
        "partial": "Matcher",
        "signature": "String-\u003e(Sealed(PatchInfoAnd p)-\u003eBool)-\u003eMatcher p"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:matchParser",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "CharParser st (MatchFun p)",
        "fct-source": "src/Darcs-Patch-Match.html#matchParser",
        "fct-type": "function",
        "title": "matchParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "matchParser",
        "normalized": "",
        "package": "darcs",
        "partial": "Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:matchPattern",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "PatchMatch -\u003e Matcher p",
        "fct-source": "src/Darcs-Patch-Match.html#matchPattern",
        "fct-type": "function",
        "title": "matchPattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "matchPattern",
        "normalized": "PatchMatch-\u003eMatcher a",
        "package": "darcs",
        "partial": "Pattern",
        "signature": "PatchMatch-\u003eMatcher p"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:parseMatch",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "PatchMatch -\u003e Either String (MatchFun p)",
        "fct-source": "src/Darcs-Patch-Match.html#parseMatch",
        "fct-type": "function",
        "title": "parseMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "parseMatch",
        "normalized": "PatchMatch-\u003eEither String(MatchFun a)",
        "package": "darcs",
        "partial": "Match",
        "signature": "PatchMatch-\u003eEither String(MatchFun p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Match.html#v:patchMatch",
      "description": {
        "fct-module": "Darcs.Patch.Match",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e PatchMatch",
        "fct-source": "src/Darcs-Patch-MatchData.html#patchMatch",
        "fct-type": "function",
        "title": "patchMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Match",
        "module": "Darcs.Patch.Match",
        "name": "patchMatch",
        "normalized": "String-\u003ePatchMatch",
        "package": "darcs",
        "partial": "Match",
        "signature": "String-\u003ePatchMatch"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-MatchData.html#",
      "description": {
        "fct-module": "Darcs.Patch.MatchData",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-MatchData.html",
        "fct-type": "module",
        "title": "MatchData"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch MatchData",
        "module": "Darcs.Patch.MatchData",
        "name": "MatchData",
        "normalized": "",
        "package": "darcs",
        "partial": "Match Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-MatchData.html#t:PatchMatch",
      "description": {
        "fct-module": "Darcs.Patch.MatchData",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-MatchData.html#PatchMatch",
        "fct-type": "data",
        "title": "PatchMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch MatchData",
        "module": "Darcs.Patch.MatchData",
        "name": "PatchMatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-MatchData.html#v:PatternMatch",
      "description": {
        "fct-module": "Darcs.Patch.MatchData",
        "fct-package": "darcs",
        "fct-signature": "PatternMatch String",
        "fct-source": "src/Darcs-Patch-MatchData.html#PatchMatch",
        "fct-type": "function",
        "title": "PatternMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch MatchData",
        "module": "Darcs.Patch.MatchData",
        "name": "PatternMatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Pattern Match",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-MatchData.html#v:patchMatch",
      "description": {
        "fct-module": "Darcs.Patch.MatchData",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e PatchMatch",
        "fct-source": "src/Darcs-Patch-MatchData.html#patchMatch",
        "fct-type": "function",
        "title": "patchMatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch MatchData",
        "module": "Darcs.Patch.MatchData",
        "name": "patchMatch",
        "normalized": "String-\u003ePatchMatch",
        "package": "darcs",
        "partial": "Match",
        "signature": "String-\u003ePatchMatch"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Merge.html#",
      "description": {
        "fct-module": "Darcs.Patch.Merge",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Merge.html",
        "fct-type": "module",
        "title": "Merge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Merge",
        "module": "Darcs.Patch.Merge",
        "name": "Merge",
        "normalized": "",
        "package": "darcs",
        "partial": "Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Merge.html#t:Merge",
      "description": {
        "fct-descr": "\u003cp\u003eThings that can always be merged\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Merge",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Merge.html#Merge",
        "fct-type": "class",
        "title": "Merge"
      },
      "index": {
        "description": "Things that can always be merged",
        "hierarchy": "Darcs Patch Merge",
        "module": "Darcs.Patch.Merge",
        "name": "Merge",
        "normalized": "",
        "package": "darcs",
        "partial": "Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Merge.html#v:merge",
      "description": {
        "fct-module": "Darcs.Patch.Merge",
        "fct-package": "darcs",
        "fct-signature": "(p :\\/: p) x y -\u003e (p :/\\: p) x y",
        "fct-source": "src/Darcs-Patch-Merge.html#merge",
        "fct-type": "method",
        "title": "merge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Merge",
        "module": "Darcs.Patch.Merge",
        "name": "merge",
        "normalized": "(a a)b c-\u003e(a a)b c",
        "package": "darcs",
        "partial": "",
        "signature": "(p p)x y-\u003e(p p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Merge.html#v:mergeFL",
      "description": {
        "fct-module": "Darcs.Patch.Merge",
        "fct-package": "darcs",
        "fct-signature": "(p :\\/: FL p) x y -\u003e (FL p :/\\: p) x y",
        "fct-source": "src/Darcs-Patch-Merge.html#mergeFL",
        "fct-type": "function",
        "title": "mergeFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Merge",
        "module": "Darcs.Patch.Merge",
        "name": "mergeFL",
        "normalized": "(a FL a)b c-\u003e(FL a a)b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "(p FL p)x y-\u003e(FL p p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Named.html",
        "fct-type": "module",
        "title": "Named"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "Named",
        "normalized": "",
        "package": "darcs",
        "partial": "Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#t:Named",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003eNamed\u003c/code\u003e type adds a patch info about a patch, that is a name.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eNamedP info deps p\u003c/code\u003e represents patch \u003ccode\u003ep\u003c/code\u003e with name\n \u003ccode\u003einfo\u003c/code\u003e. \u003ccode\u003edeps\u003c/code\u003e is a list of dependencies added at the named patch\n level, compared with the unnamed level (ie, dependencies added with\n \u003ccode\u003edarcs record --ask-deps\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Named.html#Named",
        "fct-type": "data",
        "title": "Named"
      },
      "index": {
        "description": "The Named type adds patch info about patch that is name NamedP info deps represents patch with name info deps is list of dependencies added at the named patch level compared with the unnamed level ie dependencies added with darcs record ask-deps",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "Named",
        "normalized": "",
        "package": "darcs",
        "partial": "Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:NamedP",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "!PatchInfo -\u003e ![PatchInfo] -\u003e !(FL p x y) -\u003e Named p x y",
        "fct-source": "src/Darcs-Patch-Named.html#Named",
        "fct-type": "function",
        "title": "NamedP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "NamedP",
        "normalized": "PatchInfo-\u003e[PatchInfo]-\u003e(FL a b c)-\u003eNamed a b c",
        "package": "darcs",
        "partial": "Named",
        "signature": "PatchInfo-\u003e[PatchInfo]-\u003e(FL p x y)-\u003eNamed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:adddeps",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e [PatchInfo] -\u003e Named p x y",
        "fct-source": "src/Darcs-Patch-Named.html#adddeps",
        "fct-type": "function",
        "title": "adddeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "adddeps",
        "normalized": "Named a b c-\u003e[PatchInfo]-\u003eNamed a b c",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003e[PatchInfo]-\u003eNamed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:anonymous",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e IO (Named p x y)",
        "fct-source": "src/Darcs-Patch-Named.html#anonymous",
        "fct-type": "function",
        "title": "anonymous"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "anonymous",
        "normalized": "FL a b c-\u003eIO(Named a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "FL p x y-\u003eIO(Named p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:fmapFL_Named",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "(FL p x y -\u003e FL q x y) -\u003e Named p x y -\u003e Named q x y",
        "fct-source": "src/Darcs-Patch-Named.html#fmapFL_Named",
        "fct-type": "function",
        "title": "fmapFL_Named"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "fmapFL_Named",
        "normalized": "(FL a b c-\u003eFL d b c)-\u003eNamed a b c-\u003eNamed d b c",
        "package": "darcs",
        "partial": "FL Named",
        "signature": "(FL p x y-\u003eFL q x y)-\u003eNamed p x y-\u003eNamed q x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:fmapNamed",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "(forall a b.  p a b -\u003e q a b) -\u003e Named p x y -\u003e Named q x y",
        "fct-source": "src/Darcs-Patch-Named.html#fmapNamed",
        "fct-type": "function",
        "title": "fmapNamed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "fmapNamed",
        "normalized": "(a b c d b e-\u003ef b e)-\u003eNamed d g h-\u003eNamed f g h",
        "package": "darcs",
        "partial": "Named",
        "signature": "(forall a b. p a b-\u003eq a b)-\u003eNamed p x y-\u003eNamed q x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:getdeps",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e [PatchInfo]",
        "fct-source": "src/Darcs-Patch-Named.html#getdeps",
        "fct-type": "function",
        "title": "getdeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "getdeps",
        "normalized": "Named a b c-\u003e[PatchInfo]",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003e[PatchInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:infopatch",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e FL p x y -\u003e Named p x y",
        "fct-source": "src/Darcs-Patch-Named.html#infopatch",
        "fct-type": "function",
        "title": "infopatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "infopatch",
        "normalized": "PatchInfo-\u003eFL a b c-\u003eNamed a b c",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfo-\u003eFL p x y-\u003eNamed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:namepatch",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e [String] -\u003e FL p x y -\u003e IO (Named p x y)",
        "fct-source": "src/Darcs-Patch-Named.html#namepatch",
        "fct-type": "function",
        "title": "namepatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "namepatch",
        "normalized": "String-\u003eString-\u003eString-\u003e[String]-\u003eFL a b c-\u003eIO(Named a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003e[String]-\u003eFL p x y-\u003eIO(Named p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:patch2patchinfo",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-Named.html#patch2patchinfo",
        "fct-type": "function",
        "title": "patch2patchinfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "patch2patchinfo",
        "normalized": "Named a b c-\u003ePatchInfo",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:patchcontents",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e FL p x y",
        "fct-source": "src/Darcs-Patch-Named.html#patchcontents",
        "fct-type": "function",
        "title": "patchcontents"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "patchcontents",
        "normalized": "Named a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003eFL p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Named.html#v:patchname",
      "description": {
        "fct-module": "Darcs.Patch.Named",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Named.html#patchname",
        "fct-type": "function",
        "title": "patchname"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Named",
        "module": "Darcs.Patch.Named",
        "name": "patchname",
        "normalized": "Named a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-OldDate.html#",
      "description": {
        "fct-module": "Darcs.Patch.OldDate",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-OldDate.html",
        "fct-type": "module",
        "title": "OldDate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch OldDate",
        "module": "Darcs.Patch.OldDate",
        "name": "OldDate",
        "normalized": "",
        "package": "darcs",
        "partial": "Old Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-OldDate.html#v:readUTCDate",
      "description": {
        "fct-descr": "\u003cp\u003eRead/interpret a date string, assuming UTC if timezone\n   is not specified in the string\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.OldDate",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e CalendarTime",
        "fct-source": "src/Darcs-Patch-OldDate.html#readUTCDate",
        "fct-type": "function",
        "title": "readUTCDate"
      },
      "index": {
        "description": "Read interpret date string assuming UTC if timezone is not specified in the string",
        "hierarchy": "Darcs Patch OldDate",
        "module": "Darcs.Patch.OldDate",
        "name": "readUTCDate",
        "normalized": "String-\u003eCalendarTime",
        "package": "darcs",
        "partial": "UTCDate",
        "signature": "String-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-OldDate.html#v:showIsoDateTime",
      "description": {
        "fct-module": "Darcs.Patch.OldDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e String",
        "fct-source": "src/Darcs-Patch-OldDate.html#showIsoDateTime",
        "fct-type": "function",
        "title": "showIsoDateTime"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch OldDate",
        "module": "Darcs.Patch.OldDate",
        "name": "showIsoDateTime",
        "normalized": "CalendarTime-\u003eString",
        "package": "darcs",
        "partial": "Iso Date Time",
        "signature": "CalendarTime-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html",
        "fct-type": "module",
        "title": "PatchInfoAnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "PatchInfoAnd",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Info And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#t:Hopefully",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003eHopefully\u003c/a\u003e\u003c/code\u003e p C\u003c/code\u003e \u003ccode\u003e(x y)\u003c/code\u003e is \u003ccode\u003e\u003ccode\u003e\u003ca\u003eEither\u003c/a\u003e\u003c/code\u003e String (p C\u003c/code\u003e \u003ccode\u003e(x y))\u003c/code\u003e in a\n form adapted to darcs patches. The \u003ccode\u003eC\u003c/code\u003e \u003ccode\u003e(x y)\u003c/code\u003e represents the type\n witness for the patch that should be there. The \u003ccode\u003eHopefully\u003c/code\u003e type\n just tells whether we expect the patch to be hashed or not, and\n \u003ccode\u003eSimpleHopefully\u003c/code\u003e does the real work of emulating\n \u003ccode\u003e\u003ca\u003eEither\u003c/a\u003e\u003c/code\u003e. \u003ccode\u003eHopefully sh\u003c/code\u003e represents an expected unhashed patch, and\n \u003ccode\u003eHashed hash sh\u003c/code\u003e represents an expected hashed patch with its hash.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#Hopefully",
        "fct-type": "data",
        "title": "Hopefully"
      },
      "index": {
        "description": "Hopefully is Either String in form adapted to darcs patches The represents the type witness for the patch that should be there The Hopefully type just tells whether we expect the patch to be hashed or not and SimpleHopefully does the real work of emulating Either Hopefully sh represents an expected unhashed patch and Hashed hash sh represents an expected hashed patch with its hash",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "Hopefully",
        "normalized": "",
        "package": "darcs",
        "partial": "Hopefully",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#t:PatchInfoAnd",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003ePatchInfoAnd\u003c/a\u003e\u003c/code\u003e p a b\u003c/code\u003e represents a hope we have to get a\n patch through its info. We're not sure we have the patch, but we\n know its info.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#PatchInfoAnd",
        "fct-type": "data",
        "title": "PatchInfoAnd"
      },
      "index": {
        "description": "PatchInfoAnd represents hope we have to get patch through its info We re not sure we have the patch but we know its info",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "PatchInfoAnd",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Info And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#t:WPatchInfo",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003eWPatchInfo\u003c/a\u003e\u003c/code\u003e a b\u003c/code\u003e represents the info of a patch, marked with\n the patch's witnesses.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#WPatchInfo",
        "fct-type": "data",
        "title": "WPatchInfo"
      },
      "index": {
        "description": "WPatchInfo represents the info of patch marked with the patch witnesses",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "WPatchInfo",
        "normalized": "",
        "package": "darcs",
        "partial": "WPatch Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:actually",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "a x y -\u003e Hopefully a x y",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#actually",
        "fct-type": "function",
        "title": "actually"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "actually",
        "normalized": "a b c-\u003eHopefully a b c",
        "package": "darcs",
        "partial": "",
        "signature": "a x y-\u003eHopefully a x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:compareWPatchInfo",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "WPatchInfo a b -\u003e WPatchInfo c d -\u003e EqCheck (a, b) (c, d)",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#compareWPatchInfo",
        "fct-type": "function",
        "title": "compareWPatchInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "compareWPatchInfo",
        "normalized": "WPatchInfo a b-\u003eWPatchInfo c d-\u003eEqCheck(a,b)(c,d)",
        "package": "darcs",
        "partial": "WPatch Info",
        "signature": "WPatchInfo a b-\u003eWPatchInfo c d-\u003eEqCheck(a,b)(c,d)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:conscientiously",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003econscientiously\u003c/a\u003e\u003c/code\u003e er hp\u003c/code\u003e tries to extract a patch from a \u003ccode\u003e\u003ca\u003ePatchInfoAnd\u003c/a\u003e\u003c/code\u003e.\n If it fails, it applies the error handling function \u003ccode\u003eer\u003c/code\u003e to a description\n of the patch info component of \u003ccode\u003ehp\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "(Doc -\u003e Doc) -\u003e PatchInfoAnd p a b -\u003e Named p a b",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#conscientiously",
        "fct-type": "function",
        "title": "conscientiously"
      },
      "index": {
        "description": "conscientiously er hp tries to extract patch from PatchInfoAnd If it fails it applies the error handling function er to description of the patch info component of hp",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "conscientiously",
        "normalized": "(Doc-\u003eDoc)-\u003ePatchInfoAnd a b c-\u003eNamed a b c",
        "package": "darcs",
        "partial": "",
        "signature": "(Doc-\u003eDoc)-\u003ePatchInfoAnd p a b-\u003eNamed p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:createHashed",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (String -\u003e IO (Sealed (a x))) -\u003e IO (Sealed (Hopefully a x))",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#createHashed",
        "fct-type": "function",
        "title": "createHashed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "createHashed",
        "normalized": "String-\u003e(String-\u003eIO(Sealed(a b)))-\u003eIO(Sealed(Hopefully a b))",
        "package": "darcs",
        "partial": "Hashed",
        "signature": "String-\u003e(String-\u003eIO(Sealed(a x)))-\u003eIO(Sealed(Hopefully a x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:extractHash",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfoAnd p a b -\u003e Either (Named p a b) String",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#extractHash",
        "fct-type": "function",
        "title": "extractHash"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "extractHash",
        "normalized": "PatchInfoAnd a b c-\u003eEither(Named a b c)String",
        "package": "darcs",
        "partial": "Hash",
        "signature": "PatchInfoAnd p a b-\u003eEither(Named p a b)String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:fmapFL_PIAP",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "(FL p x y -\u003e FL q x y) -\u003e PatchInfoAnd p x y -\u003e PatchInfoAnd q x y",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#fmapFL_PIAP",
        "fct-type": "function",
        "title": "fmapFL_PIAP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "fmapFL_PIAP",
        "normalized": "(FL a b c-\u003eFL d b c)-\u003ePatchInfoAnd a b c-\u003ePatchInfoAnd d b c",
        "package": "darcs",
        "partial": "FL PIAP",
        "signature": "(FL p x y-\u003eFL q x y)-\u003ePatchInfoAnd p x y-\u003ePatchInfoAnd q x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:fmapPIAP",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "(forall a b.  p a b -\u003e q a b) -\u003e PatchInfoAnd p x y -\u003e PatchInfoAnd q x y",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#fmapPIAP",
        "fct-type": "function",
        "title": "fmapPIAP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "fmapPIAP",
        "normalized": "(a b c d b e-\u003ef b e)-\u003ePatchInfoAnd d g h-\u003ePatchInfoAnd f g h",
        "package": "darcs",
        "partial": "PIAP",
        "signature": "(forall a b. p a b-\u003eq a b)-\u003ePatchInfoAnd p x y-\u003ePatchInfoAnd q x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:hopefully",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003ehopefully\u003c/a\u003e\u003c/code\u003e hp\u003c/code\u003e tries to get a patch from a \u003ccode\u003e\u003ca\u003ePatchInfoAnd\u003c/a\u003e\u003c/code\u003e\n value. If it fails, it outputs an error \"failed to read patch:\n \u003cdescription of the patch\u003e\". We get the description of the patch\n from the info part of \u003ccode\u003ehp\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfoAnd p a b -\u003e Named p a b",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#hopefully",
        "fct-type": "function",
        "title": "hopefully"
      },
      "index": {
        "description": "hopefully hp tries to get patch from PatchInfoAnd value If it fails it outputs an error failed to read patch description of the patch We get the description of the patch from the info part of hp",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "hopefully",
        "normalized": "PatchInfoAnd a b c-\u003eNamed a b c",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfoAnd p a b-\u003eNamed p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:hopefullyM",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehopefullyM\u003c/code\u003e is a version of \u003ccode\u003ehopefully\u003c/code\u003e which calls \u003ccode\u003efail\u003c/code\u003e in a\n monad instead of erroring.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfoAnd p a b -\u003e m (Named p a b)",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#hopefullyM",
        "fct-type": "function",
        "title": "hopefullyM"
      },
      "index": {
        "description": "hopefullyM is version of hopefully which calls fail in monad instead of erroring",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "hopefullyM",
        "normalized": "PatchInfoAnd a b c-\u003ed(Named a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfoAnd p a b-\u003em(Named p a b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:info",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfoAnd p a b -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#info",
        "fct-type": "function",
        "title": "info"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "info",
        "normalized": "PatchInfoAnd a b c-\u003ePatchInfo",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfoAnd p a b-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:n2pia",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003en2pia\u003c/code\u003e creates a PatchInfoAnd representing a \u003ccode\u003eNamed\u003c/code\u003e patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e PatchInfoAnd p x y",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#n2pia",
        "fct-type": "function",
        "title": "n2pia"
      },
      "index": {
        "description": "n2pia creates PatchInfoAnd representing Named patch",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "n2pia",
        "normalized": "Named a b c-\u003ePatchInfoAnd a b c",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003ePatchInfoAnd p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:patchDesc",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "forall p x y.  PatchInfoAnd p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#patchDesc",
        "fct-type": "function",
        "title": "patchDesc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "patchDesc",
        "normalized": "a b c d PatchInfoAnd b c e-\u003eString",
        "package": "darcs",
        "partial": "Desc",
        "signature": "forall p x y. PatchInfoAnd p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:patchInfoAndPatch",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Hopefully (Named p) a b -\u003e PatchInfoAnd p a b",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#patchInfoAndPatch",
        "fct-type": "function",
        "title": "patchInfoAndPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "patchInfoAndPatch",
        "normalized": "PatchInfo-\u003eHopefully(Named a)b c-\u003ePatchInfoAnd a b c",
        "package": "darcs",
        "partial": "Info And Patch",
        "signature": "PatchInfo-\u003eHopefully(Named p)a b-\u003ePatchInfoAnd p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:piap",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003epiap\u003c/a\u003e\u003c/code\u003e i p\u003c/code\u003e creates a PatchInfoAnd containing p with info i.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e Named p a b -\u003e PatchInfoAnd p a b",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#piap",
        "fct-type": "function",
        "title": "piap"
      },
      "index": {
        "description": "piap creates PatchInfoAnd containing with info",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "piap",
        "normalized": "PatchInfo-\u003eNamed a b c-\u003ePatchInfoAnd a b c",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfo-\u003eNamed p a b-\u003ePatchInfoAnd p a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:unWPatchInfo",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "WPatchInfo a b -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#unWPatchInfo",
        "fct-type": "function",
        "title": "unWPatchInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "unWPatchInfo",
        "normalized": "WPatchInfo a b-\u003ePatchInfo",
        "package": "darcs",
        "partial": "WPatch Info",
        "signature": "WPatchInfo a b-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:unavailable",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Hopefully a x y",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#unavailable",
        "fct-type": "function",
        "title": "unavailable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "unavailable",
        "normalized": "String-\u003eHopefully a b c",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eHopefully a x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-PatchInfoAnd.html#v:winfo",
      "description": {
        "fct-module": "Darcs.Patch.PatchInfoAnd",
        "fct-package": "darcs",
        "fct-signature": "PatchInfoAnd p a b -\u003e WPatchInfo a b",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#winfo",
        "fct-type": "function",
        "title": "winfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch PatchInfoAnd",
        "module": "Darcs.Patch.PatchInfoAnd",
        "name": "winfo",
        "normalized": "PatchInfoAnd a b c-\u003eWPatchInfo b c",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfoAnd p a b-\u003eWPatchInfo a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy-Instances.html#",
      "description": {
        "fct-module": "Darcs.Patch.Patchy.Instances",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Patchy-Instances.html",
        "fct-type": "module",
        "title": "Instances"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy Instances",
        "module": "Darcs.Patch.Patchy.Instances",
        "name": "Instances",
        "normalized": "",
        "package": "darcs",
        "partial": "Instances",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Patchy.html",
        "fct-type": "module",
        "title": "Patchy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "Patchy",
        "normalized": "",
        "package": "darcs",
        "partial": "Patchy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:Apply",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Apply.html#Apply",
        "fct-type": "class",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:Commute",
      "description": {
        "fct-descr": "\u003cp\u003eThings that can commute.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Commute.html#Commute",
        "fct-type": "class",
        "title": "Commute"
      },
      "index": {
        "description": "Things that can commute",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "Commute",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:Invert",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Invert.html#Invert",
        "fct-type": "class",
        "title": "Invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "Invert",
        "normalized": "",
        "package": "darcs",
        "partial": "Invert",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:PatchInspect",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Inspect.html#PatchInspect",
        "fct-type": "class",
        "title": "PatchInspect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "PatchInspect",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Inspect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:Patchy",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Patchy.html#Patchy",
        "fct-type": "class",
        "title": "Patchy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "Patchy",
        "normalized": "",
        "package": "darcs",
        "partial": "Patchy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:ReadPatch",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Read.html#ReadPatch",
        "fct-type": "class",
        "title": "ReadPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "ReadPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Read Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#t:ShowPatch",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Show.html#ShowPatch",
        "fct-type": "class",
        "title": "ShowPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "ShowPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:apply",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m ()",
        "fct-source": "src/Darcs-Patch-Apply.html#apply",
        "fct-type": "method",
        "title": "apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "apply",
        "normalized": "a b c-\u003ed()",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:commute",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e p) x y -\u003e Maybe ((p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commute",
        "fct-type": "method",
        "title": "commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "commute",
        "normalized": "(a a)b c-\u003eMaybe((a a)b c)",
        "package": "darcs",
        "partial": "",
        "signature": "(p p)x y-\u003eMaybe((p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:description",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#description",
        "fct-type": "method",
        "title": "description"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "description",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:hunkMatches",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "(ByteString -\u003e Bool) -\u003e p x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Inspect.html#hunkMatches",
        "fct-type": "method",
        "title": "hunkMatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "hunkMatches",
        "normalized": "(ByteString-\u003eBool)-\u003ea b c-\u003eBool",
        "package": "darcs",
        "partial": "Matches",
        "signature": "(ByteString-\u003eBool)-\u003ep x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:invert",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invert",
        "fct-type": "method",
        "title": "invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "invert",
        "normalized": "a b c-\u003ea c b",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003ep y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:listTouchedFiles",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Inspect.html#listTouchedFiles",
        "fct-type": "method",
        "title": "listTouchedFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "listTouchedFiles",
        "normalized": "a b c-\u003e[FilePath]",
        "package": "darcs",
        "partial": "Touched Files",
        "signature": "p x y-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:readPatch-39-",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "m (Sealed (p x))",
        "fct-source": "src/Darcs-Patch-Read.html#readPatch%27",
        "fct-type": "method",
        "title": "readPatch'"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "readPatch'",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch'",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:showContextPatch",
      "description": {
        "fct-descr": "\u003cp\u003eshowContextPatch is used to add context to a patch, as diff\n -u does. Thus, it differs from showPatch only for hunks. It is\n used for instance before putting it into a bundle. As this\n unified context is not included in patch representation, this\n requires access to the tree.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showContextPatch",
        "fct-type": "method",
        "title": "showContextPatch"
      },
      "index": {
        "description": "showContextPatch is used to add context to patch as diff does Thus it differs from showPatch only for hunks It is used for instance before putting it into bundle As this unified context is not included in patch representation this requires access to the tree",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "showContextPatch",
        "normalized": "a b c-\u003ed Doc",
        "package": "darcs",
        "partial": "Context Patch",
        "signature": "p x y-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:showNicely",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showNicely",
        "fct-type": "method",
        "title": "showNicely"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "showNicely",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Nicely",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:showPatch",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showPatch",
        "fct-type": "function",
        "title": "showPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "showPatch",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Patch",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:summary",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#summary",
        "fct-type": "method",
        "title": "summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "summary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:summaryFL",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#summaryFL",
        "fct-type": "method",
        "title": "summaryFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "summaryFL",
        "normalized": "FL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:thing",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Show.html#thing",
        "fct-type": "method",
        "title": "thing"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "thing",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Patchy.html#v:things",
      "description": {
        "fct-module": "Darcs.Patch.Patchy",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Show.html#things",
        "fct-type": "method",
        "title": "things"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Patchy",
        "module": "Darcs.Patch.Patchy",
        "name": "things",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Permutations.html",
        "fct-type": "module",
        "title": "Permutations"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "Permutations",
        "normalized": "",
        "package": "darcs",
        "partial": "Permutations",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#t:CommuteFn",
      "description": {
        "fct-descr": "\u003cp\u003eCommuteFn is the basis of a general framework for building up commutation\n operations between different patch types in a generic manner. Unfortunately\n type classes are not well suited to the problem because of the multiple possible\n routes by which the commuter for (FL p1, FL p2) can be built out of the\n commuter for (p1, p2) - and more complicated problems when we start building\n multiple constructors on top of each other. The type class resolution machinery\n really can't cope with selecting some route, because it doesn't know that all\n possible routes should be equivalent.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Permutations.html#CommuteFn",
        "fct-type": "type",
        "title": "CommuteFn"
      },
      "index": {
        "description": "CommuteFn is the basis of general framework for building up commutation operations between different patch types in generic manner Unfortunately type classes are not well suited to the problem because of the multiple possible routes by which the commuter for FL p1 FL p2 can be built out of the commuter for p1 p2 and more complicated problems when we start building multiple constructors on top of each other The type class resolution machinery really can cope with selecting some route because it doesn know that all possible routes should be equivalent",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "CommuteFn",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute Fn",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:commuteWhatWeCanFL",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e FL p) x y -\u003e (FL p :\u003e (p :\u003e FL p)) x y",
        "fct-source": "src/Darcs-Patch-Permutations.html#commuteWhatWeCanFL",
        "fct-type": "function",
        "title": "commuteWhatWeCanFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "commuteWhatWeCanFL",
        "normalized": "(a FL a)b c-\u003e(FL a(a FL a))b c",
        "package": "darcs",
        "partial": "What We Can FL",
        "signature": "(p FL p)x y-\u003e(FL p(p FL p))x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:commuteWhatWeCanRL",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "(RL p :\u003e p) x y -\u003e (RL p :\u003e (p :\u003e RL p)) x y",
        "fct-source": "src/Darcs-Patch-Permutations.html#commuteWhatWeCanRL",
        "fct-type": "function",
        "title": "commuteWhatWeCanRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "commuteWhatWeCanRL",
        "normalized": "(RL a a)b c-\u003e(RL a(a RL a))b c",
        "package": "darcs",
        "partial": "What We Can RL",
        "signature": "(RL p p)x y-\u003e(RL p(p RL p))x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:commuterFLId",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "CommuteFn p1 p2 -\u003e CommuteFn (FL p1) p2",
        "fct-source": "src/Darcs-Patch-Permutations.html#commuterFLId",
        "fct-type": "function",
        "title": "commuterFLId"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "commuterFLId",
        "normalized": "CommuteFn a a-\u003eCommuteFn(FL a)a",
        "package": "darcs",
        "partial": "FLId",
        "signature": "CommuteFn p p-\u003eCommuteFn(FL p)p"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:commuterIdFL",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "CommuteFn p1 p2 -\u003e CommuteFn p1 (FL p2)",
        "fct-source": "src/Darcs-Patch-Permutations.html#commuterIdFL",
        "fct-type": "function",
        "title": "commuterIdFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "commuterIdFL",
        "normalized": "CommuteFn a a-\u003eCommuteFn a(FL a)",
        "package": "darcs",
        "partial": "Id FL",
        "signature": "CommuteFn p p-\u003eCommuteFn p(FL p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:commuterIdRL",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "CommuteFn p1 p2 -\u003e CommuteFn p1 (RL p2)",
        "fct-source": "src/Darcs-Patch-Permutations.html#commuterIdRL",
        "fct-type": "function",
        "title": "commuterIdRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "commuterIdRL",
        "normalized": "CommuteFn a a-\u003eCommuteFn a(RL a)",
        "package": "darcs",
        "partial": "Id RL",
        "signature": "CommuteFn p p-\u003eCommuteFn p(RL p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:genCommuteWhatWeCanRL",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "(forall a b.  (p :\u003e p) a b -\u003e Maybe ((p :\u003e p) a b)) -\u003e (RL p :\u003e p) x y -\u003e (RL p :\u003e (p :\u003e RL p)) x y",
        "fct-source": "src/Darcs-Patch-Permutations.html#genCommuteWhatWeCanRL",
        "fct-type": "function",
        "title": "genCommuteWhatWeCanRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "genCommuteWhatWeCanRL",
        "normalized": "(a b c(d d)b e-\u003eMaybe((d d)b e))-\u003e(RL d d)f g-\u003e(RL d(d RL d))f g",
        "package": "darcs",
        "partial": "Commute What We Can RL",
        "signature": "(forall a b.(p p)a b-\u003eMaybe((p p)a b))-\u003e(RL p p)x y-\u003e(RL p(p RL p))x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:headPermutationsFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eheadPermutationsFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ep:\u003e:ps\u003c/code\u003e returns all the permutations of the list\n   in which one element of \u003ccode\u003eps\u003c/code\u003e is commuted past \u003ccode\u003ep\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eSuppose we have a sequence of patches\n\u003c/p\u003e\u003cpre\u003e  X h a y s-t-c k\n\u003c/pre\u003e\u003cp\u003eSuppose furthermore that the patch \u003ccode\u003ec\u003c/code\u003e depends on \u003ccode\u003et\u003c/code\u003e, which in turn\n   depends on \u003ccode\u003es\u003c/code\u003e.  This function will return\n\u003c/p\u003e\u003cpre\u003e X :\u003e h a y s t c k\n h :\u003e X a y s t c k\n a :\u003e X h y s t c k\n y :\u003e X h a s t c k\n s :\u003e X h a y t c k\n k :\u003e X h a y s t c\n\u003c/pre\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e [(p :\u003e FL p) x y]",
        "fct-source": "src/Darcs-Patch-Permutations.html#headPermutationsFL",
        "fct-type": "function",
        "title": "headPermutationsFL"
      },
      "index": {
        "description": "headPermutationsFL ps returns all the permutations of the list in which one element of ps is commuted past Suppose we have sequence of patches s-t-c Suppose furthermore that the patch depends on which in turn depends on This function will return",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "headPermutationsFL",
        "normalized": "FL a b c-\u003e[(a FL a)b c]",
        "package": "darcs",
        "partial": "Permutations FL",
        "signature": "FL p x y-\u003e[(p FL p)x y]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:headPermutationsRL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eheadPermutationsRL\u003c/a\u003e\u003c/code\u003e is like \u003ccode\u003e\u003ca\u003eheadPermutationsFL\u003c/a\u003e\u003c/code\u003e, except that we\n   operate on an \u003ccode\u003e\u003ca\u003eRL\u003c/a\u003e\u003c/code\u003e (in other words, we are pushing things to the end of a\n   patch sequence instead of to the beginning).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "RL p x y -\u003e [RL p x y]",
        "fct-source": "src/Darcs-Patch-Permutations.html#headPermutationsRL",
        "fct-type": "function",
        "title": "headPermutationsRL"
      },
      "index": {
        "description": "headPermutationsRL is like headPermutationsFL except that we operate on an RL in other words we are pushing things to the end of patch sequence instead of to the beginning",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "headPermutationsRL",
        "normalized": "RL a b c-\u003e[RL a b c]",
        "package": "darcs",
        "partial": "Permutations RL",
        "signature": "RL p x y-\u003e[RL p x y]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:partitionConflictingFL",
      "description": {
        "fct-descr": "\u003cp\u003ePartition a list into the patches that commute with the given patch and those that don't (including dependencies)\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "CommuteFn p1 p2 -\u003e FL p1 x y -\u003e p2 x z -\u003e (FL p1 :\u003e FL p1) x y",
        "fct-source": "src/Darcs-Patch-Permutations.html#partitionConflictingFL",
        "fct-type": "function",
        "title": "partitionConflictingFL"
      },
      "index": {
        "description": "Partition list into the patches that commute with the given patch and those that don including dependencies",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "partitionConflictingFL",
        "normalized": "CommuteFn a a-\u003eFL a b c-\u003ea b d-\u003e(FL a FL a)b c",
        "package": "darcs",
        "partial": "Conflicting FL",
        "signature": "CommuteFn p p-\u003eFL p x y-\u003ep x z-\u003e(FL p FL p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:partitionFL",
      "description": {
        "fct-descr": "\u003cp\u003esplit an \u003ccode\u003e\u003ca\u003eFL\u003c/a\u003e\u003c/code\u003e into \u003ca\u003eleft\u003c/a\u003e and \u003ca\u003eright\u003c/a\u003e lists according to a predicate \u003ccode\u003ep\u003c/code\u003e, using commutation as necessary.\n If a patch does satisfy the predicate but cannot be commuted past one that does not satisfy\n the predicate, it goes in the \u003ca\u003emiddle\u003c/a\u003e list; to sum up, we have: \u003ccode\u003eall p left\u003c/code\u003e and \u003ccode\u003eall (not.p) right\u003c/code\u003e, while\n midddle is mixed.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "(forall u v.  p u v -\u003e Bool)-\u003e FL p x y-\u003e (FL p :\u003e (FL p :\u003e FL p)) x y",
        "fct-type": "function",
        "title": "partitionFL"
      },
      "index": {
        "description": "split an FL into left and right lists according to predicate using commutation as necessary If patch does satisfy the predicate but cannot be commuted past one that does not satisfy the predicate it goes in the middle list to sum up we have all left and all not.p right while midddle is mixed",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "partitionFL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eFL d f g-\u003e(FL d(FL d FL d))f g",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall u v. p u v-\u003eBool)-\u003eFL p x y-\u003e(FL p(FL p FL p))x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:partitionRL",
      "description": {
        "fct-descr": "\u003cp\u003esplit an \u003ccode\u003e\u003ca\u003eRL\u003c/a\u003e\u003c/code\u003e into \u003ca\u003eleft\u003c/a\u003e and \u003ca\u003eright\u003c/a\u003e lists according to a predicate, using commutation as necessary.\n If a patch does satisfy the predicate but cannot be commuted past one that does not satisfy\n the predicate, it goes in the \u003ca\u003eleft\u003c/a\u003e list.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "(forall u v.  p u v -\u003e Bool)-\u003e RL p x y-\u003e (RL p :\u003e RL p) x y",
        "fct-type": "function",
        "title": "partitionRL"
      },
      "index": {
        "description": "split an RL into left and right lists according to predicate using commutation as necessary If patch does satisfy the predicate but cannot be commuted past one that does not satisfy the predicate it goes in the left list",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "partitionRL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eRL d f g-\u003e(RL d RL d)f g",
        "package": "darcs",
        "partial": "RL",
        "signature": "(forall u v. p u v-\u003eBool)-\u003eRL p x y-\u003e(RL p RL p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:removeCommon",
      "description": {
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "(FL p :\\/: FL p) x y -\u003e (FL p :\\/: FL p) x y",
        "fct-source": "src/Darcs-Patch-Permutations.html#removeCommon",
        "fct-type": "function",
        "title": "removeCommon"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "removeCommon",
        "normalized": "(FL a FL a)b c-\u003e(FL a FL a)b c",
        "package": "darcs",
        "partial": "Common",
        "signature": "(FL p FL p)x y-\u003e(FL p FL p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:removeFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eremoveFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ex xs\u003c/code\u003e removes \u003ccode\u003ex\u003c/code\u003e from \u003ccode\u003exs\u003c/code\u003e if \u003ccode\u003ex\u003c/code\u003e can be commuted to its head.\n   Otherwise it returns \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e FL p x z -\u003e Maybe (FL p y z)",
        "fct-source": "src/Darcs-Patch-Permutations.html#removeFL",
        "fct-type": "function",
        "title": "removeFL"
      },
      "index": {
        "description": "removeFL xs removes from xs if can be commuted to its head Otherwise it returns Nothing",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "removeFL",
        "normalized": "a b c-\u003eFL a b d-\u003eMaybe(FL a c d)",
        "package": "darcs",
        "partial": "FL",
        "signature": "p x y-\u003eFL p x z-\u003eMaybe(FL p y z)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:removeRL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eremoveRL\u003c/a\u003e\u003c/code\u003e is like \u003ccode\u003e\u003ca\u003eremoveFL\u003c/a\u003e\u003c/code\u003e except with \u003ccode\u003e\u003ca\u003eRL\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "p y z -\u003e RL p x z -\u003e Maybe (RL p x y)",
        "fct-source": "src/Darcs-Patch-Permutations.html#removeRL",
        "fct-type": "function",
        "title": "removeRL"
      },
      "index": {
        "description": "removeRL is like removeFL except with RL",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "removeRL",
        "normalized": "a b c-\u003eRL a d c-\u003eMaybe(RL a d b)",
        "package": "darcs",
        "partial": "RL",
        "signature": "p y z-\u003eRL p x z-\u003eMaybe(RL p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:removeSubsequenceFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eremoveSubsequenceFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003eab abc\u003c/code\u003e returns \u003ccode\u003eJust c'\u003c/code\u003e where all the patches in\n   \u003ccode\u003eab\u003c/code\u003e have been commuted out of it, if possible.  If this is not possible\n   for any reason (the set of patches \u003ccode\u003eab\u003c/code\u003e is not actually a subset of \u003ccode\u003eabc\u003c/code\u003e,\n   or they can't be commuted out) we return \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "FL p a b -\u003e FL p a c -\u003e Maybe (FL p b c)",
        "fct-source": "src/Darcs-Patch-Permutations.html#removeSubsequenceFL",
        "fct-type": "function",
        "title": "removeSubsequenceFL"
      },
      "index": {
        "description": "removeSubsequenceFL ab abc returns Just where all the patches in ab have been commuted out of it if possible If this is not possible for any reason the set of patches ab is not actually subset of abc or they can be commuted out we return Nothing",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "removeSubsequenceFL",
        "normalized": "FL a b c-\u003eFL a b d-\u003eMaybe(FL a c d)",
        "package": "darcs",
        "partial": "Subsequence FL",
        "signature": "FL p a b-\u003eFL p a c-\u003eMaybe(FL p b c)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:removeSubsequenceRL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eremoveSubsequenceRL\u003c/a\u003e\u003c/code\u003e is like \u003ccode\u003eremoveSubsequenceFL\u003c/code\u003e except that it works\n   on \u003ccode\u003e\u003ca\u003eRL\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "RL p ab abc -\u003e RL p a abc -\u003e Maybe (RL p a ab)",
        "fct-source": "src/Darcs-Patch-Permutations.html#removeSubsequenceRL",
        "fct-type": "function",
        "title": "removeSubsequenceRL"
      },
      "index": {
        "description": "removeSubsequenceRL is like removeSubsequenceFL except that it works on RL",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "removeSubsequenceRL",
        "normalized": "RL a b c-\u003eRL a d c-\u003eMaybe(RL a d b)",
        "package": "darcs",
        "partial": "Subsequence RL",
        "signature": "RL p ab abc-\u003eRL p a abc-\u003eMaybe(RL p a ab)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:selfCommuter",
      "description": {
        "fct-descr": "\u003cp\u003eBuild a commuter between a patch and itself using the operation from the type class.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "CommuteFn p p",
        "fct-source": "src/Darcs-Patch-Permutations.html#selfCommuter",
        "fct-type": "function",
        "title": "selfCommuter"
      },
      "index": {
        "description": "Build commuter between patch and itself using the operation from the type class",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "selfCommuter",
        "normalized": "",
        "package": "darcs",
        "partial": "Commuter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Permutations.html#v:simpleHeadPermutationsFL",
      "description": {
        "fct-descr": "\u003cp\u003eThis is a minor variant of \u003ccode\u003e\u003ca\u003eheadPermutationsFL\u003c/a\u003e\u003c/code\u003e with each permutation\n   is simply returned as a \u003ccode\u003e\u003ca\u003eFL\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Permutations",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e [FL p x y]",
        "fct-source": "src/Darcs-Patch-Permutations.html#simpleHeadPermutationsFL",
        "fct-type": "function",
        "title": "simpleHeadPermutationsFL"
      },
      "index": {
        "description": "This is minor variant of headPermutationsFL with each permutation is simply returned as FL",
        "hierarchy": "Darcs Patch Permutations",
        "module": "Darcs.Patch.Permutations",
        "name": "simpleHeadPermutationsFL",
        "normalized": "FL a b c-\u003e[FL a b c]",
        "package": "darcs",
        "partial": "Head Permutations FL",
        "signature": "FL p x y-\u003e[FL p x y]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-Class.html",
        "fct-type": "module",
        "title": "Class"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "Class",
        "normalized": "",
        "package": "darcs",
        "partial": "Class",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:FromPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#FromPrim",
        "fct-type": "class",
        "title": "FromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "FromPrim",
        "normalized": "",
        "package": "darcs",
        "partial": "From Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:FromPrims",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#FromPrims",
        "fct-type": "class",
        "title": "FromPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "FromPrims",
        "normalized": "",
        "package": "darcs",
        "partial": "From Prims",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimApply",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimApply",
        "fct-type": "class",
        "title": "PrimApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimApply",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimCanonize",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimCanonize",
        "fct-type": "class",
        "title": "PrimCanonize"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimCanonize",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Canonize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimClassify",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimClassify",
        "fct-type": "class",
        "title": "PrimClassify"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimClassify",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Classify",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimConstruct",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimConstruct",
        "fct-type": "class",
        "title": "PrimConstruct"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimConstruct",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Construct",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimDetails",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimDetails",
        "fct-type": "class",
        "title": "PrimDetails"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimDetails",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Details",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimPatch",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimPatch",
        "fct-type": "class",
        "title": "PrimPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimPatchBase",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimPatchBase",
        "fct-type": "class",
        "title": "PrimPatchBase"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimPatchBase",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Patch Base",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimRead",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimRead",
        "fct-type": "class",
        "title": "PrimRead"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimRead",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Read",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:PrimShow",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimShow",
        "fct-type": "class",
        "title": "PrimShow"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "PrimShow",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#t:ToFromPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#ToFromPrim",
        "fct-type": "class",
        "title": "ToFromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "ToFromPrim",
        "normalized": "",
        "package": "darcs",
        "partial": "To From Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:adddir",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#adddir",
        "fct-type": "method",
        "title": "adddir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "adddir",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:addfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#addfile",
        "fct-type": "method",
        "title": "addfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "addfile",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:anIdentity",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x x",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#anIdentity",
        "fct-type": "method",
        "title": "anIdentity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "anIdentity",
        "normalized": "",
        "package": "darcs",
        "partial": "Identity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:applyPrimFL",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e m ()",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#applyPrimFL",
        "fct-type": "method",
        "title": "applyPrimFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "applyPrimFL",
        "normalized": "FL a b c-\u003ed()",
        "package": "darcs",
        "partial": "Prim FL",
        "signature": "FL prim x y-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:binary",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e ByteString -\u003e ByteString -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#binary",
        "fct-type": "method",
        "title": "binary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "binary",
        "normalized": "FilePath-\u003eByteString-\u003eByteString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eByteString-\u003eByteString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:canonize",
      "description": {
        "fct-descr": "\u003cp\u003eIt can sometimes be handy to have a canonical representation of a given\n patch.  We achieve this by defining a canonical form for each patch type,\n and a function \u003ccode\u003e\u003ca\u003ecanonize\u003c/a\u003e\u003c/code\u003e which takes a patch and puts it into\n canonical form.  This routine is used by the diff function to create an\n optimal patch (based on an LCS algorithm) from a simple hunk describing the\n old and new version of a file.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#canonize",
        "fct-type": "method",
        "title": "canonize"
      },
      "index": {
        "description": "It can sometimes be handy to have canonical representation of given patch We achieve this by defining canonical form for each patch type and function canonize which takes patch and puts it into canonical form This routine is used by the diff function to create an optimal patch based on an LCS algorithm from simple hunk describing the old and new version of file",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "canonize",
        "normalized": "a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:canonizeFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecanonizeFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003eps\u003c/code\u003e puts a sequence of primitive patches into\n canonical form. Even if the patches are just hunk patches,\n this is not necessarily the same set of results as you would get\n if you applied the sequence to a specific tree and recalculated\n a diff.\n\u003c/p\u003e\u003cp\u003eNote that this process does not preserve the commutation behaviour\n of the patches and is therefore not appropriate for use when\n working with already recorded patches (unless doing amend-record\n or the like).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#canonizeFL",
        "fct-type": "method",
        "title": "canonizeFL"
      },
      "index": {
        "description": "canonizeFL ps puts sequence of primitive patches into canonical form Even if the patches are just hunk patches this is not necessarily the same set of results as you would get if you applied the sequence to specific tree and recalculated diff Note that this process does not preserve the commutation behaviour of the patches and is therefore not appropriate for use when working with already recorded patches unless doing amend-record or the like",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "canonizeFL",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:changepref",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#changepref",
        "fct-type": "method",
        "title": "changepref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "changepref",
        "normalized": "String-\u003eString-\u003eString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:fromPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "PrimOf p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#fromPrim",
        "fct-type": "method",
        "title": "fromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "fromPrim",
        "normalized": "PrimOf a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Prim",
        "signature": "PrimOf p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:fromPrims",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL (PrimOf p) x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#fromPrims",
        "fct-type": "method",
        "title": "fromPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "fromPrims",
        "normalized": "FL(PrimOf a)b c-\u003ea b c",
        "package": "darcs",
        "partial": "Prims",
        "signature": "FL(PrimOf p)x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:hunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e Int -\u003e [ByteString] -\u003e [ByteString] -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#hunk",
        "fct-type": "method",
        "title": "hunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "hunk",
        "normalized": "FilePath-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:is_filepatch",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Maybe FileName",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#is_filepatch",
        "fct-type": "method",
        "title": "is_filepatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "is_filepatch",
        "normalized": "a b c-\u003eMaybe FileName",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eMaybe FileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:join",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "(prim :\u003e prim) x y -\u003e Maybe (FL prim x y)",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#join",
        "fct-type": "method",
        "title": "join"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "join",
        "normalized": "(a a)b c-\u003eMaybe(FL a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "(prim prim)x y-\u003eMaybe(FL prim x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:joinPatches",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#joinPatches",
        "fct-type": "method",
        "title": "joinPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "joinPatches",
        "normalized": "FL a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Patches",
        "signature": "FL p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:move",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#move",
        "fct-type": "method",
        "title": "move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "move",
        "normalized": "FilePath-\u003eFilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eFilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primFromHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FileHunk x y -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primFromHunk",
        "fct-type": "method",
        "title": "primFromHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primFromHunk",
        "normalized": "FileHunk a b-\u003ec a b",
        "package": "darcs",
        "partial": "From Hunk",
        "signature": "FileHunk x y-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsAdddir",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsAdddir",
        "fct-type": "method",
        "title": "primIsAdddir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsAdddir",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Adddir",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsAddfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsAddfile",
        "fct-type": "method",
        "title": "primIsAddfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsAddfile",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Addfile",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsBinary",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsBinary",
        "fct-type": "method",
        "title": "primIsBinary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsBinary",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Binary",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsHunk",
        "fct-type": "method",
        "title": "primIsHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsHunk",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Hunk",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsMove",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsMove",
        "fct-type": "method",
        "title": "primIsMove"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsMove",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Move",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsRmdir",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsRmdir",
        "fct-type": "method",
        "title": "primIsRmdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsRmdir",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Rmdir",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsRmfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsRmfile",
        "fct-type": "method",
        "title": "primIsRmfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsRmfile",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Rmfile",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsSetpref",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsSetpref",
        "fct-type": "method",
        "title": "primIsSetpref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsSetpref",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Setpref",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:primIsTokReplace",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsTokReplace",
        "fct-type": "method",
        "title": "primIsTokReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "primIsTokReplace",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Tok Replace",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:readPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e m (Sealed (prim x))",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#readPrim",
        "fct-type": "method",
        "title": "readPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "readPrim",
        "normalized": "FileNameFormat-\u003ea(Sealed(b c))",
        "package": "darcs",
        "partial": "Prim",
        "signature": "FileNameFormat-\u003em(Sealed(prim x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:rmdir",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#rmdir",
        "fct-type": "method",
        "title": "rmdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "rmdir",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:rmfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#rmfile",
        "fct-type": "method",
        "title": "rmfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "rmfile",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:showPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e prim a b -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#showPrim",
        "fct-type": "method",
        "title": "showPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "showPrim",
        "normalized": "FileNameFormat-\u003ea b c-\u003eDoc",
        "package": "darcs",
        "partial": "Prim",
        "signature": "FileNameFormat-\u003eprim a b-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:showPrimFL",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e FL prim a b -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#showPrimFL",
        "fct-type": "function",
        "title": "showPrimFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "showPrimFL",
        "normalized": "FileNameFormat-\u003eFL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Prim FL",
        "signature": "FileNameFormat-\u003eFL prim a b-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:sortCoalesceFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esortCoalesceFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003eps\u003c/code\u003e coalesces as many patches in \u003ccode\u003eps\u003c/code\u003e as\n   possible, sorting the results in some standard order.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#sortCoalesceFL",
        "fct-type": "method",
        "title": "sortCoalesceFL"
      },
      "index": {
        "description": "sortCoalesceFL ps coalesces as many patches in ps as possible sorting the results in some standard order",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "sortCoalesceFL",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "Coalesce FL",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:summarizePrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e [SummDetail]",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#summarizePrim",
        "fct-type": "method",
        "title": "summarizePrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "summarizePrim",
        "normalized": "a b c-\u003e[SummDetail]",
        "package": "darcs",
        "partial": "Prim",
        "signature": "prim x y-\u003e[SummDetail]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:toPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe (PrimOf p x y)",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#toPrim",
        "fct-type": "method",
        "title": "toPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "toPrim",
        "normalized": "a b c-\u003eMaybe(PrimOf a b c)",
        "package": "darcs",
        "partial": "Prim",
        "signature": "p x y-\u003eMaybe(PrimOf p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:tokreplace",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e String -\u003e String -\u003e String -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tokreplace",
        "fct-type": "method",
        "title": "tokreplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "tokreplace",
        "normalized": "FilePath-\u003eString-\u003eString-\u003eString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eString-\u003eString-\u003eString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:tryShrinkingInverse",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e Maybe (FL prim x y)",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tryShrinkingInverse",
        "fct-type": "method",
        "title": "tryShrinkingInverse"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "tryShrinkingInverse",
        "normalized": "FL a b c-\u003eMaybe(FL a b c)",
        "package": "darcs",
        "partial": "Shrinking Inverse",
        "signature": "FL prim x y-\u003eMaybe(FL prim x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-Class.html#v:tryToShrink",
      "description": {
        "fct-module": "Darcs.Patch.Prim.Class",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tryToShrink",
        "fct-type": "method",
        "title": "tryToShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim Class",
        "module": "Darcs.Patch.Prim.Class",
        "name": "tryToShrink",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "To Shrink",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Apply.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Apply",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Apply.html",
        "fct-type": "module",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Apply",
        "module": "Darcs.Patch.Prim.V1.Apply",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Coalesce.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Coalesce",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Coalesce.html",
        "fct-type": "module",
        "title": "Coalesce"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Coalesce",
        "module": "Darcs.Patch.Prim.V1.Coalesce",
        "name": "Coalesce",
        "normalized": "",
        "package": "darcs",
        "partial": "Coalesce",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html",
        "fct-type": "module",
        "title": "Commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "Commute",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#t:Perhaps",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#Perhaps",
        "fct-type": "data",
        "title": "Perhaps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "Perhaps",
        "normalized": "",
        "package": "darcs",
        "partial": "Perhaps",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#t:WrappedCommuteFunction",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#WrappedCommuteFunction",
        "fct-type": "newtype",
        "title": "WrappedCommuteFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "WrappedCommuteFunction",
        "normalized": "",
        "package": "darcs",
        "partial": "Wrapped Commute Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#v:Failed",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "Failed",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#Perhaps",
        "fct-type": "function",
        "title": "Failed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "Failed",
        "normalized": "",
        "package": "darcs",
        "partial": "Failed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#v:Succeeded",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "Succeeded a",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#Perhaps",
        "fct-type": "function",
        "title": "Succeeded"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "Succeeded",
        "normalized": "",
        "package": "darcs",
        "partial": "Succeeded",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#v:Unknown",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "Unknown",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#Perhaps",
        "fct-type": "function",
        "title": "Unknown"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "Unknown",
        "normalized": "",
        "package": "darcs",
        "partial": "Unknown",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#v:WrappedCommuteFunction",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "WrappedCommuteFunction",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#WrappedCommuteFunction",
        "fct-type": "function",
        "title": "WrappedCommuteFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "WrappedCommuteFunction",
        "normalized": "",
        "package": "darcs",
        "partial": "Wrapped Commute Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#v:runWrappedCommuteFunction",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "CommuteFunction",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#WrappedCommuteFunction",
        "fct-type": "function",
        "title": "runWrappedCommuteFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "runWrappedCommuteFunction",
        "normalized": "",
        "package": "darcs",
        "partial": "Wrapped Commute Function",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Commute.html#v:subcommutes",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "[(String, WrappedCommuteFunction)]",
        "fct-source": "src/Darcs-Patch-Prim-V1-Commute.html#subcommutes",
        "fct-type": "function",
        "title": "subcommutes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Commute",
        "module": "Darcs.Patch.Prim.V1.Commute",
        "name": "subcommutes",
        "normalized": "[(String,WrappedCommuteFunction)]",
        "package": "darcs",
        "partial": "",
        "signature": "[(String,WrappedCommuteFunction)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html",
        "fct-type": "module",
        "title": "Core"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "Core",
        "normalized": "",
        "package": "darcs",
        "partial": "Core",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#t:DirPatchType",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#DirPatchType",
        "fct-type": "data",
        "title": "DirPatchType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "DirPatchType",
        "normalized": "",
        "package": "darcs",
        "partial": "Dir Patch Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#t:FilePatchType",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#FilePatchType",
        "fct-type": "data",
        "title": "FilePatchType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "FilePatchType",
        "normalized": "",
        "package": "darcs",
        "partial": "File Patch Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#t:Prim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#Prim",
        "fct-type": "data",
        "title": "Prim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "Prim",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:AddDir",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "AddDir",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#DirPatchType",
        "fct-type": "function",
        "title": "AddDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "AddDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Add Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:AddFile",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "AddFile",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#FilePatchType",
        "fct-type": "function",
        "title": "AddFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "AddFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Add File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:Binary",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "Binary ByteString ByteString",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#FilePatchType",
        "fct-type": "function",
        "title": "Binary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "Binary",
        "normalized": "",
        "package": "darcs",
        "partial": "Binary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:ChangePref",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "!String -\u003e !String -\u003e !String -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#Prim",
        "fct-type": "function",
        "title": "ChangePref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "ChangePref",
        "normalized": "String-\u003eString-\u003eString-\u003ePrim a b",
        "package": "darcs",
        "partial": "Change Pref",
        "signature": "String-\u003eString-\u003eString-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:DP",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "!FileName -\u003e !(DirPatchType x y) -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#Prim",
        "fct-type": "function",
        "title": "DP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "DP",
        "normalized": "FileName-\u003e(DirPatchType a b)-\u003ePrim a b",
        "package": "darcs",
        "partial": "DP",
        "signature": "FileName-\u003e(DirPatchType x y)-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:FP",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "!FileName -\u003e !(FilePatchType x y) -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#Prim",
        "fct-type": "function",
        "title": "FP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "FP",
        "normalized": "FileName-\u003e(FilePatchType a b)-\u003ePrim a b",
        "package": "darcs",
        "partial": "FP",
        "signature": "FileName-\u003e(FilePatchType x y)-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:Hunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "Hunk !Int [ByteString] [ByteString]",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#FilePatchType",
        "fct-type": "function",
        "title": "Hunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "Hunk",
        "normalized": "Hunk Int[ByteString][ByteString]",
        "package": "darcs",
        "partial": "Hunk",
        "signature": "Hunk Int[ByteString][ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:Move",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "!FileName -\u003e !FileName -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#Prim",
        "fct-type": "function",
        "title": "Move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "Move",
        "normalized": "FileName-\u003eFileName-\u003ePrim a b",
        "package": "darcs",
        "partial": "Move",
        "signature": "FileName-\u003eFileName-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:RmDir",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "RmDir",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#DirPatchType",
        "fct-type": "function",
        "title": "RmDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "RmDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Rm Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:RmFile",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "RmFile",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#FilePatchType",
        "fct-type": "function",
        "title": "RmFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "RmFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Rm File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:TokReplace",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "TokReplace !String !String !String",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#FilePatchType",
        "fct-type": "function",
        "title": "TokReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "TokReplace",
        "normalized": "",
        "package": "darcs",
        "partial": "Tok Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:comparePrim",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecomparePrim\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ep1 p2\u003c/code\u003e is used to provide an arbitrary ordering between\n   \u003ccode\u003ep1\u003c/code\u003e and \u003ccode\u003ep2\u003c/code\u003e.  Basically, identical patches are equal and\n   \u003ccode\u003eMove \u003c DP \u003c FP \u003c ChangePref\u003c/code\u003e.\n   Everything else is compared in dictionary order of its arguments.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "Prim x y -\u003e Prim w z -\u003e Ordering",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#comparePrim",
        "fct-type": "function",
        "title": "comparePrim"
      },
      "index": {
        "description": "comparePrim p1 p2 is used to provide an arbitrary ordering between p1 and p2 Basically identical patches are equal and Move DP FP ChangePref Everything else is compared in dictionary order of its arguments",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "comparePrim",
        "normalized": "Prim a b-\u003ePrim c d-\u003eOrdering",
        "package": "darcs",
        "partial": "Prim",
        "signature": "Prim x y-\u003ePrim w z-\u003eOrdering"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Core.html#v:isIdentity",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "Prim x y -\u003e EqCheck x y",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#isIdentity",
        "fct-type": "function",
        "title": "isIdentity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Core",
        "module": "Darcs.Patch.Prim.V1.Core",
        "name": "isIdentity",
        "normalized": "Prim a b-\u003eEqCheck a b",
        "package": "darcs",
        "partial": "Identity",
        "signature": "Prim x y-\u003eEqCheck x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Details.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Details",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Details.html",
        "fct-type": "module",
        "title": "Details"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Details",
        "module": "Darcs.Patch.Prim.V1.Details",
        "name": "Details",
        "normalized": "",
        "package": "darcs",
        "partial": "Details",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Read.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Read",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Read.html",
        "fct-type": "module",
        "title": "Read"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Read",
        "module": "Darcs.Patch.Prim.V1.Read",
        "name": "Read",
        "normalized": "",
        "package": "darcs",
        "partial": "Read",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Show.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Show",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1-Show.html",
        "fct-type": "module",
        "title": "Show"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Show",
        "module": "Darcs.Patch.Prim.V1.Show",
        "name": "Show",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1-Show.html#v:showHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1.Show",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e FileName -\u003e Int -\u003e [ByteString] -\u003e [ByteString] -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Prim-V1-Show.html#showHunk",
        "fct-type": "function",
        "title": "showHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1 Show",
        "module": "Darcs.Patch.Prim.V1.Show",
        "name": "showHunk",
        "normalized": "FileNameFormat-\u003eFileName-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003eDoc",
        "package": "darcs",
        "partial": "Hunk",
        "signature": "FileNameFormat-\u003eFileName-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V1.html",
        "fct-type": "module",
        "title": "V1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1",
        "module": "Darcs.Patch.Prim.V1",
        "name": "V1",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V1.html#t:Prim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V1",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V1-Core.html#Prim",
        "fct-type": "data",
        "title": "Prim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V1",
        "module": "Darcs.Patch.Prim.V1",
        "name": "Prim",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Apply.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Apply",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Apply.html",
        "fct-type": "module",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Apply",
        "module": "Darcs.Patch.Prim.V3.Apply",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Apply.html#t:ObjectMap",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Apply",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "data",
        "title": "ObjectMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Apply",
        "module": "Darcs.Patch.Prim.V3.Apply",
        "name": "ObjectMap",
        "normalized": "",
        "package": "darcs",
        "partial": "Object Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Apply.html#v:ObjectMap",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Apply",
        "fct-package": "darcs",
        "fct-signature": "ObjectMap",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "ObjectMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Apply",
        "module": "Darcs.Patch.Prim.V3.Apply",
        "name": "ObjectMap",
        "normalized": "",
        "package": "darcs",
        "partial": "Object Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Apply.html#v:getObject",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V3.Apply",
        "fct-package": "darcs",
        "fct-signature": "UUID -\u003e m (Maybe (Object m))",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "getObject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Apply",
        "module": "Darcs.Patch.Prim.V3.Apply",
        "name": "getObject",
        "normalized": "UUID-\u003ea(Maybe(Object a))",
        "package": "darcs",
        "partial": "Object",
        "signature": "UUID-\u003em(Maybe(Object m))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Apply.html#v:listObjects",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V3.Apply",
        "fct-package": "darcs",
        "fct-signature": "m [UUID]",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "listObjects"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Apply",
        "module": "Darcs.Patch.Prim.V3.Apply",
        "name": "listObjects",
        "normalized": "a[UUID]",
        "package": "darcs",
        "partial": "Objects",
        "signature": "m[UUID]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Apply.html#v:putObject",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V3.Apply",
        "fct-package": "darcs",
        "fct-signature": "UUID -\u003e Object m -\u003e m (ObjectMap m)",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "putObject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Apply",
        "module": "Darcs.Patch.Prim.V3.Apply",
        "name": "putObject",
        "normalized": "UUID-\u003eObject a-\u003ea(ObjectMap a)",
        "package": "darcs",
        "partial": "Object",
        "signature": "UUID-\u003eObject m-\u003em(ObjectMap m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Coalesce.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Coalesce",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Coalesce.html",
        "fct-type": "module",
        "title": "Coalesce"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Coalesce",
        "module": "Darcs.Patch.Prim.V3.Coalesce",
        "name": "Coalesce",
        "normalized": "",
        "package": "darcs",
        "partial": "Coalesce",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Commute.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Commute",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Commute.html",
        "fct-type": "module",
        "title": "Commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Commute",
        "module": "Darcs.Patch.Prim.V3.Commute",
        "name": "Commute",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Commute.html#t:CommuteMonad",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Commute",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-V3-Commute.html#CommuteMonad",
        "fct-type": "class",
        "title": "CommuteMonad"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Commute",
        "module": "Darcs.Patch.Prim.V3.Commute",
        "name": "CommuteMonad",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute Monad",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Commute.html#v:commuteFail",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Commute",
        "fct-package": "darcs",
        "fct-signature": "m a",
        "fct-source": "src/Darcs-Patch-Prim-V3-Commute.html#commuteFail",
        "fct-type": "method",
        "title": "commuteFail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Commute",
        "module": "Darcs.Patch.Prim.V3.Commute",
        "name": "commuteFail",
        "normalized": "",
        "package": "darcs",
        "partial": "Fail",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html",
        "fct-type": "module",
        "title": "Core"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Core",
        "normalized": "",
        "package": "darcs",
        "partial": "Core",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#t:Hunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Hunk",
        "fct-type": "data",
        "title": "Hunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Hunk",
        "normalized": "",
        "package": "darcs",
        "partial": "Hunk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#t:Location",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Location",
        "fct-type": "type",
        "title": "Location"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Location",
        "normalized": "",
        "package": "darcs",
        "partial": "Location",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#t:Object",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Object",
        "fct-type": "data",
        "title": "Object"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Object",
        "normalized": "",
        "package": "darcs",
        "partial": "Object",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#t:Prim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "data",
        "title": "Prim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Prim",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#t:UUID",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#UUID",
        "fct-type": "newtype",
        "title": "UUID"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "UUID",
        "normalized": "",
        "package": "darcs",
        "partial": "UUID",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:BinaryHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "!UUID -\u003e Hunk x y -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "function",
        "title": "BinaryHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "BinaryHunk",
        "normalized": "UUID-\u003eHunk a b-\u003ePrim a b",
        "package": "darcs",
        "partial": "Binary Hunk",
        "signature": "UUID-\u003eHunk x y-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Blob",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "Blob (m ByteString) !Hash",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Object",
        "fct-type": "function",
        "title": "Blob"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Blob",
        "normalized": "",
        "package": "darcs",
        "partial": "Blob",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Demanifest",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "!UUID -\u003e Location -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "function",
        "title": "Demanifest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Demanifest",
        "normalized": "UUID-\u003eLocation-\u003ePrim a b",
        "package": "darcs",
        "partial": "Demanifest",
        "signature": "UUID-\u003eLocation-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Directory",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "Directory DirContent",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Object",
        "fct-type": "function",
        "title": "Directory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Directory",
        "normalized": "",
        "package": "darcs",
        "partial": "Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Hunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "!Int -\u003e ByteString -\u003e ByteString -\u003e Hunk x y",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Hunk",
        "fct-type": "function",
        "title": "Hunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Hunk",
        "normalized": "Int-\u003eByteString-\u003eByteString-\u003eHunk a b",
        "package": "darcs",
        "partial": "Hunk",
        "signature": "Int-\u003eByteString-\u003eByteString-\u003eHunk x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Identity",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "Prim x x",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "function",
        "title": "Identity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Identity",
        "normalized": "",
        "package": "darcs",
        "partial": "Identity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Manifest",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "!UUID -\u003e Location -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "function",
        "title": "Manifest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Manifest",
        "normalized": "UUID-\u003eLocation-\u003ePrim a b",
        "package": "darcs",
        "partial": "Manifest",
        "signature": "UUID-\u003eLocation-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:Move",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "!UUID -\u003e Location -\u003e Location -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "function",
        "title": "Move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "Move",
        "normalized": "UUID-\u003eLocation-\u003eLocation-\u003ePrim a b",
        "package": "darcs",
        "partial": "Move",
        "signature": "UUID-\u003eLocation-\u003eLocation-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:TextHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "!UUID -\u003e Hunk x y -\u003e Prim x y",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "function",
        "title": "TextHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "TextHunk",
        "normalized": "UUID-\u003eHunk a b-\u003ePrim a b",
        "package": "darcs",
        "partial": "Text Hunk",
        "signature": "UUID-\u003eHunk x y-\u003ePrim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:UUID",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "UUID ByteString",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#UUID",
        "fct-type": "function",
        "title": "UUID"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "UUID",
        "normalized": "",
        "package": "darcs",
        "partial": "UUID",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:hunkEdit",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "Hunk x y -\u003e ByteString -\u003e ByteString",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#hunkEdit",
        "fct-type": "function",
        "title": "hunkEdit"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "hunkEdit",
        "normalized": "Hunk a b-\u003eByteString-\u003eByteString",
        "package": "darcs",
        "partial": "Edit",
        "signature": "Hunk x y-\u003eByteString-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Core.html#v:touches",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Core",
        "fct-package": "darcs",
        "fct-signature": "Prim x y -\u003e [UUID]",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#touches",
        "fct-type": "function",
        "title": "touches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Core",
        "module": "Darcs.Patch.Prim.V3.Core",
        "name": "touches",
        "normalized": "Prim a b-\u003e[UUID]",
        "package": "darcs",
        "partial": "",
        "signature": "Prim x y-\u003e[UUID]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Details.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Details",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Details.html",
        "fct-type": "module",
        "title": "Details"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Details",
        "module": "Darcs.Patch.Prim.V3.Details",
        "name": "Details",
        "normalized": "",
        "package": "darcs",
        "partial": "Details",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html",
        "fct-type": "module",
        "title": "ObjectMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "ObjectMap",
        "normalized": "",
        "package": "darcs",
        "partial": "Object Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#t:DirContent",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#DirContent",
        "fct-type": "type",
        "title": "DirContent"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "DirContent",
        "normalized": "",
        "package": "darcs",
        "partial": "Dir Content",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#t:Location",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Location",
        "fct-type": "type",
        "title": "Location"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "Location",
        "normalized": "",
        "package": "darcs",
        "partial": "Location",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#t:Object",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Object",
        "fct-type": "data",
        "title": "Object"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "Object",
        "normalized": "",
        "package": "darcs",
        "partial": "Object",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#t:ObjectMap",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "data",
        "title": "ObjectMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "ObjectMap",
        "normalized": "",
        "package": "darcs",
        "partial": "Object Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#t:UUID",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#UUID",
        "fct-type": "newtype",
        "title": "UUID"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "UUID",
        "normalized": "",
        "package": "darcs",
        "partial": "UUID",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:Blob",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "Blob (m ByteString) !Hash",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Object",
        "fct-type": "function",
        "title": "Blob"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "Blob",
        "normalized": "",
        "package": "darcs",
        "partial": "Blob",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:Directory",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "Directory DirContent",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#Object",
        "fct-type": "function",
        "title": "Directory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "Directory",
        "normalized": "",
        "package": "darcs",
        "partial": "Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:ObjectMap",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "ObjectMap",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "ObjectMap"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "ObjectMap",
        "normalized": "",
        "package": "darcs",
        "partial": "Object Map",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:UUID",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "UUID ByteString",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#UUID",
        "fct-type": "function",
        "title": "UUID"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "UUID",
        "normalized": "",
        "package": "darcs",
        "partial": "UUID",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:getObject",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "UUID -\u003e m (Maybe (Object m))",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "getObject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "getObject",
        "normalized": "UUID-\u003ea(Maybe(Object a))",
        "package": "darcs",
        "partial": "Object",
        "signature": "UUID-\u003em(Maybe(Object m))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:listObjects",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "m [UUID]",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "listObjects"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "listObjects",
        "normalized": "a[UUID]",
        "package": "darcs",
        "partial": "Objects",
        "signature": "m[UUID]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-ObjectMap.html#v:putObject",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Prim.V3.ObjectMap",
        "fct-package": "darcs",
        "fct-signature": "UUID -\u003e Object m -\u003e m (ObjectMap m)",
        "fct-source": "src/Darcs-Patch-Prim-V3-ObjectMap.html#ObjectMap",
        "fct-type": "function",
        "title": "putObject"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 ObjectMap",
        "module": "Darcs.Patch.Prim.V3.ObjectMap",
        "name": "putObject",
        "normalized": "UUID-\u003eObject a-\u003ea(ObjectMap a)",
        "package": "darcs",
        "partial": "Object",
        "signature": "UUID-\u003eObject m-\u003em(ObjectMap m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Read.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Read",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Read.html",
        "fct-type": "module",
        "title": "Read"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Read",
        "module": "Darcs.Patch.Prim.V3.Read",
        "name": "Read",
        "normalized": "",
        "package": "darcs",
        "partial": "Read",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Show.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Show",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3-Show.html",
        "fct-type": "module",
        "title": "Show"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Show",
        "module": "Darcs.Patch.Prim.V3.Show",
        "name": "Show",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3-Show.html#v:showHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3.Show",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e UUID -\u003e Hunk x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Prim-V3-Show.html#showHunk",
        "fct-type": "function",
        "title": "showHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3 Show",
        "module": "Darcs.Patch.Prim.V3.Show",
        "name": "showHunk",
        "normalized": "String-\u003eUUID-\u003eHunk a b-\u003eDoc",
        "package": "darcs",
        "partial": "Hunk",
        "signature": "String-\u003eUUID-\u003eHunk x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim-V3.html",
        "fct-type": "module",
        "title": "V3"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3",
        "module": "Darcs.Patch.Prim.V3",
        "name": "V3",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim-V3.html#t:Prim",
      "description": {
        "fct-module": "Darcs.Patch.Prim.V3",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Prim-V3-Core.html#Prim",
        "fct-type": "data",
        "title": "Prim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim V3",
        "module": "Darcs.Patch.Prim.V3",
        "name": "Prim",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Prim.html",
        "fct-type": "module",
        "title": "Prim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "Prim",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#t:FromPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#FromPrim",
        "fct-type": "class",
        "title": "FromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "FromPrim",
        "normalized": "",
        "package": "darcs",
        "partial": "From Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#t:FromPrims",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#FromPrims",
        "fct-type": "class",
        "title": "FromPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "FromPrims",
        "normalized": "",
        "package": "darcs",
        "partial": "From Prims",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#t:PrimConstruct",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimConstruct",
        "fct-type": "class",
        "title": "PrimConstruct"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "PrimConstruct",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Construct",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#t:PrimPatch",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimPatch",
        "fct-type": "class",
        "title": "PrimPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "PrimPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#t:PrimPatchBase",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimPatchBase",
        "fct-type": "class",
        "title": "PrimPatchBase"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "PrimPatchBase",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Patch Base",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#t:ToFromPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#ToFromPrim",
        "fct-type": "class",
        "title": "ToFromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "ToFromPrim",
        "normalized": "",
        "package": "darcs",
        "partial": "To From Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:adddir",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#adddir",
        "fct-type": "method",
        "title": "adddir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "adddir",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:addfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#addfile",
        "fct-type": "method",
        "title": "addfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "addfile",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:anIdentity",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x x",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#anIdentity",
        "fct-type": "method",
        "title": "anIdentity"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "anIdentity",
        "normalized": "",
        "package": "darcs",
        "partial": "Identity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:applyPrimFL",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e m ()",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#applyPrimFL",
        "fct-type": "function",
        "title": "applyPrimFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "applyPrimFL",
        "normalized": "FL a b c-\u003ed()",
        "package": "darcs",
        "partial": "Prim FL",
        "signature": "FL prim x y-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:binary",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e ByteString -\u003e ByteString -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#binary",
        "fct-type": "method",
        "title": "binary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "binary",
        "normalized": "FilePath-\u003eByteString-\u003eByteString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eByteString-\u003eByteString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:canonize",
      "description": {
        "fct-descr": "\u003cp\u003eIt can sometimes be handy to have a canonical representation of a given\n patch.  We achieve this by defining a canonical form for each patch type,\n and a function \u003ccode\u003e\u003ca\u003ecanonize\u003c/a\u003e\u003c/code\u003e which takes a patch and puts it into\n canonical form.  This routine is used by the diff function to create an\n optimal patch (based on an LCS algorithm) from a simple hunk describing the\n old and new version of a file.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#canonize",
        "fct-type": "function",
        "title": "canonize"
      },
      "index": {
        "description": "It can sometimes be handy to have canonical representation of given patch We achieve this by defining canonical form for each patch type and function canonize which takes patch and puts it into canonical form This routine is used by the diff function to create an optimal patch based on an LCS algorithm from simple hunk describing the old and new version of file",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "canonize",
        "normalized": "a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:canonizeFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecanonizeFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003eps\u003c/code\u003e puts a sequence of primitive patches into\n canonical form. Even if the patches are just hunk patches,\n this is not necessarily the same set of results as you would get\n if you applied the sequence to a specific tree and recalculated\n a diff.\n\u003c/p\u003e\u003cp\u003eNote that this process does not preserve the commutation behaviour\n of the patches and is therefore not appropriate for use when\n working with already recorded patches (unless doing amend-record\n or the like).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#canonizeFL",
        "fct-type": "function",
        "title": "canonizeFL"
      },
      "index": {
        "description": "canonizeFL ps puts sequence of primitive patches into canonical form Even if the patches are just hunk patches this is not necessarily the same set of results as you would get if you applied the sequence to specific tree and recalculated diff Note that this process does not preserve the commutation behaviour of the patches and is therefore not appropriate for use when working with already recorded patches unless doing amend-record or the like",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "canonizeFL",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:changepref",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#changepref",
        "fct-type": "method",
        "title": "changepref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "changepref",
        "normalized": "String-\u003eString-\u003eString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:fromPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "PrimOf p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#fromPrim",
        "fct-type": "method",
        "title": "fromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "fromPrim",
        "normalized": "PrimOf a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Prim",
        "signature": "PrimOf p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:fromPrims",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL (PrimOf p) x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#fromPrims",
        "fct-type": "method",
        "title": "fromPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "fromPrims",
        "normalized": "FL(PrimOf a)b c-\u003ea b c",
        "package": "darcs",
        "partial": "Prims",
        "signature": "FL(PrimOf p)x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:hunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e Int -\u003e [ByteString] -\u003e [ByteString] -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#hunk",
        "fct-type": "method",
        "title": "hunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "hunk",
        "normalized": "FilePath-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:is_filepatch",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Maybe FileName",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#is_filepatch",
        "fct-type": "function",
        "title": "is_filepatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "is_filepatch",
        "normalized": "a b c-\u003eMaybe FileName",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eMaybe FileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:join",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "(prim :\u003e prim) x y -\u003e Maybe (FL prim x y)",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#join",
        "fct-type": "function",
        "title": "join"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "join",
        "normalized": "(a a)b c-\u003eMaybe(FL a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "(prim prim)x y-\u003eMaybe(FL prim x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:joinPatches",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#joinPatches",
        "fct-type": "method",
        "title": "joinPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "joinPatches",
        "normalized": "FL a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Patches",
        "signature": "FL p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:move",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#move",
        "fct-type": "method",
        "title": "move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "move",
        "normalized": "FilePath-\u003eFilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eFilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:primFromHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FileHunk x y -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primFromHunk",
        "fct-type": "method",
        "title": "primFromHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "primFromHunk",
        "normalized": "FileHunk a b-\u003ec a b",
        "package": "darcs",
        "partial": "From Hunk",
        "signature": "FileHunk x y-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:primIsAdddir",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsAdddir",
        "fct-type": "function",
        "title": "primIsAdddir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "primIsAdddir",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Adddir",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:primIsAddfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsAddfile",
        "fct-type": "function",
        "title": "primIsAddfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "primIsAddfile",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Addfile",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:primIsBinary",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsBinary",
        "fct-type": "function",
        "title": "primIsBinary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "primIsBinary",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Binary",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:primIsHunk",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsHunk",
        "fct-type": "function",
        "title": "primIsHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "primIsHunk",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Hunk",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:primIsSetpref",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsSetpref",
        "fct-type": "function",
        "title": "primIsSetpref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "primIsSetpref",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Setpref",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:readPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e m (Sealed (prim x))",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#readPrim",
        "fct-type": "function",
        "title": "readPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "readPrim",
        "normalized": "FileNameFormat-\u003ea(Sealed(b c))",
        "package": "darcs",
        "partial": "Prim",
        "signature": "FileNameFormat-\u003em(Sealed(prim x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:rmdir",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#rmdir",
        "fct-type": "method",
        "title": "rmdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "rmdir",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:rmfile",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#rmfile",
        "fct-type": "method",
        "title": "rmfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "rmfile",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:showPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e prim a b -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#showPrim",
        "fct-type": "function",
        "title": "showPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "showPrim",
        "normalized": "FileNameFormat-\u003ea b c-\u003eDoc",
        "package": "darcs",
        "partial": "Prim",
        "signature": "FileNameFormat-\u003eprim a b-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:showPrimFL",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e FL prim a b -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#showPrimFL",
        "fct-type": "function",
        "title": "showPrimFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "showPrimFL",
        "normalized": "FileNameFormat-\u003eFL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Prim FL",
        "signature": "FileNameFormat-\u003eFL prim a b-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:sortCoalesceFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esortCoalesceFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003eps\u003c/code\u003e coalesces as many patches in \u003ccode\u003eps\u003c/code\u003e as\n   possible, sorting the results in some standard order.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#sortCoalesceFL",
        "fct-type": "function",
        "title": "sortCoalesceFL"
      },
      "index": {
        "description": "sortCoalesceFL ps coalesces as many patches in ps as possible sorting the results in some standard order",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "sortCoalesceFL",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "Coalesce FL",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:summarizePrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e [SummDetail]",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#summarizePrim",
        "fct-type": "function",
        "title": "summarizePrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "summarizePrim",
        "normalized": "a b c-\u003e[SummDetail]",
        "package": "darcs",
        "partial": "Prim",
        "signature": "prim x y-\u003e[SummDetail]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:toPrim",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe (PrimOf p x y)",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#toPrim",
        "fct-type": "method",
        "title": "toPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "toPrim",
        "normalized": "a b c-\u003eMaybe(PrimOf a b c)",
        "package": "darcs",
        "partial": "Prim",
        "signature": "p x y-\u003eMaybe(PrimOf p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:tokreplace",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e String -\u003e String -\u003e String -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tokreplace",
        "fct-type": "method",
        "title": "tokreplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "tokreplace",
        "normalized": "FilePath-\u003eString-\u003eString-\u003eString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eString-\u003eString-\u003eString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:tryShrinkingInverse",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e Maybe (FL prim x y)",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tryShrinkingInverse",
        "fct-type": "function",
        "title": "tryShrinkingInverse"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "tryShrinkingInverse",
        "normalized": "FL a b c-\u003eMaybe(FL a b c)",
        "package": "darcs",
        "partial": "Shrinking Inverse",
        "signature": "FL prim x y-\u003eMaybe(FL prim x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Prim.html#v:tryToShrink",
      "description": {
        "fct-module": "Darcs.Patch.Prim",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tryToShrink",
        "fct-type": "function",
        "title": "tryToShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Prim",
        "module": "Darcs.Patch.Prim",
        "name": "tryToShrink",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "To Shrink",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Read.html",
        "fct-type": "module",
        "title": "Read"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "Read",
        "normalized": "",
        "package": "darcs",
        "partial": "Read",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#t:ReadPatch",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Read.html#ReadPatch",
        "fct-type": "class",
        "title": "ReadPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "ReadPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Read Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#v:bracketedFL",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "(forall y.  m (Sealed (p y))) -\u003e Char -\u003e Char -\u003e m (Sealed (FL p x))",
        "fct-source": "src/Darcs-Patch-Read.html#bracketedFL",
        "fct-type": "function",
        "title": "bracketedFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "bracketedFL",
        "normalized": "(a b c(Sealed(d e)))-\u003eChar-\u003eChar-\u003ec(Sealed(FL d f))",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall y. m(Sealed(p y)))-\u003eChar-\u003eChar-\u003em(Sealed(FL p x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#v:peekfor",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e m a -\u003e m a -\u003e m a",
        "fct-source": "src/Darcs-Patch-Read.html#peekfor",
        "fct-type": "function",
        "title": "peekfor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "peekfor",
        "normalized": "ByteString-\u003ea b-\u003ea b-\u003ea b",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003em a-\u003em a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#v:readFileName",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e ByteString -\u003e FileName",
        "fct-source": "src/Darcs-Patch-Read.html#readFileName",
        "fct-type": "function",
        "title": "readFileName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "readFileName",
        "normalized": "FileNameFormat-\u003eByteString-\u003eFileName",
        "package": "darcs",
        "partial": "File Name",
        "signature": "FileNameFormat-\u003eByteString-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#v:readPatch",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Maybe (Sealed (p x))",
        "fct-source": "src/Darcs-Patch-Read.html#readPatch",
        "fct-type": "function",
        "title": "readPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "readPatch",
        "normalized": "ByteString-\u003eMaybe(Sealed(a b))",
        "package": "darcs",
        "partial": "Patch",
        "signature": "ByteString-\u003eMaybe(Sealed(p x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#v:readPatch-39-",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "m (Sealed (p x))",
        "fct-source": "src/Darcs-Patch-Read.html#readPatch%27",
        "fct-type": "method",
        "title": "readPatch'"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "readPatch'",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch'",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Read.html#v:readPatchPartial",
      "description": {
        "fct-module": "Darcs.Patch.Read",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Maybe (Sealed (p x), ByteString)",
        "fct-source": "src/Darcs-Patch-Read.html#readPatchPartial",
        "fct-type": "function",
        "title": "readPatchPartial"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Read",
        "module": "Darcs.Patch.Read",
        "name": "readPatchPartial",
        "normalized": "ByteString-\u003eMaybe(Sealed(a b),ByteString)",
        "package": "darcs",
        "partial": "Patch Partial",
        "signature": "ByteString-\u003eMaybe(Sealed(p x),ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module defines our parsing monad.  In the past there have been lazy\n and strict parsers in this module.  Currently we have only the strict\n variant and it is used for parsing patch files.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-ReadMonads.html",
        "fct-type": "module",
        "title": "ReadMonads"
      },
      "index": {
        "description": "This module defines our parsing monad In the past there have been lazy and strict parsers in this module Currently we have only the strict variant and it is used for parsing patch files",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "ReadMonads",
        "normalized": "",
        "package": "darcs",
        "partial": "Read Monads",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#t:ParserM",
      "description": {
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#ParserM",
        "fct-type": "class",
        "title": "ParserM"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "ParserM",
        "normalized": "",
        "package": "darcs",
        "partial": "Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:anyChar",
      "description": {
        "fct-descr": "\u003cp\u003eAccepts the next character and returns it.  Only fails at end of\n input.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m Char",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#anyChar",
        "fct-type": "function",
        "title": "anyChar"
      },
      "index": {
        "description": "Accepts the next character and returns it Only fails at end of input",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "anyChar",
        "normalized": "",
        "package": "darcs",
        "partial": "Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:char",
      "description": {
        "fct-descr": "\u003cp\u003eAccepts only the specified character.  Consumes a character, if\n available.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#char",
        "fct-type": "function",
        "title": "char"
      },
      "index": {
        "description": "Accepts only the specified character Consumes character if available",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "char",
        "normalized": "Char-\u003ea()",
        "package": "darcs",
        "partial": "",
        "signature": "Char-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:checkConsumes",
      "description": {
        "fct-descr": "\u003cp\u003eEnsure that a parser consumes input when producing a result\n Causes the initial state of the input stream to be held on to while the\n parser runs, so use with caution.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m a -\u003e m a",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#checkConsumes",
        "fct-type": "function",
        "title": "checkConsumes"
      },
      "index": {
        "description": "Ensure that parser consumes input when producing result Causes the initial state of the input stream to be held on to while the parser runs so use with caution",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "checkConsumes",
        "normalized": "a b-\u003ea b",
        "package": "darcs",
        "partial": "Consumes",
        "signature": "m a-\u003em a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:choice",
      "description": {
        "fct-descr": "\u003cp\u003eAttempts each option until one succeeds.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "[f a] -\u003e f a",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#choice",
        "fct-type": "function",
        "title": "choice"
      },
      "index": {
        "description": "Attempts each option until one succeeds",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "choice",
        "normalized": "[a b]-\u003ea b",
        "package": "darcs",
        "partial": "",
        "signature": "[f a]-\u003ef a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:endOfInput",
      "description": {
        "fct-descr": "\u003cp\u003eOnly succeeds at end of input, consumes no characters.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#endOfInput",
        "fct-type": "function",
        "title": "endOfInput"
      },
      "index": {
        "description": "Only succeeds at end of input consumes no characters",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "endOfInput",
        "normalized": "a()",
        "package": "darcs",
        "partial": "Of Input",
        "signature": "m()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:int",
      "description": {
        "fct-descr": "\u003cp\u003eParse an integer and return it.  Skips leading whitespaces and\n | uses the efficient ByteString readInt.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m Int",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#int",
        "fct-type": "function",
        "title": "int"
      },
      "index": {
        "description": "Parse an integer and return it Skips leading whitespaces and uses the efficient ByteString readInt",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "int",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:lexChar",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003elexChar\u003c/a\u003e\u003c/code\u003e checks if the next space delimited token from\n the input stream matches a specific \u003ccode\u003e\u003ca\u003eChar\u003c/a\u003e\u003c/code\u003e.\n Uses \u003ccode\u003e\u003ca\u003eMaybe\u003c/a\u003e\u003c/code\u003e inside \u003ccode\u003e\u003ca\u003eParserM\u003c/a\u003e\u003c/code\u003e to handle failed matches, so\n that it always returns () on success.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#lexChar",
        "fct-type": "function",
        "title": "lexChar"
      },
      "index": {
        "description": "lexChar checks if the next space delimited token from the input stream matches specific Char Uses Maybe inside ParserM to handle failed matches so that it always returns on success",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "lexChar",
        "normalized": "Char-\u003ea()",
        "package": "darcs",
        "partial": "Char",
        "signature": "Char-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:lexEof",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003elexEof\u003c/a\u003e\u003c/code\u003e looks for optional spaces followed by the end of input.\n Uses \u003ccode\u003e\u003ca\u003eMaybe\u003c/a\u003e\u003c/code\u003e inside \u003ccode\u003e\u003ca\u003eParserM\u003c/a\u003e\u003c/code\u003e to handle failed matches, so\n that it always returns () on success.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#lexEof",
        "fct-type": "function",
        "title": "lexEof"
      },
      "index": {
        "description": "lexEof looks for optional spaces followed by the end of input Uses Maybe inside ParserM to handle failed matches so that it always returns on success",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "lexEof",
        "normalized": "a()",
        "package": "darcs",
        "partial": "Eof",
        "signature": "m()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:lexString",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003elexString\u003c/a\u003e\u003c/code\u003e fetches the next whitespace delimited token from\n from the input and checks if it matches the \u003ccode\u003eByteString\u003c/code\u003e input.\n Uses \u003ccode\u003e\u003ca\u003eMaybe\u003c/a\u003e\u003c/code\u003e inside \u003ccode\u003e\u003ca\u003eParserM\u003c/a\u003e\u003c/code\u003e to handle failed matches, so\n that it always returns () on success.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#lexString",
        "fct-type": "function",
        "title": "lexString"
      },
      "index": {
        "description": "lexString fetches the next whitespace delimited token from from the input and checks if it matches the ByteString input Uses Maybe inside ParserM to handle failed matches so that it always returns on success",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "lexString",
        "normalized": "ByteString-\u003ea()",
        "package": "darcs",
        "partial": "String",
        "signature": "ByteString-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:linesStartingWith",
      "description": {
        "fct-descr": "\u003cp\u003eThis is a highly optimized way to read lines that start with a\n particular character.  To implement this efficiently we need access\n to the parser's internal state.  If this is implemented in terms of\n the other primitives for the parser it requires us to consume one\n character at a time.  That leads to \u003ccode\u003e(\u003e\u003e=)\u003c/code\u003e wasting significant\n time.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e m [ByteString]",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#linesStartingWith",
        "fct-type": "function",
        "title": "linesStartingWith"
      },
      "index": {
        "description": "This is highly optimized way to read lines that start with particular character To implement this efficiently we need access to the parser internal state If this is implemented in terms of the other primitives for the parser it requires us to consume one character at time That leads to wasting significant time",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "linesStartingWith",
        "normalized": "Char-\u003ea[ByteString]",
        "package": "darcs",
        "partial": "Starting With",
        "signature": "Char-\u003em[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:linesStartingWithEndingWith",
      "description": {
        "fct-descr": "\u003cp\u003eThis is a highly optimized way to read lines that start with a\n particular character, and stops when it reaches a particular |\n character.  See \u003ccode\u003e\u003ca\u003elinesStartingWith\u003c/a\u003e\u003c/code\u003e for details on why this |\n defined here as a primitive.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e Char -\u003e m [ByteString]",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#linesStartingWithEndingWith",
        "fct-type": "function",
        "title": "linesStartingWithEndingWith"
      },
      "index": {
        "description": "This is highly optimized way to read lines that start with particular character and stops when it reaches particular character See linesStartingWith for details on why this defined here as primitive",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "linesStartingWithEndingWith",
        "normalized": "Char-\u003eChar-\u003ea[ByteString]",
        "package": "darcs",
        "partial": "Starting With Ending With",
        "signature": "Char-\u003eChar-\u003em[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:myLex-39-",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003emyLex\u003c/code\u003e except that it is in ParserM\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m ByteString",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#myLex%27",
        "fct-type": "function",
        "title": "myLex'"
      },
      "index": {
        "description": "Like myLex except that it is in ParserM",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "myLex'",
        "normalized": "",
        "package": "darcs",
        "partial": "Lex'",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:option",
      "description": {
        "fct-descr": "\u003cp\u003eIf \u003ccode\u003ep\u003c/code\u003e fails it returns \u003ccode\u003ex\u003c/code\u003e, otherwise it returns the result of \u003ccode\u003ep\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e f a -\u003e f a",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#option",
        "fct-type": "function",
        "title": "option"
      },
      "index": {
        "description": "If fails it returns otherwise it returns the result of",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "option",
        "normalized": "a-\u003eb a-\u003eb a",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003ef a-\u003ef a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:parse",
      "description": {
        "fct-descr": "\u003cp\u003eRun the parser\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m a -\u003e ByteString -\u003e Maybe (a, ByteString)",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#parse",
        "fct-type": "method",
        "title": "parse"
      },
      "index": {
        "description": "Run the parser",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "parse",
        "normalized": "a b-\u003eByteString-\u003eMaybe(b,ByteString)",
        "package": "darcs",
        "partial": "",
        "signature": "m a-\u003eByteString-\u003eMaybe(a,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:parseStrictly",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eparseStrictly\u003c/a\u003e\u003c/code\u003e applies the parser functions to a string\n and checks that each parser produced a result as it goes.\n The strictness is in the \u003ccode\u003e\u003ca\u003eParserM\u003c/a\u003e\u003c/code\u003e instance for \u003ccode\u003eSM\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "SM a -\u003e ByteString -\u003e Maybe (a, ByteString)",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#parseStrictly",
        "fct-type": "function",
        "title": "parseStrictly"
      },
      "index": {
        "description": "parseStrictly applies the parser functions to string and checks that each parser produced result as it goes The strictness is in the ParserM instance for SM",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "parseStrictly",
        "normalized": "SM a-\u003eByteString-\u003eMaybe(a,ByteString)",
        "package": "darcs",
        "partial": "Strictly",
        "signature": "SM a-\u003eByteString-\u003eMaybe(a,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:skipSpace",
      "description": {
        "fct-descr": "\u003cp\u003eDiscards spaces until a non-space character is encountered.\n Always succeeds.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#skipSpace",
        "fct-type": "function",
        "title": "skipSpace"
      },
      "index": {
        "description": "Discards spaces until non-space character is encountered Always succeeds",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "skipSpace",
        "normalized": "a()",
        "package": "darcs",
        "partial": "Space",
        "signature": "m()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:skipWhile",
      "description": {
        "fct-descr": "\u003cp\u003eDiscards any characters as long as \u003ccode\u003ep\u003c/code\u003e returns True.  Always\n | succeeds.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "(Char -\u003e Bool) -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#skipWhile",
        "fct-type": "function",
        "title": "skipWhile"
      },
      "index": {
        "description": "Discards any characters as long as returns True Always succeeds",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "skipWhile",
        "normalized": "(Char-\u003eBool)-\u003ea()",
        "package": "darcs",
        "partial": "While",
        "signature": "(Char-\u003eBool)-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:string",
      "description": {
        "fct-descr": "\u003cp\u003eOnly succeeds if the characters in the input exactly match \u003ccode\u003estr\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e m ()",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#string",
        "fct-type": "function",
        "title": "string"
      },
      "index": {
        "description": "Only succeeds if the characters in the input exactly match str",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "string",
        "normalized": "ByteString-\u003ea()",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:take",
      "description": {
        "fct-descr": "\u003cp\u003eTakes exactly \u003ccode\u003en\u003c/code\u003e bytes, or fails.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e m ByteString",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#take",
        "fct-type": "function",
        "title": "take"
      },
      "index": {
        "description": "Takes exactly bytes or fails",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "take",
        "normalized": "Int-\u003ea ByteString",
        "package": "darcs",
        "partial": "",
        "signature": "Int-\u003em ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:takeTill",
      "description": {
        "fct-descr": "\u003cp\u003eTakes characters while \u003ccode\u003ep\u003c/code\u003e returns True.  Always succeeds.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "(Char -\u003e Bool) -\u003e m ByteString",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#takeTill",
        "fct-type": "function",
        "title": "takeTill"
      },
      "index": {
        "description": "Takes characters while returns True Always succeeds",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "takeTill",
        "normalized": "(Char-\u003eBool)-\u003ea ByteString",
        "package": "darcs",
        "partial": "Till",
        "signature": "(Char-\u003eBool)-\u003em ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-ReadMonads.html#v:takeTillChar",
      "description": {
        "fct-descr": "\u003cp\u003eEquivalent to \u003ccode\u003etakeTill (==c)\u003c/code\u003e, except that it is optimized for\n | the equality case.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.ReadMonads",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e m ByteString",
        "fct-source": "src/Darcs-Patch-ReadMonads.html#takeTillChar",
        "fct-type": "function",
        "title": "takeTillChar"
      },
      "index": {
        "description": "Equivalent to takeTill except that it is optimized for the equality case",
        "hierarchy": "Darcs Patch ReadMonads",
        "module": "Darcs.Patch.ReadMonads",
        "name": "takeTillChar",
        "normalized": "Char-\u003ea ByteString",
        "package": "darcs",
        "partial": "Till Char",
        "signature": "Char-\u003em ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-RegChars.html#",
      "description": {
        "fct-module": "Darcs.Patch.RegChars",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-RegChars.html",
        "fct-type": "module",
        "title": "RegChars"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch RegChars",
        "module": "Darcs.Patch.RegChars",
        "name": "RegChars",
        "normalized": "",
        "package": "darcs",
        "partial": "Reg Chars",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-RegChars.html#v:regChars",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eregChars\u003c/a\u003e\u003c/code\u003e returns a filter function that tells if a char is a member\n of the regChar expression or not. The regChar expression is basically a\n set of chars, but it can contain ranges with use of the \u003ccode\u003e\u003ca\u003e-\u003c/a\u003e\u003c/code\u003e (dash), and\n it can also be specified as a complement set by prefixing with \u003ccode\u003e\u003ca\u003e^\u003c/a\u003e\u003c/code\u003e\n (caret). The dash and caret, as well as the backslash, can all be\n escaped with a backslash to suppress their special meaning.\n\u003c/p\u003e\u003cp\u003eNOTE: The \u003ccode\u003e\u003ca\u003e.\u003c/a\u003e\u003c/code\u003e (dot) is allowed to be escaped. It has no special meaning\n if it is not escaped, but the default \u003ccode\u003efilename_toks\u003c/code\u003e in\n Darcs.Commands.Replace uses an escaped dot (WHY?).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.RegChars",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Char -\u003e Bool",
        "fct-source": "src/Darcs-Patch-RegChars.html#regChars",
        "fct-type": "function",
        "title": "regChars"
      },
      "index": {
        "description": "regChars returns filter function that tells if char is member of the regChar expression or not The regChar expression is basically set of chars but it can contain ranges with use of the dash and it can also be specified as complement set by prefixing with caret The dash and caret as well as the backslash can all be escaped with backslash to suppress their special meaning NOTE The dot is allowed to be escaped It has no special meaning if it is not escaped but the default filename toks in Darcs.Commands.Replace uses an escaped dot WHY",
        "hierarchy": "Darcs Patch RegChars",
        "module": "Darcs.Patch.RegChars",
        "name": "regChars",
        "normalized": "String-\u003eChar-\u003eBool",
        "package": "darcs",
        "partial": "Chars",
        "signature": "String-\u003eChar-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#",
      "description": {
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Repair.html",
        "fct-type": "module",
        "title": "Repair"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "Repair",
        "normalized": "",
        "package": "darcs",
        "partial": "Repair",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#t:Check",
      "description": {
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Repair.html#Check",
        "fct-type": "class",
        "title": "Check"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "Check",
        "normalized": "",
        "package": "darcs",
        "partial": "Check",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#t:Repair",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eRepair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eRepairToFL\u003c/a\u003e\u003c/code\u003e deal with repairing old patches that were\n were written out due to bugs or that we no longer wish to support.\n \u003ccode\u003e\u003ca\u003eRepair\u003c/a\u003e\u003c/code\u003e is implemented by collections of patches (FL, Named, PatchInfoAnd) that\n might need repairing.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Repair.html#Repair",
        "fct-type": "class",
        "title": "Repair"
      },
      "index": {
        "description": "Repair and RepairToFL deal with repairing old patches that were were written out due to bugs or that we no longer wish to support Repair is implemented by collections of patches FL Named PatchInfoAnd that might need repairing",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "Repair",
        "normalized": "",
        "package": "darcs",
        "partial": "Repair",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#t:RepairToFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eRepairToFL\u003c/a\u003e\u003c/code\u003e is implemented by single patches that can be repaired (Prim, Patch, RealPatch)\n There is a default so that patch types with no current legacy problems don't need to\n have an implementation.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Repair.html#RepairToFL",
        "fct-type": "class",
        "title": "RepairToFL"
      },
      "index": {
        "description": "RepairToFL is implemented by single patches that can be repaired Prim Patch RealPatch There is default so that patch types with no current legacy problems don need to have an implementation",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "RepairToFL",
        "normalized": "",
        "package": "darcs",
        "partial": "Repair To FL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#v:applyAndTryToFix",
      "description": {
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m (Maybe (String, p x y))",
        "fct-source": "src/Darcs-Patch-Repair.html#applyAndTryToFix",
        "fct-type": "method",
        "title": "applyAndTryToFix"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "applyAndTryToFix",
        "normalized": "a b c-\u003ed(Maybe(String,a b c))",
        "package": "darcs",
        "partial": "And Try To Fix",
        "signature": "p x y-\u003em(Maybe(String,p x y))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#v:applyAndTryToFixFL",
      "description": {
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m (Maybe (String, FL p x y))",
        "fct-source": "src/Darcs-Patch-Repair.html#applyAndTryToFixFL",
        "fct-type": "method",
        "title": "applyAndTryToFixFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "applyAndTryToFixFL",
        "normalized": "a b c-\u003ed(Maybe(String,FL a b c))",
        "package": "darcs",
        "partial": "And Try To Fix FL",
        "signature": "p x y-\u003em(Maybe(String,FL p x y))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#v:isInconsistent",
      "description": {
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe Doc",
        "fct-source": "src/Darcs-Patch-Repair.html#isInconsistent",
        "fct-type": "method",
        "title": "isInconsistent"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "isInconsistent",
        "normalized": "a b c-\u003eMaybe Doc",
        "package": "darcs",
        "partial": "Inconsistent",
        "signature": "p x y-\u003eMaybe Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Repair.html#v:mapMaybeSnd",
      "description": {
        "fct-module": "Darcs.Patch.Repair",
        "fct-package": "darcs",
        "fct-signature": "(a -\u003e b) -\u003e Maybe (c, a) -\u003e Maybe (c, b)",
        "fct-source": "src/Darcs-Patch-Repair.html#mapMaybeSnd",
        "fct-type": "function",
        "title": "mapMaybeSnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Repair",
        "module": "Darcs.Patch.Repair",
        "name": "mapMaybeSnd",
        "normalized": "(a-\u003eb)-\u003eMaybe(c,a)-\u003eMaybe(c,b)",
        "package": "darcs",
        "partial": "Maybe Snd",
        "signature": "(a-\u003eb)-\u003eMaybe(c,a)-\u003eMaybe(c,b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-RepoPatch.html#",
      "description": {
        "fct-module": "Darcs.Patch.RepoPatch",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-RepoPatch.html",
        "fct-type": "module",
        "title": "RepoPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch RepoPatch",
        "module": "Darcs.Patch.RepoPatch",
        "name": "RepoPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-RepoPatch.html#t:RepoPatch",
      "description": {
        "fct-module": "Darcs.Patch.RepoPatch",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-RepoPatch.html#RepoPatch",
        "fct-type": "class",
        "title": "RepoPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch RepoPatch",
        "module": "Darcs.Patch.RepoPatch",
        "name": "RepoPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Set.html",
        "fct-type": "module",
        "title": "Set"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "Set",
        "normalized": "",
        "package": "darcs",
        "partial": "Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#t:Origin",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Set.html#Origin",
        "fct-type": "data",
        "title": "Origin"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "Origin",
        "normalized": "",
        "package": "darcs",
        "partial": "Origin",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#t:PatchSet",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Set.html#PatchSet",
        "fct-type": "data",
        "title": "PatchSet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "PatchSet",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#t:SealedPatchSet",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Set.html#SealedPatchSet",
        "fct-type": "type",
        "title": "SealedPatchSet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "SealedPatchSet",
        "normalized": "",
        "package": "darcs",
        "partial": "Sealed Patch Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#t:Tagged",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Set.html#Tagged",
        "fct-type": "data",
        "title": "Tagged"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "Tagged",
        "normalized": "",
        "package": "darcs",
        "partial": "Tagged",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:PatchSet",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "RL (PatchInfoAnd p) x y -\u003e RL (Tagged p) start x -\u003e PatchSet p start y",
        "fct-source": "src/Darcs-Patch-Set.html#PatchSet",
        "fct-type": "function",
        "title": "PatchSet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "PatchSet",
        "normalized": "RL(PatchInfoAnd a)b c-\u003eRL(Tagged a)d b-\u003ePatchSet a d c",
        "package": "darcs",
        "partial": "Patch Set",
        "signature": "RL(PatchInfoAnd p)x y-\u003eRL(Tagged p)start x-\u003ePatchSet p start y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:Tagged",
      "description": {
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "PatchInfoAnd p y z -\u003e Maybe String -\u003e RL (PatchInfoAnd p) x y -\u003e Tagged p x z",
        "fct-source": "src/Darcs-Patch-Set.html#Tagged",
        "fct-type": "function",
        "title": "Tagged"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "Tagged",
        "normalized": "PatchInfoAnd a b c-\u003eMaybe String-\u003eRL(PatchInfoAnd a)d b-\u003eTagged a d c",
        "package": "darcs",
        "partial": "Tagged",
        "signature": "PatchInfoAnd p y z-\u003eMaybe String-\u003eRL(PatchInfoAnd p)x y-\u003eTagged p x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:appendPSFL",
      "description": {
        "fct-descr": "\u003cp\u003eappendPSFL takes a PatchSet and a FL of patches that \u003ccode\u003efollow\u003c/code\u003e the PatchSet,\n and concatenates the patches into the PatchSet.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e FL (PatchInfoAnd p) x y -\u003e PatchSet p start y",
        "fct-source": "src/Darcs-Patch-Set.html#appendPSFL",
        "fct-type": "function",
        "title": "appendPSFL"
      },
      "index": {
        "description": "appendPSFL takes PatchSet and FL of patches that follow the PatchSet and concatenates the patches into the PatchSet",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "appendPSFL",
        "normalized": "PatchSet a b c-\u003eFL(PatchInfoAnd a)c d-\u003ePatchSet a b d",
        "package": "darcs",
        "partial": "PSFL",
        "signature": "PatchSet p start x-\u003eFL(PatchInfoAnd p)x y-\u003ePatchSet p start y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:newset2FL",
      "description": {
        "fct-descr": "\u003cp\u003enewset2FL takes a PatchSet and returns an equivalent, linear FL of patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e FL (PatchInfoAnd p) start x",
        "fct-source": "src/Darcs-Patch-Set.html#newset2FL",
        "fct-type": "function",
        "title": "newset2FL"
      },
      "index": {
        "description": "newset2FL takes PatchSet and returns an equivalent linear FL of patches",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "newset2FL",
        "normalized": "PatchSet a b c-\u003eFL(PatchInfoAnd a)b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "PatchSet p start x-\u003eFL(PatchInfoAnd p)start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:newset2RL",
      "description": {
        "fct-descr": "\u003cp\u003enewset2RL takes a PatchSet and returns an equivalent, linear RL of patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e RL (PatchInfoAnd p) start x",
        "fct-source": "src/Darcs-Patch-Set.html#newset2RL",
        "fct-type": "function",
        "title": "newset2RL"
      },
      "index": {
        "description": "newset2RL takes PatchSet and returns an equivalent linear RL of patches",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "newset2RL",
        "normalized": "PatchSet a b c-\u003eRL(PatchInfoAnd a)b c",
        "package": "darcs",
        "partial": "RL",
        "signature": "PatchSet p start x-\u003eRL(PatchInfoAnd p)start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:progressPatchSet",
      "description": {
        "fct-descr": "\u003cp\u003eRuns a progress action for each tag and patch in a given PatchSet, using\n the passed progress message. Does not alter the PatchSet.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e PatchSet p start x -\u003e PatchSet p start x",
        "fct-source": "src/Darcs-Patch-Set.html#progressPatchSet",
        "fct-type": "function",
        "title": "progressPatchSet"
      },
      "index": {
        "description": "Runs progress action for each tag and patch in given PatchSet using the passed progress message Does not alter the PatchSet",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "progressPatchSet",
        "normalized": "String-\u003ePatchSet a b c-\u003ePatchSet a b c",
        "package": "darcs",
        "partial": "Patch Set",
        "signature": "String-\u003ePatchSet p start x-\u003ePatchSet p start x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Set.html#v:tags",
      "description": {
        "fct-descr": "\u003cp\u003etags returns the PatchInfos corresponding to the tags of a given PatchSet.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Set",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p start x -\u003e [PatchInfo]",
        "fct-source": "src/Darcs-Patch-Set.html#tags",
        "fct-type": "function",
        "title": "tags"
      },
      "index": {
        "description": "tags returns the PatchInfos corresponding to the tags of given PatchSet",
        "hierarchy": "Darcs Patch Set",
        "module": "Darcs.Patch.Set",
        "name": "tags",
        "normalized": "PatchSet a b c-\u003e[PatchInfo]",
        "package": "darcs",
        "partial": "",
        "signature": "PatchSet p start x-\u003e[PatchInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Show.html",
        "fct-type": "module",
        "title": "Show"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "Show",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#t:ShowPatch",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Show.html#ShowPatch",
        "fct-type": "class",
        "title": "ShowPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "ShowPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#t:ShowPatchBasic",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Show.html#ShowPatchBasic",
        "fct-type": "class",
        "title": "ShowPatchBasic"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "ShowPatchBasic",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Patch Basic",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:description",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#description",
        "fct-type": "method",
        "title": "description"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "description",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:formatFileName",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "FileNameFormat -\u003e FileName -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#formatFileName",
        "fct-type": "function",
        "title": "formatFileName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "formatFileName",
        "normalized": "FileNameFormat-\u003eFileName-\u003eDoc",
        "package": "darcs",
        "partial": "File Name",
        "signature": "FileNameFormat-\u003eFileName-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:gzWritePatch",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Patch-Show.html#gzWritePatch",
        "fct-type": "function",
        "title": "gzWritePatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "gzWritePatch",
        "normalized": "FilePath-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Write Patch",
        "signature": "FilePath-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:showContextPatch",
      "description": {
        "fct-descr": "\u003cp\u003eshowContextPatch is used to add context to a patch, as diff\n -u does. Thus, it differs from showPatch only for hunks. It is\n used for instance before putting it into a bundle. As this\n unified context is not included in patch representation, this\n requires access to the tree.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showContextPatch",
        "fct-type": "method",
        "title": "showContextPatch"
      },
      "index": {
        "description": "showContextPatch is used to add context to patch as diff does Thus it differs from showPatch only for hunks It is used for instance before putting it into bundle As this unified context is not included in patch representation this requires access to the tree",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "showContextPatch",
        "normalized": "a b c-\u003ed Doc",
        "package": "darcs",
        "partial": "Context Patch",
        "signature": "p x y-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:showNamedPrefix",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e [PatchInfo] -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showNamedPrefix",
        "fct-type": "function",
        "title": "showNamedPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "showNamedPrefix",
        "normalized": "PatchInfo-\u003e[PatchInfo]-\u003eDoc",
        "package": "darcs",
        "partial": "Named Prefix",
        "signature": "PatchInfo-\u003e[PatchInfo]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:showNicely",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showNicely",
        "fct-type": "method",
        "title": "showNicely"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "showNicely",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Nicely",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:showPatch",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showPatch",
        "fct-type": "method",
        "title": "showPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "showPatch",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Patch",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:summary",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#summary",
        "fct-type": "method",
        "title": "summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "summary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:summaryFL",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#summaryFL",
        "fct-type": "method",
        "title": "summaryFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "summaryFL",
        "normalized": "FL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:thing",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Show.html#thing",
        "fct-type": "method",
        "title": "thing"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "thing",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:things",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Show.html#things",
        "fct-type": "method",
        "title": "things"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "things",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Show.html#v:writePatch",
      "description": {
        "fct-module": "Darcs.Patch.Show",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Patch-Show.html#writePatch",
        "fct-type": "function",
        "title": "writePatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Show",
        "module": "Darcs.Patch.Show",
        "name": "writePatch",
        "normalized": "FilePath-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Patch",
        "signature": "FilePath-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#",
      "description": {
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Split.html",
        "fct-type": "module",
        "title": "Split"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "Split",
        "normalized": "",
        "package": "darcs",
        "partial": "Split",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#t:Splitter",
      "description": {
        "fct-descr": "\u003cp\u003eA splitter is something that can take a patch and (possibly) render it\n as text in some format of its own choosing.\n This text can then be presented to the user for editing, and the result\n given to the splitter for parsing.\n If the parse succeeds, the result is a list of patches that could replace\n the original patch in any context.\n Typically this list will contain the changed version of the patch, along\n with fixup pieces to ensure that the overall effect of the list is the same\n as the original patch.\n The individual elements of the list can then be offered separately to the\n user, allowing them to accept some and reject others.\n\u003c/p\u003e\u003cp\u003eThere's no immediate application for a splitter for anything other than\n Prim (you shouldn't go editing named patches, you'll break them!)\n However you might want to compose splitters for FilePatchType to make\n splitters for Prim etc, and the generality doesn't cost anything.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Split.html#Splitter",
        "fct-type": "data",
        "title": "Splitter"
      },
      "index": {
        "description": "splitter is something that can take patch and possibly render it as text in some format of its own choosing This text can then be presented to the user for editing and the result given to the splitter for parsing If the parse succeeds the result is list of patches that could replace the original patch in any context Typically this list will contain the changed version of the patch along with fixup pieces to ensure that the overall effect of the list is the same as the original patch The individual elements of the list can then be offered separately to the user allowing them to accept some and reject others There no immediate application for splitter for anything other than Prim you shouldn go editing named patches you ll break them However you might want to compose splitters for FilePatchType to make splitters for Prim etc and the generality doesn cost anything",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "Splitter",
        "normalized": "",
        "package": "darcs",
        "partial": "Splitter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:Splitter",
      "description": {
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "Splitter",
        "fct-source": "src/Darcs-Patch-Split.html#Splitter",
        "fct-type": "function",
        "title": "Splitter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "Splitter",
        "normalized": "",
        "package": "darcs",
        "partial": "Splitter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:applySplitter",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "forall x y.  p x y -\u003e Maybe (ByteString, ByteString -\u003e Maybe (FL p x y))",
        "fct-source": "src/Darcs-Patch-Split.html#Splitter",
        "fct-type": "function",
        "title": "applySplitter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "applySplitter",
        "normalized": "a b c d b e-\u003eMaybe(ByteString,ByteString-\u003eMaybe(FL d b e))",
        "package": "darcs",
        "partial": "Splitter",
        "signature": "forall x y. p x y-\u003eMaybe(ByteString,ByteString-\u003eMaybe(FL p x y))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:canonizeSplit",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "forall x y.  FL p x y -\u003e FL p x y",
        "fct-source": "src/Darcs-Patch-Split.html#Splitter",
        "fct-type": "function",
        "title": "canonizeSplit"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "canonizeSplit",
        "normalized": "a b c FL d b e-\u003eFL d b e",
        "package": "darcs",
        "partial": "Split",
        "signature": "forall x y. FL p x y-\u003eFL p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:noSplitter",
      "description": {
        "fct-descr": "\u003cp\u003eNever splits. In other code we normally pass around Maybe Splitter instead of using this\n as the default, because it saves clients that don't care about splitting from having to\n import this module just to get noSplitter.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "Splitter p",
        "fct-source": "src/Darcs-Patch-Split.html#noSplitter",
        "fct-type": "function",
        "title": "noSplitter"
      },
      "index": {
        "description": "Never splits In other code we normally pass around Maybe Splitter instead of using this as the default because it saves clients that don care about splitting from having to import this module just to get noSplitter",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "noSplitter",
        "normalized": "",
        "package": "darcs",
        "partial": "Splitter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:primSplitter",
      "description": {
        "fct-descr": "\u003cp\u003eSplit a primitive hunk patch up\n by allowing the user to edit both the before and after lines, then insert fixup patches\n to clean up the mess.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "Splitter p",
        "fct-source": "src/Darcs-Patch-Split.html#primSplitter",
        "fct-type": "function",
        "title": "primSplitter"
      },
      "index": {
        "description": "Split primitive hunk patch up by allowing the user to edit both the before and after lines then insert fixup patches to clean up the mess",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "primSplitter",
        "normalized": "",
        "package": "darcs",
        "partial": "Splitter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:rawSplitter",
      "description": {
        "fct-descr": "\u003cp\u003eThis generic splitter just lets the user edit the printed representation of the patch\n Should not be used expect for testing and experimentation.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "Splitter p",
        "fct-source": "src/Darcs-Patch-Split.html#rawSplitter",
        "fct-type": "function",
        "title": "rawSplitter"
      },
      "index": {
        "description": "This generic splitter just lets the user edit the printed representation of the patch Should not be used expect for testing and experimentation",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "rawSplitter",
        "normalized": "",
        "package": "darcs",
        "partial": "Splitter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Split.html#v:reversePrimSplitter",
      "description": {
        "fct-module": "Darcs.Patch.Split",
        "fct-package": "darcs",
        "fct-signature": "Splitter prim",
        "fct-source": "src/Darcs-Patch-Split.html#reversePrimSplitter",
        "fct-type": "function",
        "title": "reversePrimSplitter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Split",
        "module": "Darcs.Patch.Split",
        "name": "reversePrimSplitter",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Splitter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Summary.html#",
      "description": {
        "fct-module": "Darcs.Patch.Summary",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Summary.html",
        "fct-type": "module",
        "title": "Summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Summary",
        "module": "Darcs.Patch.Summary",
        "name": "Summary",
        "normalized": "",
        "package": "darcs",
        "partial": "Summary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Summary.html#v:plainSummary",
      "description": {
        "fct-module": "Darcs.Patch.Summary",
        "fct-package": "darcs",
        "fct-signature": "e x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#plainSummary",
        "fct-type": "function",
        "title": "plainSummary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Summary",
        "module": "Darcs.Patch.Summary",
        "name": "plainSummary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary",
        "signature": "e x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Summary.html#v:plainSummaryPrim",
      "description": {
        "fct-module": "Darcs.Patch.Summary",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#plainSummaryPrim",
        "fct-type": "function",
        "title": "plainSummaryPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Summary",
        "module": "Darcs.Patch.Summary",
        "name": "plainSummaryPrim",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary Prim",
        "signature": "prim x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Summary.html#v:plainSummaryPrims",
      "description": {
        "fct-module": "Darcs.Patch.Summary",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#plainSummaryPrims",
        "fct-type": "function",
        "title": "plainSummaryPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Summary",
        "module": "Darcs.Patch.Summary",
        "name": "plainSummaryPrims",
        "normalized": "FL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary Prims",
        "signature": "FL prim x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Summary.html#v:xmlSummary",
      "description": {
        "fct-module": "Darcs.Patch.Summary",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#xmlSummary",
        "fct-type": "function",
        "title": "xmlSummary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Summary",
        "module": "Darcs.Patch.Summary",
        "name": "xmlSummary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-SummaryData.html",
        "fct-type": "module",
        "title": "SummaryData"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummaryData",
        "normalized": "",
        "package": "darcs",
        "partial": "Summary Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#t:SummDetail",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummDetail",
        "fct-type": "data",
        "title": "SummDetail"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummDetail",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Detail",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#t:SummOp",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummOp",
        "fct-type": "data",
        "title": "SummOp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummOp",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Op",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummAdd",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummAdd",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummOp",
        "fct-type": "function",
        "title": "SummAdd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummAdd",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Add",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummAddDir",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummAddDir FileName",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummDetail",
        "fct-type": "function",
        "title": "SummAddDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummAddDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Add Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummFile",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummFile SummOp FileName Int Int Int",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummDetail",
        "fct-type": "function",
        "title": "SummFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummMod",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummMod",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummOp",
        "fct-type": "function",
        "title": "SummMod"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummMod",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Mod",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummMv",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummMv FileName FileName",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummDetail",
        "fct-type": "function",
        "title": "SummMv"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummMv",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Mv",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummNone",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummNone",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummDetail",
        "fct-type": "function",
        "title": "SummNone"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummNone",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ None",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummRm",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummRm",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummOp",
        "fct-type": "function",
        "title": "SummRm"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummRm",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Rm",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-SummaryData.html#v:SummRmDir",
      "description": {
        "fct-module": "Darcs.Patch.SummaryData",
        "fct-package": "darcs",
        "fct-signature": "SummRmDir FileName",
        "fct-source": "src/Darcs-Patch-SummaryData.html#SummDetail",
        "fct-type": "function",
        "title": "SummRmDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch SummaryData",
        "module": "Darcs.Patch.SummaryData",
        "name": "SummRmDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Summ Rm Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TokenReplace.html#",
      "description": {
        "fct-module": "Darcs.Patch.TokenReplace",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-TokenReplace.html",
        "fct-type": "module",
        "title": "TokenReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TokenReplace",
        "module": "Darcs.Patch.TokenReplace",
        "name": "TokenReplace",
        "normalized": "",
        "package": "darcs",
        "partial": "Token Replace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TokenReplace.html#v:forceTokReplace",
      "description": {
        "fct-module": "Darcs.Patch.TokenReplace",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e ByteString -\u003e Maybe ByteString",
        "fct-source": "src/Darcs-Patch-TokenReplace.html#forceTokReplace",
        "fct-type": "function",
        "title": "forceTokReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TokenReplace",
        "module": "Darcs.Patch.TokenReplace",
        "name": "forceTokReplace",
        "normalized": "String-\u003eString-\u003eString-\u003eByteString-\u003eMaybe ByteString",
        "package": "darcs",
        "partial": "Tok Replace",
        "signature": "String-\u003eString-\u003eString-\u003eByteString-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TokenReplace.html#v:tryTokInternal",
      "description": {
        "fct-module": "Darcs.Patch.TokenReplace",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e ByteString -\u003e ByteString -\u003e ByteString -\u003e Maybe [ByteString]",
        "fct-source": "src/Darcs-Patch-TokenReplace.html#tryTokInternal",
        "fct-type": "function",
        "title": "tryTokInternal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TokenReplace",
        "module": "Darcs.Patch.TokenReplace",
        "name": "tryTokInternal",
        "normalized": "String-\u003eByteString-\u003eByteString-\u003eByteString-\u003eMaybe[ByteString]",
        "package": "darcs",
        "partial": "Tok Internal",
        "signature": "String-\u003eByteString-\u003eByteString-\u003eByteString-\u003eMaybe[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html",
        "fct-type": "module",
        "title": "TouchesFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "TouchesFiles",
        "normalized": "",
        "package": "darcs",
        "partial": "Touches Files",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#v:choosePreTouching",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "Maybe [FilePath] -\u003e FL p x y -\u003e Sealed (FL p x)",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html#choosePreTouching",
        "fct-type": "function",
        "title": "choosePreTouching"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "choosePreTouching",
        "normalized": "Maybe[FilePath]-\u003eFL a b c-\u003eSealed(FL a b)",
        "package": "darcs",
        "partial": "Pre Touching",
        "signature": "Maybe[FilePath]-\u003eFL p x y-\u003eSealed(FL p x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#v:chooseTouching",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "Maybe [FilePath] -\u003e FL p x y -\u003e Sealed (FL p x)",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html#chooseTouching",
        "fct-type": "function",
        "title": "chooseTouching"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "chooseTouching",
        "normalized": "Maybe[FilePath]-\u003eFL a b c-\u003eSealed(FL a b)",
        "package": "darcs",
        "partial": "Touching",
        "signature": "Maybe[FilePath]-\u003eFL p x y-\u003eSealed(FL p x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#v:deselectNotTouching",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "Maybe [FilePath] -\u003e PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html#deselectNotTouching",
        "fct-type": "function",
        "title": "deselectNotTouching"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "deselectNotTouching",
        "normalized": "Maybe[FilePath]-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Not Touching",
        "signature": "Maybe[FilePath]-\u003ePatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#v:lookTouch",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "Maybe [(FilePath, FilePath)] -\u003e [FilePath] -\u003e p x y -\u003e (Bool, [FilePath], [FilePath], [(FilePath, FilePath)])",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html#lookTouch",
        "fct-type": "function",
        "title": "lookTouch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "lookTouch",
        "normalized": "Maybe[(FilePath,FilePath)]-\u003e[FilePath]-\u003ea b c-\u003e(Bool,[FilePath],[FilePath],[(FilePath,FilePath)])",
        "package": "darcs",
        "partial": "Touch",
        "signature": "Maybe[(FilePath,FilePath)]-\u003e[FilePath]-\u003ep x y-\u003e(Bool,[FilePath],[FilePath],[(FilePath,FilePath)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#v:selectNotTouching",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "Maybe [FilePath] -\u003e PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html#selectNotTouching",
        "fct-type": "function",
        "title": "selectNotTouching"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "selectNotTouching",
        "normalized": "Maybe[FilePath]-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Not Touching",
        "signature": "Maybe[FilePath]-\u003ePatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-TouchesFiles.html#v:selectTouching",
      "description": {
        "fct-module": "Darcs.Patch.TouchesFiles",
        "fct-package": "darcs",
        "fct-signature": "Maybe [FilePath] -\u003e PatchChoices p x y -\u003e PatchChoices p x y",
        "fct-source": "src/Darcs-Patch-TouchesFiles.html#selectTouching",
        "fct-type": "function",
        "title": "selectTouching"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch TouchesFiles",
        "module": "Darcs.Patch.TouchesFiles",
        "name": "selectTouching",
        "normalized": "Maybe[FilePath]-\u003ePatchChoices a b c-\u003ePatchChoices a b c",
        "package": "darcs",
        "partial": "Touching",
        "signature": "Maybe[FilePath]-\u003ePatchChoices p x y-\u003ePatchChoices p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Apply.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1.Apply",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1-Apply.html",
        "fct-type": "module",
        "title": "Apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Apply",
        "module": "Darcs.Patch.V1.Apply",
        "name": "Apply",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Commute.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1-Commute.html",
        "fct-type": "module",
        "title": "Commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Commute",
        "module": "Darcs.Patch.V1.Commute",
        "name": "Commute",
        "normalized": "",
        "package": "darcs",
        "partial": "Commute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Commute.html#v:merge",
      "description": {
        "fct-module": "Darcs.Patch.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "(p :\\/: p) x y -\u003e (p :/\\: p) x y",
        "fct-source": "src/Darcs-Patch-Merge.html#merge",
        "fct-type": "function",
        "title": "merge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Commute",
        "module": "Darcs.Patch.V1.Commute",
        "name": "merge",
        "normalized": "(a a)b c-\u003e(a a)b c",
        "package": "darcs",
        "partial": "",
        "signature": "(p p)x y-\u003e(p p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Commute.html#v:merger",
      "description": {
        "fct-module": "Darcs.Patch.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Patch prim x y -\u003e Patch prim x z -\u003e Sealed (Patch prim y)",
        "fct-source": "src/Darcs-Patch-V1-Commute.html#merger",
        "fct-type": "function",
        "title": "merger"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Commute",
        "module": "Darcs.Patch.V1.Commute",
        "name": "merger",
        "normalized": "String-\u003ePatch a b c-\u003ePatch a b d-\u003eSealed(Patch a c)",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003ePatch prim x y-\u003ePatch prim x z-\u003eSealed(Patch prim y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Commute.html#v:publicUnravel",
      "description": {
        "fct-module": "Darcs.Patch.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "Patch prim x y -\u003e [Sealed (FL prim y)]",
        "fct-source": "src/Darcs-Patch-V1-Commute.html#publicUnravel",
        "fct-type": "function",
        "title": "publicUnravel"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Commute",
        "module": "Darcs.Patch.V1.Commute",
        "name": "publicUnravel",
        "normalized": "Patch a b c-\u003e[Sealed(FL a c)]",
        "package": "darcs",
        "partial": "Unravel",
        "signature": "Patch prim x y-\u003e[Sealed(FL prim y)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Commute.html#v:unravel",
      "description": {
        "fct-module": "Darcs.Patch.V1.Commute",
        "fct-package": "darcs",
        "fct-signature": "Patch prim x y -\u003e [Sealed (FL prim x)]",
        "fct-source": "src/Darcs-Patch-V1-Commute.html#unravel",
        "fct-type": "function",
        "title": "unravel"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Commute",
        "module": "Darcs.Patch.V1.Commute",
        "name": "unravel",
        "normalized": "Patch a b c-\u003e[Sealed(FL a b)]",
        "package": "darcs",
        "partial": "",
        "signature": "Patch prim x y-\u003e[Sealed(FL prim x)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1-Core.html",
        "fct-type": "module",
        "title": "Core"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "Core",
        "normalized": "",
        "package": "darcs",
        "partial": "Core",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#t:Patch",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-V1-Core.html#Patch",
        "fct-type": "data",
        "title": "Patch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "Patch",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#v:Merger",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "FL (Patch prim) x y -\u003e RL (Patch prim) x b -\u003e Patch prim c b -\u003e Patch prim c d -\u003e Patch prim x y",
        "fct-source": "src/Darcs-Patch-V1-Core.html#Patch",
        "fct-type": "function",
        "title": "Merger"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "Merger",
        "normalized": "FL(Patch a)b c-\u003eRL(Patch a)b d-\u003ePatch a e d-\u003ePatch a e f-\u003ePatch a b c",
        "package": "darcs",
        "partial": "Merger",
        "signature": "FL(Patch prim)x y-\u003eRL(Patch prim)x b-\u003ePatch prim c b-\u003ePatch prim c d-\u003ePatch prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#v:PP",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Patch prim x y",
        "fct-source": "src/Darcs-Patch-V1-Core.html#Patch",
        "fct-type": "function",
        "title": "PP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "PP",
        "normalized": "a b c-\u003ePatch a b c",
        "package": "darcs",
        "partial": "PP",
        "signature": "prim x y-\u003ePatch prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#v:Regrem",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "FL (Patch prim) x y -\u003e RL (Patch prim) x b -\u003e Patch prim c b -\u003e Patch prim c a -\u003e Patch prim y x",
        "fct-source": "src/Darcs-Patch-V1-Core.html#Patch",
        "fct-type": "function",
        "title": "Regrem"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "Regrem",
        "normalized": "FL(Patch a)b c-\u003eRL(Patch a)b d-\u003ePatch a e d-\u003ePatch a e f-\u003ePatch a c b",
        "package": "darcs",
        "partial": "Regrem",
        "signature": "FL(Patch prim)x y-\u003eRL(Patch prim)x b-\u003ePatch prim c b-\u003ePatch prim c a-\u003ePatch prim y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#v:isMerger",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "Patch prim a b -\u003e Bool",
        "fct-source": "src/Darcs-Patch-V1-Core.html#isMerger",
        "fct-type": "function",
        "title": "isMerger"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "isMerger",
        "normalized": "Patch a b c-\u003eBool",
        "package": "darcs",
        "partial": "Merger",
        "signature": "Patch prim a b-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Core.html#v:mergerUndo",
      "description": {
        "fct-module": "Darcs.Patch.V1.Core",
        "fct-package": "darcs",
        "fct-signature": "Patch prim x y -\u003e FL (Patch prim) x y",
        "fct-source": "src/Darcs-Patch-V1-Core.html#mergerUndo",
        "fct-type": "function",
        "title": "mergerUndo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Core",
        "module": "Darcs.Patch.V1.Core",
        "name": "mergerUndo",
        "normalized": "Patch a b c-\u003eFL(Patch a)b c",
        "package": "darcs",
        "partial": "Undo",
        "signature": "Patch prim x y-\u003eFL(Patch prim)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Read.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1.Read",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1-Read.html",
        "fct-type": "module",
        "title": "Read"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Read",
        "module": "Darcs.Patch.V1.Read",
        "name": "Read",
        "normalized": "",
        "package": "darcs",
        "partial": "Read",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Show.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1.Show",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1-Show.html",
        "fct-type": "module",
        "title": "Show"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Show",
        "module": "Darcs.Patch.V1.Show",
        "name": "Show",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Show.html#v:showPatch_",
      "description": {
        "fct-module": "Darcs.Patch.V1.Show",
        "fct-package": "darcs",
        "fct-signature": "Patch prim a b -\u003e Doc",
        "fct-source": "src/Darcs-Patch-V1-Show.html#showPatch_",
        "fct-type": "function",
        "title": "showPatch_"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Show",
        "module": "Darcs.Patch.V1.Show",
        "name": "showPatch_",
        "normalized": "Patch a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Patch",
        "signature": "Patch prim a b-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1-Viewing.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1.Viewing",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1-Viewing.html",
        "fct-type": "module",
        "title": "Viewing"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1 Viewing",
        "module": "Darcs.Patch.V1.Viewing",
        "name": "Viewing",
        "normalized": "",
        "package": "darcs",
        "partial": "Viewing",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1.html#",
      "description": {
        "fct-module": "Darcs.Patch.V1",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V1.html",
        "fct-type": "module",
        "title": "V1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1",
        "module": "Darcs.Patch.V1",
        "name": "V1",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V1.html#t:Patch",
      "description": {
        "fct-module": "Darcs.Patch.V1",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-V1-Core.html#Patch",
        "fct-type": "data",
        "title": "Patch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V1",
        "module": "Darcs.Patch.V1",
        "name": "Patch",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#",
      "description": {
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V2-Non.html",
        "fct-type": "module",
        "title": "Non"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "Non",
        "normalized": "",
        "package": "darcs",
        "partial": "Non",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#t:Non",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eNon\u003c/a\u003e\u003c/code\u003e stores a context with a \u003ccode\u003ePrim\u003c/code\u003e patch. It is a patch whose effect\n isn't visible - a Non-affecting patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-V2-Non.html#Non",
        "fct-type": "data",
        "title": "Non"
      },
      "index": {
        "description": "Non stores context with Prim patch It is patch whose effect isn visible Non-affecting patch",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "Non",
        "normalized": "",
        "package": "darcs",
        "partial": "Non",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#t:Nonable",
      "description": {
        "fct-descr": "\u003cp\u003eNonable represents the class of patches that can be turned into a Non.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-V2-Non.html#Nonable",
        "fct-type": "class",
        "title": "Nonable"
      },
      "index": {
        "description": "Nonable represents the class of patches that can be turned into Non",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "Nonable",
        "normalized": "",
        "package": "darcs",
        "partial": "Nonable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:-42--62-",
      "description": {
        "fct-descr": "\u003cp\u003e(*\u003e) attemts to modify a Non by commuting it past a given patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "Non p x -\u003e p x y -\u003e Maybe (Non p y)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#%2A%3E",
        "fct-type": "function",
        "title": "(*\u003e)"
      },
      "index": {
        "description": "attemts to modify Non by commuting it past given patch",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "(*\u003e) *\u003e",
        "normalized": "Non a b-\u003ea b c-\u003eMaybe(Non a c)",
        "package": "darcs",
        "partial": "",
        "signature": "Non p x-\u003ep x y-\u003eMaybe(Non p y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:-42--62--62-",
      "description": {
        "fct-descr": "\u003cp\u003e(*\u003e\u003e) attempts to modify a Non by commuting it past a given WL of patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "Non p x -\u003e l (PrimOf p) x y -\u003e Maybe (Non p y)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#%2A%3E%3E",
        "fct-type": "function",
        "title": "(*\u003e\u003e)"
      },
      "index": {
        "description": "attempts to modify Non by commuting it past given WL of patches",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "(*\u003e\u003e) *\u003e\u003e",
        "normalized": "Non a b-\u003ec(PrimOf a)b d-\u003eMaybe(Non a d)",
        "package": "darcs",
        "partial": "",
        "signature": "Non p x-\u003el(PrimOf p)x y-\u003eMaybe(Non p y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:-62--42-",
      "description": {
        "fct-descr": "\u003cp\u003e(\u003e*) attempts to modify a Non, by commuting a given patch past it.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Non p y -\u003e Maybe (Non p x)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#%3E%2A",
        "fct-type": "function",
        "title": "(\u003e*)"
      },
      "index": {
        "description": "attempts to modify Non by commuting given patch past it",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "(\u003e*) \u003e*",
        "normalized": "a b c-\u003eNon a c-\u003eMaybe(Non a b)",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eNon p y-\u003eMaybe(Non p x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:-62--62--42-",
      "description": {
        "fct-descr": "\u003cp\u003e(\u003e\u003e*) attempts to modify a Non by commuting a given WL of patches past it.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "l (PrimOf p) x y -\u003e Non p y -\u003e Maybe (Non p x)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#%3E%3E%2A",
        "fct-type": "function",
        "title": "(\u003e\u003e*)"
      },
      "index": {
        "description": "attempts to modify Non by commuting given WL of patches past it",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "(\u003e\u003e*) \u003e\u003e*",
        "normalized": "a(PrimOf b)c d-\u003eNon b d-\u003eMaybe(Non b c)",
        "package": "darcs",
        "partial": "",
        "signature": "l(PrimOf p)x y-\u003eNon p y-\u003eMaybe(Non p x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:Non",
      "description": {
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e PrimOf p y z -\u003e Non p x",
        "fct-source": "src/Darcs-Patch-V2-Non.html#Non",
        "fct-type": "function",
        "title": "Non"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "Non",
        "normalized": "FL a b c-\u003ePrimOf a c d-\u003eNon a b",
        "package": "darcs",
        "partial": "Non",
        "signature": "FL p x y-\u003ePrimOf p y z-\u003eNon p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:commuteOrAddToCtx",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecommuteOrAddToCtx\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ex cy\u003c/code\u003e tries to commute \u003ccode\u003ex\u003c/code\u003e past \u003ccode\u003ecy\u003c/code\u003e and always\n returns some variant \u003ccode\u003ecy'\u003c/code\u003e. If commutation suceeds, the variant is just\n straightforwardly the commuted version. If commutation fails, the variant\n consists of \u003ccode\u003ex\u003c/code\u003e prepended to the context of \u003ccode\u003ecy\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Non p y -\u003e Non p x",
        "fct-source": "src/Darcs-Patch-V2-Non.html#commuteOrAddToCtx",
        "fct-type": "function",
        "title": "commuteOrAddToCtx"
      },
      "index": {
        "description": "commuteOrAddToCtx cy tries to commute past cy and always returns some variant cy If commutation suceeds the variant is just straightforwardly the commuted version If commutation fails the variant consists of prepended to the context of cy",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "commuteOrAddToCtx",
        "normalized": "a b c-\u003eNon a c-\u003eNon a b",
        "package": "darcs",
        "partial": "Or Add To Ctx",
        "signature": "p x y-\u003eNon p y-\u003eNon p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:commuteOrAddToCtxRL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecommuteOrAddToCtxRL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003exs cy\u003c/code\u003e commutes as many patches of \u003ccode\u003exs\u003c/code\u003e past \u003ccode\u003ecy\u003c/code\u003e\n as possible, adding any that don't commute to the context of cy.  Suppose we\n have\n\u003c/p\u003e\u003cpre\u003e x1 x2 x3 [c1 c2 y]\n\u003c/pre\u003e\u003cp\u003eand that in our example \u003ccode\u003ex1\u003c/code\u003e fails to commute past \u003ccode\u003ec1\u003c/code\u003e, this function\n would commute down to\n\u003c/p\u003e\u003cpre\u003e x1 [c1'' c2'' y''] x2' x3'\n\u003c/pre\u003e\u003cp\u003eand return \u003ccode\u003e[x1 c1'' c2'' y'']\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "RL p x y -\u003e Non p y -\u003e Non p x",
        "fct-source": "src/Darcs-Patch-V2-Non.html#commuteOrAddToCtxRL",
        "fct-type": "function",
        "title": "commuteOrAddToCtxRL"
      },
      "index": {
        "description": "commuteOrAddToCtxRL xs cy commutes as many patches of xs past cy as possible adding any that don commute to the context of cy Suppose we have x1 x2 x3 c1 c2 and that in our example x1 fails to commute past c1 this function would commute down to x1 c1 c2 x2 x3 and return x1 c1 c2",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "commuteOrAddToCtxRL",
        "normalized": "RL a b c-\u003eNon a c-\u003eNon a b",
        "package": "darcs",
        "partial": "Or Add To Ctx RL",
        "signature": "RL p x y-\u003eNon p y-\u003eNon p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:commuteOrRemFromCtx",
      "description": {
        "fct-descr": "\u003cp\u003ecommuteOrRemFromCtx attempts to remove a given patch from a Non. If the\n patch was not in the Non, then the commute will succeed and the modified Non\n will be returned. If the commute fails then the patch is either in the Non\n context, or the Non patch itself; we attempt to remove the patch from the\n context and then return the non with the updated context.\n\u003c/p\u003e\u003cp\u003eTODO: understand if there is any case where p is equal to the prim patch of\n the Non, in which case, we return the original Non, is that right?\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Non p x -\u003e Maybe (Non p y)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#commuteOrRemFromCtx",
        "fct-type": "function",
        "title": "commuteOrRemFromCtx"
      },
      "index": {
        "description": "commuteOrRemFromCtx attempts to remove given patch from Non If the patch was not in the Non then the commute will succeed and the modified Non will be returned If the commute fails then the patch is either in the Non context or the Non patch itself we attempt to remove the patch from the context and then return the non with the updated context TODO understand if there is any case where is equal to the prim patch of the Non in which case we return the original Non is that right",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "commuteOrRemFromCtx",
        "normalized": "a b c-\u003eNon a b-\u003eMaybe(Non a c)",
        "package": "darcs",
        "partial": "Or Rem From Ctx",
        "signature": "p x y-\u003eNon p x-\u003eMaybe(Non p y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:commuteOrRemFromCtxFL",
      "description": {
        "fct-descr": "\u003cp\u003ecommuteOrRemFromCtxFL attempts to remove a FL of patches from a Non,\n returning Nothing if any of the individual removes fail.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e Non p x -\u003e Maybe (Non p y)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#commuteOrRemFromCtxFL",
        "fct-type": "function",
        "title": "commuteOrRemFromCtxFL"
      },
      "index": {
        "description": "commuteOrRemFromCtxFL attempts to remove FL of patches from Non returning Nothing if any of the individual removes fail",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "commuteOrRemFromCtxFL",
        "normalized": "FL a b c-\u003eNon a b-\u003eMaybe(Non a c)",
        "package": "darcs",
        "partial": "Or Rem From Ctx FL",
        "signature": "FL p x y-\u003eNon p x-\u003eMaybe(Non p y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:commutePrimsOrAddToCtx",
      "description": {
        "fct-descr": "\u003cp\u003ecommutePrimsOrAddToCtx takes a WL of prims and attempts to commute them\n past a Non.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "l (PrimOf p) x y -\u003e Non p y -\u003e Non p x",
        "fct-source": "src/Darcs-Patch-V2-Non.html#commutePrimsOrAddToCtx",
        "fct-type": "function",
        "title": "commutePrimsOrAddToCtx"
      },
      "index": {
        "description": "commutePrimsOrAddToCtx takes WL of prims and attempts to commute them past Non",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "commutePrimsOrAddToCtx",
        "normalized": "a(PrimOf b)c d-\u003eNon b d-\u003eNon b c",
        "package": "darcs",
        "partial": "Prims Or Add To Ctx",
        "signature": "l(PrimOf p)x y-\u003eNon p y-\u003eNon p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:non",
      "description": {
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Non p x",
        "fct-source": "src/Darcs-Patch-V2-Non.html#non",
        "fct-type": "method",
        "title": "non"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "non",
        "normalized": "a b c-\u003eNon a b",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eNon p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:readNon",
      "description": {
        "fct-descr": "\u003cp\u003ereadNon is a parser that attempts to read a single Non.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "m (Non p x)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#readNon",
        "fct-type": "function",
        "title": "readNon"
      },
      "index": {
        "description": "readNon is parser that attempts to read single Non",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "readNon",
        "normalized": "",
        "package": "darcs",
        "partial": "Non",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:readNons",
      "description": {
        "fct-descr": "\u003cp\u003ereadNons is a parser that attempts to read a list of Nons.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "m [Non p x]",
        "fct-source": "src/Darcs-Patch-V2-Non.html#readNons",
        "fct-type": "function",
        "title": "readNons"
      },
      "index": {
        "description": "readNons is parser that attempts to read list of Nons",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "readNons",
        "normalized": "a[Non b c]",
        "package": "darcs",
        "partial": "Nons",
        "signature": "m[Non p x]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:remNons",
      "description": {
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "[Non p x] -\u003e Non p x -\u003e Non p x",
        "fct-source": "src/Darcs-Patch-V2-Non.html#remNons",
        "fct-type": "function",
        "title": "remNons"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "remNons",
        "normalized": "[Non a b]-\u003eNon a b-\u003eNon a b",
        "package": "darcs",
        "partial": "Nons",
        "signature": "[Non p x]-\u003eNon p x-\u003eNon p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:showNon",
      "description": {
        "fct-descr": "\u003cp\u003eshowNon creates a Doc representing a Non.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "Non p x -\u003e Doc",
        "fct-source": "src/Darcs-Patch-V2-Non.html#showNon",
        "fct-type": "function",
        "title": "showNon"
      },
      "index": {
        "description": "showNon creates Doc representing Non",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "showNon",
        "normalized": "Non a b-\u003eDoc",
        "package": "darcs",
        "partial": "Non",
        "signature": "Non p x-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:showNons",
      "description": {
        "fct-descr": "\u003cp\u003eshowNons creates a Doc representing a list of Nons.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "[Non p x] -\u003e Doc",
        "fct-source": "src/Darcs-Patch-V2-Non.html#showNons",
        "fct-type": "function",
        "title": "showNons"
      },
      "index": {
        "description": "showNons creates Doc representing list of Nons",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "showNons",
        "normalized": "[Non a b]-\u003eDoc",
        "package": "darcs",
        "partial": "Nons",
        "signature": "[Non p x]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Non.html#v:unNon",
      "description": {
        "fct-descr": "\u003cp\u003eunNon converts a Non into a FL of its context followed by the primitive\n patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Non",
        "fct-package": "darcs",
        "fct-signature": "Non p x -\u003e Sealed (FL p x)",
        "fct-source": "src/Darcs-Patch-V2-Non.html#unNon",
        "fct-type": "function",
        "title": "unNon"
      },
      "index": {
        "description": "unNon converts Non into FL of its context followed by the primitive patch",
        "hierarchy": "Darcs Patch V2 Non",
        "module": "Darcs.Patch.V2.Non",
        "name": "unNon",
        "normalized": "Non a b-\u003eSealed(FL a b)",
        "package": "darcs",
        "partial": "Non",
        "signature": "Non p x-\u003eSealed(FL p x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V2-Real.html",
        "fct-type": "module",
        "title": "Real"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "Real",
        "normalized": "",
        "package": "darcs",
        "partial": "Real",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#t:RealPatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eRealPatch\u003c/a\u003e\u003c/code\u003e is used to represents prim patches that are duplicates of, or\n conflict with, another prim patch in the repository.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eNormal prim\u003c/code\u003e: A primitive patch\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eDuplicate x\u003c/code\u003e: This patch has no effect since \u003ccode\u003ex\u003c/code\u003e is already present in the\n repository.\n\u003c/p\u003e\u003cpre\u003eEtacilpud x: invert (Duplicate x)\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eConflictor ix xx x\u003c/code\u003e:\n \u003ccode\u003eix\u003c/code\u003e is the set of patches:\n   * that conflict with \u003ccode\u003ex\u003c/code\u003e and also conflict with another patch in the\n     repository.\n   * that conflict with a patch that conflict with \u003ccode\u003ex\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003exx\u003c/code\u003e is the sequence of patches that conflict *only* with \u003ccode\u003ex\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003ex\u003c/code\u003e is the original, conflicting patch.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eix\u003c/code\u003e and \u003ccode\u003ex\u003c/code\u003e are stored as \u003ccode\u003eNon\u003c/code\u003e objects, which include any necessary\n  context to uniquely define the patch that is referred to.\n\u003c/p\u003e\u003cp\u003eThe intuition is that a Conflictor should have the effect of inverting any\n patches that \u003ccode\u003ex\u003c/code\u003e conflicts with, that haven't already been undone by another\n Conflictor in the repository.\n Therefore, the effect of a Conflictor is \u003ccode\u003einvert xx\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eInvConflictor ix xx x\u003c/code\u003e: like \u003ccode\u003einvert (Conflictor ix xx x)\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "data",
        "title": "RealPatch"
      },
      "index": {
        "description": "RealPatch is used to represents prim patches that are duplicates of or conflict with another prim patch in the repository Normal prim primitive patch Duplicate This patch has no effect since is already present in the repository Etacilpud invert Duplicate Conflictor ix xx ix is the set of patches that conflict with and also conflict with another patch in the repository that conflict with patch that conflict with xx is the sequence of patches that conflict only with is the original conflicting patch ix and are stored as Non objects which include any necessary context to uniquely define the patch that is referred to The intuition is that Conflictor should have the effect of inverting any patches that conflicts with that haven already been undone by another Conflictor in the repository Therefore the effect of Conflictor is invert xx InvConflictor ix xx like invert Conflictor ix xx",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "RealPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Real Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:Conflictor",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "[Non (RealPatch prim) x] -\u003e FL prim x y -\u003e Non (RealPatch prim) x -\u003e RealPatch prim y x",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "function",
        "title": "Conflictor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "Conflictor",
        "normalized": "[Non(RealPatch a)b]-\u003eFL a b c-\u003eNon(RealPatch a)b-\u003eRealPatch a c b",
        "package": "darcs",
        "partial": "Conflictor",
        "signature": "[Non(RealPatch prim)x]-\u003eFL prim x y-\u003eNon(RealPatch prim)x-\u003eRealPatch prim y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:Duplicate",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "Non (RealPatch prim) x -\u003e RealPatch prim x x",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "function",
        "title": "Duplicate"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "Duplicate",
        "normalized": "Non(RealPatch a)b-\u003eRealPatch a b b",
        "package": "darcs",
        "partial": "Duplicate",
        "signature": "Non(RealPatch prim)x-\u003eRealPatch prim x x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:Etacilpud",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "Non (RealPatch prim) x -\u003e RealPatch prim x x",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "function",
        "title": "Etacilpud"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "Etacilpud",
        "normalized": "Non(RealPatch a)b-\u003eRealPatch a b b",
        "package": "darcs",
        "partial": "Etacilpud",
        "signature": "Non(RealPatch prim)x-\u003eRealPatch prim x x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:InvConflictor",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "[Non (RealPatch prim) x] -\u003e FL prim x y -\u003e Non (RealPatch prim) x -\u003e RealPatch prim x y",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "function",
        "title": "InvConflictor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "InvConflictor",
        "normalized": "[Non(RealPatch a)b]-\u003eFL a b c-\u003eNon(RealPatch a)b-\u003eRealPatch a b c",
        "package": "darcs",
        "partial": "Inv Conflictor",
        "signature": "[Non(RealPatch prim)x]-\u003eFL prim x y-\u003eNon(RealPatch prim)x-\u003eRealPatch prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:Normal",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e RealPatch prim x y",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "function",
        "title": "Normal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "Normal",
        "normalized": "a b c-\u003eRealPatch a b c",
        "package": "darcs",
        "partial": "Normal",
        "signature": "prim x y-\u003eRealPatch prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:isConsistent",
      "description": {
        "fct-descr": "\u003cp\u003eThis is used for unit-testing and for internal sanity checks\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "RealPatch prim x y -\u003e Maybe Doc",
        "fct-source": "src/Darcs-Patch-V2-Real.html#isConsistent",
        "fct-type": "function",
        "title": "isConsistent"
      },
      "index": {
        "description": "This is used for unit-testing and for internal sanity checks",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "isConsistent",
        "normalized": "RealPatch a b c-\u003eMaybe Doc",
        "package": "darcs",
        "partial": "Consistent",
        "signature": "RealPatch prim x y-\u003eMaybe Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:isDuplicate",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eisDuplicate\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ep\u003c/code\u003e is \u003ccode\u003eTrue\u003c/code\u003e if \u003ccode\u003ep\u003c/code\u003e is either a \u003ccode\u003e\u003ca\u003eDuplicate\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003eEtacilpud\u003c/a\u003e\u003c/code\u003e\n patch.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "RealPatch prim s y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-V2-Real.html#isDuplicate",
        "fct-type": "function",
        "title": "isDuplicate"
      },
      "index": {
        "description": "isDuplicate is True if is either Duplicate or Etacilpud patch",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "isDuplicate",
        "normalized": "RealPatch a b c-\u003eBool",
        "package": "darcs",
        "partial": "Duplicate",
        "signature": "RealPatch prim s y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:isForward",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eisForward\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ep\u003c/code\u003e is \u003ccode\u003eTrue\u003c/code\u003e if \u003ccode\u003ep\u003c/code\u003e is either an \u003ccode\u003e\u003ca\u003eInvConflictor\u003c/a\u003e\u003c/code\u003e or\n \u003ccode\u003e\u003ca\u003eEtacilpud\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "RealPatch prim s y -\u003e Maybe Doc",
        "fct-source": "src/Darcs-Patch-V2-Real.html#isForward",
        "fct-type": "function",
        "title": "isForward"
      },
      "index": {
        "description": "isForward is True if is either an InvConflictor or Etacilpud",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "isForward",
        "normalized": "RealPatch a b c-\u003eMaybe Doc",
        "package": "darcs",
        "partial": "Forward",
        "signature": "RealPatch prim s y-\u003eMaybe Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:mergeUnravelled",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003emergeUnravelled\u003c/a\u003e\u003c/code\u003e is used when converting from Darcs V1 patches (Mergers)\n to Darcs V2 patches (Conflictors).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "[Sealed (FL prim x)] -\u003e Maybe (FlippedSeal (RealPatch prim) x)",
        "fct-source": "src/Darcs-Patch-V2-Real.html#mergeUnravelled",
        "fct-type": "function",
        "title": "mergeUnravelled"
      },
      "index": {
        "description": "mergeUnravelled is used when converting from Darcs V1 patches Mergers to Darcs V2 patches Conflictors",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "mergeUnravelled",
        "normalized": "[Sealed(FL a b)]-\u003eMaybe(FlippedSeal(RealPatch a)b)",
        "package": "darcs",
        "partial": "Unravelled",
        "signature": "[Sealed(FL prim x)]-\u003eMaybe(FlippedSeal(RealPatch prim)x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2-Real.html#v:prim2real",
      "description": {
        "fct-module": "Darcs.Patch.V2.Real",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e RealPatch prim x y",
        "fct-source": "src/Darcs-Patch-V2-Real.html#prim2real",
        "fct-type": "function",
        "title": "prim2real"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2 Real",
        "module": "Darcs.Patch.V2.Real",
        "name": "prim2real",
        "normalized": "a b c-\u003eRealPatch a b c",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eRealPatch prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2.html#",
      "description": {
        "fct-module": "Darcs.Patch.V2",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-V2.html",
        "fct-type": "module",
        "title": "V2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2",
        "module": "Darcs.Patch.V2",
        "name": "V2",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2.html#t:RealPatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eRealPatch\u003c/a\u003e\u003c/code\u003e is used to represents prim patches that are duplicates of, or\n conflict with, another prim patch in the repository.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eNormal prim\u003c/code\u003e: A primitive patch\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eDuplicate x\u003c/code\u003e: This patch has no effect since \u003ccode\u003ex\u003c/code\u003e is already present in the\n repository.\n\u003c/p\u003e\u003cpre\u003eEtacilpud x: invert (Duplicate x)\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eConflictor ix xx x\u003c/code\u003e:\n \u003ccode\u003eix\u003c/code\u003e is the set of patches:\n   * that conflict with \u003ccode\u003ex\u003c/code\u003e and also conflict with another patch in the\n     repository.\n   * that conflict with a patch that conflict with \u003ccode\u003ex\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003exx\u003c/code\u003e is the sequence of patches that conflict *only* with \u003ccode\u003ex\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003ex\u003c/code\u003e is the original, conflicting patch.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eix\u003c/code\u003e and \u003ccode\u003ex\u003c/code\u003e are stored as \u003ccode\u003eNon\u003c/code\u003e objects, which include any necessary\n  context to uniquely define the patch that is referred to.\n\u003c/p\u003e\u003cp\u003eThe intuition is that a Conflictor should have the effect of inverting any\n patches that \u003ccode\u003ex\u003c/code\u003e conflicts with, that haven't already been undone by another\n Conflictor in the repository.\n Therefore, the effect of a Conflictor is \u003ccode\u003einvert xx\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eInvConflictor ix xx x\u003c/code\u003e: like \u003ccode\u003einvert (Conflictor ix xx x)\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch.V2",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-V2-Real.html#RealPatch",
        "fct-type": "data",
        "title": "RealPatch"
      },
      "index": {
        "description": "RealPatch is used to represents prim patches that are duplicates of or conflict with another prim patch in the repository Normal prim primitive patch Duplicate This patch has no effect since is already present in the repository Etacilpud invert Duplicate Conflictor ix xx ix is the set of patches that conflict with and also conflict with another patch in the repository that conflict with patch that conflict with xx is the sequence of patches that conflict only with is the original conflicting patch ix and are stored as Non objects which include any necessary context to uniquely define the patch that is referred to The intuition is that Conflictor should have the effect of inverting any patches that conflicts with that haven already been undone by another Conflictor in the repository Therefore the effect of Conflictor is invert xx InvConflictor ix xx like invert Conflictor ix xx",
        "hierarchy": "Darcs Patch V2",
        "module": "Darcs.Patch.V2",
        "name": "RealPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Real Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-V2.html#v:prim2real",
      "description": {
        "fct-module": "Darcs.Patch.V2",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e RealPatch prim x y",
        "fct-source": "src/Darcs-Patch-V2-Real.html#prim2real",
        "fct-type": "function",
        "title": "prim2real"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch V2",
        "module": "Darcs.Patch.V2",
        "name": "prim2real",
        "normalized": "a b c-\u003eRealPatch a b c",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eRealPatch prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Viewing.html#",
      "description": {
        "fct-module": "Darcs.Patch.Viewing",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch-Viewing.html",
        "fct-type": "module",
        "title": "Viewing"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Viewing",
        "module": "Darcs.Patch.Viewing",
        "name": "Viewing",
        "normalized": "",
        "package": "darcs",
        "partial": "Viewing",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Viewing.html#v:showContextHunk",
      "description": {
        "fct-module": "Darcs.Patch.Viewing",
        "fct-package": "darcs",
        "fct-signature": "FileHunk x y -\u003e m Doc",
        "fct-source": "src/Darcs-Patch-Viewing.html#showContextHunk",
        "fct-type": "function",
        "title": "showContextHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Viewing",
        "module": "Darcs.Patch.Viewing",
        "name": "showContextHunk",
        "normalized": "FileHunk a b-\u003ec Doc",
        "package": "darcs",
        "partial": "Context Hunk",
        "signature": "FileHunk x y-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch-Viewing.html#v:showContextSeries",
      "description": {
        "fct-module": "Darcs.Patch.Viewing",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e m Doc",
        "fct-source": "src/Darcs-Patch-Viewing.html#showContextSeries",
        "fct-type": "function",
        "title": "showContextSeries"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch Viewing",
        "module": "Darcs.Patch.Viewing",
        "name": "showContextSeries",
        "normalized": "FL a b c-\u003ed Doc",
        "package": "darcs",
        "partial": "Context Series",
        "signature": "FL p x y-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Patch.html",
        "fct-type": "module",
        "title": "Patch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "Patch",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#t:Effect",
      "description": {
        "fct-descr": "\u003cp\u003ePatches whose concrete effect which can be expressed as a list of\n   primitive patches.\n\u003c/p\u003e\u003cp\u003eA minimal definition would be either of \u003ccode\u003eeffect\u003c/code\u003e or \u003ccode\u003eeffectRL\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Effect.html#Effect",
        "fct-type": "class",
        "title": "Effect"
      },
      "index": {
        "description": "Patches whose concrete effect which can be expressed as list of primitive patches minimal definition would be either of effect or effectRL",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "Effect",
        "normalized": "",
        "package": "darcs",
        "partial": "Effect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#t:Named",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003eNamed\u003c/code\u003e type adds a patch info about a patch, that is a name.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eNamedP info deps p\u003c/code\u003e represents patch \u003ccode\u003ep\u003c/code\u003e with name\n \u003ccode\u003einfo\u003c/code\u003e. \u003ccode\u003edeps\u003c/code\u003e is a list of dependencies added at the named patch\n level, compared with the unnamed level (ie, dependencies added with\n \u003ccode\u003edarcs record --ask-deps\u003c/code\u003e).\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Named.html#Named",
        "fct-type": "data",
        "title": "Named"
      },
      "index": {
        "description": "The Named type adds patch info about patch that is name NamedP info deps represents patch with name info deps is list of dependencies added at the named patch level compared with the unnamed level ie dependencies added with darcs record ask-deps",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "Named",
        "normalized": "",
        "package": "darcs",
        "partial": "Named",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#t:Patchy",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Patchy.html#Patchy",
        "fct-type": "class",
        "title": "Patchy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "Patchy",
        "normalized": "",
        "package": "darcs",
        "partial": "Patchy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#t:PrimPatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#PrimPatch",
        "fct-type": "class",
        "title": "PrimPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "PrimPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Prim Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#t:RepoPatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Patch-RepoPatch.html#RepoPatch",
        "fct-type": "class",
        "title": "RepoPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "RepoPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:adddeps",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e [PatchInfo] -\u003e Named p x y",
        "fct-source": "src/Darcs-Patch-Named.html#adddeps",
        "fct-type": "function",
        "title": "adddeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "adddeps",
        "normalized": "Named a b c-\u003e[PatchInfo]-\u003eNamed a b c",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003e[PatchInfo]-\u003eNamed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:adddir",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#adddir",
        "fct-type": "function",
        "title": "adddir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "adddir",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:addfile",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#addfile",
        "fct-type": "function",
        "title": "addfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "addfile",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:anonymous",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e IO (Named p x y)",
        "fct-source": "src/Darcs-Patch-Named.html#anonymous",
        "fct-type": "function",
        "title": "anonymous"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "anonymous",
        "normalized": "FL a b c-\u003eIO(Named a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "FL p x y-\u003eIO(Named p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:apply",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m ()",
        "fct-source": "src/Darcs-Patch-Apply.html#apply",
        "fct-type": "function",
        "title": "apply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "apply",
        "normalized": "a b c-\u003ed()",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:applyToFilePaths",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe [(FilePath, FilePath)] -\u003e [FilePath] -\u003e ([FilePath], [FilePath], [(FilePath, FilePath)])",
        "fct-source": "src/Darcs-Patch-Apply.html#applyToFilePaths",
        "fct-type": "function",
        "title": "applyToFilePaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "applyToFilePaths",
        "normalized": "a b c-\u003eMaybe[(FilePath,FilePath)]-\u003e[FilePath]-\u003e([FilePath],[FilePath],[(FilePath,FilePath)])",
        "package": "darcs",
        "partial": "To File Paths",
        "signature": "p x y-\u003eMaybe[(FilePath,FilePath)]-\u003e[FilePath]-\u003e([FilePath],[FilePath],[(FilePath,FilePath)])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:applyToTree",
      "description": {
        "fct-descr": "\u003cp\u003eApply a patch to a \u003ccode\u003e\u003ca\u003eTree\u003c/a\u003e\u003c/code\u003e, yielding a new \u003ccode\u003e\u003ca\u003eTree\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Tree m -\u003e m (Tree m)",
        "fct-source": "src/Darcs-Patch-Apply.html#applyToTree",
        "fct-type": "function",
        "title": "applyToTree"
      },
      "index": {
        "description": "Apply patch to Tree yielding new Tree",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "applyToTree",
        "normalized": "a b c-\u003eTree d-\u003ed(Tree d)",
        "package": "darcs",
        "partial": "To Tree",
        "signature": "p x y-\u003eTree m-\u003em(Tree m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:binary",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e ByteString -\u003e ByteString -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#binary",
        "fct-type": "function",
        "title": "binary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "binary",
        "normalized": "FilePath-\u003eByteString-\u003eByteString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eByteString-\u003eByteString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:canonize",
      "description": {
        "fct-descr": "\u003cp\u003eIt can sometimes be handy to have a canonical representation of a given\n patch.  We achieve this by defining a canonical form for each patch type,\n and a function \u003ccode\u003e\u003ca\u003ecanonize\u003c/a\u003e\u003c/code\u003e which takes a patch and puts it into\n canonical form.  This routine is used by the diff function to create an\n optimal patch (based on an LCS algorithm) from a simple hunk describing the\n old and new version of a file.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#canonize",
        "fct-type": "function",
        "title": "canonize"
      },
      "index": {
        "description": "It can sometimes be handy to have canonical representation of given patch We achieve this by defining canonical form for each patch type and function canonize which takes patch and puts it into canonical form This routine is used by the diff function to create an optimal patch based on an LCS algorithm from simple hunk describing the old and new version of file",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "canonize",
        "normalized": "a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "",
        "signature": "prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:changepref",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#changepref",
        "fct-type": "function",
        "title": "changepref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "changepref",
        "normalized": "String-\u003eString-\u003eString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:commute",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e p) x y -\u003e Maybe ((p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commute",
        "fct-type": "function",
        "title": "commute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "commute",
        "normalized": "(a a)b c-\u003eMaybe((a a)b c)",
        "package": "darcs",
        "partial": "",
        "signature": "(p p)x y-\u003eMaybe((p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:commuteFLorComplain",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "(p :\u003e FL p) x y -\u003e Either (Sealed2 p) ((FL p :\u003e p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commuteFLorComplain",
        "fct-type": "function",
        "title": "commuteFLorComplain"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "commuteFLorComplain",
        "normalized": "(a FL a)b c-\u003eEither(Sealed a)((FL a a)b c)",
        "package": "darcs",
        "partial": "FLor Complain",
        "signature": "(p FL p)x y-\u003eEither(Sealed p)((FL p p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:commuteRL",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "(RL p :\u003e p) x y -\u003e Maybe ((p :\u003e RL p) x y)",
        "fct-source": "src/Darcs-Patch-Commute.html#commuteRL",
        "fct-type": "function",
        "title": "commuteRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "commuteRL",
        "normalized": "(RL a a)b c-\u003eMaybe((a RL a)b c)",
        "package": "darcs",
        "partial": "RL",
        "signature": "(RL p p)x y-\u003eMaybe((p RL p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:description",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#description",
        "fct-type": "function",
        "title": "description"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "description",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:effect",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e FL (PrimOf p) x y",
        "fct-source": "src/Darcs-Patch-Effect.html#effect",
        "fct-type": "method",
        "title": "effect"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "effect",
        "normalized": "a b c-\u003eFL(PrimOf a)b c",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eFL(PrimOf p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:effectOnFilePaths",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath] -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Apply.html#effectOnFilePaths",
        "fct-type": "function",
        "title": "effectOnFilePaths"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "effectOnFilePaths",
        "normalized": "a b c-\u003e[FilePath]-\u003e[FilePath]",
        "package": "darcs",
        "partial": "On File Paths",
        "signature": "p x y-\u003e[FilePath]-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:forceTokReplace",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e ByteString -\u003e Maybe ByteString",
        "fct-source": "src/Darcs-Patch-TokenReplace.html#forceTokReplace",
        "fct-type": "function",
        "title": "forceTokReplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "forceTokReplace",
        "normalized": "String-\u003eString-\u003eString-\u003eByteString-\u003eMaybe ByteString",
        "package": "darcs",
        "partial": "Tok Replace",
        "signature": "String-\u003eString-\u003eString-\u003eByteString-\u003eMaybe ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:fromPrim",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "PrimOf p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#fromPrim",
        "fct-type": "function",
        "title": "fromPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "fromPrim",
        "normalized": "PrimOf a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Prim",
        "signature": "PrimOf p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:fromPrims",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL (PrimOf p) x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#fromPrims",
        "fct-type": "function",
        "title": "fromPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "fromPrims",
        "normalized": "FL(PrimOf a)b c-\u003ea b c",
        "package": "darcs",
        "partial": "Prims",
        "signature": "FL(PrimOf p)x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:getdeps",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e [PatchInfo]",
        "fct-source": "src/Darcs-Patch-Named.html#getdeps",
        "fct-type": "function",
        "title": "getdeps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "getdeps",
        "normalized": "Named a b c-\u003e[PatchInfo]",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003e[PatchInfo]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:gzWritePatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Patch-Show.html#gzWritePatch",
        "fct-type": "function",
        "title": "gzWritePatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "gzWritePatch",
        "normalized": "FilePath-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Write Patch",
        "signature": "FilePath-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:hunk",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e Int -\u003e [ByteString] -\u003e [ByteString] -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#hunk",
        "fct-type": "function",
        "title": "hunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "hunk",
        "normalized": "FilePath-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eInt-\u003e[ByteString]-\u003e[ByteString]-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:hunkMatches",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "(ByteString -\u003e Bool) -\u003e p x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Inspect.html#hunkMatches",
        "fct-type": "function",
        "title": "hunkMatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "hunkMatches",
        "normalized": "(ByteString-\u003eBool)-\u003ea b c-\u003eBool",
        "package": "darcs",
        "partial": "Matches",
        "signature": "(ByteString-\u003eBool)-\u003ep x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:infopatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "PatchInfo -\u003e FL p x y -\u003e Named p x y",
        "fct-source": "src/Darcs-Patch-Named.html#infopatch",
        "fct-type": "function",
        "title": "infopatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "infopatch",
        "normalized": "PatchInfo-\u003eFL a b c-\u003eNamed a b c",
        "package": "darcs",
        "partial": "",
        "signature": "PatchInfo-\u003eFL p x y-\u003eNamed p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:invert",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invert",
        "fct-type": "function",
        "title": "invert"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "invert",
        "normalized": "a b c-\u003ea c b",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003ep y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:invertFL",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e RL p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invertFL",
        "fct-type": "function",
        "title": "invertFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "invertFL",
        "normalized": "FL a b c-\u003eRL a c b",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL p x y-\u003eRL p y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:invertRL",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "RL p x y -\u003e FL p y x",
        "fct-source": "src/Darcs-Patch-Invert.html#invertRL",
        "fct-type": "function",
        "title": "invertRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "invertRL",
        "normalized": "RL a b c-\u003eFL a c b",
        "package": "darcs",
        "partial": "RL",
        "signature": "RL p x y-\u003eFL p y x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:isInconsistent",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Maybe Doc",
        "fct-source": "src/Darcs-Patch-Repair.html#isInconsistent",
        "fct-type": "function",
        "title": "isInconsistent"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "isInconsistent",
        "normalized": "a b c-\u003eMaybe Doc",
        "package": "darcs",
        "partial": "Inconsistent",
        "signature": "p x y-\u003eMaybe Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:joinPatches",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e p x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#joinPatches",
        "fct-type": "function",
        "title": "joinPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "joinPatches",
        "normalized": "FL a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Patches",
        "signature": "FL p x y-\u003ep x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:listConflictedFiles",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Conflict.html#listConflictedFiles",
        "fct-type": "function",
        "title": "listConflictedFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "listConflictedFiles",
        "normalized": "a b c-\u003e[FilePath]",
        "package": "darcs",
        "partial": "Conflicted Files",
        "signature": "p x y-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:listTouchedFiles",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [FilePath]",
        "fct-source": "src/Darcs-Patch-Inspect.html#listTouchedFiles",
        "fct-type": "function",
        "title": "listTouchedFiles"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "listTouchedFiles",
        "normalized": "a b c-\u003e[FilePath]",
        "package": "darcs",
        "partial": "Touched Files",
        "signature": "p x y-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:merge",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "(p :\\/: p) x y -\u003e (p :/\\: p) x y",
        "fct-source": "src/Darcs-Patch-Merge.html#merge",
        "fct-type": "function",
        "title": "merge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "merge",
        "normalized": "(a a)b c-\u003e(a a)b c",
        "package": "darcs",
        "partial": "",
        "signature": "(p p)x y-\u003e(p p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:move",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#move",
        "fct-type": "function",
        "title": "move"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "move",
        "normalized": "FilePath-\u003eFilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eFilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:namepatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e [String] -\u003e FL p x y -\u003e IO (Named p x y)",
        "fct-source": "src/Darcs-Patch-Named.html#namepatch",
        "fct-type": "function",
        "title": "namepatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "namepatch",
        "normalized": "String-\u003eString-\u003eString-\u003e[String]-\u003eFL a b c-\u003eIO(Named a b c)",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eString-\u003eString-\u003e[String]-\u003eFL p x y-\u003eIO(Named p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:patch2patchinfo",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e PatchInfo",
        "fct-source": "src/Darcs-Patch-Named.html#patch2patchinfo",
        "fct-type": "function",
        "title": "patch2patchinfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "patch2patchinfo",
        "normalized": "Named a b c-\u003ePatchInfo",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003ePatchInfo"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:patchcontents",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e FL p x y",
        "fct-source": "src/Darcs-Patch-Named.html#patchcontents",
        "fct-type": "function",
        "title": "patchcontents"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "patchcontents",
        "normalized": "Named a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003eFL p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:patchname",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "Named p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Named.html#patchname",
        "fct-type": "function",
        "title": "patchname"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "patchname",
        "normalized": "Named a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "Named p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:plainSummary",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "e x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#plainSummary",
        "fct-type": "function",
        "title": "plainSummary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "plainSummary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary",
        "signature": "e x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:plainSummaryPrims",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#plainSummaryPrims",
        "fct-type": "function",
        "title": "plainSummaryPrims"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "plainSummaryPrims",
        "normalized": "FL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary Prims",
        "signature": "FL prim x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:primIsAdddir",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsAdddir",
        "fct-type": "function",
        "title": "primIsAdddir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "primIsAdddir",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Adddir",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:primIsAddfile",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsAddfile",
        "fct-type": "function",
        "title": "primIsAddfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "primIsAddfile",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Addfile",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:primIsBinary",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsBinary",
        "fct-type": "function",
        "title": "primIsBinary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "primIsBinary",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Binary",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:primIsHunk",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsHunk",
        "fct-type": "function",
        "title": "primIsHunk"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "primIsHunk",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Hunk",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:primIsSetpref",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "prim x y -\u003e Bool",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#primIsSetpref",
        "fct-type": "function",
        "title": "primIsSetpref"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "primIsSetpref",
        "normalized": "a b c-\u003eBool",
        "package": "darcs",
        "partial": "Is Setpref",
        "signature": "prim x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:readPatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Maybe (Sealed (p x))",
        "fct-source": "src/Darcs-Patch-Read.html#readPatch",
        "fct-type": "function",
        "title": "readPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "readPatch",
        "normalized": "ByteString-\u003eMaybe(Sealed(a b))",
        "package": "darcs",
        "partial": "Patch",
        "signature": "ByteString-\u003eMaybe(Sealed(p x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:readPatchPartial",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Maybe (Sealed (p x), ByteString)",
        "fct-source": "src/Darcs-Patch-Read.html#readPatchPartial",
        "fct-type": "function",
        "title": "readPatchPartial"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "readPatchPartial",
        "normalized": "ByteString-\u003eMaybe(Sealed(a b),ByteString)",
        "package": "darcs",
        "partial": "Patch Partial",
        "signature": "ByteString-\u003eMaybe(Sealed(p x),ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:resolveConflicts",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e [[Sealed (FL (PrimOf p) y)]]",
        "fct-source": "src/Darcs-Patch-Conflict.html#resolveConflicts",
        "fct-type": "function",
        "title": "resolveConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "resolveConflicts",
        "normalized": "a b c-\u003e[[Sealed(FL(PrimOf a)c)]]",
        "package": "darcs",
        "partial": "Conflicts",
        "signature": "p x y-\u003e[[Sealed(FL(PrimOf p)y)]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:rmdir",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#rmdir",
        "fct-type": "function",
        "title": "rmdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "rmdir",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:rmfile",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#rmfile",
        "fct-type": "function",
        "title": "rmfile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "rmfile",
        "normalized": "FilePath-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:showContextPatch",
      "description": {
        "fct-descr": "\u003cp\u003eshowContextPatch is used to add context to a patch, as diff\n -u does. Thus, it differs from showPatch only for hunks. It is\n used for instance before putting it into a bundle. As this\n unified context is not included in patch representation, this\n requires access to the tree.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e m Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showContextPatch",
        "fct-type": "function",
        "title": "showContextPatch"
      },
      "index": {
        "description": "showContextPatch is used to add context to patch as diff does Thus it differs from showPatch only for hunks It is used for instance before putting it into bundle As this unified context is not included in patch representation this requires access to the tree",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "showContextPatch",
        "normalized": "a b c-\u003ed Doc",
        "package": "darcs",
        "partial": "Context Patch",
        "signature": "p x y-\u003em Doc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:showNicely",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showNicely",
        "fct-type": "function",
        "title": "showNicely"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "showNicely",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Nicely",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:showPatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#showPatch",
        "fct-type": "function",
        "title": "showPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "showPatch",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Patch",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:sortCoalesceFL",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esortCoalesceFL\u003c/a\u003e\u003c/code\u003e \u003ccode\u003eps\u003c/code\u003e coalesces as many patches in \u003ccode\u003eps\u003c/code\u003e as\n   possible, sorting the results in some standard order.\n\u003c/p\u003e",
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#sortCoalesceFL",
        "fct-type": "function",
        "title": "sortCoalesceFL"
      },
      "index": {
        "description": "sortCoalesceFL ps coalesces as many patches in ps as possible sorting the results in some standard order",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "sortCoalesceFL",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "Coalesce FL",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:summary",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#summary",
        "fct-type": "function",
        "title": "summary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "summary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:summaryFL",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Show.html#summaryFL",
        "fct-type": "function",
        "title": "summaryFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "summaryFL",
        "normalized": "FL a b c-\u003eDoc",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:thing",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Show.html#thing",
        "fct-type": "function",
        "title": "thing"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "thing",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:things",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e String",
        "fct-source": "src/Darcs-Patch-Show.html#things",
        "fct-type": "function",
        "title": "things"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "things",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "p x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:tokreplace",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e String -\u003e String -\u003e String -\u003e prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tokreplace",
        "fct-type": "function",
        "title": "tokreplace"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "tokreplace",
        "normalized": "FilePath-\u003eString-\u003eString-\u003eString-\u003ea b c",
        "package": "darcs",
        "partial": "",
        "signature": "FilePath-\u003eString-\u003eString-\u003eString-\u003eprim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:tryToShrink",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FL prim x y -\u003e FL prim x y",
        "fct-source": "src/Darcs-Patch-Prim-Class.html#tryToShrink",
        "fct-type": "function",
        "title": "tryToShrink"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "tryToShrink",
        "normalized": "FL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "To Shrink",
        "signature": "FL prim x y-\u003eFL prim x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:writePatch",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Patch-Show.html#writePatch",
        "fct-type": "function",
        "title": "writePatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "writePatch",
        "normalized": "FilePath-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Patch",
        "signature": "FilePath-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Patch.html#v:xmlSummary",
      "description": {
        "fct-module": "Darcs.Patch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e Doc",
        "fct-source": "src/Darcs-Patch-Summary.html#xmlSummary",
        "fct-type": "function",
        "title": "xmlSummary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Patch",
        "module": "Darcs.Patch",
        "name": "xmlSummary",
        "normalized": "a b c-\u003eDoc",
        "package": "darcs",
        "partial": "Summary",
        "signature": "p x y-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-PrintPatch.html#",
      "description": {
        "fct-module": "Darcs.PrintPatch",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-PrintPatch.html",
        "fct-type": "module",
        "title": "PrintPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs PrintPatch",
        "module": "Darcs.PrintPatch",
        "name": "PrintPatch",
        "normalized": "",
        "package": "darcs",
        "partial": "Print Patch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-PrintPatch.html#v:contextualPrintPatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003econtextualPrintPatch\u003c/a\u003e\u003c/code\u003e prints a patch, together with its context,\n on standard output.\n\u003c/p\u003e",
        "fct-module": "Darcs.PrintPatch",
        "fct-package": "darcs",
        "fct-signature": "Tree IO -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-PrintPatch.html#contextualPrintPatch",
        "fct-type": "function",
        "title": "contextualPrintPatch"
      },
      "index": {
        "description": "contextualPrintPatch prints patch together with its context on standard output",
        "hierarchy": "Darcs PrintPatch",
        "module": "Darcs.PrintPatch",
        "name": "contextualPrintPatch",
        "normalized": "Tree IO-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Print Patch",
        "signature": "Tree IO-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-PrintPatch.html#v:printFriendly",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003eprintFriendly\u003c/a\u003e\u003c/code\u003e opts patch\u003c/code\u003e prints \u003ccode\u003epatch\u003c/code\u003e in accordance with the\n flags in opts, ie, whether \u003ccode\u003e--verbose\u003c/code\u003e or \u003ccode\u003e--summary\u003c/code\u003e were passed at\n the command-line.\n\u003c/p\u003e",
        "fct-module": "Darcs.PrintPatch",
        "fct-package": "darcs",
        "fct-signature": "Maybe (Tree IO) -\u003e [DarcsFlag] -\u003e p x y -\u003e IO ()",
        "fct-source": "src/Darcs-PrintPatch.html#printFriendly",
        "fct-type": "function",
        "title": "printFriendly"
      },
      "index": {
        "description": "printFriendly opts patch prints patch in accordance with the flags in opts ie whether verbose or summary were passed at the command-line",
        "hierarchy": "Darcs PrintPatch",
        "module": "Darcs.PrintPatch",
        "name": "printFriendly",
        "normalized": "Maybe(Tree IO)-\u003e[DarcsFlag]-\u003ea b c-\u003eIO()",
        "package": "darcs",
        "partial": "Friendly",
        "signature": "Maybe(Tree IO)-\u003e[DarcsFlag]-\u003ep x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-PrintPatch.html#v:printPatch",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eprintPatch\u003c/a\u003e\u003c/code\u003e prints a patch on standard output.\n\u003c/p\u003e",
        "fct-module": "Darcs.PrintPatch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e IO ()",
        "fct-source": "src/Darcs-PrintPatch.html#printPatch",
        "fct-type": "function",
        "title": "printPatch"
      },
      "index": {
        "description": "printPatch prints patch on standard output",
        "hierarchy": "Darcs PrintPatch",
        "module": "Darcs.PrintPatch",
        "name": "printPatch",
        "normalized": "a b c-\u003eIO()",
        "package": "darcs",
        "partial": "Patch",
        "signature": "p x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-PrintPatch.html#v:printPatchPager",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eprintPatchPager\u003c/a\u003e\u003c/code\u003e runs '$PAGER' and shows a patch in it.\n\u003c/p\u003e",
        "fct-module": "Darcs.PrintPatch",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e IO ()",
        "fct-source": "src/Darcs-PrintPatch.html#printPatchPager",
        "fct-type": "function",
        "title": "printPatchPager"
      },
      "index": {
        "description": "printPatchPager runs PAGER and shows patch in it",
        "hierarchy": "Darcs PrintPatch",
        "module": "Darcs.PrintPatch",
        "name": "printPatchPager",
        "normalized": "a b c-\u003eIO()",
        "package": "darcs",
        "partial": "Patch Pager",
        "signature": "p x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ProgressPatches.html#",
      "description": {
        "fct-module": "Darcs.ProgressPatches",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-ProgressPatches.html",
        "fct-type": "module",
        "title": "ProgressPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs ProgressPatches",
        "module": "Darcs.ProgressPatches",
        "name": "ProgressPatches",
        "normalized": "",
        "package": "darcs",
        "partial": "Progress Patches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ProgressPatches.html#v:progressFL",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluate an \u003ccode\u003e\u003ca\u003eFL\u003c/a\u003e\u003c/code\u003e list and report progress.\n\u003c/p\u003e",
        "fct-module": "Darcs.ProgressPatches",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FL a x y -\u003e FL a x y",
        "fct-source": "src/Darcs-ProgressPatches.html#progressFL",
        "fct-type": "function",
        "title": "progressFL"
      },
      "index": {
        "description": "Evaluate an FL list and report progress",
        "hierarchy": "Darcs ProgressPatches",
        "module": "Darcs.ProgressPatches",
        "name": "progressFL",
        "normalized": "String-\u003eFL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "String-\u003eFL a x y-\u003eFL a x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ProgressPatches.html#v:progressRL",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluate an \u003ccode\u003e\u003ca\u003eRL\u003c/a\u003e\u003c/code\u003e list and report progress.\n\u003c/p\u003e",
        "fct-module": "Darcs.ProgressPatches",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e RL a x y -\u003e RL a x y",
        "fct-source": "src/Darcs-ProgressPatches.html#progressRL",
        "fct-type": "function",
        "title": "progressRL"
      },
      "index": {
        "description": "Evaluate an RL list and report progress",
        "hierarchy": "Darcs ProgressPatches",
        "module": "Darcs.ProgressPatches",
        "name": "progressRL",
        "normalized": "String-\u003eRL a b c-\u003eRL a b c",
        "package": "darcs",
        "partial": "RL",
        "signature": "String-\u003eRL a x y-\u003eRL a x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-ProgressPatches.html#v:progressRLShowTags",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluate an \u003ccode\u003e\u003ca\u003eRL\u003c/a\u003e\u003c/code\u003e list and report progress. In addition to printing\n the number of patches we got, show the name of the last tag we got.\n\u003c/p\u003e",
        "fct-module": "Darcs.ProgressPatches",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e RL (PatchInfoAnd p) x y -\u003e RL (PatchInfoAnd p) x y",
        "fct-source": "src/Darcs-ProgressPatches.html#progressRLShowTags",
        "fct-type": "function",
        "title": "progressRLShowTags"
      },
      "index": {
        "description": "Evaluate an RL list and report progress In addition to printing the number of patches we got show the name of the last tag we got",
        "hierarchy": "Darcs ProgressPatches",
        "module": "Darcs.ProgressPatches",
        "name": "progressRLShowTags",
        "normalized": "String-\u003eRL(PatchInfoAnd a)b c-\u003eRL(PatchInfoAnd a)b c",
        "package": "darcs",
        "partial": "RLShow Tags",
        "signature": "String-\u003eRL(PatchInfoAnd p)x y-\u003eRL(PatchInfoAnd p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RemoteApply.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module is used by the push and put commands to apply the a bundle to a\n remote repository. By remote I do not necessarily mean a repository on another\n machine, it is just not the repository we're located in.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.RemoteApply",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-RemoteApply.html",
        "fct-type": "module",
        "title": "RemoteApply"
      },
      "index": {
        "description": "This module is used by the push and put commands to apply the bundle to remote repository By remote do not necessarily mean repository on another machine it is just not the repository we re located in",
        "hierarchy": "Darcs RemoteApply",
        "module": "Darcs.RemoteApply",
        "name": "RemoteApply",
        "normalized": "",
        "package": "darcs",
        "partial": "Remote Apply",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RemoteApply.html#v:applyAs",
      "description": {
        "fct-module": "Darcs.RemoteApply",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e Maybe String",
        "fct-source": "src/Darcs-RemoteApply.html#applyAs",
        "fct-type": "function",
        "title": "applyAs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RemoteApply",
        "module": "Darcs.RemoteApply",
        "name": "applyAs",
        "normalized": "[DarcsFlag]-\u003eMaybe String",
        "package": "darcs",
        "partial": "As",
        "signature": "[DarcsFlag]-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RemoteApply.html#v:remoteApply",
      "description": {
        "fct-module": "Darcs.RemoteApply",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String -\u003e Doc -\u003e IO ExitCode",
        "fct-source": "src/Darcs-RemoteApply.html#remoteApply",
        "fct-type": "function",
        "title": "remoteApply"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RemoteApply",
        "module": "Darcs.RemoteApply",
        "name": "remoteApply",
        "normalized": "[DarcsFlag]-\u003eString-\u003eDoc-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Apply",
        "signature": "[DarcsFlag]-\u003eString-\u003eDoc-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVarious abstractions for dealing with paths.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-RepoPath.html",
        "fct-type": "module",
        "title": "RepoPath"
      },
      "index": {
        "description": "Various abstractions for dealing with paths",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "RepoPath",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#t:AbsoluteOrRemotePath",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-RepoPath.html#AbsoluteOrRemotePath",
        "fct-type": "data",
        "title": "AbsoluteOrRemotePath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "AbsoluteOrRemotePath",
        "normalized": "",
        "package": "darcs",
        "partial": "Absolute Or Remote Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#t:AbsolutePath",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-RepoPath.html#AbsolutePath",
        "fct-type": "data",
        "title": "AbsolutePath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "AbsolutePath",
        "normalized": "",
        "package": "darcs",
        "partial": "Absolute Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#t:AbsolutePathOrStd",
      "description": {
        "fct-descr": "\u003cp\u003eThis is for situations where a string (e.g. a command line argument)\n may take the value \"-\" to mean stdin or stdout (which one depends on\n context) instead of a normal file path.\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-RepoPath.html#AbsolutePathOrStd",
        "fct-type": "data",
        "title": "AbsolutePathOrStd"
      },
      "index": {
        "description": "This is for situations where string e.g command line argument may take the value to mean stdin or stdout which one depends on context instead of normal file path",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "AbsolutePathOrStd",
        "normalized": "",
        "package": "darcs",
        "partial": "Absolute Path Or Std",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#t:FilePathLike",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-RepoPath.html#FilePathLike",
        "fct-type": "class",
        "title": "FilePathLike"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "FilePathLike",
        "normalized": "",
        "package": "darcs",
        "partial": "File Path Like",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#t:FilePathOrURL",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-RepoPath.html#FilePathOrURL",
        "fct-type": "class",
        "title": "FilePathOrURL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "FilePathOrURL",
        "normalized": "",
        "package": "darcs",
        "partial": "File Path Or URL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#t:SubPath",
      "description": {
        "fct-descr": "\u003cp\u003ePaths which are relative to the local darcs repository and normalized.\n Note: These are understood not to have the dot in front.\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-RepoPath.html#SubPath",
        "fct-type": "data",
        "title": "SubPath"
      },
      "index": {
        "description": "Paths which are relative to the local darcs repository and normalized Note These are understood not to have the dot in front",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "SubPath",
        "normalized": "",
        "package": "darcs",
        "partial": "Sub Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:getCurrentDirectory",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "IO AbsolutePath",
        "fct-source": "src/Darcs-RepoPath.html#getCurrentDirectory",
        "fct-type": "function",
        "title": "getCurrentDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "getCurrentDirectory",
        "normalized": "",
        "package": "darcs",
        "partial": "Current Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:ioAbsolute",
      "description": {
        "fct-descr": "\u003cp\u003eInterpret a possibly relative path wrt the current working directory.\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO AbsolutePath",
        "fct-source": "src/Darcs-RepoPath.html#ioAbsolute",
        "fct-type": "function",
        "title": "ioAbsolute"
      },
      "index": {
        "description": "Interpret possibly relative path wrt the current working directory",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "ioAbsolute",
        "normalized": "FilePath-\u003eIO AbsolutePath",
        "package": "darcs",
        "partial": "Absolute",
        "signature": "FilePath-\u003eIO AbsolutePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:ioAbsoluteOrRemote",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO AbsoluteOrRemotePath",
        "fct-source": "src/Darcs-RepoPath.html#ioAbsoluteOrRemote",
        "fct-type": "function",
        "title": "ioAbsoluteOrRemote"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "ioAbsoluteOrRemote",
        "normalized": "String-\u003eIO AbsoluteOrRemotePath",
        "package": "darcs",
        "partial": "Absolute Or Remote",
        "signature": "String-\u003eIO AbsoluteOrRemotePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:ioAbsoluteOrStd",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO AbsolutePathOrStd",
        "fct-source": "src/Darcs-RepoPath.html#ioAbsoluteOrStd",
        "fct-type": "function",
        "title": "ioAbsoluteOrStd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "ioAbsoluteOrStd",
        "normalized": "String-\u003eIO AbsolutePathOrStd",
        "package": "darcs",
        "partial": "Absolute Or Std",
        "signature": "String-\u003eIO AbsolutePathOrStd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:isRemote",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "AbsoluteOrRemotePath -\u003e Bool",
        "fct-source": "src/Darcs-RepoPath.html#isRemote",
        "fct-type": "function",
        "title": "isRemote"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "isRemote",
        "normalized": "AbsoluteOrRemotePath-\u003eBool",
        "package": "darcs",
        "partial": "Remote",
        "signature": "AbsoluteOrRemotePath-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:makeAbsolute",
      "description": {
        "fct-descr": "\u003cp\u003eTake an absolute path and a string representing a (possibly relative)\n path and combine them into an absolute path. If the second argument is\n already absolute, then the first argument gets ignored. This function also\n takes care that the result is converted to Posix convention and\n normalized. Also, parent directories (\"..\") at the front of the string\n argument get canceled out against trailing directory parts of the\n absolute path argument.\n\u003c/p\u003e\u003cp\u003eRegarding the last point, someone more familiar with how these functions\n are used should verify that this is indeed necessary or at least useful.\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePath -\u003e FilePath -\u003e AbsolutePath",
        "fct-source": "src/Darcs-RepoPath.html#makeAbsolute",
        "fct-type": "function",
        "title": "makeAbsolute"
      },
      "index": {
        "description": "Take an absolute path and string representing possibly relative path and combine them into an absolute path If the second argument is already absolute then the first argument gets ignored This function also takes care that the result is converted to Posix convention and normalized Also parent directories at the front of the string argument get canceled out against trailing directory parts of the absolute path argument Regarding the last point someone more familiar with how these functions are used should verify that this is indeed necessary or at least useful",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "makeAbsolute",
        "normalized": "AbsolutePath-\u003eFilePath-\u003eAbsolutePath",
        "package": "darcs",
        "partial": "Absolute",
        "signature": "AbsolutePath-\u003eFilePath-\u003eAbsolutePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:makeAbsoluteOrStd",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePath -\u003e String -\u003e AbsolutePathOrStd",
        "fct-source": "src/Darcs-RepoPath.html#makeAbsoluteOrStd",
        "fct-type": "function",
        "title": "makeAbsoluteOrStd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "makeAbsoluteOrStd",
        "normalized": "AbsolutePath-\u003eString-\u003eAbsolutePathOrStd",
        "package": "darcs",
        "partial": "Absolute Or Std",
        "signature": "AbsolutePath-\u003eString-\u003eAbsolutePathOrStd"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:makeSubPathOf",
      "description": {
        "fct-descr": "\u003cp\u003eMake the second path relative to the first, if possible\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePath -\u003e AbsolutePath -\u003e Maybe SubPath",
        "fct-source": "src/Darcs-RepoPath.html#makeSubPathOf",
        "fct-type": "function",
        "title": "makeSubPathOf"
      },
      "index": {
        "description": "Make the second path relative to the first if possible",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "makeSubPathOf",
        "normalized": "AbsolutePath-\u003eAbsolutePath-\u003eMaybe SubPath",
        "package": "darcs",
        "partial": "Sub Path Of",
        "signature": "AbsolutePath-\u003eAbsolutePath-\u003eMaybe SubPath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:rootDirectory",
      "description": {
        "fct-descr": "\u003cp\u003eThe root directory as an absolute path.\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePath",
        "fct-source": "src/Darcs-RepoPath.html#rootDirectory",
        "fct-type": "function",
        "title": "rootDirectory"
      },
      "index": {
        "description": "The root directory as an absolute path",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "rootDirectory",
        "normalized": "",
        "package": "darcs",
        "partial": "Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:setCurrentDirectory",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO ()",
        "fct-source": "src/Darcs-RepoPath.html#setCurrentDirectory",
        "fct-type": "function",
        "title": "setCurrentDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "setCurrentDirectory",
        "normalized": "a-\u003eIO()",
        "package": "darcs",
        "partial": "Current Directory",
        "signature": "p-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:simpleSubPath",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e Maybe SubPath",
        "fct-source": "src/Darcs-RepoPath.html#simpleSubPath",
        "fct-type": "function",
        "title": "simpleSubPath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "simpleSubPath",
        "normalized": "FilePath-\u003eMaybe SubPath",
        "package": "darcs",
        "partial": "Sub Path",
        "signature": "FilePath-\u003eMaybe SubPath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:sp2fn",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "SubPath -\u003e FileName",
        "fct-source": "src/Darcs-RepoPath.html#sp2fn",
        "fct-type": "function",
        "title": "sp2fn"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "sp2fn",
        "normalized": "SubPath-\u003eFileName",
        "package": "darcs",
        "partial": "",
        "signature": "SubPath-\u003eFileName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:stdOut",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "AbsolutePathOrStd",
        "fct-source": "src/Darcs-RepoPath.html#stdOut",
        "fct-type": "function",
        "title": "stdOut"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "stdOut",
        "normalized": "",
        "package": "darcs",
        "partial": "Out",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:toFilePath",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e FilePath",
        "fct-source": "src/Darcs-RepoPath.html#toFilePath",
        "fct-type": "method",
        "title": "toFilePath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "toFilePath",
        "normalized": "a-\u003eFilePath",
        "package": "darcs",
        "partial": "File Path",
        "signature": "a-\u003eFilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:toPath",
      "description": {
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e String",
        "fct-source": "src/Darcs-RepoPath.html#toPath",
        "fct-type": "method",
        "title": "toPath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "toPath",
        "normalized": "a-\u003eString",
        "package": "darcs",
        "partial": "Path",
        "signature": "a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RepoPath.html#v:useAbsoluteOrStd",
      "description": {
        "fct-descr": "\u003cp\u003eExecute either the first or the second argument action, depending on\n whether the given path is an \u003ccode\u003e\u003ca\u003eAbsolutePath\u003c/a\u003e\u003c/code\u003e or stdin/stdout.\n\u003c/p\u003e",
        "fct-module": "Darcs.RepoPath",
        "fct-package": "darcs",
        "fct-signature": "(AbsolutePath -\u003e a) -\u003e a -\u003e AbsolutePathOrStd -\u003e a",
        "fct-source": "src/Darcs-RepoPath.html#useAbsoluteOrStd",
        "fct-type": "function",
        "title": "useAbsoluteOrStd"
      },
      "index": {
        "description": "Execute either the first or the second argument action depending on whether the given path is an AbsolutePath or stdin stdout",
        "hierarchy": "Darcs RepoPath",
        "module": "Darcs.RepoPath",
        "name": "useAbsoluteOrStd",
        "normalized": "(AbsolutePath-\u003ea)-\u003ea-\u003eAbsolutePathOrStd-\u003ea",
        "package": "darcs",
        "partial": "Absolute Or Std",
        "signature": "(AbsolutePath-\u003ea)-\u003ea-\u003eAbsolutePathOrStd-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-ApplyPatches.html#",
      "description": {
        "fct-module": "Darcs.Repository.ApplyPatches",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-ApplyPatches.html",
        "fct-type": "module",
        "title": "ApplyPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository ApplyPatches",
        "module": "Darcs.Repository.ApplyPatches",
        "name": "ApplyPatches",
        "normalized": "",
        "package": "darcs",
        "partial": "Apply Patches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-ApplyPatches.html#v:applyPatches",
      "description": {
        "fct-module": "Darcs.Repository.ApplyPatches",
        "fct-package": "darcs",
        "fct-signature": "FL (PatchInfoAnd p) x y -\u003e m ()",
        "fct-source": "src/Darcs-Repository-ApplyPatches.html#applyPatches",
        "fct-type": "function",
        "title": "applyPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository ApplyPatches",
        "module": "Darcs.Repository.ApplyPatches",
        "name": "applyPatches",
        "normalized": "FL(PatchInfoAnd a)b c-\u003ed()",
        "package": "darcs",
        "partial": "Patches",
        "signature": "FL(PatchInfoAnd p)x y-\u003em()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Cache.html",
        "fct-type": "module",
        "title": "Cache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Cache",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#t:Cache",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Repository-Cache.html#Cache",
        "fct-type": "newtype",
        "title": "Cache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Cache",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#t:CacheLoc",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "data",
        "title": "CacheLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "CacheLoc",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#t:CacheType",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheType",
        "fct-type": "data",
        "title": "CacheType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "CacheType",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#t:HashedDir",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "data",
        "title": "HashedDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "HashedDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#t:WritableOrNot",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#WritableOrNot",
        "fct-type": "data",
        "title": "WritableOrNot"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "WritableOrNot",
        "normalized": "",
        "package": "darcs",
        "partial": "Writable Or Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:Ca",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Ca [CacheLoc]",
        "fct-source": "src/Darcs-Repository-Cache.html#Cache",
        "fct-type": "function",
        "title": "Ca"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Ca",
        "normalized": "Ca[CacheLoc]",
        "package": "darcs",
        "partial": "Ca",
        "signature": "Ca[CacheLoc]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:Cache",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "Cache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Cache",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:Directory",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Directory",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheType",
        "fct-type": "function",
        "title": "Directory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Directory",
        "normalized": "",
        "package": "darcs",
        "partial": "Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:HashedInventoriesDir",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "HashedInventoriesDir",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "function",
        "title": "HashedInventoriesDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "HashedInventoriesDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Inventories Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:HashedPatchesDir",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "HashedPatchesDir",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "function",
        "title": "HashedPatchesDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "HashedPatchesDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Patches Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:HashedPristineDir",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "HashedPristineDir",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "function",
        "title": "HashedPristineDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "HashedPristineDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Pristine Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:NotWritable",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "NotWritable",
        "fct-source": "src/Darcs-Repository-Cache.html#WritableOrNot",
        "fct-type": "function",
        "title": "NotWritable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "NotWritable",
        "normalized": "",
        "package": "darcs",
        "partial": "Not Writable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:Repo",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Repo",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheType",
        "fct-type": "function",
        "title": "Repo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Repo",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:Writable",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Writable",
        "fct-source": "src/Darcs-Repository-Cache.html#WritableOrNot",
        "fct-type": "function",
        "title": "Writable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "Writable",
        "normalized": "",
        "package": "darcs",
        "partial": "Writable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:allHashedDirs",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "[HashedDir]",
        "fct-source": "src/Darcs-Repository-Cache.html#allHashedDirs",
        "fct-type": "function",
        "title": "allHashedDirs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "allHashedDirs",
        "normalized": "[HashedDir]",
        "package": "darcs",
        "partial": "Hashed Dirs",
        "signature": "[HashedDir]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:cacheHash",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecacheHash\u003c/a\u003e\u003c/code\u003e computes the cache hash (i.e. filename) of a packed string.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e String",
        "fct-source": "src/Darcs-Repository-Cache.html#cacheHash",
        "fct-type": "function",
        "title": "cacheHash"
      },
      "index": {
        "description": "cacheHash computes the cache hash i.e filename of packed string",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "cacheHash",
        "normalized": "ByteString-\u003eString",
        "package": "darcs",
        "partial": "Hash",
        "signature": "ByteString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:cacheSource",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "!String",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "cacheSource"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "cacheSource",
        "normalized": "",
        "package": "darcs",
        "partial": "Source",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:cacheType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "!CacheType",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "cacheType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "cacheType",
        "normalized": "",
        "package": "darcs",
        "partial": "Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:cacheWritable",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "!WritableOrNot",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "cacheWritable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "cacheWritable",
        "normalized": "",
        "package": "darcs",
        "partial": "Writable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:cleanCaches",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Cache.html#cleanCaches",
        "fct-type": "function",
        "title": "cleanCaches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "cleanCaches",
        "normalized": "Cache-\u003eHashedDir-\u003eIO()",
        "package": "darcs",
        "partial": "Caches",
        "signature": "Cache-\u003eHashedDir-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:cleanCachesWithHint",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Cache.html#cleanCachesWithHint",
        "fct-type": "function",
        "title": "cleanCachesWithHint"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "cleanCachesWithHint",
        "normalized": "Cache-\u003eHashedDir-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Caches With Hint",
        "signature": "Cache-\u003eHashedDir-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:compareByLocality",
      "description": {
        "fct-descr": "\u003cp\u003eCompares two caches, a remote cache is greater than a local one.\n The order of the comparison is given by: local \u003c http \u003c ssh\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "CacheLoc -\u003e CacheLoc -\u003e Ordering",
        "fct-source": "src/Darcs-Repository-Cache.html#compareByLocality",
        "fct-type": "function",
        "title": "compareByLocality"
      },
      "index": {
        "description": "Compares two caches remote cache is greater than local one The order of the comparison is given by local http ssh",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "compareByLocality",
        "normalized": "CacheLoc-\u003eCacheLoc-\u003eOrdering",
        "package": "darcs",
        "partial": "By Locality",
        "signature": "CacheLoc-\u003eCacheLoc-\u003eOrdering"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:fetchFileUsingCache",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003efetchFileUsingCache cache dir hash\u003c/code\u003e receives a list of caches\n  \u003ccode\u003ecache\u003c/code\u003e, the directory for which that file belongs \u003ccode\u003edir\u003c/code\u003e and the\n  \u003ccode\u003ehash\u003c/code\u003e of the file to fetch.  It tries to fetch the file from one\n  of the sources, trying them in order one by one.  If the file\n  cannot be fetched from any of the sources, this operation fails.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e String -\u003e IO (String, ByteString)",
        "fct-source": "src/Darcs-Repository-Cache.html#fetchFileUsingCache",
        "fct-type": "function",
        "title": "fetchFileUsingCache"
      },
      "index": {
        "description": "fetchFileUsingCache cache dir hash receives list of caches cache the directory for which that file belongs dir and the hash of the file to fetch It tries to fetch the file from one of the sources trying them in order one by one If the file cannot be fetched from any of the sources this operation fails",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "fetchFileUsingCache",
        "normalized": "Cache-\u003eHashedDir-\u003eString-\u003eIO(String,ByteString)",
        "package": "darcs",
        "partial": "File Using Cache",
        "signature": "Cache-\u003eHashedDir-\u003eString-\u003eIO(String,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:hashedDir",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "HashedDir -\u003e String",
        "fct-source": "src/Darcs-Repository-Cache.html#hashedDir",
        "fct-type": "function",
        "title": "hashedDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "hashedDir",
        "normalized": "HashedDir-\u003eString",
        "package": "darcs",
        "partial": "Dir",
        "signature": "HashedDir-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:hashedFilePath",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehashedFilePath cachelocation subdir hash\u003c/code\u003e returns the physical filename of\n hash \u003ccode\u003ehash\u003c/code\u003e in the \u003ccode\u003esubdir\u003c/code\u003e section of \u003ccode\u003ecachelocation\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "CacheLoc -\u003e HashedDir -\u003e String -\u003e String",
        "fct-source": "src/Darcs-Repository-Cache.html#hashedFilePath",
        "fct-type": "function",
        "title": "hashedFilePath"
      },
      "index": {
        "description": "hashedFilePath cachelocation subdir hash returns the physical filename of hash hash in the subdir section of cachelocation",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "hashedFilePath",
        "normalized": "CacheLoc-\u003eHashedDir-\u003eString-\u003eString",
        "package": "darcs",
        "partial": "File Path",
        "signature": "CacheLoc-\u003eHashedDir-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:isthisrepo",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "CacheLoc -\u003e Bool",
        "fct-source": "src/Darcs-Repository-Cache.html#isthisrepo",
        "fct-type": "function",
        "title": "isthisrepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "isthisrepo",
        "normalized": "CacheLoc-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "CacheLoc-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:okayHash",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-Repository-Cache.html#okayHash",
        "fct-type": "function",
        "title": "okayHash"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "okayHash",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Hash",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:peekInCache",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003epeekInCache cache subdir hash\u003c/code\u003e tells whether \u003ccode\u003ecache\u003c/code\u003e and\n contains an object with hash \u003ccode\u003ehash\u003c/code\u003e in a writable position.\n Florent: why do we want it to be in a writable position?\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e String -\u003e IO Bool",
        "fct-source": "src/Darcs-Repository-Cache.html#peekInCache",
        "fct-type": "function",
        "title": "peekInCache"
      },
      "index": {
        "description": "peekInCache cache subdir hash tells whether cache and contains an object with hash hash in writable position Florent why do we want it to be in writable position",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "peekInCache",
        "normalized": "Cache-\u003eHashedDir-\u003eString-\u003eIO Bool",
        "package": "darcs",
        "partial": "In Cache",
        "signature": "Cache-\u003eHashedDir-\u003eString-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:repo2cache",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Cache",
        "fct-source": "src/Darcs-Repository-Cache.html#repo2cache",
        "fct-type": "function",
        "title": "repo2cache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "repo2cache",
        "normalized": "String-\u003eCache",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eCache"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:reportBadSources",
      "description": {
        "fct-descr": "\u003cp\u003ePrints an error message with a list of bad caches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-Cache.html#reportBadSources",
        "fct-type": "function",
        "title": "reportBadSources"
      },
      "index": {
        "description": "Prints an error message with list of bad caches",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "reportBadSources",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Bad Sources",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:speculateFileUsingCache",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003especulateFileUsingCache cache subdirectory name\u003c/code\u003e takes note that\n the file \u003ccode\u003ename\u003c/code\u003e is likely to be useful soon: pipelined downloads\n will add it to the (low-priority) queue, for the rest it is a noop.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Cache.html#speculateFileUsingCache",
        "fct-type": "function",
        "title": "speculateFileUsingCache"
      },
      "index": {
        "description": "speculateFileUsingCache cache subdirectory name takes note that the file name is likely to be useful soon pipelined downloads will add it to the low-priority queue for the rest it is noop",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "speculateFileUsingCache",
        "normalized": "Cache-\u003eHashedDir-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "File Using Cache",
        "signature": "Cache-\u003eHashedDir-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:speculateFilesUsingCache",
      "description": {
        "fct-descr": "\u003cp\u003eNote that the files are likely to be useful soon: pipelined downloads will\n add them to the (low-priority) queue, for the rest it is a noop.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Cache.html#speculateFilesUsingCache",
        "fct-type": "function",
        "title": "speculateFilesUsingCache"
      },
      "index": {
        "description": "Note that the files are likely to be useful soon pipelined downloads will add them to the low-priority queue for the rest it is noop",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "speculateFilesUsingCache",
        "normalized": "Cache-\u003eHashedDir-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Files Using Cache",
        "signature": "Cache-\u003eHashedDir-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:takeHash",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Maybe (String, ByteString)",
        "fct-source": "src/Darcs-Repository-Cache.html#takeHash",
        "fct-type": "function",
        "title": "takeHash"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "takeHash",
        "normalized": "ByteString-\u003eMaybe(String,ByteString)",
        "package": "darcs",
        "partial": "Hash",
        "signature": "ByteString-\u003eMaybe(String,ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:unionCaches",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Cache -\u003e Cache",
        "fct-source": "src/Darcs-Repository-Cache.html#unionCaches",
        "fct-type": "function",
        "title": "unionCaches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "unionCaches",
        "normalized": "Cache-\u003eCache-\u003eCache",
        "package": "darcs",
        "partial": "Caches",
        "signature": "Cache-\u003eCache-\u003eCache"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:unionRemoteCaches",
      "description": {
        "fct-descr": "\u003cp\u003eunionRemoteCaches merges caches. It tries to do better than just blindly\n   copying remote cache entries:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e If remote repository is accessed through network, do not copy any cache\n     entries from it. Taking local entries does not make sense and using\n     network entries can lead to darcs hang when it tries to get to\n     unaccessible host.\n\u003c/li\u003e\u003cli\u003e If remote repositoty is local, copy all network cache entries. For local\n     cache entries if the cache directory exists and is writable it is added\n     as writable cache, if it exists but is not writable it is added as\n     read-only cache.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThis approach should save us from bogus cache entries. One case it does not\n   work very well is when you fetch from partial repository over network.\n   Hopefully this is not a common case.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Cache -\u003e String -\u003e IO Cache",
        "fct-source": "src/Darcs-Repository-Cache.html#unionRemoteCaches",
        "fct-type": "function",
        "title": "unionRemoteCaches"
      },
      "index": {
        "description": "unionRemoteCaches merges caches It tries to do better than just blindly copying remote cache entries If remote repository is accessed through network do not copy any cache entries from it Taking local entries does not make sense and using network entries can lead to darcs hang when it tries to get to unaccessible host If remote repositoty is local copy all network cache entries For local cache entries if the cache directory exists and is writable it is added as writable cache if it exists but is not writable it is added as read-only cache This approach should save us from bogus cache entries One case it does not work very well is when you fetch from partial repository over network Hopefully this is not common case",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "unionRemoteCaches",
        "normalized": "Cache-\u003eCache-\u003eString-\u003eIO Cache",
        "package": "darcs",
        "partial": "Remote Caches",
        "signature": "Cache-\u003eCache-\u003eString-\u003eIO Cache"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:writable",
      "description": {
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "CacheLoc -\u003e Bool",
        "fct-source": "src/Darcs-Repository-Cache.html#writable",
        "fct-type": "function",
        "title": "writable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "writable",
        "normalized": "CacheLoc-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "CacheLoc-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Cache.html#v:writeFileUsingCache",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewriteFileUsingCache cache compression subdir contents\u003c/code\u003e write the string \u003ccode\u003econtents\u003c/code\u003e to\n the directory subdir, except if it is already in the cache, in which case it is a noop.\n Warning (?) this means that in case of a hash collision, writing using writeFileUsingCache is\n a noop. The returned value is the filename that was given to the string.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Cache",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e HashedDir -\u003e ByteString -\u003e IO String",
        "fct-source": "src/Darcs-Repository-Cache.html#writeFileUsingCache",
        "fct-type": "function",
        "title": "writeFileUsingCache"
      },
      "index": {
        "description": "writeFileUsingCache cache compression subdir contents write the string contents to the directory subdir except if it is already in the cache in which case it is noop Warning this means that in case of hash collision writing using writeFileUsingCache is noop The returned value is the filename that was given to the string",
        "hierarchy": "Darcs Repository Cache",
        "module": "Darcs.Repository.Cache",
        "name": "writeFileUsingCache",
        "normalized": "Cache-\u003eCompression-\u003eHashedDir-\u003eByteString-\u003eIO String",
        "package": "darcs",
        "partial": "File Using Cache",
        "signature": "Cache-\u003eCompression-\u003eHashedDir-\u003eByteString-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Format.html",
        "fct-type": "module",
        "title": "Format"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "Format",
        "normalized": "",
        "package": "darcs",
        "partial": "Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#t:RepoFormat",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eRepoFormat\u003c/code\u003e is the representation of the format of a\n repository. Each sublist corresponds to a line in the format\n file. Each line is decomposed into words.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Repository-Format.html#RepoFormat",
        "fct-type": "newtype",
        "title": "RepoFormat"
      },
      "index": {
        "description": "RepoFormat is the representation of the format of repository Each sublist corresponds to line in the format file Each line is decomposed into words",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "RepoFormat",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Format",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#t:RepoProperty",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Format.html#RepoProperty",
        "fct-type": "data",
        "title": "RepoProperty"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "RepoProperty",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Property",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:Darcs1_0",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "Darcs1_0",
        "fct-source": "src/Darcs-Repository-Format.html#RepoProperty",
        "fct-type": "function",
        "title": "Darcs1_0"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "Darcs1_0",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:Darcs2",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "Darcs2",
        "fct-source": "src/Darcs-Repository-Format.html#RepoProperty",
        "fct-type": "function",
        "title": "Darcs2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "Darcs2",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:HashedInventory",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "HashedInventory",
        "fct-source": "src/Darcs-Repository-Format.html#RepoProperty",
        "fct-type": "function",
        "title": "HashedInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "HashedInventory",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Inventory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:NoWorkingDir",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "NoWorkingDir",
        "fct-source": "src/Darcs-Repository-Format.html#RepoProperty",
        "fct-type": "function",
        "title": "NoWorkingDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "NoWorkingDir",
        "normalized": "",
        "package": "darcs",
        "partial": "No Working Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:RF",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "RF [[ByteString]]",
        "fct-source": "src/Darcs-Repository-Format.html#RepoFormat",
        "fct-type": "function",
        "title": "RF"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "RF",
        "normalized": "RF[[ByteString]]",
        "package": "darcs",
        "partial": "RF",
        "signature": "RF[[ByteString]]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:createRepoFormat",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoFormat",
        "fct-source": "src/Darcs-Repository-Format.html#createRepoFormat",
        "fct-type": "function",
        "title": "createRepoFormat"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "createRepoFormat",
        "normalized": "[DarcsFlag]-\u003eRepoFormat",
        "package": "darcs",
        "partial": "Repo Format",
        "signature": "[DarcsFlag]-\u003eRepoFormat"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:formatHas",
      "description": {
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "RepoProperty -\u003e RepoFormat -\u003e Bool",
        "fct-source": "src/Darcs-Repository-Format.html#formatHas",
        "fct-type": "function",
        "title": "formatHas"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "formatHas",
        "normalized": "RepoProperty-\u003eRepoFormat-\u003eBool",
        "package": "darcs",
        "partial": "Has",
        "signature": "RepoProperty-\u003eRepoFormat-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:identifyRepoFormat",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eidentifyRepoFormat URL\u003c/code\u003e identifies the format of the repository\n at the given address. Fails if we weren't able to identify the format.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO RepoFormat",
        "fct-source": "src/Darcs-Repository-Format.html#identifyRepoFormat",
        "fct-type": "function",
        "title": "identifyRepoFormat"
      },
      "index": {
        "description": "identifyRepoFormat URL identifies the format of the repository at the given address Fails if we weren able to identify the format",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "identifyRepoFormat",
        "normalized": "String-\u003eIO RepoFormat",
        "package": "darcs",
        "partial": "Repo Format",
        "signature": "String-\u003eIO RepoFormat"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:readProblem",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ereadProblem form\u003c/code\u003e tells if we can read from a repo in format \u003ccode\u003eform\u003c/code\u003e.\n It returns \u003ccode\u003eNothing\u003c/code\u003e if there's no problem reading from such a repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "RepoFormat -\u003e Maybe String",
        "fct-source": "src/Darcs-Repository-Format.html#readProblem",
        "fct-type": "function",
        "title": "readProblem"
      },
      "index": {
        "description": "readProblem form tells if we can read from repo in format form It returns Nothing if there no problem reading from such repository",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "readProblem",
        "normalized": "RepoFormat-\u003eMaybe String",
        "package": "darcs",
        "partial": "Problem",
        "signature": "RepoFormat-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:readfromAndWritetoProblem",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ereadfromAndWritetoProblem form\u003c/code\u003e tells if we can read from and write to a repo in\n format \u003ccode\u003eform\u003c/code\u003e. It returns \u003ccode\u003eNothing\u003c/code\u003e if there's no problem reading\n and writing to such a repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "RepoFormat -\u003e RepoFormat -\u003e Maybe String",
        "fct-source": "src/Darcs-Repository-Format.html#readfromAndWritetoProblem",
        "fct-type": "function",
        "title": "readfromAndWritetoProblem"
      },
      "index": {
        "description": "readfromAndWritetoProblem form tells if we can read from and write to repo in format form It returns Nothing if there no problem reading and writing to such repository",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "readfromAndWritetoProblem",
        "normalized": "RepoFormat-\u003eRepoFormat-\u003eMaybe String",
        "package": "darcs",
        "partial": "And Writeto Problem",
        "signature": "RepoFormat-\u003eRepoFormat-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:tryIdentifyRepoFormat",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003etryIdentifyRepoFormat URL\u003c/code\u003e identifies the format of the repository\n at the given address. Return \u003ccode\u003eLeft reason\u003c/code\u003e if it fails, where\n \u003ccode\u003ereason\u003c/code\u003e explains why we weren't able to identify the format.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO (Either String RepoFormat)",
        "fct-source": "src/Darcs-Repository-Format.html#tryIdentifyRepoFormat",
        "fct-type": "function",
        "title": "tryIdentifyRepoFormat"
      },
      "index": {
        "description": "tryIdentifyRepoFormat URL identifies the format of the repository at the given address Return Left reason if it fails where reason explains why we weren able to identify the format",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "tryIdentifyRepoFormat",
        "normalized": "String-\u003eIO(Either String RepoFormat)",
        "package": "darcs",
        "partial": "Identify Repo Format",
        "signature": "String-\u003eIO(Either String RepoFormat)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:writeProblem",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewriteProblem form\u003c/code\u003e tells if we can write to a repo in format \u003ccode\u003eform\u003c/code\u003e.\n It returns \u003ccode\u003eNothing\u003c/code\u003e if there's no problem writing to such a repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "RepoFormat -\u003e Maybe String",
        "fct-source": "src/Darcs-Repository-Format.html#writeProblem",
        "fct-type": "function",
        "title": "writeProblem"
      },
      "index": {
        "description": "writeProblem form tells if we can write to repo in format form It returns Nothing if there no problem writing to such repository",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "writeProblem",
        "normalized": "RepoFormat-\u003eMaybe String",
        "package": "darcs",
        "partial": "Problem",
        "signature": "RepoFormat-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Format.html#v:writeRepoFormat",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewriteRepoFormat\u003c/code\u003e writes the repo format to the given file.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Format",
        "fct-package": "darcs",
        "fct-signature": "RepoFormat -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Format.html#writeRepoFormat",
        "fct-type": "function",
        "title": "writeRepoFormat"
      },
      "index": {
        "description": "writeRepoFormat writes the repo format to the given file",
        "hierarchy": "Darcs Repository Format",
        "module": "Darcs.Repository.Format",
        "name": "writeRepoFormat",
        "normalized": "RepoFormat-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Repo Format",
        "signature": "RepoFormat-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-HashedIO.html",
        "fct-type": "module",
        "title": "HashedIO"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "HashedIO",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed IO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#t:HashedIO",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Repository-HashedIO.html#HashedIO",
        "fct-type": "type",
        "title": "HashedIO"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "HashedIO",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed IO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#t:RW",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-HashedIO.html#RW",
        "fct-type": "data",
        "title": "RW"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "RW",
        "normalized": "",
        "package": "darcs",
        "partial": "RW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#v:RW",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "RW",
        "fct-source": "src/Darcs-Repository-HashedIO.html#RW",
        "fct-type": "function",
        "title": "RW"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "RW",
        "normalized": "",
        "package": "darcs",
        "partial": "RW",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#v:cleanHashdir",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e HashedDir -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedIO.html#cleanHashdir",
        "fct-type": "function",
        "title": "cleanHashdir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "cleanHashdir",
        "normalized": "Cache-\u003eHashedDir-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Hashdir",
        "signature": "Cache-\u003eHashedDir-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#v:copyHashed",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Cache -\u003e Compression -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedIO.html#copyHashed",
        "fct-type": "function",
        "title": "copyHashed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "copyHashed",
        "normalized": "String-\u003eCache-\u003eCompression-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Hashed",
        "signature": "String-\u003eCache-\u003eCompression-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedIO.html#v:copyPartialsHashed",
      "description": {
        "fct-module": "Darcs.Repository.HashedIO",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e String -\u003e [fp] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedIO.html#copyPartialsHashed",
        "fct-type": "function",
        "title": "copyPartialsHashed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedIO",
        "module": "Darcs.Repository.HashedIO",
        "name": "copyPartialsHashed",
        "normalized": "Cache-\u003eCompression-\u003eString-\u003e[a]-\u003eIO()",
        "package": "darcs",
        "partial": "Partials Hashed",
        "signature": "Cache-\u003eCompression-\u003eString-\u003e[fp]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-HashedRepo.html",
        "fct-type": "module",
        "title": "HashedRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "HashedRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:addToSpecificInventory",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Cache -\u003e Compression -\u003e PatchInfoAnd p x y -\u003e IO FilePath",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#addToSpecificInventory",
        "fct-type": "function",
        "title": "addToSpecificInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "addToSpecificInventory",
        "normalized": "String-\u003eCache-\u003eCompression-\u003ePatchInfoAnd a b c-\u003eIO FilePath",
        "package": "darcs",
        "partial": "To Specific Inventory",
        "signature": "String-\u003eCache-\u003eCompression-\u003ePatchInfoAnd p x y-\u003eIO FilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:addToTentativeInventory",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e PatchInfoAnd p x y -\u003e IO FilePath",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#addToTentativeInventory",
        "fct-type": "function",
        "title": "addToTentativeInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "addToTentativeInventory",
        "normalized": "Cache-\u003eCompression-\u003ePatchInfoAnd a b c-\u003eIO FilePath",
        "package": "darcs",
        "partial": "To Tentative Inventory",
        "signature": "Cache-\u003eCompression-\u003ePatchInfoAnd p x y-\u003eIO FilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:applyToTentativePristine",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "q x y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#applyToTentativePristine",
        "fct-type": "function",
        "title": "applyToTentativePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "applyToTentativePristine",
        "normalized": "a b c-\u003eIO()",
        "package": "darcs",
        "partial": "To Tentative Pristine",
        "signature": "q x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:cleanPristine",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#cleanPristine",
        "fct-type": "function",
        "title": "cleanPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "cleanPristine",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Pristine",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:copyPartialsPristine",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e String -\u003e String -\u003e [fp] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#copyPartialsPristine",
        "fct-type": "function",
        "title": "copyPartialsPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "copyPartialsPristine",
        "normalized": "Cache-\u003eCompression-\u003eString-\u003eString-\u003e[a]-\u003eIO()",
        "package": "darcs",
        "partial": "Partials Pristine",
        "signature": "Cache-\u003eCompression-\u003eString-\u003eString-\u003e[fp]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:copyPristine",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e String -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#copyPristine",
        "fct-type": "function",
        "title": "copyPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "copyPristine",
        "normalized": "Cache-\u003eCompression-\u003eString-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Pristine",
        "signature": "Cache-\u003eCompression-\u003eString-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:copyRepo",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e RemoteDarcs -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#copyRepo",
        "fct-type": "function",
        "title": "copyRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "copyRepo",
        "normalized": "Repository a b c d-\u003eRemoteDarcs-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Repo",
        "signature": "Repository p r u t-\u003eRemoteDarcs-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:copySources",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecopySources\u003c/a\u003e\u003c/code\u003e copies the prefs/sources file to the local repo, from the\n remote, having first filtered the local filesystem sources.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#copySources",
        "fct-type": "function",
        "title": "copySources"
      },
      "index": {
        "description": "copySources copies the prefs sources file to the local repo from the remote having first filtered the local filesystem sources",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "copySources",
        "normalized": "Repository a b c d-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Sources",
        "signature": "Repository p r u t-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:finalizeTentativeChanges",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#finalizeTentativeChanges",
        "fct-type": "function",
        "title": "finalizeTentativeChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "finalizeTentativeChanges",
        "normalized": "Repository a b c d-\u003eCompression-\u003eIO()",
        "package": "darcs",
        "partial": "Tentative Changes",
        "signature": "Repository p r u t-\u003eCompression-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:listInventories",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "IO [String]",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#listInventories",
        "fct-type": "function",
        "title": "listInventories"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "listInventories",
        "normalized": "IO[String]",
        "package": "darcs",
        "partial": "Inventories",
        "signature": "IO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:pris2inv",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e ByteString -\u003e Doc",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#pris2inv",
        "fct-type": "function",
        "title": "pris2inv"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "pris2inv",
        "normalized": "String-\u003eByteString-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eByteString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:readHashedPristineRoot",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Maybe String)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#readHashedPristineRoot",
        "fct-type": "function",
        "title": "readHashedPristineRoot"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "readHashedPristineRoot",
        "normalized": "Repository a b c d-\u003eIO(Maybe String)",
        "package": "darcs",
        "partial": "Hashed Pristine Root",
        "signature": "Repository p r u t-\u003eIO(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:readPatchIds",
      "description": {
        "fct-descr": "\u003cp\u003e'readPatchIds inventory' parses the content of a hashed_inventory file\n after the \u003ca\u003epristine:\u003c/a\u003e and \u003ca\u003eStarting with inventory:\u003c/a\u003e header lines have\n been removed.  The second value in the resulting tuples is the file hash\n of the associated patch (the \u003ca\u003ehash:\u003c/a\u003e line).\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e [(PatchInfo, String)]",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#readPatchIds",
        "fct-type": "function",
        "title": "readPatchIds"
      },
      "index": {
        "description": "readPatchIds inventory parses the content of hashed inventory file after the pristine and Starting with inventory header lines have been removed The second value in the resulting tuples is the file hash of the associated patch the hash line",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "readPatchIds",
        "normalized": "ByteString-\u003e[(PatchInfo,String)]",
        "package": "darcs",
        "partial": "Patch Ids",
        "signature": "ByteString-\u003e[(PatchInfo,String)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:readRepo",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e IO (PatchSet p Origin r)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#readRepo",
        "fct-type": "function",
        "title": "readRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "readRepo",
        "normalized": "Repository a b c d-\u003eString-\u003eIO(PatchSet a Origin b)",
        "package": "darcs",
        "partial": "Repo",
        "signature": "Repository p r u t-\u003eString-\u003eIO(PatchSet p Origin r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:readRepoFromInventoryList",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e (Maybe String, [(PatchInfo, String)]) -\u003e IO (SealedPatchSet p Origin)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#readRepoFromInventoryList",
        "fct-type": "function",
        "title": "readRepoFromInventoryList"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "readRepoFromInventoryList",
        "normalized": "Cache-\u003e(Maybe String,[(PatchInfo,String)])-\u003eIO(SealedPatchSet a Origin)",
        "package": "darcs",
        "partial": "Repo From Inventory List",
        "signature": "Cache-\u003e(Maybe String,[(PatchInfo,String)])-\u003eIO(SealedPatchSet p Origin)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:readRepoUsingSpecificInventory",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Repository p r u t -\u003e String -\u003e IO (PatchSet p Origin s)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#readRepoUsingSpecificInventory",
        "fct-type": "function",
        "title": "readRepoUsingSpecificInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "readRepoUsingSpecificInventory",
        "normalized": "String-\u003eRepository a b c d-\u003eString-\u003eIO(PatchSet a Origin e)",
        "package": "darcs",
        "partial": "Repo Using Specific Inventory",
        "signature": "String-\u003eRepository p r u t-\u003eString-\u003eIO(PatchSet p Origin s)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:readTentativeRepo",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e IO (PatchSet p Origin t)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#readTentativeRepo",
        "fct-type": "function",
        "title": "readTentativeRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "readTentativeRepo",
        "normalized": "Repository a b c d-\u003eString-\u003eIO(PatchSet a Origin d)",
        "package": "darcs",
        "partial": "Tentative Repo",
        "signature": "Repository p r u t-\u003eString-\u003eIO(PatchSet p Origin t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:removeFromTentativeInventory",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e FL (PatchInfoAnd p) x t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#removeFromTentativeInventory",
        "fct-type": "function",
        "title": "removeFromTentativeInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "removeFromTentativeInventory",
        "normalized": "Repository a b c d-\u003eCompression-\u003eFL(PatchInfoAnd a)e d-\u003eIO()",
        "package": "darcs",
        "partial": "From Tentative Inventory",
        "signature": "Repository p r u t-\u003eCompression-\u003eFL(PatchInfoAnd p)x t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:revertTentativeChanges",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#revertTentativeChanges",
        "fct-type": "function",
        "title": "revertTentativeChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "revertTentativeChanges",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Tentative Changes",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:writeAndReadPatch",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e PatchInfoAnd p x y -\u003e IO (PatchInfoAnd p x y)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#writeAndReadPatch",
        "fct-type": "function",
        "title": "writeAndReadPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "writeAndReadPatch",
        "normalized": "Cache-\u003eCompression-\u003ePatchInfoAnd a b c-\u003eIO(PatchInfoAnd a b c)",
        "package": "darcs",
        "partial": "And Read Patch",
        "signature": "Cache-\u003eCompression-\u003ePatchInfoAnd p x y-\u003eIO(PatchInfoAnd p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:writePatchIfNecessary",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e PatchInfoAnd p x y -\u003e IO (PatchInfo, String)",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#writePatchIfNecessary",
        "fct-type": "function",
        "title": "writePatchIfNecessary"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "writePatchIfNecessary",
        "normalized": "Cache-\u003eCompression-\u003ePatchInfoAnd a b c-\u003eIO(PatchInfo,String)",
        "package": "darcs",
        "partial": "Patch If Necessary",
        "signature": "Cache-\u003eCompression-\u003ePatchInfoAnd p x y-\u003eIO(PatchInfo,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-HashedRepo.html#v:writeTentativeInventory",
      "description": {
        "fct-module": "Darcs.Repository.HashedRepo",
        "fct-package": "darcs",
        "fct-signature": "Cache -\u003e Compression -\u003e PatchSet p Origin x -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-HashedRepo.html#writeTentativeInventory",
        "fct-type": "function",
        "title": "writeTentativeInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository HashedRepo",
        "module": "Darcs.Repository.HashedRepo",
        "name": "writeTentativeInventory",
        "normalized": "Cache-\u003eCompression-\u003ePatchSet a Origin b-\u003eIO()",
        "package": "darcs",
        "partial": "Tentative Inventory",
        "signature": "Cache-\u003eCompression-\u003ePatchSet p Origin x-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Internal.html",
        "fct-type": "module",
        "title": "Internal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "Internal",
        "normalized": "",
        "package": "darcs",
        "partial": "Internal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:IdentifyRepo",
      "description": {
        "fct-descr": "\u003cp\u003eThe status of a given directory: is it a darcs repository?\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Internal.html#IdentifyRepo",
        "fct-type": "data",
        "title": "IdentifyRepo"
      },
      "index": {
        "description": "The status of given directory is it darcs repository",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "IdentifyRepo",
        "normalized": "",
        "package": "darcs",
        "partial": "Identify Repo",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:MakeChanges",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Internal.html#MakeChanges",
        "fct-type": "data",
        "title": "MakeChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "MakeChanges",
        "normalized": "",
        "package": "darcs",
        "partial": "Make Changes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:RIO",
      "description": {
        "fct-descr": "\u003cp\u003eRepository IO monad.  This monad-like datatype is responsible for\n sequencing IO actions that modify the tentative recorded state of\n the repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Internal.html#RIO",
        "fct-type": "data",
        "title": "RIO"
      },
      "index": {
        "description": "Repository IO monad This monad-like datatype is responsible for sequencing IO actions that modify the tentative recorded state of the repository",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "RIO",
        "normalized": "",
        "package": "darcs",
        "partial": "RIO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:RepoJob",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "data",
        "title": "RepoJob"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "RepoJob",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Job",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:RepoType",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#RepoType",
        "fct-type": "data",
        "title": "RepoType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "RepoType",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:Repository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Repository",
        "fct-type": "data",
        "title": "Repository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "Repository",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#t:UpdatePristine",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Internal.html#UpdatePristine",
        "fct-type": "data",
        "title": "UpdatePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "UpdatePristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Update Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:BadRepository",
      "description": {
        "fct-descr": "\u003cp\u003elooks like a repository with some error\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "BadRepository String",
        "fct-source": "src/Darcs-Repository-Internal.html#IdentifyRepo",
        "fct-type": "function",
        "title": "BadRepository"
      },
      "index": {
        "description": "looks like repository with some error",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "BadRepository",
        "normalized": "",
        "package": "darcs",
        "partial": "Bad Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:DarcsRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "DarcsRepository !Pristine Cache",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#RepoType",
        "fct-type": "function",
        "title": "DarcsRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "DarcsRepository",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:DontMakeChanges",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "DontMakeChanges",
        "fct-source": "src/Darcs-Repository-Internal.html#MakeChanges",
        "fct-type": "function",
        "title": "DontMakeChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "DontMakeChanges",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Make Changes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:DontUpdatePristine",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "DontUpdatePristine",
        "fct-source": "src/Darcs-Repository-Internal.html#UpdatePristine",
        "fct-type": "function",
        "title": "DontUpdatePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "DontUpdatePristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Dont Update Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:GoodRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "GoodRepository (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#IdentifyRepo",
        "fct-type": "function",
        "title": "GoodRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "GoodRepository",
        "normalized": "",
        "package": "darcs",
        "partial": "Good Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:MakeChanges",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "MakeChanges",
        "fct-source": "src/Darcs-Repository-Internal.html#MakeChanges",
        "fct-type": "function",
        "title": "MakeChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "MakeChanges",
        "normalized": "",
        "package": "darcs",
        "partial": "Make Changes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:NonRepository",
      "description": {
        "fct-descr": "\u003cp\u003esafest guess\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "NonRepository String",
        "fct-source": "src/Darcs-Repository-Internal.html#IdentifyRepo",
        "fct-type": "function",
        "title": "NonRepository"
      },
      "index": {
        "description": "safest guess",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "NonRepository",
        "normalized": "",
        "package": "darcs",
        "partial": "Non Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:PrimV1Job",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "PrimV1Job"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "PrimV1Job",
        "normalized": "Repository a b c b-\u003eIO d)",
        "package": "darcs",
        "partial": "Prim Job",
        "signature": "Repository p r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:Repo",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repo !String ![DarcsFlag] !RepoFormat !(RepoType p)",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Repository",
        "fct-type": "function",
        "title": "Repo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "Repo",
        "normalized": "Repo String[DarcsFlag]RepoFormat(RepoType a)",
        "package": "darcs",
        "partial": "Repo",
        "signature": "Repo String[DarcsFlag]RepoFormat(RepoType p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:RepoJob",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "RepoJob"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "RepoJob",
        "normalized": "Repository a b c b-\u003eIO d)",
        "package": "darcs",
        "partial": "Repo Job",
        "signature": "Repository p r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:UpdatePristine",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "UpdatePristine",
        "fct-source": "src/Darcs-Repository-Internal.html#UpdatePristine",
        "fct-type": "function",
        "title": "UpdatePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "UpdatePristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Update Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:V1Job",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "V1Job (forall r u.  Repository (Patch Prim) r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "V1Job"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "V1Job",
        "normalized": "V Job(a b c Repository(Patch Prim)b d b-\u003eIO e)",
        "package": "darcs",
        "partial": "Job",
        "signature": "V Job(forall r u. Repository(Patch Prim)r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:V2Job",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "V2Job (forall r u.  Repository (RealPatch Prim) r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "V2Job"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "V2Job",
        "normalized": "V Job(a b c Repository(RealPatch Prim)b d b-\u003eIO e)",
        "package": "darcs",
        "partial": "Job",
        "signature": "V Job(forall r u. Repository(RealPatch Prim)r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:amInHashedRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#amInHashedRepository",
        "fct-type": "function",
        "title": "amInHashedRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "amInHashedRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "In Hashed Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:amInRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#amInRepository",
        "fct-type": "function",
        "title": "amInRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "amInRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "In Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:amNotInRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#amNotInRepository",
        "fct-type": "function",
        "title": "amNotInRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "amNotInRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "Not In Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:announceMergeConflicts",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [DarcsFlag] -\u003e FL p x y -\u003e IO Bool",
        "fct-source": "src/Darcs-Repository-Internal.html#announceMergeConflicts",
        "fct-type": "function",
        "title": "announceMergeConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "announceMergeConflicts",
        "normalized": "String-\u003e[DarcsFlag]-\u003eFL a b c-\u003eIO Bool",
        "package": "darcs",
        "partial": "Merge Conflicts",
        "signature": "String-\u003e[DarcsFlag]-\u003eFL p x y-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:applyToTentativePristine",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e q t y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#applyToTentativePristine",
        "fct-type": "function",
        "title": "applyToTentativePristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "applyToTentativePristine",
        "normalized": "Repository a b c d-\u003ee d f-\u003eIO()",
        "package": "darcs",
        "partial": "To Tentative Pristine",
        "signature": "Repository p r u t-\u003eq t y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:applyToWorking",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e FL (PrimOf p) u y -\u003e IO (Repository p r y t)",
        "fct-source": "src/Darcs-Repository-Internal.html#applyToWorking",
        "fct-type": "function",
        "title": "applyToWorking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "applyToWorking",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eFL(PrimOf a)c e-\u003eIO(Repository a b e d)",
        "package": "darcs",
        "partial": "To Working",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eFL(PrimOf p)u y-\u003eIO(Repository p r y t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:checkUnrecordedConflicts",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e FL (Named p) t y -\u003e IO Bool",
        "fct-source": "src/Darcs-Repository-Internal.html#checkUnrecordedConflicts",
        "fct-type": "function",
        "title": "checkUnrecordedConflicts"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "checkUnrecordedConflicts",
        "normalized": "[DarcsFlag]-\u003eFL(Named a)b c-\u003eIO Bool",
        "package": "darcs",
        "partial": "Unrecorded Conflicts",
        "signature": "[DarcsFlag]-\u003eFL(Named p)t y-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:cleanRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#cleanRepository",
        "fct-type": "function",
        "title": "cleanRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "cleanRepository",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Repository",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:createPartialsPristineDirectoryTree",
      "description": {
        "fct-descr": "\u003cp\u003eUsed by the commands dist and diff\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [fp] -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#createPartialsPristineDirectoryTree",
        "fct-type": "function",
        "title": "createPartialsPristineDirectoryTree"
      },
      "index": {
        "description": "Used by the commands dist and diff",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "createPartialsPristineDirectoryTree",
        "normalized": "Repository a b c d-\u003e[e]-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Partials Pristine Directory Tree",
        "signature": "Repository p r u t-\u003e[fp]-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:createPristineDirectoryTree",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#createPristineDirectoryTree",
        "fct-type": "function",
        "title": "createPristineDirectoryTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "createPristineDirectoryTree",
        "normalized": "Repository a b c d-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Pristine Directory Tree",
        "signature": "Repository p r u t-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:finalizeRepositoryChanges",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#finalizeRepositoryChanges",
        "fct-type": "function",
        "title": "finalizeRepositoryChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "finalizeRepositoryChanges",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Repository Changes",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:findRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#findRepository",
        "fct-type": "function",
        "title": "findRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "findRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:getRepository",
      "description": {
        "fct-descr": "\u003cp\u003eSimilar to the \u003ccode\u003eask\u003c/code\u003e function of the MonadReader class.\n This allows actions in the RIO monad to get the current\n repository.\n FIXME: Don't export this.  If we don't export this\n it makes it harder for arbitrary IO actions to access\n the repository and hence our code is easier to audit.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "RIO p r u t t (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#getRepository",
        "fct-type": "function",
        "title": "getRepository"
      },
      "index": {
        "description": "Similar to the ask function of the MonadReader class This allows actions in the RIO monad to get the current repository FIXME Don export this If we don export this it makes it harder for arbitrary IO actions to access the repository and hence our code is easier to audit",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "getRepository",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:identifyDarcsRepository",
      "description": {
        "fct-descr": "\u003cp\u003eidentifyDarcsRepository identifies the repo at \u003ccode\u003eurl\u003c/code\u003e. Warning:\n you have to know what kind of patches are found in that repo.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "forall p r u t.  [DarcsFlag] -\u003e String -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#identifyDarcsRepository",
        "fct-type": "function",
        "title": "identifyDarcsRepository"
      },
      "index": {
        "description": "identifyDarcsRepository identifies the repo at url Warning you have to know what kind of patches are found in that repo",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "identifyDarcsRepository",
        "normalized": "a b c d e[DarcsFlag]-\u003eString-\u003eIO(Repository b c d f)",
        "package": "darcs",
        "partial": "Darcs Repository",
        "signature": "forall p r u t.[DarcsFlag]-\u003eString-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:identifyRepositoryFor",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eidentifyRepositoryFor repo url\u003c/code\u003e identifies (and returns) the repo at \u003ccode\u003eurl\u003c/code\u003e,\n but fails if it is not compatible for reading from and writing to.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#identifyRepositoryFor",
        "fct-type": "function",
        "title": "identifyRepositoryFor"
      },
      "index": {
        "description": "identifyRepositoryFor repo url identifies and returns the repo at url but fails if it is not compatible for reading from and writing to",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "identifyRepositoryFor",
        "normalized": "Repository a b c d-\u003eString-\u003eIO(Repository a b c d)",
        "package": "darcs",
        "partial": "Repository For",
        "signature": "Repository p r u t-\u003eString-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:makeNewPending",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) t y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#makeNewPending",
        "fct-type": "function",
        "title": "makeNewPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "makeNewPending",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)d e-\u003eIO()",
        "package": "darcs",
        "partial": "New Pending",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)t y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:makePatchLazy",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e PatchInfoAnd p x y -\u003e IO (PatchInfoAnd p x y)",
        "fct-source": "src/Darcs-Repository-Internal.html#makePatchLazy",
        "fct-type": "function",
        "title": "makePatchLazy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "makePatchLazy",
        "normalized": "Repository a b c d-\u003ePatchInfoAnd a e f-\u003eIO(PatchInfoAnd a e f)",
        "package": "darcs",
        "partial": "Patch Lazy",
        "signature": "Repository p r u t-\u003ePatchInfoAnd p x y-\u003eIO(PatchInfoAnd p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:maybeIdentifyRepository",
      "description": {
        "fct-descr": "\u003cp\u003eTries to identify the repository in a given directory\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String -\u003e IO (IdentifyRepo p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#maybeIdentifyRepository",
        "fct-type": "function",
        "title": "maybeIdentifyRepository"
      },
      "index": {
        "description": "Tries to identify the repository in given directory",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "maybeIdentifyRepository",
        "normalized": "[DarcsFlag]-\u003eString-\u003eIO(IdentifyRepo a b c d)",
        "package": "darcs",
        "partial": "Identify Repository",
        "signature": "[DarcsFlag]-\u003eString-\u003eIO(IdentifyRepo p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:optimizeInventory",
      "description": {
        "fct-descr": "\u003cp\u003eWrites out a fresh copy of the inventory that minimizes the\n amount of inventory that need be downloaded when people pull from\n the repository.\n\u003c/p\u003e\u003cp\u003eSpecifically, it breaks up the inventory on the most recent tag.\n This speeds up most commands when run remotely, both because a\n smaller file needs to be transfered (only the most recent\n inventory).  It also gives a guarantee that all the patches prior\n to a given tag are included in that tag, so less commutation and\n history traversal is needed.  This latter issue can become very\n important in large repositories.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#optimizeInventory",
        "fct-type": "function",
        "title": "optimizeInventory"
      },
      "index": {
        "description": "Writes out fresh copy of the inventory that minimizes the amount of inventory that need be downloaded when people pull from the repository Specifically it breaks up the inventory on the most recent tag This speeds up most commands when run remotely both because smaller file needs to be transfered only the most recent inventory It also gives guarantee that all the patches prior to given tag are included in that tag so less commutation and history traversal is needed This latter issue can become very important in large repositories",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "optimizeInventory",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Inventory",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:patchSetToPatches",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p x y -\u003e FL (Named p) x y",
        "fct-source": "src/Darcs-Repository-Internal.html#patchSetToPatches",
        "fct-type": "function",
        "title": "patchSetToPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "patchSetToPatches",
        "normalized": "PatchSet a b c-\u003eFL(Named a)b c",
        "package": "darcs",
        "partial": "Set To Patches",
        "signature": "PatchSet p x y-\u003eFL(Named p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:prefsUrl",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String",
        "fct-source": "src/Darcs-Repository-Internal.html#prefsUrl",
        "fct-type": "function",
        "title": "prefsUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "prefsUrl",
        "normalized": "Repository a b c d-\u003eString",
        "package": "darcs",
        "partial": "Url",
        "signature": "Repository p r u t-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:rIO",
      "description": {
        "fct-descr": "\u003cp\u003eThis the \u003ccode\u003eRIO\u003c/code\u003e equivalent of \u003ccode\u003eliftIO\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e RIO p r u t t a",
        "fct-source": "src/Darcs-Repository-Internal.html#rIO",
        "fct-type": "function",
        "title": "rIO"
      },
      "index": {
        "description": "This the RIO equivalent of liftIO",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "rIO",
        "normalized": "IO a-\u003eRIO b c d e e a",
        "package": "darcs",
        "partial": "IO",
        "signature": "IO a-\u003eRIO p r u t t a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:readRepo",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (PatchSet p Origin r)",
        "fct-source": "src/Darcs-Repository-Internal.html#readRepo",
        "fct-type": "function",
        "title": "readRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "readRepo",
        "normalized": "Repository a b c d-\u003eIO(PatchSet a Origin b)",
        "package": "darcs",
        "partial": "Repo",
        "signature": "Repository p r u t-\u003eIO(PatchSet p Origin r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:readRepoUsingSpecificInventory",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Repository p r u t -\u003e IO (PatchSet p Origin t)",
        "fct-source": "src/Darcs-Repository-Internal.html#readRepoUsingSpecificInventory",
        "fct-type": "function",
        "title": "readRepoUsingSpecificInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "readRepoUsingSpecificInventory",
        "normalized": "String-\u003eRepository a b c d-\u003eIO(PatchSet a Origin d)",
        "package": "darcs",
        "partial": "Repo Using Specific Inventory",
        "signature": "String-\u003eRepository p r u t-\u003eIO(PatchSet p Origin t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:readTentativeRepo",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (PatchSet p Origin t)",
        "fct-source": "src/Darcs-Repository-Internal.html#readTentativeRepo",
        "fct-type": "function",
        "title": "readTentativeRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "readTentativeRepo",
        "normalized": "Repository a b c d-\u003eIO(PatchSet a Origin d)",
        "package": "darcs",
        "partial": "Tentative Repo",
        "signature": "Repository p r u t-\u003eIO(PatchSet p Origin t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:revertRepositoryChanges",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#revertRepositoryChanges",
        "fct-type": "function",
        "title": "revertRepositoryChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "revertRepositoryChanges",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Repository Changes",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:seekRepo",
      "description": {
        "fct-descr": "\u003cp\u003ehunt upwards for the darcs repository\n This keeps changing up one parent directory, testing at each\n step if the current directory is a repository or not.  $\n The result is:\n   Nothing, if no repository found\n   Just (Left errorMessage), if bad repository found\n   Just (Right ()), if good repository found.\n WARNING this changes the current directory for good if matchFn succeeds\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "IO (Maybe (Either String ()))",
        "fct-source": "src/Darcs-Repository-Internal.html#seekRepo",
        "fct-type": "function",
        "title": "seekRepo"
      },
      "index": {
        "description": "hunt upwards for the darcs repository This keeps changing up one parent directory testing at each step if the current directory is repository or not The result is Nothing if no repository found Just Left errorMessage if bad repository found Just Right if good repository found WARNING this changes the current directory for good if matchFn succeeds",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "seekRepo",
        "normalized": "IO(Maybe(Either String()))",
        "package": "darcs",
        "partial": "Repo",
        "signature": "IO(Maybe(Either String()))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:setScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#setScriptsExecutable",
        "fct-type": "function",
        "title": "setScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "setScriptsExecutable",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Scripts Executable",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:setScriptsExecutablePatches",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#setScriptsExecutablePatches",
        "fct-type": "function",
        "title": "setScriptsExecutablePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "setScriptsExecutablePatches",
        "normalized": "a b c-\u003eIO()",
        "package": "darcs",
        "partial": "Scripts Executable Patches",
        "signature": "p x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:setTentativePending",
      "description": {
        "fct-descr": "\u003cp\u003esetTentativePending is basically unsafe.  It overwrites the pending state with a new one, not related to\n the repository state.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) x y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#setTentativePending",
        "fct-type": "function",
        "title": "setTentativePending"
      },
      "index": {
        "description": "setTentativePending is basically unsafe It overwrites the pending state with new one not related to the repository state",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "setTentativePending",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)e f-\u003eIO()",
        "package": "darcs",
        "partial": "Tentative Pending",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:tentativelyAddPatch",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e PatchInfoAnd p t y -\u003e IO (Repository p r u y)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyAddPatch",
        "fct-type": "function",
        "title": "tentativelyAddPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "tentativelyAddPatch",
        "normalized": "Repository a b c d-\u003eCompression-\u003ePatchInfoAnd a d e-\u003eIO(Repository a b c e)",
        "package": "darcs",
        "partial": "Add Patch",
        "signature": "Repository p r u t-\u003eCompression-\u003ePatchInfoAnd p t y-\u003eIO(Repository p r u y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:tentativelyAddPatch_",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "UpdatePristine -\u003e Repository p r u t -\u003e Compression -\u003e PatchInfoAnd p t y -\u003e IO (Repository p r u y)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyAddPatch_",
        "fct-type": "function",
        "title": "tentativelyAddPatch_"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "tentativelyAddPatch_",
        "normalized": "UpdatePristine-\u003eRepository a b c d-\u003eCompression-\u003ePatchInfoAnd a d e-\u003eIO(Repository a b c e)",
        "package": "darcs",
        "partial": "Add Patch",
        "signature": "UpdatePristine-\u003eRepository p r u t-\u003eCompression-\u003ePatchInfoAnd p t y-\u003eIO(Repository p r u y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:tentativelyAddToPending",
      "description": {
        "fct-descr": "\u003cp\u003eThis fuction is unsafe because it accepts a patch that works on the tentative\n pending and we don't currently track the state of the tentative pending.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e FL (PrimOf p) x y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyAddToPending",
        "fct-type": "function",
        "title": "tentativelyAddToPending"
      },
      "index": {
        "description": "This fuction is unsafe because it accepts patch that works on the tentative pending and we don currently track the state of the tentative pending",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "tentativelyAddToPending",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eFL(PrimOf a)e f-\u003eIO()",
        "package": "darcs",
        "partial": "Add To Pending",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eFL(PrimOf p)x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:tentativelyRemovePatches",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e FL (PatchInfoAnd p) x t -\u003e IO (Repository p r u x)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyRemovePatches",
        "fct-type": "function",
        "title": "tentativelyRemovePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "tentativelyRemovePatches",
        "normalized": "Repository a b c d-\u003eCompression-\u003eFL(PatchInfoAnd a)e d-\u003eIO(Repository a b c e)",
        "package": "darcs",
        "partial": "Remove Patches",
        "signature": "Repository p r u t-\u003eCompression-\u003eFL(PatchInfoAnd p)x t-\u003eIO(Repository p r u x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:tentativelyReplacePatches",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e FL (PatchInfoAnd p) x t -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyReplacePatches",
        "fct-type": "function",
        "title": "tentativelyReplacePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "tentativelyReplacePatches",
        "normalized": "Repository a b c d-\u003eCompression-\u003eFL(PatchInfoAnd a)e d-\u003eIO(Repository a b c d)",
        "package": "darcs",
        "partial": "Replace Patches",
        "signature": "Repository p r u t-\u003eCompression-\u003eFL(PatchInfoAnd p)x t-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:testRecorded",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Repository-Internal.html#testRecorded",
        "fct-type": "function",
        "title": "testRecorded"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "testRecorded",
        "normalized": "Repository a b c d-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Recorded",
        "signature": "Repository p r u t-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:testTentative",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Repository-Internal.html#testTentative",
        "fct-type": "function",
        "title": "testTentative"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "testTentative",
        "normalized": "Repository a b c d-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Tentative",
        "signature": "Repository p r u t-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:unrevertUrl",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String",
        "fct-source": "src/Darcs-Repository-Internal.html#unrevertUrl",
        "fct-type": "function",
        "title": "unrevertUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "unrevertUrl",
        "normalized": "Repository a b c d-\u003eString",
        "package": "darcs",
        "partial": "Url",
        "signature": "Repository p r u t-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:withGutsOf",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withGutsOf",
        "fct-type": "function",
        "title": "withGutsOf"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "withGutsOf",
        "normalized": "Repository a b c d-\u003eIO e-\u003eIO e",
        "package": "darcs",
        "partial": "Guts Of",
        "signature": "Repository p r u t-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:withRecorded",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e ((AbsolutePath -\u003e IO a) -\u003e IO a) -\u003e (AbsolutePath -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRecorded",
        "fct-type": "function",
        "title": "withRecorded"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "withRecorded",
        "normalized": "Repository a b c d-\u003e((AbsolutePath-\u003eIO e)-\u003eIO e)-\u003e(AbsolutePath-\u003eIO e)-\u003eIO e",
        "package": "darcs",
        "partial": "Recorded",
        "signature": "Repository p r u t-\u003e((AbsolutePath-\u003eIO a)-\u003eIO a)-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:withRepoLock",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepoLock",
        "fct-type": "function",
        "title": "withRepoLock"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "withRepoLock",
        "normalized": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a",
        "package": "darcs",
        "partial": "Repo Lock",
        "signature": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:withRepoReadLock",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepoReadLock",
        "fct-type": "function",
        "title": "withRepoReadLock"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "withRepoReadLock",
        "normalized": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a",
        "package": "darcs",
        "partial": "Repo Read Lock",
        "signature": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:withRepository",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepository",
        "fct-type": "function",
        "title": "withRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "withRepository",
        "normalized": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a",
        "package": "darcs",
        "partial": "Repository",
        "signature": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Internal.html#v:withRepositoryDirectory",
      "description": {
        "fct-module": "Darcs.Repository.Internal",
        "fct-package": "darcs",
        "fct-signature": "forall a.  [DarcsFlag] -\u003e String -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepositoryDirectory",
        "fct-type": "function",
        "title": "withRepositoryDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Internal",
        "module": "Darcs.Repository.Internal",
        "name": "withRepositoryDirectory",
        "normalized": "a b[DarcsFlag]-\u003eString-\u003eRepoJob c-\u003eIO c",
        "package": "darcs",
        "partial": "Repository Directory",
        "signature": "forall a.[DarcsFlag]-\u003eString-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-InternalTypes.html",
        "fct-type": "module",
        "title": "InternalTypes"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "InternalTypes",
        "normalized": "",
        "package": "darcs",
        "partial": "Internal Types",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#t:Pristine",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Pristine",
        "fct-type": "data",
        "title": "Pristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "Pristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#t:RepoType",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#RepoType",
        "fct-type": "data",
        "title": "RepoType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "RepoType",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#t:Repository",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Repository",
        "fct-type": "data",
        "title": "Repository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "Repository",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:DarcsRepository",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "DarcsRepository !Pristine Cache",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#RepoType",
        "fct-type": "function",
        "title": "DarcsRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "DarcsRepository",
        "normalized": "",
        "package": "darcs",
        "partial": "Darcs Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:HashedPristine",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "HashedPristine",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Pristine",
        "fct-type": "function",
        "title": "HashedPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "HashedPristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:NoPristine",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "NoPristine",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Pristine",
        "fct-type": "function",
        "title": "NoPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "NoPristine",
        "normalized": "",
        "package": "darcs",
        "partial": "No Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:PlainPristine",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "PlainPristine",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Pristine",
        "fct-type": "function",
        "title": "PlainPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "PlainPristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Plain Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:Repo",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "Repo !String ![DarcsFlag] !RepoFormat !(RepoType p)",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Repository",
        "fct-type": "function",
        "title": "Repo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "Repo",
        "normalized": "Repo String[DarcsFlag]RepoFormat(RepoType a)",
        "package": "darcs",
        "partial": "Repo",
        "signature": "Repo String[DarcsFlag]RepoFormat(RepoType p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:extractCache",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Cache",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#extractCache",
        "fct-type": "function",
        "title": "extractCache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "extractCache",
        "normalized": "Repository a b c d-\u003eCache",
        "package": "darcs",
        "partial": "Cache",
        "signature": "Repository p r u t-\u003eCache"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:extractOptions",
      "description": {
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag]",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#extractOptions",
        "fct-type": "function",
        "title": "extractOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "extractOptions",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]",
        "package": "darcs",
        "partial": "Options",
        "signature": "Repository p r u t-\u003e[DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-InternalTypes.html#v:modifyCache",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003emodifyCache\u003c/a\u003e\u003c/code\u003e \u003ccode\u003erepository function\u003c/code\u003e modifies the cache of\n   \u003ccode\u003erepository\u003c/code\u003e with \u003ccode\u003efunction\u003c/code\u003e, remove duplicates and sort the results with \u003ccode\u003e\u003ca\u003ecompareByLocality\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.InternalTypes",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e (Cache -\u003e Cache) -\u003e Repository p r u t",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#modifyCache",
        "fct-type": "function",
        "title": "modifyCache"
      },
      "index": {
        "description": "modifyCache repository function modifies the cache of repository with function remove duplicates and sort the results with compareByLocality",
        "hierarchy": "Darcs Repository InternalTypes",
        "module": "Darcs.Repository.InternalTypes",
        "name": "modifyCache",
        "normalized": "Repository a b c d-\u003e(Cache-\u003eCache)-\u003eRepository a b c d",
        "package": "darcs",
        "partial": "Cache",
        "signature": "Repository p r u t-\u003e(Cache-\u003eCache)-\u003eRepository p r u t"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#",
      "description": {
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-LowLevel.html",
        "fct-type": "module",
        "title": "LowLevel"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "LowLevel",
        "normalized": "",
        "package": "darcs",
        "partial": "Low Level",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#v:pendingName",
      "description": {
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "RepoType p -\u003e String",
        "fct-source": "src/Darcs-Repository-LowLevel.html#pendingName",
        "fct-type": "function",
        "title": "pendingName"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "pendingName",
        "normalized": "RepoType a-\u003eString",
        "package": "darcs",
        "partial": "Name",
        "signature": "RepoType p-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#v:readNewPending",
      "description": {
        "fct-descr": "\u003cp\u003eRead the contents of tentative pending. CWD should be the repository directory.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Sealed (FL (PrimOf p) t))",
        "fct-source": "src/Darcs-Repository-LowLevel.html#readNewPending",
        "fct-type": "function",
        "title": "readNewPending"
      },
      "index": {
        "description": "Read the contents of tentative pending CWD should be the repository directory",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "readNewPending",
        "normalized": "Repository a b c d-\u003eIO(Sealed(FL(PrimOf a)d))",
        "package": "darcs",
        "partial": "New Pending",
        "signature": "Repository p r u t-\u003eIO(Sealed(FL(PrimOf p)t))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#v:readPending",
      "description": {
        "fct-descr": "\u003cp\u003eRead the contents of pending. CWD should be the repository directory.\n The return type is currently incorrect as it refers to the tentative\n state rather than the recorded state.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Sealed (FL (PrimOf p) t))",
        "fct-source": "src/Darcs-Repository-LowLevel.html#readPending",
        "fct-type": "function",
        "title": "readPending"
      },
      "index": {
        "description": "Read the contents of pending CWD should be the repository directory The return type is currently incorrect as it refers to the tentative state rather than the recorded state",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "readPending",
        "normalized": "Repository a b c d-\u003eIO(Sealed(FL(PrimOf a)d))",
        "package": "darcs",
        "partial": "Pending",
        "signature": "Repository p r u t-\u003eIO(Sealed(FL(PrimOf p)t))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#v:readTentativePending",
      "description": {
        "fct-descr": "\u003cp\u003eRead the contents of tentative pending. CWD should be the repository directory.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Sealed (FL (PrimOf p) t))",
        "fct-source": "src/Darcs-Repository-LowLevel.html#readTentativePending",
        "fct-type": "function",
        "title": "readTentativePending"
      },
      "index": {
        "description": "Read the contents of tentative pending CWD should be the repository directory",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "readTentativePending",
        "normalized": "Repository a b c d-\u003eIO(Sealed(FL(PrimOf a)d))",
        "package": "darcs",
        "partial": "Tentative Pending",
        "signature": "Repository p r u t-\u003eIO(Sealed(FL(PrimOf p)t))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#v:writeNewPending",
      "description": {
        "fct-descr": "\u003cp\u003eRead the contents of new pending. CWD should be the repository directory.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) t y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-LowLevel.html#writeNewPending",
        "fct-type": "function",
        "title": "writeNewPending"
      },
      "index": {
        "description": "Read the contents of new pending CWD should be the repository directory",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "writeNewPending",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)d e-\u003eIO()",
        "package": "darcs",
        "partial": "New Pending",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)t y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-LowLevel.html#v:writeTentativePending",
      "description": {
        "fct-descr": "\u003cp\u003eRead the contents of tentative pending. CWD should be the repository directory.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.LowLevel",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) t y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-LowLevel.html#writeTentativePending",
        "fct-type": "function",
        "title": "writeTentativePending"
      },
      "index": {
        "description": "Read the contents of tentative pending CWD should be the repository directory",
        "hierarchy": "Darcs Repository LowLevel",
        "module": "Darcs.Repository.LowLevel",
        "name": "writeTentativePending",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)d e-\u003eIO()",
        "package": "darcs",
        "partial": "Tentative Pending",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)t y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Merge.html#",
      "description": {
        "fct-module": "Darcs.Repository.Merge",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Merge.html",
        "fct-type": "module",
        "title": "Merge"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Merge",
        "module": "Darcs.Repository.Merge",
        "name": "Merge",
        "normalized": "",
        "package": "darcs",
        "partial": "Merge",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Merge.html#v:considerMergeToWorking",
      "description": {
        "fct-module": "Darcs.Repository.Merge",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e [DarcsFlag] -\u003e FL (PatchInfoAnd p) x t -\u003e FL (PatchInfoAnd p) x y -\u003e IO (Sealed (FL (PrimOf p) u))",
        "fct-source": "src/Darcs-Repository-Merge.html#considerMergeToWorking",
        "fct-type": "function",
        "title": "considerMergeToWorking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Merge",
        "module": "Darcs.Repository.Merge",
        "name": "considerMergeToWorking",
        "normalized": "Repository a b c d-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd a)e d-\u003eFL(PatchInfoAnd a)e f-\u003eIO(Sealed(FL(PrimOf a)c))",
        "package": "darcs",
        "partial": "Merge To Working",
        "signature": "Repository p r u t-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd p)x t-\u003eFL(PatchInfoAnd p)x y-\u003eIO(Sealed(FL(PrimOf p)u))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Merge.html#v:tentativelyMergePatches",
      "description": {
        "fct-module": "Darcs.Repository.Merge",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e [DarcsFlag] -\u003e FL (PatchInfoAnd p) x t -\u003e FL (PatchInfoAnd p) x y -\u003e IO (Sealed (FL (PrimOf p) u))",
        "fct-source": "src/Darcs-Repository-Merge.html#tentativelyMergePatches",
        "fct-type": "function",
        "title": "tentativelyMergePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Merge",
        "module": "Darcs.Repository.Merge",
        "name": "tentativelyMergePatches",
        "normalized": "Repository a b c d-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd a)e d-\u003eFL(PatchInfoAnd a)e f-\u003eIO(Sealed(FL(PrimOf a)c))",
        "package": "darcs",
        "partial": "Merge Patches",
        "signature": "Repository p r u t-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd p)x t-\u003eFL(PatchInfoAnd p)x y-\u003eIO(Sealed(FL(PrimOf p)u))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Motd.html#",
      "description": {
        "fct-module": "Darcs.Repository.Motd",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Motd.html",
        "fct-type": "module",
        "title": "Motd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Motd",
        "module": "Darcs.Repository.Motd",
        "name": "Motd",
        "normalized": "",
        "package": "darcs",
        "partial": "Motd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Motd.html#v:getMotd",
      "description": {
        "fct-descr": "\u003cp\u003eFetch and return the message of the day for a given repository.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Motd",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ByteString",
        "fct-source": "src/Darcs-Repository-Motd.html#getMotd",
        "fct-type": "function",
        "title": "getMotd"
      },
      "index": {
        "description": "Fetch and return the message of the day for given repository",
        "hierarchy": "Darcs Repository Motd",
        "module": "Darcs.Repository.Motd",
        "name": "getMotd",
        "normalized": "String-\u003eIO ByteString",
        "package": "darcs",
        "partial": "Motd",
        "signature": "String-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Motd.html#v:showMotd",
      "description": {
        "fct-descr": "\u003cp\u003eDisplay the message of the day for a given repository,\n   unless either the \u003ccode\u003e\u003ca\u003eXMLOutput\u003c/a\u003e\u003c/code\u003e or the \u003ccode\u003e\u003ca\u003eQuiet\u003c/a\u003e\u003c/code\u003e flags are passed in\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Motd",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Motd.html#showMotd",
        "fct-type": "function",
        "title": "showMotd"
      },
      "index": {
        "description": "Display the message of the day for given repository unless either the XMLOutput or the Quiet flags are passed in",
        "hierarchy": "Darcs Repository Motd",
        "module": "Darcs.Repository.Motd",
        "name": "showMotd",
        "normalized": "[DarcsFlag]-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Motd",
        "signature": "[DarcsFlag]-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Old.html#",
      "description": {
        "fct-module": "Darcs.Repository.Old",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Old.html",
        "fct-type": "module",
        "title": "Old"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Old",
        "module": "Darcs.Repository.Old",
        "name": "Old",
        "normalized": "",
        "package": "darcs",
        "partial": "Old",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Old.html#v:oldRepoFailMsg",
      "description": {
        "fct-module": "Darcs.Repository.Old",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Repository-Old.html#oldRepoFailMsg",
        "fct-type": "function",
        "title": "oldRepoFailMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Old",
        "module": "Darcs.Repository.Old",
        "name": "oldRepoFailMsg",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Fail Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Old.html#v:readOldRepo",
      "description": {
        "fct-module": "Darcs.Repository.Old",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO (SealedPatchSet p Origin)",
        "fct-source": "src/Darcs-Repository-Old.html#readOldRepo",
        "fct-type": "function",
        "title": "readOldRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Old",
        "module": "Darcs.Repository.Old",
        "name": "readOldRepo",
        "normalized": "String-\u003eIO(SealedPatchSet a Origin)",
        "package": "darcs",
        "partial": "Old Repo",
        "signature": "String-\u003eIO(SealedPatchSet p Origin)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Old.html#v:revertTentativeChanges",
      "description": {
        "fct-module": "Darcs.Repository.Old",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-Old.html#revertTentativeChanges",
        "fct-type": "function",
        "title": "revertTentativeChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Old",
        "module": "Darcs.Repository.Old",
        "name": "revertTentativeChanges",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Tentative Changes",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Prefs.html",
        "fct-type": "module",
        "title": "Prefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "Prefs",
        "normalized": "",
        "package": "darcs",
        "partial": "Prefs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#t:FileType",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Prefs.html#FileType",
        "fct-type": "data",
        "title": "FileType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "FileType",
        "normalized": "",
        "package": "darcs",
        "partial": "File Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:BinaryFile",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "BinaryFile",
        "fct-source": "src/Darcs-Repository-Prefs.html#FileType",
        "fct-type": "function",
        "title": "BinaryFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "BinaryFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Binary File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:TextFile",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "TextFile",
        "fct-source": "src/Darcs-Repository-Prefs.html#FileType",
        "fct-type": "function",
        "title": "TextFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "TextFile",
        "normalized": "",
        "package": "darcs",
        "partial": "Text File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:addToPreflist",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Prefs.html#addToPreflist",
        "fct-type": "function",
        "title": "addToPreflist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "addToPreflist",
        "normalized": "String-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "To Preflist",
        "signature": "String-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:binariesFileHelp",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "[String]",
        "fct-source": "src/Darcs-Repository-Prefs.html#binariesFileHelp",
        "fct-type": "function",
        "title": "binariesFileHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "binariesFileHelp",
        "normalized": "[String]",
        "package": "darcs",
        "partial": "File Help",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:boringFileFilter",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "IO ([FilePath] -\u003e [FilePath])",
        "fct-source": "src/Darcs-Repository-Prefs.html#boringFileFilter",
        "fct-type": "function",
        "title": "boringFileFilter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "boringFileFilter",
        "normalized": "IO([FilePath]-\u003e[FilePath])",
        "package": "darcs",
        "partial": "File Filter",
        "signature": "IO([FilePath]-\u003e[FilePath])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:boringFileHelp",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "[String]",
        "fct-source": "src/Darcs-Repository-Prefs.html#boringFileHelp",
        "fct-type": "function",
        "title": "boringFileHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "boringFileHelp",
        "normalized": "[String]",
        "package": "darcs",
        "partial": "File Help",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:boringRegexps",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "IO [Regex]",
        "fct-source": "src/Darcs-Repository-Prefs.html#boringRegexps",
        "fct-type": "function",
        "title": "boringRegexps"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "boringRegexps",
        "normalized": "IO[Regex]",
        "package": "darcs",
        "partial": "Regexps",
        "signature": "IO[Regex]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:changePrefval",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Prefs.html#changePrefval",
        "fct-type": "function",
        "title": "changePrefval"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "changePrefval",
        "normalized": "String-\u003eString-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Prefval",
        "signature": "String-\u003eString-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:darcsdirFilter",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "[FilePath] -\u003e [FilePath]",
        "fct-source": "src/Darcs-Repository-Prefs.html#darcsdirFilter",
        "fct-type": "function",
        "title": "darcsdirFilter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "darcsdirFilter",
        "normalized": "[FilePath]-\u003e[FilePath]",
        "package": "darcs",
        "partial": "Filter",
        "signature": "[FilePath]-\u003e[FilePath]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:defPrefval",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO String",
        "fct-source": "src/Darcs-Repository-Prefs.html#defPrefval",
        "fct-type": "function",
        "title": "defPrefval"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "defPrefval",
        "normalized": "String-\u003eString-\u003eIO String",
        "package": "darcs",
        "partial": "Prefval",
        "signature": "String-\u003eString-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:defaultrepo",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e AbsolutePath -\u003e [String] -\u003e IO [String]",
        "fct-source": "src/Darcs-Repository-Prefs.html#defaultrepo",
        "fct-type": "function",
        "title": "defaultrepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "defaultrepo",
        "normalized": "[DarcsFlag]-\u003eAbsolutePath-\u003e[String]-\u003eIO[String]",
        "package": "darcs",
        "partial": "",
        "signature": "[DarcsFlag]-\u003eAbsolutePath-\u003e[String]-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:environmentHelpHome",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Repository-Prefs.html#environmentHelpHome",
        "fct-type": "function",
        "title": "environmentHelpHome"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "environmentHelpHome",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Home",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:filetypeFunction",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "IO (FilePath -\u003e FileType)",
        "fct-source": "src/Darcs-Repository-Prefs.html#filetypeFunction",
        "fct-type": "function",
        "title": "filetypeFunction"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "filetypeFunction",
        "normalized": "IO(FilePath-\u003eFileType)",
        "package": "darcs",
        "partial": "Function",
        "signature": "IO(FilePath-\u003eFileType)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:getCaches",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String -\u003e IO Cache",
        "fct-source": "src/Darcs-Repository-Prefs.html#getCaches",
        "fct-type": "function",
        "title": "getCaches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "getCaches",
        "normalized": "[DarcsFlag]-\u003eString-\u003eIO Cache",
        "package": "darcs",
        "partial": "Caches",
        "signature": "[DarcsFlag]-\u003eString-\u003eIO Cache"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:getGlobal",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO [String]",
        "fct-source": "src/Darcs-Repository-Prefs.html#getGlobal",
        "fct-type": "function",
        "title": "getGlobal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "getGlobal",
        "normalized": "String-\u003eIO[String]",
        "package": "darcs",
        "partial": "Global",
        "signature": "String-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:getPreflist",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO [String]",
        "fct-source": "src/Darcs-Repository-Prefs.html#getPreflist",
        "fct-type": "function",
        "title": "getPreflist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "getPreflist",
        "normalized": "String-\u003eIO[String]",
        "package": "darcs",
        "partial": "Preflist",
        "signature": "String-\u003eIO[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:getPrefval",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO (Maybe String)",
        "fct-source": "src/Darcs-Repository-Prefs.html#getPrefval",
        "fct-type": "function",
        "title": "getPrefval"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "getPrefval",
        "normalized": "String-\u003eIO(Maybe String)",
        "package": "darcs",
        "partial": "Prefval",
        "signature": "String-\u003eIO(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:globalCacheDir",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "IO (Maybe FilePath)",
        "fct-source": "src/Darcs-Repository-Prefs.html#globalCacheDir",
        "fct-type": "function",
        "title": "globalCacheDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "globalCacheDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:globalPrefsDirDoc",
      "description": {
        "fct-descr": "\u003cp\u003eThe relative path of the global preference directory; \u003ccode\u003e~/.darcs\u003c/code\u003e on Unix,\n and \u003ccode\u003e%APPDATA%/darcs\u003c/code\u003e on Windows. This is used for online documentation.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Repository-Prefs.html#globalPrefsDirDoc",
        "fct-type": "function",
        "title": "globalPrefsDirDoc"
      },
      "index": {
        "description": "The relative path of the global preference directory darcs on Unix and APPDATA darcs on Windows This is used for online documentation",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "globalPrefsDirDoc",
        "normalized": "",
        "package": "darcs",
        "partial": "Prefs Dir Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:setDefaultrepo",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [DarcsFlag] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Prefs.html#setDefaultrepo",
        "fct-type": "function",
        "title": "setDefaultrepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "setDefaultrepo",
        "normalized": "String-\u003e[DarcsFlag]-\u003eIO()",
        "package": "darcs",
        "partial": "Defaultrepo",
        "signature": "String-\u003e[DarcsFlag]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:setPreflist",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Prefs.html#setPreflist",
        "fct-type": "function",
        "title": "setPreflist"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "setPreflist",
        "normalized": "String-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "Preflist",
        "signature": "String-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:setPrefval",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Prefs.html#setPrefval",
        "fct-type": "function",
        "title": "setPrefval"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "setPrefval",
        "normalized": "String-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Prefval",
        "signature": "String-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Prefs.html#v:writeDefaultPrefs",
      "description": {
        "fct-module": "Darcs.Repository.Prefs",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-Prefs.html#writeDefaultPrefs",
        "fct-type": "function",
        "title": "writeDefaultPrefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Prefs",
        "module": "Darcs.Repository.Prefs",
        "name": "writeDefaultPrefs",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Default Prefs",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-Repair.html",
        "fct-type": "module",
        "title": "Repair"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "Repair",
        "normalized": "",
        "package": "darcs",
        "partial": "Repair",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#t:RepositoryConsistency",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Repair.html#RepositoryConsistency",
        "fct-type": "data",
        "title": "RepositoryConsistency"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "RepositoryConsistency",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository Consistency",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#v:BrokenPatches",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "BrokenPatches (Tree IO) (PatchSet p Origin x)",
        "fct-source": "src/Darcs-Repository-Repair.html#RepositoryConsistency",
        "fct-type": "function",
        "title": "BrokenPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "BrokenPatches",
        "normalized": "",
        "package": "darcs",
        "partial": "Broken Patches",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#v:BrokenPristine",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "BrokenPristine (Tree IO)",
        "fct-source": "src/Darcs-Repository-Repair.html#RepositoryConsistency",
        "fct-type": "function",
        "title": "BrokenPristine"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "BrokenPristine",
        "normalized": "",
        "package": "darcs",
        "partial": "Broken Pristine",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#v:RepositoryConsistent",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "RepositoryConsistent",
        "fct-source": "src/Darcs-Repository-Repair.html#RepositoryConsistency",
        "fct-type": "function",
        "title": "RepositoryConsistent"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "RepositoryConsistent",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository Consistent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#v:checkIndex",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Bool -\u003e IO Bool",
        "fct-source": "src/Darcs-Repository-Repair.html#checkIndex",
        "fct-type": "function",
        "title": "checkIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "checkIndex",
        "normalized": "Repository a b c d-\u003eBool-\u003eIO Bool",
        "package": "darcs",
        "partial": "Index",
        "signature": "Repository p r u t-\u003eBool-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#v:replayRepository",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e (RepositoryConsistency p r -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Repair.html#replayRepository",
        "fct-type": "function",
        "title": "replayRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "replayRepository",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003e(RepositoryConsistency a b-\u003eIO e)-\u003eIO e",
        "package": "darcs",
        "partial": "Repository",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003e(RepositoryConsistency p r-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-Repair.html#v:replayRepositoryInTemp",
      "description": {
        "fct-module": "Darcs.Repository.Repair",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e IO (RepositoryConsistency p r)",
        "fct-source": "src/Darcs-Repository-Repair.html#replayRepositoryInTemp",
        "fct-type": "function",
        "title": "replayRepositoryInTemp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository Repair",
        "module": "Darcs.Repository.Repair",
        "name": "replayRepositoryInTemp",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eIO(RepositoryConsistency a b)",
        "package": "darcs",
        "partial": "Repository In Temp",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eIO(RepositoryConsistency p r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository-State.html",
        "fct-type": "module",
        "title": "State"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "State",
        "normalized": "",
        "package": "darcs",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#t:ScanKnown",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "data",
        "title": "ScanKnown"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "ScanKnown",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan Known",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#t:TreeFilter",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Repository-State.html#TreeFilter",
        "fct-type": "newtype",
        "title": "TreeFilter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "TreeFilter",
        "normalized": "",
        "package": "darcs",
        "partial": "Tree Filter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#t:UseIndex",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Flags.html#UseIndex",
        "fct-type": "data",
        "title": "UseIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "UseIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:IgnoreIndex",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "IgnoreIndex",
        "fct-source": "src/Darcs-Flags.html#UseIndex",
        "fct-type": "function",
        "title": "IgnoreIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "IgnoreIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Ignore Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:ScanAll",
      "description": {
        "fct-descr": "\u003cp\u003eAll files, i.e. look for new ones\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "ScanAll",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "function",
        "title": "ScanAll"
      },
      "index": {
        "description": "All files i.e look for new ones",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "ScanAll",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan All",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:ScanBoring",
      "description": {
        "fct-descr": "\u003cp\u003eAll files, even boring ones\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "ScanBoring",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "function",
        "title": "ScanBoring"
      },
      "index": {
        "description": "All files even boring ones",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "ScanBoring",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan Boring",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:ScanKnown",
      "description": {
        "fct-descr": "\u003cp\u003eJust files already known to darcs\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "ScanKnown",
        "fct-source": "src/Darcs-Flags.html#ScanKnown",
        "fct-type": "function",
        "title": "ScanKnown"
      },
      "index": {
        "description": "Just files already known to darcs",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "ScanKnown",
        "normalized": "",
        "package": "darcs",
        "partial": "Scan Known",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:TreeFilter",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "TreeFilter",
        "fct-source": "src/Darcs-Repository-State.html#TreeFilter",
        "fct-type": "function",
        "title": "TreeFilter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "TreeFilter",
        "normalized": "",
        "package": "darcs",
        "partial": "Tree Filter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:UseIndex",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "UseIndex",
        "fct-source": "src/Darcs-Flags.html#UseIndex",
        "fct-type": "function",
        "title": "UseIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "UseIndex",
        "normalized": "",
        "package": "darcs",
        "partial": "Use Index",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:applyTreeFilter",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "tr m -\u003e tr m",
        "fct-source": "src/Darcs-Repository-State.html#TreeFilter",
        "fct-type": "function",
        "title": "applyTreeFilter"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "applyTreeFilter",
        "normalized": "a b-\u003ea b",
        "package": "darcs",
        "partial": "Tree Filter",
        "signature": "tr m-\u003etr m"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:invalidateIndex",
      "description": {
        "fct-descr": "\u003cp\u003eMark the existing index as invalid. This has to be called whenever the\n listing of pristine changes and will cause darcs to update the index next\n time it tries to read it. (NB. This is about files added and removed from\n pristine: changes to file content in either pristine or working are handled\n transparently by the index reading code.)\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-State.html#invalidateIndex",
        "fct-type": "function",
        "title": "invalidateIndex"
      },
      "index": {
        "description": "Mark the existing index as invalid This has to be called whenever the listing of pristine changes and will cause darcs to update the index next time it tries to read it NB This is about files added and removed from pristine changes to file content in either pristine or working are handled transparently by the index reading code",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "invalidateIndex",
        "normalized": "a-\u003eIO()",
        "package": "darcs",
        "partial": "Index",
        "signature": "t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:readIndex",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO Index",
        "fct-source": "src/Darcs-Repository-State.html#readIndex",
        "fct-type": "function",
        "title": "readIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "readIndex",
        "normalized": "Repository a b c d-\u003eIO Index",
        "package": "darcs",
        "partial": "Index",
        "signature": "Repository p r u t-\u003eIO Index"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:readPending",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Tree IO, Sealed (FL p t))",
        "fct-source": "src/Darcs-Repository-State.html#readPending",
        "fct-type": "function",
        "title": "readPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "readPending",
        "normalized": "Repository a b c d-\u003eIO(Tree IO,Sealed(FL a d))",
        "package": "darcs",
        "partial": "Pending",
        "signature": "Repository p r u t-\u003eIO(Tree IO,Sealed(FL p t))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:readRecorded",
      "description": {
        "fct-descr": "\u003cp\u003eObtains a Tree corresponding to the \u003ca\u003erecorded\u003c/a\u003e state of the repository:\n this is the same as the pristine cache, which is the same as the result of\n applying all the repository's patches to an empty directory.\n\u003c/p\u003e\u003cp\u003eHandles the plain and hashed pristine cases. Currently does not handle the\n no-pristine case, as that requires replaying patches. Cf. \u003ccode\u003e\u003ca\u003ereadDarcsHashed\u003c/a\u003e\u003c/code\u003e\n and \u003ccode\u003e\u003ca\u003ereadPlainTree\u003c/a\u003e\u003c/code\u003e in hashed-storage that are used to do the actual \u003ccode\u003e\u003ca\u003eTree\u003c/a\u003e\u003c/code\u003e\n construction.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readRecorded",
        "fct-type": "function",
        "title": "readRecorded"
      },
      "index": {
        "description": "Obtains Tree corresponding to the recorded state of the repository this is the same as the pristine cache which is the same as the result of applying all the repository patches to an empty directory Handles the plain and hashed pristine cases Currently does not handle the no-pristine case as that requires replaying patches Cf readDarcsHashed and readPlainTree in hashed-storage that are used to do the actual Tree construction",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "readRecorded",
        "normalized": "Repository a b c d-\u003eIO(Tree IO)",
        "package": "darcs",
        "partial": "Recorded",
        "signature": "Repository p r u t-\u003eIO(Tree IO)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:readRecordedAndPending",
      "description": {
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readRecordedAndPending",
        "fct-type": "function",
        "title": "readRecordedAndPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "readRecordedAndPending",
        "normalized": "Repository a b c d-\u003eIO(Tree IO)",
        "package": "darcs",
        "partial": "Recorded And Pending",
        "signature": "Repository p r u t-\u003eIO(Tree IO)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:readUnrecorded",
      "description": {
        "fct-descr": "\u003cp\u003eObtains a Tree corresponding to the \u003ca\u003eunrecorded\u003c/a\u003e state of the repository:\n the working tree plus the \u003ca\u003epending\u003c/a\u003e patch. The optional list of paths allows\n to restrict the query to a subtree.\n\u003c/p\u003e\u003cp\u003eLimiting the query may be more efficient, since hashes on the uninteresting\n parts of the index do not need to go through an up-to-date check (which\n involves a relatively expensive lstat(2) per file.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Maybe [SubPath] -\u003e IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readUnrecorded",
        "fct-type": "function",
        "title": "readUnrecorded"
      },
      "index": {
        "description": "Obtains Tree corresponding to the unrecorded state of the repository the working tree plus the pending patch The optional list of paths allows to restrict the query to subtree Limiting the query may be more efficient since hashes on the uninteresting parts of the index do not need to go through an up-to-date check which involves relatively expensive lstat per file",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "readUnrecorded",
        "normalized": "Repository a b c d-\u003eMaybe[SubPath]-\u003eIO(Tree IO)",
        "package": "darcs",
        "partial": "Unrecorded",
        "signature": "Repository p r u t-\u003eMaybe[SubPath]-\u003eIO(Tree IO)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:readWorking",
      "description": {
        "fct-descr": "\u003cp\u003eObtains a Tree corresponding to the working copy of the\n repository. NB. Almost always, using readUnrecorded is the right\n choice. This function is only useful in not-completely-constructed\n repositories.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readWorking",
        "fct-type": "function",
        "title": "readWorking"
      },
      "index": {
        "description": "Obtains Tree corresponding to the working copy of the repository NB Almost always using readUnrecorded is the right choice This function is only useful in not-completely-constructed repositories",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "readWorking",
        "normalized": "",
        "package": "darcs",
        "partial": "Working",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:restrictBoring",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a Tree filter that removes any boring files the Tree might have\n contained. Additionally, you should (in most cases) pass an (expanded) Tree\n that corresponds to the recorded content of the repository. This is\n important in the cases when the repository contains files that would be\n boring otherwise. (If you pass emptyTree instead, such files will simply be\n discarded by the filter, which is usually not what you want.)\n\u003c/p\u003e\u003cp\u003eThis function is most useful when you have a plain Tree corresponding to the\n full working copy of the repository, including untracked\n files. Cf. whatsnew, record --look-for-adds.  NB. Assumes that our CWD is\n the repository root.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "forall m.  Tree m -\u003e IO (TreeFilter m)",
        "fct-source": "src/Darcs-Repository-State.html#restrictBoring",
        "fct-type": "function",
        "title": "restrictBoring"
      },
      "index": {
        "description": "Construct Tree filter that removes any boring files the Tree might have contained Additionally you should in most cases pass an expanded Tree that corresponds to the recorded content of the repository This is important in the cases when the repository contains files that would be boring otherwise If you pass emptyTree instead such files will simply be discarded by the filter which is usually not what you want This function is most useful when you have plain Tree corresponding to the full working copy of the repository including untracked files Cf whatsnew record look-for-adds NB Assumes that our CWD is the repository root",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "restrictBoring",
        "normalized": "a b Tree c-\u003eIO(TreeFilter c)",
        "package": "darcs",
        "partial": "Boring",
        "signature": "forall m. Tree m-\u003eIO(TreeFilter m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:restrictSubpaths",
      "description": {
        "fct-descr": "\u003cp\u003eFrom a repository and a list of SubPath's, construct a filter that can be\n used on a Tree (recorded or unrecorded state) of this repository. This\n constructed filter will take pending into account, so the subpaths will be\n translated correctly relative to pending move patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [SubPath] -\u003e IO (TreeFilter m)",
        "fct-source": "src/Darcs-Repository-State.html#restrictSubpaths",
        "fct-type": "function",
        "title": "restrictSubpaths"
      },
      "index": {
        "description": "From repository and list of SubPath construct filter that can be used on Tree recorded or unrecorded state of this repository This constructed filter will take pending into account so the subpaths will be translated correctly relative to pending move patches",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "restrictSubpaths",
        "normalized": "Repository a b c d-\u003e[SubPath]-\u003eIO(TreeFilter e)",
        "package": "darcs",
        "partial": "Subpaths",
        "signature": "Repository p r u t-\u003e[SubPath]-\u003eIO(TreeFilter m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository-State.html#v:unrecordedChanges",
      "description": {
        "fct-descr": "\u003cp\u003eFor a repository and an optional list of paths (when Nothing, take\n everything) compute a (forward) list of prims (i.e. a patch) going from the\n recorded state of the repository (pristine) to the unrecorded state of the\n repository (the working copy + pending). When a list of paths is given, at\n least the files that live under any of these paths in either recorded or\n unrecorded will be included in the resulting patch. NB. More patches may be\n included in this list, eg. the full contents of the pending patch. This is\n usually not a problem, since selectChanges will properly filter the results\n anyway.\n\u003c/p\u003e\u003cp\u003eThis also depends on the options given: with LookForAdds, we will include\n any non-boring files (i.e. also those that do not exist in the \u003ca\u003erecorded\u003c/a\u003e\n state) in the working in the \u003ca\u003eunrecorded\u003c/a\u003e state, and therefore they will\n show up in the patches as addfiles.\n\u003c/p\u003e\u003cp\u003eThe IgnoreTimes option disables index usage completely -- for each file, we\n read both the unrecorded and the recorded copy and run a diff on them. This\n is very inefficient, although in extremely rare cases, the index could go\n out of sync (file is modified, index is updated and file is modified again\n within a single second).\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository.State",
        "fct-package": "darcs",
        "fct-signature": "(UseIndex, ScanKnown) -\u003e Repository p r u t -\u003e Maybe [SubPath] -\u003e IO (FL (PrimOf p) t u)",
        "fct-source": "src/Darcs-Repository-State.html#unrecordedChanges",
        "fct-type": "function",
        "title": "unrecordedChanges"
      },
      "index": {
        "description": "For repository and an optional list of paths when Nothing take everything compute forward list of prims i.e patch going from the recorded state of the repository pristine to the unrecorded state of the repository the working copy pending When list of paths is given at least the files that live under any of these paths in either recorded or unrecorded will be included in the resulting patch NB More patches may be included in this list eg the full contents of the pending patch This is usually not problem since selectChanges will properly filter the results anyway This also depends on the options given with LookForAdds we will include any non-boring files i.e also those that do not exist in the recorded state in the working in the unrecorded state and therefore they will show up in the patches as addfiles The IgnoreTimes option disables index usage completely for each file we read both the unrecorded and the recorded copy and run diff on them This is very inefficient although in extremely rare cases the index could go out of sync file is modified index is updated and file is modified again within single second",
        "hierarchy": "Darcs Repository State",
        "module": "Darcs.Repository.State",
        "name": "unrecordedChanges",
        "normalized": "(UseIndex,ScanKnown)-\u003eRepository a b c d-\u003eMaybe[SubPath]-\u003eIO(FL(PrimOf a)d c)",
        "package": "darcs",
        "partial": "Changes",
        "signature": "(UseIndex,ScanKnown)-\u003eRepository p r u t-\u003eMaybe[SubPath]-\u003eIO(FL(PrimOf p)t u)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Repository.html",
        "fct-type": "module",
        "title": "Repository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "Repository",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:Cache",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Darcs-Repository-Cache.html#Cache",
        "fct-type": "newtype",
        "title": "Cache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "Cache",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:CacheLoc",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "data",
        "title": "CacheLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "CacheLoc",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache Loc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:HashedDir",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "data",
        "title": "HashedDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "HashedDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:PatchInfoAnd",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003ePatchInfoAnd\u003c/a\u003e\u003c/code\u003e p a b\u003c/code\u003e represents a hope we have to get a\n patch through its info. We're not sure we have the patch, but we\n know its info.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-PatchInfoAnd.html#PatchInfoAnd",
        "fct-type": "data",
        "title": "PatchInfoAnd"
      },
      "index": {
        "description": "PatchInfoAnd represents hope we have to get patch through its info We re not sure we have the patch but we know its info",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "PatchInfoAnd",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Info And",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:PatchSet",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Patch-Set.html#PatchSet",
        "fct-type": "data",
        "title": "PatchSet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "PatchSet",
        "normalized": "",
        "package": "darcs",
        "partial": "Patch Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:RepoJob",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "data",
        "title": "RepoJob"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "RepoJob",
        "normalized": "",
        "package": "darcs",
        "partial": "Repo Job",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:Repository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#Repository",
        "fct-type": "data",
        "title": "Repository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "Repository",
        "normalized": "",
        "package": "darcs",
        "partial": "Repository",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:SealedPatchSet",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Darcs-Patch-Set.html#SealedPatchSet",
        "fct-type": "type",
        "title": "SealedPatchSet"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "SealedPatchSet",
        "normalized": "",
        "package": "darcs",
        "partial": "Sealed Patch Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#t:WritableOrNot",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Repository-Cache.html#WritableOrNot",
        "fct-type": "data",
        "title": "WritableOrNot"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "WritableOrNot",
        "normalized": "",
        "package": "darcs",
        "partial": "Writable Or Not",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:Ca",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Ca [CacheLoc]",
        "fct-source": "src/Darcs-Repository-Cache.html#Cache",
        "fct-type": "function",
        "title": "Ca"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "Ca",
        "normalized": "Ca[CacheLoc]",
        "package": "darcs",
        "partial": "Ca",
        "signature": "Ca[CacheLoc]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:Cache",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Cache",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "Cache"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "Cache",
        "normalized": "",
        "package": "darcs",
        "partial": "Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:HashedInventoriesDir",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "HashedInventoriesDir",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "function",
        "title": "HashedInventoriesDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "HashedInventoriesDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Inventories Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:HashedPatchesDir",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "HashedPatchesDir",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "function",
        "title": "HashedPatchesDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "HashedPatchesDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Patches Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:HashedPristineDir",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "HashedPristineDir",
        "fct-source": "src/Darcs-Repository-Cache.html#HashedDir",
        "fct-type": "function",
        "title": "HashedPristineDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "HashedPristineDir",
        "normalized": "",
        "package": "darcs",
        "partial": "Hashed Pristine Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:NotWritable",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "NotWritable",
        "fct-source": "src/Darcs-Repository-Cache.html#WritableOrNot",
        "fct-type": "function",
        "title": "NotWritable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "NotWritable",
        "normalized": "",
        "package": "darcs",
        "partial": "Not Writable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:PrimV1Job",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "PrimV1Job"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "PrimV1Job",
        "normalized": "Repository a b c b-\u003eIO d)",
        "package": "darcs",
        "partial": "Prim Job",
        "signature": "Repository p r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:RepoJob",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "RepoJob"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "RepoJob",
        "normalized": "Repository a b c b-\u003eIO d)",
        "package": "darcs",
        "partial": "Repo Job",
        "signature": "Repository p r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:V1Job",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "V1Job (forall r u.  Repository (Patch Prim) r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "V1Job"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "V1Job",
        "normalized": "V Job(a b c Repository(Patch Prim)b d b-\u003eIO e)",
        "package": "darcs",
        "partial": "Job",
        "signature": "V Job(forall r u. Repository(Patch Prim)r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:V2Job",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "V2Job (forall r u.  Repository (RealPatch Prim) r u r -\u003e IO a)",
        "fct-source": "src/Darcs-Repository-Internal.html#RepoJob",
        "fct-type": "function",
        "title": "V2Job"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "V2Job",
        "normalized": "V Job(a b c Repository(RealPatch Prim)b d b-\u003eIO e)",
        "package": "darcs",
        "partial": "Job",
        "signature": "V Job(forall r u. Repository(RealPatch Prim)r u r-\u003eIO a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:Writable",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Writable",
        "fct-source": "src/Darcs-Repository-Cache.html#WritableOrNot",
        "fct-type": "function",
        "title": "Writable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "Writable",
        "normalized": "",
        "package": "darcs",
        "partial": "Writable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:addToPending",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FL (PrimOf p) u y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository.html#addToPending",
        "fct-type": "function",
        "title": "addToPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "addToPending",
        "normalized": "Repository a b c d-\u003eFL(PrimOf a)c e-\u003eIO()",
        "package": "darcs",
        "partial": "To Pending",
        "signature": "Repository p r u t-\u003eFL(PrimOf p)u y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:amInHashedRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#amInHashedRepository",
        "fct-type": "function",
        "title": "amInHashedRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "amInHashedRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "In Hashed Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:amInRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#amInRepository",
        "fct-type": "function",
        "title": "amInRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "amInRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "In Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:amNotInRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#amNotInRepository",
        "fct-type": "function",
        "title": "amNotInRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "amNotInRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "Not In Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:applyToWorking",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e FL (PrimOf p) u y -\u003e IO (Repository p r y t)",
        "fct-source": "src/Darcs-Repository-Internal.html#applyToWorking",
        "fct-type": "function",
        "title": "applyToWorking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "applyToWorking",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eFL(PrimOf a)c e-\u003eIO(Repository a b e d)",
        "package": "darcs",
        "partial": "To Working",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eFL(PrimOf p)u y-\u003eIO(Repository p r y t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:cacheSource",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "!String",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "cacheSource"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "cacheSource",
        "normalized": "",
        "package": "darcs",
        "partial": "Source",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:cacheType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "!CacheType",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "cacheType"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "cacheType",
        "normalized": "",
        "package": "darcs",
        "partial": "Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:cacheWritable",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "!WritableOrNot",
        "fct-source": "src/Darcs-Repository-Cache.html#CacheLoc",
        "fct-type": "function",
        "title": "cacheWritable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "cacheWritable",
        "normalized": "",
        "package": "darcs",
        "partial": "Writable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:checkUnrelatedRepos",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e PatchSet p start x -\u003e PatchSet p start y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository.html#checkUnrelatedRepos",
        "fct-type": "function",
        "title": "checkUnrelatedRepos"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "checkUnrelatedRepos",
        "normalized": "[DarcsFlag]-\u003ePatchSet a b c-\u003ePatchSet a b d-\u003eIO()",
        "package": "darcs",
        "partial": "Unrelated Repos",
        "signature": "[DarcsFlag]-\u003ePatchSet p start x-\u003ePatchSet p start y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:cleanRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#cleanRepository",
        "fct-type": "function",
        "title": "cleanRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "cleanRepository",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Repository",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:considerMergeToWorking",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e [DarcsFlag] -\u003e FL (PatchInfoAnd p) x t -\u003e FL (PatchInfoAnd p) x y -\u003e IO (Sealed (FL (PrimOf p) u))",
        "fct-source": "src/Darcs-Repository-Merge.html#considerMergeToWorking",
        "fct-type": "function",
        "title": "considerMergeToWorking"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "considerMergeToWorking",
        "normalized": "Repository a b c d-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd a)e d-\u003eFL(PatchInfoAnd a)e f-\u003eIO(Sealed(FL(PrimOf a)c))",
        "package": "darcs",
        "partial": "Merge To Working",
        "signature": "Repository p r u t-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd p)x t-\u003eFL(PatchInfoAnd p)x y-\u003eIO(Sealed(FL(PrimOf p)u))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:copyRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Bool -\u003e IO ()",
        "fct-source": "src/Darcs-Repository.html#copyRepository",
        "fct-type": "function",
        "title": "copyRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "copyRepository",
        "normalized": "Repository a b c d-\u003eBool-\u003eIO()",
        "package": "darcs",
        "partial": "Repository",
        "signature": "Repository p r u t-\u003eBool-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:createPartialsPristineDirectoryTree",
      "description": {
        "fct-descr": "\u003cp\u003eUsed by the commands dist and diff\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [fp] -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#createPartialsPristineDirectoryTree",
        "fct-type": "function",
        "title": "createPartialsPristineDirectoryTree"
      },
      "index": {
        "description": "Used by the commands dist and diff",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "createPartialsPristineDirectoryTree",
        "normalized": "Repository a b c d-\u003e[e]-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Partials Pristine Directory Tree",
        "signature": "Repository p r u t-\u003e[fp]-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:createPristineDirectoryTree",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#createPristineDirectoryTree",
        "fct-type": "function",
        "title": "createPristineDirectoryTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "createPristineDirectoryTree",
        "normalized": "Repository a b c d-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "Pristine Directory Tree",
        "signature": "Repository p r u t-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:createRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO ()",
        "fct-source": "src/Darcs-Repository.html#createRepository",
        "fct-type": "function",
        "title": "createRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "createRepository",
        "normalized": "[DarcsFlag]-\u003eIO()",
        "package": "darcs",
        "partial": "Repository",
        "signature": "[DarcsFlag]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:extractOptions",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag]",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#extractOptions",
        "fct-type": "function",
        "title": "extractOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "extractOptions",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]",
        "package": "darcs",
        "partial": "Options",
        "signature": "Repository p r u t-\u003e[DarcsFlag]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:finalizeRepositoryChanges",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#finalizeRepositoryChanges",
        "fct-type": "function",
        "title": "finalizeRepositoryChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "finalizeRepositoryChanges",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Repository Changes",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:findRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (Either String ())",
        "fct-source": "src/Darcs-Repository-Internal.html#findRepository",
        "fct-type": "function",
        "title": "findRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "findRepository",
        "normalized": "[DarcsFlag]-\u003eIO(Either String())",
        "package": "darcs",
        "partial": "Repository",
        "signature": "[DarcsFlag]-\u003eIO(Either String())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:identifyRepositoryFor",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eidentifyRepositoryFor repo url\u003c/code\u003e identifies (and returns) the repo at \u003ccode\u003eurl\u003c/code\u003e,\n but fails if it is not compatible for reading from and writing to.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#identifyRepositoryFor",
        "fct-type": "function",
        "title": "identifyRepositoryFor"
      },
      "index": {
        "description": "identifyRepositoryFor repo url identifies and returns the repo at url but fails if it is not compatible for reading from and writing to",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "identifyRepositoryFor",
        "normalized": "Repository a b c d-\u003eString-\u003eIO(Repository a b c d)",
        "package": "darcs",
        "partial": "Repository For",
        "signature": "Repository p r u t-\u003eString-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:invalidateIndex",
      "description": {
        "fct-descr": "\u003cp\u003eMark the existing index as invalid. This has to be called whenever the\n listing of pristine changes and will cause darcs to update the index next\n time it tries to read it. (NB. This is about files added and removed from\n pristine: changes to file content in either pristine or working are handled\n transparently by the index reading code.)\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-State.html#invalidateIndex",
        "fct-type": "function",
        "title": "invalidateIndex"
      },
      "index": {
        "description": "Mark the existing index as invalid This has to be called whenever the listing of pristine changes and will cause darcs to update the index next time it tries to read it NB This is about files added and removed from pristine changes to file content in either pristine or working are handled transparently by the index reading code",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "invalidateIndex",
        "normalized": "a-\u003eIO()",
        "package": "darcs",
        "partial": "Index",
        "signature": "t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:makePatchLazy",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e PatchInfoAnd p x y -\u003e IO (PatchInfoAnd p x y)",
        "fct-source": "src/Darcs-Repository-Internal.html#makePatchLazy",
        "fct-type": "function",
        "title": "makePatchLazy"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "makePatchLazy",
        "normalized": "Repository a b c d-\u003ePatchInfoAnd a e f-\u003eIO(PatchInfoAnd a e f)",
        "package": "darcs",
        "partial": "Patch Lazy",
        "signature": "Repository p r u t-\u003ePatchInfoAnd p x y-\u003eIO(PatchInfoAnd p x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:maybeIdentifyRepository",
      "description": {
        "fct-descr": "\u003cp\u003eTries to identify the repository in a given directory\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e String -\u003e IO (IdentifyRepo p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#maybeIdentifyRepository",
        "fct-type": "function",
        "title": "maybeIdentifyRepository"
      },
      "index": {
        "description": "Tries to identify the repository in given directory",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "maybeIdentifyRepository",
        "normalized": "[DarcsFlag]-\u003eString-\u003eIO(IdentifyRepo a b c d)",
        "package": "darcs",
        "partial": "Identify Repository",
        "signature": "[DarcsFlag]-\u003eString-\u003eIO(IdentifyRepo p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:modifyCache",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003emodifyCache\u003c/a\u003e\u003c/code\u003e \u003ccode\u003erepository function\u003c/code\u003e modifies the cache of\n   \u003ccode\u003erepository\u003c/code\u003e with \u003ccode\u003efunction\u003c/code\u003e, remove duplicates and sort the results with \u003ccode\u003e\u003ca\u003ecompareByLocality\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e (Cache -\u003e Cache) -\u003e Repository p r u t",
        "fct-source": "src/Darcs-Repository-InternalTypes.html#modifyCache",
        "fct-type": "function",
        "title": "modifyCache"
      },
      "index": {
        "description": "modifyCache repository function modifies the cache of repository with function remove duplicates and sort the results with compareByLocality",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "modifyCache",
        "normalized": "Repository a b c d-\u003e(Cache-\u003eCache)-\u003eRepository a b c d",
        "package": "darcs",
        "partial": "Cache",
        "signature": "Repository p r u t-\u003e(Cache-\u003eCache)-\u003eRepository p r u t"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:optimizeInventory",
      "description": {
        "fct-descr": "\u003cp\u003eWrites out a fresh copy of the inventory that minimizes the\n amount of inventory that need be downloaded when people pull from\n the repository.\n\u003c/p\u003e\u003cp\u003eSpecifically, it breaks up the inventory on the most recent tag.\n This speeds up most commands when run remotely, both because a\n smaller file needs to be transfered (only the most recent\n inventory).  It also gives a guarantee that all the patches prior\n to a given tag are included in that tag, so less commutation and\n history traversal is needed.  This latter issue can become very\n important in large repositories.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#optimizeInventory",
        "fct-type": "function",
        "title": "optimizeInventory"
      },
      "index": {
        "description": "Writes out fresh copy of the inventory that minimizes the amount of inventory that need be downloaded when people pull from the repository Specifically it breaks up the inventory on the most recent tag This speeds up most commands when run remotely both because smaller file needs to be transfered only the most recent inventory It also gives guarantee that all the patches prior to given tag are included in that tag so less commutation and history traversal is needed This latter issue can become very important in large repositories",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "optimizeInventory",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Inventory",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:patchSetToPatches",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p x y -\u003e FL (Named p) x y",
        "fct-source": "src/Darcs-Repository-Internal.html#patchSetToPatches",
        "fct-type": "function",
        "title": "patchSetToPatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "patchSetToPatches",
        "normalized": "PatchSet a b c-\u003eFL(Named a)b c",
        "package": "darcs",
        "partial": "Set To Patches",
        "signature": "PatchSet p x y-\u003eFL(Named p)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:patchSetToRepository",
      "description": {
        "fct-descr": "\u003cp\u003epatchSetToRepository takes a patch set, and writes a new repository in the current directory\n   that contains all the patches in the patch set. This function is used when 'darcs get'ing a\n   repository with the --to-match flag and the new repository is not in hashed format.\n   This function does not (yet) work for hashed repositories. If the passed \u003ccode\u003eDarcsFlag\u003c/code\u003es tell\n   darcs to create a hashed repository, this function will call \u003ccode\u003eerror\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r1 u1 r1 -\u003e PatchSet p Origin x -\u003e [DarcsFlag] -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository.html#patchSetToRepository",
        "fct-type": "function",
        "title": "patchSetToRepository"
      },
      "index": {
        "description": "patchSetToRepository takes patch set and writes new repository in the current directory that contains all the patches in the patch set This function is used when darcs get ing repository with the to-match flag and the new repository is not in hashed format This function does not yet work for hashed repositories If the passed DarcsFlag tell darcs to create hashed repository this function will call error",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "patchSetToRepository",
        "normalized": "Repository a b c b-\u003ePatchSet a Origin d-\u003e[DarcsFlag]-\u003eIO(Repository a b c e)",
        "package": "darcs",
        "partial": "Set To Repository",
        "signature": "Repository p r u r-\u003ePatchSet p Origin x-\u003e[DarcsFlag]-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:prefsUrl",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String",
        "fct-source": "src/Darcs-Repository-Internal.html#prefsUrl",
        "fct-type": "function",
        "title": "prefsUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "prefsUrl",
        "normalized": "Repository a b c d-\u003eString",
        "package": "darcs",
        "partial": "Url",
        "signature": "Repository p r u t-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readIndex",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO Index",
        "fct-source": "src/Darcs-Repository-State.html#readIndex",
        "fct-type": "function",
        "title": "readIndex"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readIndex",
        "normalized": "Repository a b c d-\u003eIO Index",
        "package": "darcs",
        "partial": "Index",
        "signature": "Repository p r u t-\u003eIO Index"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readPending",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Tree IO, Sealed (FL p t))",
        "fct-source": "src/Darcs-Repository-State.html#readPending",
        "fct-type": "function",
        "title": "readPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readPending",
        "normalized": "Repository a b c d-\u003eIO(Tree IO,Sealed(FL a d))",
        "package": "darcs",
        "partial": "Pending",
        "signature": "Repository p r u t-\u003eIO(Tree IO,Sealed(FL p t))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readRecorded",
      "description": {
        "fct-descr": "\u003cp\u003eObtains a Tree corresponding to the \u003ca\u003erecorded\u003c/a\u003e state of the repository:\n this is the same as the pristine cache, which is the same as the result of\n applying all the repository's patches to an empty directory.\n\u003c/p\u003e\u003cp\u003eHandles the plain and hashed pristine cases. Currently does not handle the\n no-pristine case, as that requires replaying patches. Cf. \u003ccode\u003e\u003ca\u003ereadDarcsHashed\u003c/a\u003e\u003c/code\u003e\n and \u003ccode\u003e\u003ca\u003ereadPlainTree\u003c/a\u003e\u003c/code\u003e in hashed-storage that are used to do the actual \u003ccode\u003e\u003ca\u003eTree\u003c/a\u003e\u003c/code\u003e\n construction.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readRecorded",
        "fct-type": "function",
        "title": "readRecorded"
      },
      "index": {
        "description": "Obtains Tree corresponding to the recorded state of the repository this is the same as the pristine cache which is the same as the result of applying all the repository patches to an empty directory Handles the plain and hashed pristine cases Currently does not handle the no-pristine case as that requires replaying patches Cf readDarcsHashed and readPlainTree in hashed-storage that are used to do the actual Tree construction",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readRecorded",
        "normalized": "Repository a b c d-\u003eIO(Tree IO)",
        "package": "darcs",
        "partial": "Recorded",
        "signature": "Repository p r u t-\u003eIO(Tree IO)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readRecordedAndPending",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readRecordedAndPending",
        "fct-type": "function",
        "title": "readRecordedAndPending"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readRecordedAndPending",
        "normalized": "Repository a b c d-\u003eIO(Tree IO)",
        "package": "darcs",
        "partial": "Recorded And Pending",
        "signature": "Repository p r u t-\u003eIO(Tree IO)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readRepo",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (PatchSet p Origin r)",
        "fct-source": "src/Darcs-Repository-Internal.html#readRepo",
        "fct-type": "function",
        "title": "readRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readRepo",
        "normalized": "Repository a b c d-\u003eIO(PatchSet a Origin b)",
        "package": "darcs",
        "partial": "Repo",
        "signature": "Repository p r u t-\u003eIO(PatchSet p Origin r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readRepoUsingSpecificInventory",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Repository p r u t -\u003e IO (PatchSet p Origin t)",
        "fct-source": "src/Darcs-Repository-Internal.html#readRepoUsingSpecificInventory",
        "fct-type": "function",
        "title": "readRepoUsingSpecificInventory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readRepoUsingSpecificInventory",
        "normalized": "String-\u003eRepository a b c d-\u003eIO(PatchSet a Origin d)",
        "package": "darcs",
        "partial": "Repo Using Specific Inventory",
        "signature": "String-\u003eRepository p r u t-\u003eIO(PatchSet p Origin t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readTentativeRepo",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO (PatchSet p Origin t)",
        "fct-source": "src/Darcs-Repository-Internal.html#readTentativeRepo",
        "fct-type": "function",
        "title": "readTentativeRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readTentativeRepo",
        "normalized": "Repository a b c d-\u003eIO(PatchSet a Origin d)",
        "package": "darcs",
        "partial": "Tentative Repo",
        "signature": "Repository p r u t-\u003eIO(PatchSet p Origin t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:readUnrecorded",
      "description": {
        "fct-descr": "\u003cp\u003eObtains a Tree corresponding to the \u003ca\u003eunrecorded\u003c/a\u003e state of the repository:\n the working tree plus the \u003ca\u003epending\u003c/a\u003e patch. The optional list of paths allows\n to restrict the query to a subtree.\n\u003c/p\u003e\u003cp\u003eLimiting the query may be more efficient, since hashes on the uninteresting\n parts of the index do not need to go through an up-to-date check (which\n involves a relatively expensive lstat(2) per file.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Maybe [SubPath] -\u003e IO (Tree IO)",
        "fct-source": "src/Darcs-Repository-State.html#readUnrecorded",
        "fct-type": "function",
        "title": "readUnrecorded"
      },
      "index": {
        "description": "Obtains Tree corresponding to the unrecorded state of the repository the working tree plus the pending patch The optional list of paths allows to restrict the query to subtree Limiting the query may be more efficient since hashes on the uninteresting parts of the index do not need to go through an up-to-date check which involves relatively expensive lstat per file",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "readUnrecorded",
        "normalized": "Repository a b c d-\u003eMaybe[SubPath]-\u003eIO(Tree IO)",
        "package": "darcs",
        "partial": "Unrecorded",
        "signature": "Repository p r u t-\u003eMaybe[SubPath]-\u003eIO(Tree IO)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:replacePristine",
      "description": {
        "fct-descr": "\u003cp\u003eReplace the existing pristine with a new one (loaded up in a Tree object).\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Tree IO -\u003e IO ()",
        "fct-source": "src/Darcs-Repository.html#replacePristine",
        "fct-type": "function",
        "title": "replacePristine"
      },
      "index": {
        "description": "Replace the existing pristine with new one loaded up in Tree object",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "replacePristine",
        "normalized": "Repository a b c d-\u003eTree IO-\u003eIO()",
        "package": "darcs",
        "partial": "Pristine",
        "signature": "Repository p r u t-\u003eTree IO-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:reportBadSources",
      "description": {
        "fct-descr": "\u003cp\u003ePrints an error message with a list of bad caches.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-Cache.html#reportBadSources",
        "fct-type": "function",
        "title": "reportBadSources"
      },
      "index": {
        "description": "Prints an error message with list of bad caches",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "reportBadSources",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Bad Sources",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:revertRepositoryChanges",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#revertRepositoryChanges",
        "fct-type": "function",
        "title": "revertRepositoryChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "revertRepositoryChanges",
        "normalized": "Repository a b c d-\u003eIO()",
        "package": "darcs",
        "partial": "Repository Changes",
        "signature": "Repository p r u t-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:setScriptsExecutable",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#setScriptsExecutable",
        "fct-type": "function",
        "title": "setScriptsExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "setScriptsExecutable",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Scripts Executable",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:setScriptsExecutablePatches",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "p x y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#setScriptsExecutablePatches",
        "fct-type": "function",
        "title": "setScriptsExecutablePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "setScriptsExecutablePatches",
        "normalized": "a b c-\u003eIO()",
        "package": "darcs",
        "partial": "Scripts Executable Patches",
        "signature": "p x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:tentativelyAddPatch",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e PatchInfoAnd p t y -\u003e IO (Repository p r u y)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyAddPatch",
        "fct-type": "function",
        "title": "tentativelyAddPatch"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "tentativelyAddPatch",
        "normalized": "Repository a b c d-\u003eCompression-\u003ePatchInfoAnd a d e-\u003eIO(Repository a b c e)",
        "package": "darcs",
        "partial": "Add Patch",
        "signature": "Repository p r u t-\u003eCompression-\u003ePatchInfoAnd p t y-\u003eIO(Repository p r u y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:tentativelyAddToPending",
      "description": {
        "fct-descr": "\u003cp\u003eThis fuction is unsafe because it accepts a patch that works on the tentative\n pending and we don't currently track the state of the tentative pending.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e [DarcsFlag] -\u003e FL (PrimOf p) x y -\u003e IO ()",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyAddToPending",
        "fct-type": "function",
        "title": "tentativelyAddToPending"
      },
      "index": {
        "description": "This fuction is unsafe because it accepts patch that works on the tentative pending and we don currently track the state of the tentative pending",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "tentativelyAddToPending",
        "normalized": "Repository a b c d-\u003e[DarcsFlag]-\u003eFL(PrimOf a)e f-\u003eIO()",
        "package": "darcs",
        "partial": "Add To Pending",
        "signature": "Repository p r u t-\u003e[DarcsFlag]-\u003eFL(PrimOf p)x y-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:tentativelyMergePatches",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String -\u003e [DarcsFlag] -\u003e FL (PatchInfoAnd p) x t -\u003e FL (PatchInfoAnd p) x y -\u003e IO (Sealed (FL (PrimOf p) u))",
        "fct-source": "src/Darcs-Repository-Merge.html#tentativelyMergePatches",
        "fct-type": "function",
        "title": "tentativelyMergePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "tentativelyMergePatches",
        "normalized": "Repository a b c d-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd a)e d-\u003eFL(PatchInfoAnd a)e f-\u003eIO(Sealed(FL(PrimOf a)c))",
        "package": "darcs",
        "partial": "Merge Patches",
        "signature": "Repository p r u t-\u003eString-\u003e[DarcsFlag]-\u003eFL(PatchInfoAnd p)x t-\u003eFL(PatchInfoAnd p)x y-\u003eIO(Sealed(FL(PrimOf p)u))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:tentativelyRemovePatches",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e FL (PatchInfoAnd p) x t -\u003e IO (Repository p r u x)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyRemovePatches",
        "fct-type": "function",
        "title": "tentativelyRemovePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "tentativelyRemovePatches",
        "normalized": "Repository a b c d-\u003eCompression-\u003eFL(PatchInfoAnd a)e d-\u003eIO(Repository a b c e)",
        "package": "darcs",
        "partial": "Remove Patches",
        "signature": "Repository p r u t-\u003eCompression-\u003eFL(PatchInfoAnd p)x t-\u003eIO(Repository p r u x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:tentativelyReplacePatches",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e Compression -\u003e FL (PatchInfoAnd p) x t -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository-Internal.html#tentativelyReplacePatches",
        "fct-type": "function",
        "title": "tentativelyReplacePatches"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "tentativelyReplacePatches",
        "normalized": "Repository a b c d-\u003eCompression-\u003eFL(PatchInfoAnd a)e d-\u003eIO(Repository a b c d)",
        "package": "darcs",
        "partial": "Replace Patches",
        "signature": "Repository p r u t-\u003eCompression-\u003eFL(PatchInfoAnd p)x t-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:testRecorded",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Repository-Internal.html#testRecorded",
        "fct-type": "function",
        "title": "testRecorded"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "testRecorded",
        "normalized": "Repository a b c d-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Recorded",
        "signature": "Repository p r u t-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:testTentative",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Repository-Internal.html#testTentative",
        "fct-type": "function",
        "title": "testTentative"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "testTentative",
        "normalized": "Repository a b c d-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Tentative",
        "signature": "Repository p r u t-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:unrecordedChanges",
      "description": {
        "fct-descr": "\u003cp\u003eFor a repository and an optional list of paths (when Nothing, take\n everything) compute a (forward) list of prims (i.e. a patch) going from the\n recorded state of the repository (pristine) to the unrecorded state of the\n repository (the working copy + pending). When a list of paths is given, at\n least the files that live under any of these paths in either recorded or\n unrecorded will be included in the resulting patch. NB. More patches may be\n included in this list, eg. the full contents of the pending patch. This is\n usually not a problem, since selectChanges will properly filter the results\n anyway.\n\u003c/p\u003e\u003cp\u003eThis also depends on the options given: with LookForAdds, we will include\n any non-boring files (i.e. also those that do not exist in the \u003ca\u003erecorded\u003c/a\u003e\n state) in the working in the \u003ca\u003eunrecorded\u003c/a\u003e state, and therefore they will\n show up in the patches as addfiles.\n\u003c/p\u003e\u003cp\u003eThe IgnoreTimes option disables index usage completely -- for each file, we\n read both the unrecorded and the recorded copy and run a diff on them. This\n is very inefficient, although in extremely rare cases, the index could go\n out of sync (file is modified, index is updated and file is modified again\n within a single second).\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "(UseIndex, ScanKnown) -\u003e Repository p r u t -\u003e Maybe [SubPath] -\u003e IO (FL (PrimOf p) t u)",
        "fct-source": "src/Darcs-Repository-State.html#unrecordedChanges",
        "fct-type": "function",
        "title": "unrecordedChanges"
      },
      "index": {
        "description": "For repository and an optional list of paths when Nothing take everything compute forward list of prims i.e patch going from the recorded state of the repository pristine to the unrecorded state of the repository the working copy pending When list of paths is given at least the files that live under any of these paths in either recorded or unrecorded will be included in the resulting patch NB More patches may be included in this list eg the full contents of the pending patch This is usually not problem since selectChanges will properly filter the results anyway This also depends on the options given with LookForAdds we will include any non-boring files i.e also those that do not exist in the recorded state in the working in the unrecorded state and therefore they will show up in the patches as addfiles The IgnoreTimes option disables index usage completely for each file we read both the unrecorded and the recorded copy and run diff on them This is very inefficient although in extremely rare cases the index could go out of sync file is modified index is updated and file is modified again within single second",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "unrecordedChanges",
        "normalized": "(UseIndex,ScanKnown)-\u003eRepository a b c d-\u003eMaybe[SubPath]-\u003eIO(FL(PrimOf a)d c)",
        "package": "darcs",
        "partial": "Changes",
        "signature": "(UseIndex,ScanKnown)-\u003eRepository p r u t-\u003eMaybe[SubPath]-\u003eIO(FL(PrimOf p)t u)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:unrevertUrl",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e String",
        "fct-source": "src/Darcs-Repository-Internal.html#unrevertUrl",
        "fct-type": "function",
        "title": "unrevertUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "unrevertUrl",
        "normalized": "Repository a b c d-\u003eString",
        "package": "darcs",
        "partial": "Url",
        "signature": "Repository p r u t-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:withGutsOf",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withGutsOf",
        "fct-type": "function",
        "title": "withGutsOf"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "withGutsOf",
        "normalized": "Repository a b c d-\u003eIO e-\u003eIO e",
        "package": "darcs",
        "partial": "Guts Of",
        "signature": "Repository p r u t-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:withRecorded",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "Repository p r u t -\u003e ((AbsolutePath -\u003e IO a) -\u003e IO a) -\u003e (AbsolutePath -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRecorded",
        "fct-type": "function",
        "title": "withRecorded"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "withRecorded",
        "normalized": "Repository a b c d-\u003e((AbsolutePath-\u003eIO e)-\u003eIO e)-\u003e(AbsolutePath-\u003eIO e)-\u003eIO e",
        "package": "darcs",
        "partial": "Recorded",
        "signature": "Repository p r u t-\u003e((AbsolutePath-\u003eIO a)-\u003eIO a)-\u003e(AbsolutePath-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:withRepoLock",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepoLock",
        "fct-type": "function",
        "title": "withRepoLock"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "withRepoLock",
        "normalized": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a",
        "package": "darcs",
        "partial": "Repo Lock",
        "signature": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:withRepoReadLock",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepoReadLock",
        "fct-type": "function",
        "title": "withRepoReadLock"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "withRepoReadLock",
        "normalized": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a",
        "package": "darcs",
        "partial": "Repo Read Lock",
        "signature": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:withRepository",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepository",
        "fct-type": "function",
        "title": "withRepository"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "withRepository",
        "normalized": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a",
        "package": "darcs",
        "partial": "Repository",
        "signature": "[DarcsFlag]-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:withRepositoryDirectory",
      "description": {
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "forall a.  [DarcsFlag] -\u003e String -\u003e RepoJob a -\u003e IO a",
        "fct-source": "src/Darcs-Repository-Internal.html#withRepositoryDirectory",
        "fct-type": "function",
        "title": "withRepositoryDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "withRepositoryDirectory",
        "normalized": "a b[DarcsFlag]-\u003eString-\u003eRepoJob c-\u003eIO c",
        "package": "darcs",
        "partial": "Repository Directory",
        "signature": "forall a.[DarcsFlag]-\u003eString-\u003eRepoJob a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Repository.html#v:writePatchSet",
      "description": {
        "fct-descr": "\u003cp\u003ewritePatchSet is like patchSetToRepository, except that it doesn't\n touch the working directory or pristine cache.\n\u003c/p\u003e",
        "fct-module": "Darcs.Repository",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p Origin x -\u003e [DarcsFlag] -\u003e IO (Repository p r u t)",
        "fct-source": "src/Darcs-Repository.html#writePatchSet",
        "fct-type": "function",
        "title": "writePatchSet"
      },
      "index": {
        "description": "writePatchSet is like patchSetToRepository except that it doesn touch the working directory or pristine cache",
        "hierarchy": "Darcs Repository",
        "module": "Darcs.Repository",
        "name": "writePatchSet",
        "normalized": "PatchSet a Origin b-\u003e[DarcsFlag]-\u003eIO(Repository a c d e)",
        "package": "darcs",
        "partial": "Patch Set",
        "signature": "PatchSet p Origin x-\u003e[DarcsFlag]-\u003eIO(Repository p r u t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Resolution.html#",
      "description": {
        "fct-module": "Darcs.Resolution",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Resolution.html",
        "fct-type": "module",
        "title": "Resolution"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Resolution",
        "module": "Darcs.Resolution",
        "name": "Resolution",
        "normalized": "",
        "package": "darcs",
        "partial": "Resolution",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Resolution.html#v:externalResolution",
      "description": {
        "fct-module": "Darcs.Resolution",
        "fct-package": "darcs",
        "fct-signature": "Tree IO-\u003e String-\u003e [DarcsFlag]-\u003e FL (PrimOf p) x y-\u003e FL (PrimOf p) x z-\u003e FL p y a-\u003e IO (Sealed (FL (PrimOf p) a))",
        "fct-type": "function",
        "title": "externalResolution"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Resolution",
        "module": "Darcs.Resolution",
        "name": "externalResolution",
        "normalized": "Tree IO-\u003eString-\u003e[DarcsFlag]-\u003eFL(PrimOf a)b c-\u003eFL(PrimOf a)b d-\u003eFL a c e-\u003eIO(Sealed(FL(PrimOf a)e))",
        "package": "darcs",
        "partial": "Resolution",
        "signature": "Tree IO-\u003eString-\u003e[DarcsFlag]-\u003eFL(PrimOf p)x y-\u003eFL(PrimOf p)x z-\u003eFL p y a-\u003eIO(Sealed(FL(PrimOf p)a))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Resolution.html#v:patchsetConflictResolutions",
      "description": {
        "fct-module": "Darcs.Resolution",
        "fct-package": "darcs",
        "fct-signature": "PatchSet p Origin x -\u003e Sealed (FL (PrimOf p) x)",
        "fct-source": "src/Darcs-Resolution.html#patchsetConflictResolutions",
        "fct-type": "function",
        "title": "patchsetConflictResolutions"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Resolution",
        "module": "Darcs.Resolution",
        "name": "patchsetConflictResolutions",
        "normalized": "PatchSet a Origin b-\u003eSealed(FL(PrimOf a)b)",
        "package": "darcs",
        "partial": "Conflict Resolutions",
        "signature": "PatchSet p Origin x-\u003eSealed(FL(PrimOf p)x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Resolution.html#v:standardResolution",
      "description": {
        "fct-module": "Darcs.Resolution",
        "fct-package": "darcs",
        "fct-signature": "FL p x y -\u003e Sealed (FL (PrimOf p) y)",
        "fct-source": "src/Darcs-Resolution.html#standardResolution",
        "fct-type": "function",
        "title": "standardResolution"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Resolution",
        "module": "Darcs.Resolution",
        "name": "standardResolution",
        "normalized": "FL a b c-\u003eSealed(FL(PrimOf a)c)",
        "package": "darcs",
        "partial": "Resolution",
        "signature": "FL p x y-\u003eSealed(FL(PrimOf p)y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RunCommand.html#",
      "description": {
        "fct-module": "Darcs.RunCommand",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-RunCommand.html",
        "fct-type": "module",
        "title": "RunCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RunCommand",
        "module": "Darcs.RunCommand",
        "name": "RunCommand",
        "normalized": "",
        "package": "darcs",
        "partial": "Run Command",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-RunCommand.html#v:runTheCommand",
      "description": {
        "fct-module": "Darcs.RunCommand",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl] -\u003e String -\u003e [String] -\u003e IO ()",
        "fct-source": "src/Darcs-RunCommand.html#runTheCommand",
        "fct-type": "function",
        "title": "runTheCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs RunCommand",
        "module": "Darcs.RunCommand",
        "name": "runTheCommand",
        "normalized": "[CommandControl]-\u003eString-\u003e[String]-\u003eIO()",
        "package": "darcs",
        "partial": "The Command",
        "signature": "[CommandControl]-\u003eString-\u003e[String]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#",
      "description": {
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-SelectChanges.html",
        "fct-type": "module",
        "title": "SelectChanges"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "SelectChanges",
        "normalized": "",
        "package": "darcs",
        "partial": "Select Changes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#t:WhichChanges",
      "description": {
        "fct-descr": "\u003cp\u003eWhen asking about patches, we either ask about them in\n oldest-first or newest first (with respect to the current ordering\n of the repository), and we either want an initial segment or a\n final segment of the poset of patches.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eFirst\u003c/code\u003e: ask for an initial\n segment, first patches first (default for all pull-like commands)\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eFirstReversed\u003c/code\u003e: ask for an initial segment, last patches first\n (used to ask about dependencies in record, and for pull-like\n commands with the \u003ccode\u003e--reverse\u003c/code\u003e flag).\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eLastReversed\u003c/code\u003e: ask for a final segment, last patches first. (default\n for unpull-like commands, except for selecting *primitive* patches in\n rollback)\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eLast\u003c/code\u003e: ask for a final segment, first patches first. (used for selecting\n primitive patches in rollback, and for unpull-like commands with the\n \u003ccode\u003e--reverse\u003c/code\u003e flag\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-SelectChanges.html#WhichChanges",
        "fct-type": "data",
        "title": "WhichChanges"
      },
      "index": {
        "description": "When asking about patches we either ask about them in oldest-first or newest first with respect to the current ordering of the repository and we either want an initial segment or final segment of the poset of patches First ask for an initial segment first patches first default for all pull-like commands FirstReversed ask for an initial segment last patches first used to ask about dependencies in record and for pull-like commands with the reverse flag LastReversed ask for final segment last patches first default for unpull-like commands except for selecting primitive patches in rollback Last ask for final segment first patches first used for selecting primitive patches in rollback and for unpull-like commands with the reverse flag",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "WhichChanges",
        "normalized": "",
        "package": "darcs",
        "partial": "Which Changes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:First",
      "description": {
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "First",
        "fct-source": "src/Darcs-SelectChanges.html#WhichChanges",
        "fct-type": "function",
        "title": "First"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "First",
        "normalized": "",
        "package": "darcs",
        "partial": "First",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:FirstReversed",
      "description": {
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "FirstReversed",
        "fct-source": "src/Darcs-SelectChanges.html#WhichChanges",
        "fct-type": "function",
        "title": "FirstReversed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "FirstReversed",
        "normalized": "",
        "package": "darcs",
        "partial": "First Reversed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:Last",
      "description": {
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "Last",
        "fct-source": "src/Darcs-SelectChanges.html#WhichChanges",
        "fct-type": "function",
        "title": "Last"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "Last",
        "normalized": "",
        "package": "darcs",
        "partial": "Last",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:LastReversed",
      "description": {
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "LastReversed",
        "fct-source": "src/Darcs-SelectChanges.html#WhichChanges",
        "fct-type": "function",
        "title": "LastReversed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "LastReversed",
        "normalized": "",
        "package": "darcs",
        "partial": "Last Reversed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:filterOutConflicts",
      "description": {
        "fct-descr": "\u003cp\u003eOptionally remove any patches (+dependencies) from a sequence that\n conflict with the recorded or unrecorded changes in a repo\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag]-\u003e RL (PatchInfoAnd p) x t-\u003e Repository p r u t-\u003e FL (PatchInfoAnd p) x z-\u003e IO (Bool, Sealed (FL (PatchInfoAnd p) x))",
        "fct-type": "function",
        "title": "filterOutConflicts"
      },
      "index": {
        "description": "Optionally remove any patches dependencies from sequence that conflict with the recorded or unrecorded changes in repo",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "filterOutConflicts",
        "normalized": "[DarcsFlag]-\u003eRL(PatchInfoAnd a)b c-\u003eRepository a d e c-\u003eFL(PatchInfoAnd a)b f-\u003eIO(Bool,Sealed(FL(PatchInfoAnd a)b))",
        "package": "darcs",
        "partial": "Out Conflicts",
        "signature": "[DarcsFlag]-\u003eRL(PatchInfoAnd p)x t-\u003eRepository p r u t-\u003eFL(PatchInfoAnd p)x z-\u003eIO(Bool,Sealed(FL(PatchInfoAnd p)x))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:runSelection",
      "description": {
        "fct-descr": "\u003cp\u003eruns a \u003ccode\u003ePatchSelection\u003c/code\u003e action in the given \u003ccode\u003ePatchSelectionContext\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "PatchSelection p x y -\u003e PatchSelectionContext p -\u003e IO ((FL p :\u003e FL p) x y)",
        "fct-source": "src/Darcs-SelectChanges.html#runSelection",
        "fct-type": "function",
        "title": "runSelection"
      },
      "index": {
        "description": "runs PatchSelection action in the given PatchSelectionContext",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "runSelection",
        "normalized": "PatchSelection a b c-\u003ePatchSelectionContext a-\u003eIO((FL a FL a)b c)",
        "package": "darcs",
        "partial": "Selection",
        "signature": "PatchSelection p x y-\u003ePatchSelectionContext p-\u003eIO((FL p FL p)x y)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:selectChanges",
      "description": {
        "fct-descr": "\u003cp\u003eSelect patches from a \u003ccode\u003eFL\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "WhichChanges -\u003e FL p x y -\u003e PatchSelection p x y",
        "fct-source": "src/Darcs-SelectChanges.html#selectChanges",
        "fct-type": "function",
        "title": "selectChanges"
      },
      "index": {
        "description": "Select patches from FL",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "selectChanges",
        "normalized": "WhichChanges-\u003eFL a b c-\u003ePatchSelection a b c",
        "package": "darcs",
        "partial": "Changes",
        "signature": "WhichChanges-\u003eFL p x y-\u003ePatchSelection p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:selectionContext",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003ePatchSelectionContext\u003c/code\u003e for selecting full patches (\u003ccode\u003e\u003ca\u003ePatchInfoAnd\u003c/a\u003e\u003c/code\u003e patches)\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [DarcsFlag] -\u003e Maybe (Splitter (PatchInfoAnd p)) -\u003e Maybe [FilePath] -\u003e PatchSelectionContext (PatchInfoAnd p)",
        "fct-source": "src/Darcs-SelectChanges.html#selectionContext",
        "fct-type": "function",
        "title": "selectionContext"
      },
      "index": {
        "description": "PatchSelectionContext for selecting full patches PatchInfoAnd patches",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "selectionContext",
        "normalized": "String-\u003e[DarcsFlag]-\u003eMaybe(Splitter(PatchInfoAnd a))-\u003eMaybe[FilePath]-\u003ePatchSelectionContext(PatchInfoAnd a)",
        "package": "darcs",
        "partial": "Context",
        "signature": "String-\u003e[DarcsFlag]-\u003eMaybe(Splitter(PatchInfoAnd p))-\u003eMaybe[FilePath]-\u003ePatchSelectionContext(PatchInfoAnd p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:selectionContextPrim",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003ePatchSelectionContext\u003c/code\u003e for selecting \u003ccode\u003ePrim\u003c/code\u003e patches.\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [DarcsFlag] -\u003e Maybe (Splitter prim) -\u003e Maybe [FilePath] -\u003e Maybe (Tree IO) -\u003e PatchSelectionContext prim",
        "fct-source": "src/Darcs-SelectChanges.html#selectionContextPrim",
        "fct-type": "function",
        "title": "selectionContextPrim"
      },
      "index": {
        "description": "PatchSelectionContext for selecting Prim patches",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "selectionContextPrim",
        "normalized": "String-\u003e[DarcsFlag]-\u003eMaybe(Splitter a)-\u003eMaybe[FilePath]-\u003eMaybe(Tree IO)-\u003ePatchSelectionContext a",
        "package": "darcs",
        "partial": "Context Prim",
        "signature": "String-\u003e[DarcsFlag]-\u003eMaybe(Splitter prim)-\u003eMaybe[FilePath]-\u003eMaybe(Tree IO)-\u003ePatchSelectionContext prim"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:viewChanges",
      "description": {
        "fct-descr": "\u003cp\u003eThe equivalent of \u003ccode\u003e\u003ca\u003eselectChanges\u003c/a\u003e\u003c/code\u003e for the \u003ccode\u003edarcs changes\u003c/code\u003e command\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e [Sealed2 p] -\u003e IO ()",
        "fct-source": "src/Darcs-SelectChanges.html#viewChanges",
        "fct-type": "function",
        "title": "viewChanges"
      },
      "index": {
        "description": "The equivalent of selectChanges for the darcs changes command",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "viewChanges",
        "normalized": "[DarcsFlag]-\u003e[Sealed a]-\u003eIO()",
        "package": "darcs",
        "partial": "Changes",
        "signature": "[DarcsFlag]-\u003e[Sealed p]-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SelectChanges.html#v:withSelectedPatchFromRepo",
      "description": {
        "fct-descr": "\u003cp\u003eThe function for selecting a patch to amend record. Read at your own risks.\n\u003c/p\u003e",
        "fct-module": "Darcs.SelectChanges",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Repository p r u t -\u003e [DarcsFlag] -\u003e (forall a.  (FL (PatchInfoAnd p) :\u003e PatchInfoAnd p) a r -\u003e IO ()) -\u003e IO ()",
        "fct-source": "src/Darcs-SelectChanges.html#withSelectedPatchFromRepo",
        "fct-type": "function",
        "title": "withSelectedPatchFromRepo"
      },
      "index": {
        "description": "The function for selecting patch to amend record Read at your own risks",
        "hierarchy": "Darcs SelectChanges",
        "module": "Darcs.SelectChanges",
        "name": "withSelectedPatchFromRepo",
        "normalized": "String-\u003eRepository a b c d-\u003e[DarcsFlag]-\u003e(e f(FL(PatchInfoAnd a)PatchInfoAnd a)g b-\u003eIO())-\u003eIO()",
        "package": "darcs",
        "partial": "Selected Patch From Repo",
        "signature": "String-\u003eRepository p r u t-\u003e[DarcsFlag]-\u003e(forall a.(FL(PatchInfoAnd p)PatchInfoAnd p)a r-\u003eIO())-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-SignalHandler.html",
        "fct-type": "module",
        "title": "SignalHandler"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "SignalHandler",
        "normalized": "",
        "package": "darcs",
        "partial": "Signal Handler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#v:catchInterrupt",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-SignalHandler.html#catchInterrupt",
        "fct-type": "function",
        "title": "catchInterrupt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "catchInterrupt",
        "normalized": "IO a-\u003eIO a-\u003eIO a",
        "package": "darcs",
        "partial": "Interrupt",
        "signature": "IO a-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#v:catchNonSignal",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e (SomeException -\u003e IO a) -\u003e IO a",
        "fct-source": "src/Darcs-SignalHandler.html#catchNonSignal",
        "fct-type": "function",
        "title": "catchNonSignal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "catchNonSignal",
        "normalized": "IO a-\u003e(SomeException-\u003eIO a)-\u003eIO a",
        "package": "darcs",
        "partial": "Non Signal",
        "signature": "IO a-\u003e(SomeException-\u003eIO a)-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#v:stdoutIsAPipe",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "IO Bool",
        "fct-source": "src/Darcs-SignalHandler.html#stdoutIsAPipe",
        "fct-type": "function",
        "title": "stdoutIsAPipe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "stdoutIsAPipe",
        "normalized": "",
        "package": "darcs",
        "partial": "Is APipe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#v:tryNonSignal",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO (Either SomeException a)",
        "fct-source": "src/Darcs-SignalHandler.html#tryNonSignal",
        "fct-type": "function",
        "title": "tryNonSignal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "tryNonSignal",
        "normalized": "IO a-\u003eIO(Either SomeException a)",
        "package": "darcs",
        "partial": "Non Signal",
        "signature": "IO a-\u003eIO(Either SomeException a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#v:withSignalsBlocked",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a",
        "fct-source": "src/Darcs-SignalHandler.html#withSignalsBlocked",
        "fct-type": "function",
        "title": "withSignalsBlocked"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "withSignalsBlocked",
        "normalized": "IO a-\u003eIO a",
        "package": "darcs",
        "partial": "Signals Blocked",
        "signature": "IO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-SignalHandler.html#v:withSignalsHandled",
      "description": {
        "fct-module": "Darcs.SignalHandler",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a",
        "fct-source": "src/Darcs-SignalHandler.html#withSignalsHandled",
        "fct-type": "function",
        "title": "withSignalsHandled"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs SignalHandler",
        "module": "Darcs.SignalHandler",
        "name": "withSignalsHandled",
        "normalized": "IO a-\u003eIO a",
        "package": "darcs",
        "partial": "Signals Handled",
        "signature": "IO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Ssh.html",
        "fct-type": "module",
        "title": "Ssh"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "Ssh",
        "normalized": "",
        "package": "darcs",
        "partial": "Ssh",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#t:SSHCmd",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Ssh.html#SSHCmd",
        "fct-type": "data",
        "title": "SSHCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "SSHCmd",
        "normalized": "",
        "package": "darcs",
        "partial": "SSHCmd",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:SCP",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "SCP",
        "fct-source": "src/Darcs-Ssh.html#SSHCmd",
        "fct-type": "function",
        "title": "SCP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "SCP",
        "normalized": "",
        "package": "darcs",
        "partial": "SCP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:SFTP",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "SFTP",
        "fct-source": "src/Darcs-Ssh.html#SSHCmd",
        "fct-type": "function",
        "title": "SFTP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "SFTP",
        "normalized": "",
        "package": "darcs",
        "partial": "SFTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:SSH",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "SSH",
        "fct-source": "src/Darcs-Ssh.html#SSHCmd",
        "fct-type": "function",
        "title": "SSH"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "SSH",
        "normalized": "",
        "package": "darcs",
        "partial": "SSH",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:copySSH",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "RemoteDarcs -\u003e SshFilePath -\u003e FilePath -\u003e IO ()",
        "fct-source": "src/Darcs-Ssh.html#copySSH",
        "fct-type": "function",
        "title": "copySSH"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "copySSH",
        "normalized": "RemoteDarcs-\u003eSshFilePath-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "SSH",
        "signature": "RemoteDarcs-\u003eSshFilePath-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:environmentHelpScp",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Ssh.html#environmentHelpScp",
        "fct-type": "function",
        "title": "environmentHelpScp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "environmentHelpScp",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Scp",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:environmentHelpSsh",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Ssh.html#environmentHelpSsh",
        "fct-type": "function",
        "title": "environmentHelpSsh"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "environmentHelpSsh",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Ssh",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:environmentHelpSshPort",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Ssh.html#environmentHelpSshPort",
        "fct-type": "function",
        "title": "environmentHelpSshPort"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "environmentHelpSshPort",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Ssh Port",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:getSSH",
      "description": {
        "fct-descr": "\u003cp\u003eReturn the command and arguments needed to run an ssh command\n   First try the appropriate darcs environment variable and SSH_PORT\n   defaulting to \u003ca\u003essh\u003c/a\u003e and no specified port.\n\u003c/p\u003e",
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "SSHCmd -\u003e IO (String, [String])",
        "fct-source": "src/Darcs-Ssh.html#getSSH",
        "fct-type": "function",
        "title": "getSSH"
      },
      "index": {
        "description": "Return the command and arguments needed to run an ssh command First try the appropriate darcs environment variable and SSH PORT defaulting to ssh and no specified port",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "getSSH",
        "normalized": "SSHCmd-\u003eIO(String,[String])",
        "package": "darcs",
        "partial": "SSH",
        "signature": "SSHCmd-\u003eIO(String,[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Ssh.html#v:remoteDarcs",
      "description": {
        "fct-module": "Darcs.Ssh",
        "fct-package": "darcs",
        "fct-signature": "RemoteDarcs -\u003e String",
        "fct-source": "src/Darcs-Ssh.html#remoteDarcs",
        "fct-type": "function",
        "title": "remoteDarcs"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Ssh",
        "module": "Darcs.Ssh",
        "name": "remoteDarcs",
        "normalized": "RemoteDarcs-\u003eString",
        "package": "darcs",
        "partial": "Darcs",
        "signature": "RemoteDarcs-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Test.html#",
      "description": {
        "fct-module": "Darcs.Test",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Test.html",
        "fct-type": "module",
        "title": "Test"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Test",
        "module": "Darcs.Test",
        "name": "Test",
        "normalized": "",
        "package": "darcs",
        "partial": "Test",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Test.html#v:getTest",
      "description": {
        "fct-module": "Darcs.Test",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e IO (IO ExitCode)",
        "fct-source": "src/Darcs-Test.html#getTest",
        "fct-type": "function",
        "title": "getTest"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Test",
        "module": "Darcs.Test",
        "name": "getTest",
        "normalized": "[DarcsFlag]-\u003eIO(IO ExitCode)",
        "package": "darcs",
        "partial": "Test",
        "signature": "[DarcsFlag]-\u003eIO(IO ExitCode)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Test.html#v:runPosthook",
      "description": {
        "fct-module": "Darcs.Test",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e AbsolutePath -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Test.html#runPosthook",
        "fct-type": "function",
        "title": "runPosthook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Test",
        "module": "Darcs.Test",
        "name": "runPosthook",
        "normalized": "[DarcsFlag]-\u003eAbsolutePath-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Posthook",
        "signature": "[DarcsFlag]-\u003eAbsolutePath-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Test.html#v:runPrehook",
      "description": {
        "fct-module": "Darcs.Test",
        "fct-package": "darcs",
        "fct-signature": "[DarcsFlag] -\u003e AbsolutePath -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Test.html#runPrehook",
        "fct-type": "function",
        "title": "runPrehook"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Test",
        "module": "Darcs.Test",
        "name": "runPrehook",
        "normalized": "[DarcsFlag]-\u003eAbsolutePath-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Prehook",
        "signature": "[DarcsFlag]-\u003eAbsolutePath-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-TheCommands.html#",
      "description": {
        "fct-module": "Darcs.TheCommands",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-TheCommands.html",
        "fct-type": "module",
        "title": "TheCommands"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs TheCommands",
        "module": "Darcs.TheCommands",
        "name": "TheCommands",
        "normalized": "",
        "package": "darcs",
        "partial": "The Commands",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-TheCommands.html#v:commandControlList",
      "description": {
        "fct-descr": "\u003cp\u003eThe commands that darcs knows about (e.g. whatsnew, record),\n   organized into thematic groups.  Note that hidden commands\n   are also listed here.\n\u003c/p\u003e",
        "fct-module": "Darcs.TheCommands",
        "fct-package": "darcs",
        "fct-signature": "[CommandControl]",
        "fct-source": "src/Darcs-TheCommands.html#commandControlList",
        "fct-type": "function",
        "title": "commandControlList"
      },
      "index": {
        "description": "The commands that darcs knows about e.g whatsnew record organized into thematic groups Note that hidden commands are also listed here",
        "hierarchy": "Darcs TheCommands",
        "module": "Darcs.TheCommands",
        "name": "commandControlList",
        "normalized": "[CommandControl]",
        "package": "darcs",
        "partial": "Control List",
        "signature": "[CommandControl]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePath resolving:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e An http URL contains the sequence \u003ccode\u003e\"http(s)://\"\u003c/code\u003e.\n\u003c/li\u003e\u003cli\u003e A local filepath does not contain colons, except\n      as second character (windows drives) when this\n      filepath is meant to be used as repository name\n\u003c/li\u003e\u003cli\u003e A path that is neither an http URL nor a local file\n      is an ssh-path.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eExamples:\n\u003c/p\u003e\u003cpre\u003e /usr/repo/foo                 -- local file\n c:/src/darcs                  -- local file\n http://darcs.net/             -- URL\n peter@host:/path              -- ssh\n droundy@host:                 -- ssh\n host:/path                    -- ssh\n\u003c/pre\u003e\u003cp\u003eThis means that single-letter hosts in ssh-paths do not work,\n  unless a username is provided.\n\u003c/p\u003e\u003cp\u003ePerhaps ssh-paths should use \u003ccode\u003e\"ssh://user@host/path\"\u003c/code\u003e-syntax instead?\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-URL.html",
        "fct-type": "module",
        "title": "URL"
      },
      "index": {
        "description": "Path resolving An http URL contains the sequence http local filepath does not contain colons except as second character windows drives when this filepath is meant to be used as repository name path that is neither an http URL nor local file is an ssh-path Examples usr repo foo local file src darcs local file http darcs.net URL peter@host path ssh droundy@host ssh host path ssh This means that single-letter hosts in ssh-paths do not work unless username is provided Perhaps ssh-paths should use ssh user@host path syntax instead",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "URL",
        "normalized": "",
        "package": "darcs",
        "partial": "URL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#t:SshFilePath",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-URL.html#SshFilePath",
        "fct-type": "data",
        "title": "SshFilePath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "SshFilePath",
        "normalized": "",
        "package": "darcs",
        "partial": "Ssh File Path",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:isAbsolute",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-URL.html#isAbsolute",
        "fct-type": "function",
        "title": "isAbsolute"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "isAbsolute",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Absolute",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:isFile",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-URL.html#isFile",
        "fct-type": "function",
        "title": "isFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "isFile",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "File",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:isHttpUrl",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-URL.html#isHttpUrl",
        "fct-type": "function",
        "title": "isHttpUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "isHttpUrl",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Http Url",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:isRelative",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-URL.html#isRelative",
        "fct-type": "function",
        "title": "isRelative"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "isRelative",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Relative",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:isSshNopath",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-URL.html#isSshNopath",
        "fct-type": "function",
        "title": "isSshNopath"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "isSshNopath",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Ssh Nopath",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:isSshUrl",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-URL.html#isSshUrl",
        "fct-type": "function",
        "title": "isSshUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "isSshUrl",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "Ssh Url",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:splitSshUrl",
      "description": {
        "fct-descr": "\u003cp\u003eGives the (user, host, dir) out of an ssh url\n\u003c/p\u003e",
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e SshFilePath",
        "fct-source": "src/Darcs-URL.html#splitSshUrl",
        "fct-type": "function",
        "title": "splitSshUrl"
      },
      "index": {
        "description": "Gives the user host dir out of an ssh url",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "splitSshUrl",
        "normalized": "String-\u003eSshFilePath",
        "package": "darcs",
        "partial": "Ssh Url",
        "signature": "String-\u003eSshFilePath"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:sshFile",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "SshFilePath -\u003e String",
        "fct-source": "src/Darcs-URL.html#sshFile",
        "fct-type": "function",
        "title": "sshFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "sshFile",
        "normalized": "SshFilePath-\u003eString",
        "package": "darcs",
        "partial": "File",
        "signature": "SshFilePath-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:sshRepo",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "SshFilePath -\u003e String",
        "fct-source": "src/Darcs-URL.html#sshRepo",
        "fct-type": "function",
        "title": "sshRepo"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "sshRepo",
        "normalized": "SshFilePath-\u003eString",
        "package": "darcs",
        "partial": "Repo",
        "signature": "SshFilePath-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:sshUhost",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "SshFilePath -\u003e String",
        "fct-source": "src/Darcs-URL.html#sshUhost",
        "fct-type": "function",
        "title": "sshUhost"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "sshUhost",
        "normalized": "SshFilePath-\u003eString",
        "package": "darcs",
        "partial": "Uhost",
        "signature": "SshFilePath-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-URL.html#v:urlOf",
      "description": {
        "fct-module": "Darcs.URL",
        "fct-package": "darcs",
        "fct-signature": "SshFilePath -\u003e String",
        "fct-source": "src/Darcs-URL.html#urlOf",
        "fct-type": "function",
        "title": "urlOf"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs URL",
        "module": "Darcs.URL",
        "name": "urlOf",
        "normalized": "SshFilePath-\u003eString",
        "package": "darcs",
        "partial": "Of",
        "signature": "SshFilePath-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVarious utility functions that do not belong anywhere else.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Utils.html",
        "fct-type": "module",
        "title": "Utils"
      },
      "index": {
        "description": "Various utility functions that do not belong anywhere else",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "Utils",
        "normalized": "",
        "package": "darcs",
        "partial": "Utils",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#t:PromptConfig",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "data",
        "title": "PromptConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "PromptConfig",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:PromptConfig",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "PromptConfig",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "function",
        "title": "PromptConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "PromptConfig",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:addToErrorLoc",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IOException -\u003e String -\u003e IOException",
        "fct-source": "src/Darcs-Utils.html#addToErrorLoc",
        "fct-type": "function",
        "title": "addToErrorLoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "addToErrorLoc",
        "normalized": "IOException-\u003eString-\u003eIOException",
        "package": "darcs",
        "partial": "To Error Loc",
        "signature": "IOException-\u003eString-\u003eIOException"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:askEnter",
      "description": {
        "fct-descr": "\u003cp\u003eAsk the user to press Enter\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String-\u003e IO ()",
        "fct-type": "function",
        "title": "askEnter"
      },
      "index": {
        "description": "Ask the user to press Enter",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "askEnter",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Enter",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:askUser",
      "description": {
        "fct-descr": "\u003cp\u003eAsk the user for a line of input.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String-\u003e IO String",
        "fct-type": "function",
        "title": "askUser"
      },
      "index": {
        "description": "Ask the user for line of input",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "askUser",
        "normalized": "String-\u003eIO String",
        "package": "darcs",
        "partial": "User",
        "signature": "String-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:askUserListItem",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003easkUserListItem prompt xs\u003c/code\u003e enumerates \u003ccode\u003exs\u003c/code\u003e on the screen, allowing\n   the user to choose one of the items\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String] -\u003e IO String",
        "fct-source": "src/Darcs-Utils.html#askUserListItem",
        "fct-type": "function",
        "title": "askUserListItem"
      },
      "index": {
        "description": "askUserListItem prompt xs enumerates xs on the screen allowing the user to choose one of the items",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "askUserListItem",
        "normalized": "String-\u003e[String]-\u003eIO String",
        "package": "darcs",
        "partial": "User List Item",
        "signature": "String-\u003e[String]-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:breakCommand",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e (String, [String])",
        "fct-source": "src/Darcs-Utils.html#breakCommand",
        "fct-type": "function",
        "title": "breakCommand"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "breakCommand",
        "normalized": "String-\u003e(String,[String])",
        "package": "darcs",
        "partial": "Command",
        "signature": "String-\u003e(String,[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:catchall",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-Utils.html#catchall",
        "fct-type": "function",
        "title": "catchall"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "catchall",
        "normalized": "IO a-\u003eIO a-\u003eIO a",
        "package": "darcs",
        "partial": "",
        "signature": "IO a-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:clarifyErrors",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e String -\u003e IO a",
        "fct-source": "src/Darcs-Utils.html#clarifyErrors",
        "fct-type": "function",
        "title": "clarifyErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "clarifyErrors",
        "normalized": "IO a-\u003eString-\u003eIO a",
        "package": "darcs",
        "partial": "Errors",
        "signature": "IO a-\u003eString-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:editFile",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eeditFile f\u003c/code\u003e lets the user edit a file which could but does not need to\n already exist. This function returns the exit code from the text editor and a\n flag indicating if the user made any changes.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO (ExitCode, Bool)",
        "fct-source": "src/Darcs-Utils.html#editFile",
        "fct-type": "function",
        "title": "editFile"
      },
      "index": {
        "description": "editFile lets the user edit file which could but does not need to already exist This function returns the exit code from the text editor and flag indicating if the user made any changes",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "editFile",
        "normalized": "a-\u003eIO(ExitCode,Bool)",
        "package": "darcs",
        "partial": "File",
        "signature": "p-\u003eIO(ExitCode,Bool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:environmentHelpEditor",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Utils.html#environmentHelpEditor",
        "fct-type": "function",
        "title": "environmentHelpEditor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "environmentHelpEditor",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Editor",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:environmentHelpPager",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/Darcs-Utils.html#environmentHelpPager",
        "fct-type": "function",
        "title": "environmentHelpPager"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "environmentHelpPager",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Pager",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:filterFilePaths",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003efilterPath\u003c/code\u003e, but for ordinary \u003ccode\u003e\u003ca\u003eFilePath\u003c/a\u003e\u003c/code\u003es (as opposed to\n AnchoredPath).\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[FilePath] -\u003e AnchoredPath -\u003e t -\u003e Bool",
        "fct-source": "src/Darcs-Utils.html#filterFilePaths",
        "fct-type": "function",
        "title": "filterFilePaths"
      },
      "index": {
        "description": "Same as filterPath but for ordinary FilePath as opposed to AnchoredPath",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "filterFilePaths",
        "normalized": "[FilePath]-\u003eAnchoredPath-\u003ea-\u003eBool",
        "package": "darcs",
        "partial": "File Paths",
        "signature": "[FilePath]-\u003eAnchoredPath-\u003et-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:filterPaths",
      "description": {
        "fct-descr": "\u003cp\u003eConstruct a filter from a list of AnchoredPaths, that will accept any path\n that is either a parent or a child of any of the listed paths, and discard\n everything else.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[AnchoredPath] -\u003e AnchoredPath -\u003e t -\u003e Bool",
        "fct-source": "src/Darcs-Utils.html#filterPaths",
        "fct-type": "function",
        "title": "filterPaths"
      },
      "index": {
        "description": "Construct filter from list of AnchoredPaths that will accept any path that is either parent or child of any of the listed paths and discard everything else",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "filterPaths",
        "normalized": "[AnchoredPath]-\u003eAnchoredPath-\u003ea-\u003eBool",
        "package": "darcs",
        "partial": "Paths",
        "signature": "[AnchoredPath]-\u003eAnchoredPath-\u003et-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:firstJustIO",
      "description": {
        "fct-descr": "\u003cp\u003eThe firstJustIO is a slight modification to firstJustM: the entries in the\n list must be IO monad operations and the firstJustIO will silently turn any\n monad call that throws an exception into Nothing, basically causing it to be\n ignored.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[IO (Maybe a)] -\u003e IO (Maybe a)",
        "fct-source": "src/Darcs-Utils.html#firstJustIO",
        "fct-type": "function",
        "title": "firstJustIO"
      },
      "index": {
        "description": "The firstJustIO is slight modification to firstJustM the entries in the list must be IO monad operations and the firstJustIO will silently turn any monad call that throws an exception into Nothing basically causing it to be ignored",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "firstJustIO",
        "normalized": "[IO(Maybe a)]-\u003eIO(Maybe a)",
        "package": "darcs",
        "partial": "Just IO",
        "signature": "[IO(Maybe a)]-\u003eIO(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:formatPath",
      "description": {
        "fct-descr": "\u003cp\u003eFormat a path for screen output, so that the user sees where the path\n begins and ends. Could (should?) also warn about unprintable characters here.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Darcs-Utils.html#formatPath",
        "fct-type": "function",
        "title": "formatPath"
      },
      "index": {
        "description": "Format path for screen output so that the user sees where the path begins and ends Could should also warn about unprintable characters here",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "formatPath",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "Path",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:getFileStatus",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO (Maybe FileStatus)",
        "fct-source": "src/Darcs-Utils.html#getFileStatus",
        "fct-type": "function",
        "title": "getFileStatus"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "getFileStatus",
        "normalized": "FilePath-\u003eIO(Maybe FileStatus)",
        "package": "darcs",
        "partial": "File Status",
        "signature": "FilePath-\u003eIO(Maybe FileStatus)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:getSystemEncoding",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IO String",
        "fct-source": "src/Darcs-Utils.html#getSystemEncoding",
        "fct-type": "function",
        "title": "getSystemEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "getSystemEncoding",
        "normalized": "",
        "package": "darcs",
        "partial": "System Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:getViewer",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IO String",
        "fct-source": "src/Darcs-Utils.html#getViewer",
        "fct-type": "function",
        "title": "getViewer"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "getViewer",
        "normalized": "",
        "package": "darcs",
        "partial": "Viewer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:isUTF8Locale",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eisUTF8\u003c/code\u003e checks if an encoding is UTF-8 (or ascii, since it is a\n subset of UTF-8).\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Darcs-Utils.html#isUTF8Locale",
        "fct-type": "function",
        "title": "isUTF8Locale"
      },
      "index": {
        "description": "isUTF8 checks if an encoding is UTF-8 or ascii since it is subset of UTF-8",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "isUTF8Locale",
        "normalized": "String-\u003eBool",
        "package": "darcs",
        "partial": "UTF Locale",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:maybeGetEnv",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO (Maybe String)",
        "fct-source": "src/Darcs-Utils.html#maybeGetEnv",
        "fct-type": "function",
        "title": "maybeGetEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "maybeGetEnv",
        "normalized": "String-\u003eIO(Maybe String)",
        "package": "darcs",
        "partial": "Get Env",
        "signature": "String-\u003eIO(Maybe String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:nubsort",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/Darcs-Utils.html#nubsort",
        "fct-type": "function",
        "title": "nubsort"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "nubsort",
        "normalized": "[a]-\u003e[a]",
        "package": "darcs",
        "partial": "",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:ortryrunning",
      "description": {
        "fct-descr": "\u003cp\u003eGiven two shell commands as arguments, execute the former.  The\n latter is then executed if the former failed because the executable\n wasn't found (code 127), wasn't executable (code 126) or some other\n exception occurred.  Other failures (such as the user holding ^C)\n do not cause the second command to be tried.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IO ExitCode -\u003e IO ExitCode -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Utils.html#ortryrunning",
        "fct-type": "function",
        "title": "ortryrunning"
      },
      "index": {
        "description": "Given two shell commands as arguments execute the former The latter is then executed if the former failed because the executable wasn found code wasn executable code or some other exception occurred Other failures such as the user holding do not cause the second command to be tried",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "ortryrunning",
        "normalized": "IO ExitCode-\u003eIO ExitCode-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "",
        "signature": "IO ExitCode-\u003eIO ExitCode-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:pAdvancedCharacters",
      "description": {
        "fct-descr": "\u003cp\u003eonly shown on help\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[Char]",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "function",
        "title": "pAdvancedCharacters"
      },
      "index": {
        "description": "only shown on help",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "pAdvancedCharacters",
        "normalized": "[Char]",
        "package": "darcs",
        "partial": "Advanced Characters",
        "signature": "[Char]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:pBasicCharacters",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[Char]",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "function",
        "title": "pBasicCharacters"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "pBasicCharacters",
        "normalized": "[Char]",
        "package": "darcs",
        "partial": "Basic Characters",
        "signature": "[Char]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:pDefault",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "Maybe Char",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "function",
        "title": "pDefault"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "pDefault",
        "normalized": "",
        "package": "darcs",
        "partial": "Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:pHelp",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[Char]",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "function",
        "title": "pHelp"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "pHelp",
        "normalized": "[Char]",
        "package": "darcs",
        "partial": "Help",
        "signature": "[Char]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:pPrompt",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/Darcs-Utils.html#PromptConfig",
        "fct-type": "function",
        "title": "pPrompt"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "pPrompt",
        "normalized": "",
        "package": "darcs",
        "partial": "Prompt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:prettyError",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IOError -\u003e String",
        "fct-source": "src/Darcs-Utils.html#prettyError",
        "fct-type": "function",
        "title": "prettyError"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "prettyError",
        "normalized": "IOError-\u003eString",
        "package": "darcs",
        "partial": "Error",
        "signature": "IOError-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:prettyException",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "SomeException -\u003e String",
        "fct-source": "src/Darcs-Utils.html#prettyException",
        "fct-type": "function",
        "title": "prettyException"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "prettyException",
        "normalized": "SomeException-\u003eString",
        "package": "darcs",
        "partial": "Exception",
        "signature": "SomeException-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:promptChar",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "PromptConfig -\u003e IO Char",
        "fct-source": "src/Darcs-Utils.html#promptChar",
        "fct-type": "function",
        "title": "promptChar"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "promptChar",
        "normalized": "PromptConfig-\u003eIO Char",
        "package": "darcs",
        "partial": "Char",
        "signature": "PromptConfig-\u003eIO Char"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:promptYorn",
      "description": {
        "fct-descr": "\u003cp\u003ePrompt the user for a yes or no\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "[Char] -\u003e IO Bool",
        "fct-source": "src/Darcs-Utils.html#promptYorn",
        "fct-type": "function",
        "title": "promptYorn"
      },
      "index": {
        "description": "Prompt the user for yes or no",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "promptYorn",
        "normalized": "[Char]-\u003eIO Bool",
        "package": "darcs",
        "partial": "Yorn",
        "signature": "[Char]-\u003eIO Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:runEditor",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO ExitCode",
        "fct-source": "src/Darcs-Utils.html#runEditor",
        "fct-type": "function",
        "title": "runEditor"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "runEditor",
        "normalized": "FilePath-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Editor",
        "signature": "FilePath-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:setDarcsEncodings",
      "description": {
        "fct-descr": "\u003cp\u003eIn some environments, darcs requires that certain global GHC library variables that\n control the encoding used in internal translations are set to specific values.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003esetDarcsEncoding\u003c/code\u003e enforces those settings, and should be called before the\n first time any darcs operation is run, and again if anything else might have\n set those encodings to different values.\n\u003c/p\u003e\u003cp\u003eNote that it isn't thread-safe and has a global effect on your program.\n\u003c/p\u003e\u003cp\u003eThe current behaviour of this function is as follows, though this may\n change in future:\n\u003c/p\u003e\u003cp\u003eEncodings are only set on GHC 7.4 and up, on any non-Windows platform.\n\u003c/p\u003e\u003cp\u003eTwo encodings are set, both to \u003ccode\u003eGHC.IO.Encoding.char8\u003c/code\u003e:\n \u003ccode\u003eGHC.IO.Encoding.setFileSystemEncoding\u003c/code\u003e and \u003ccode\u003eGHC.IO.Encoding.setForeignEncoding\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/Darcs-Utils.html#setDarcsEncodings",
        "fct-type": "function",
        "title": "setDarcsEncodings"
      },
      "index": {
        "description": "In some environments darcs requires that certain global GHC library variables that control the encoding used in internal translations are set to specific values setDarcsEncoding enforces those settings and should be called before the first time any darcs operation is run and again if anything else might have set those encodings to different values Note that it isn thread-safe and has global effect on your program The current behaviour of this function is as follows though this may change in future Encodings are only set on GHC and up on any non-Windows platform Two encodings are set both to GHC.IO.Encoding.char8 GHC.IO.Encoding.setFileSystemEncoding and GHC.IO.Encoding.setForeignEncoding",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "setDarcsEncodings",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Darcs Encodings",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:showHexLen",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e a -\u003e String",
        "fct-source": "src/Darcs-Utils.html#showHexLen",
        "fct-type": "function",
        "title": "showHexLen"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "showHexLen",
        "normalized": "Int-\u003ea-\u003eString",
        "package": "darcs",
        "partial": "Hex Len",
        "signature": "Int-\u003ea-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:stripCr",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Darcs-Utils.html#stripCr",
        "fct-type": "function",
        "title": "stripCr"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "stripCr",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "Cr",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:treeHas",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "Tree m -\u003e FilePath -\u003e m Bool",
        "fct-source": "src/Darcs-Utils.html#treeHas",
        "fct-type": "function",
        "title": "treeHas"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "treeHas",
        "normalized": "Tree a-\u003eFilePath-\u003ea Bool",
        "package": "darcs",
        "partial": "Has",
        "signature": "Tree m-\u003eFilePath-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:treeHasAnycase",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "Tree m -\u003e FilePath -\u003e m Bool",
        "fct-source": "src/Darcs-Utils.html#treeHasAnycase",
        "fct-type": "function",
        "title": "treeHasAnycase"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "treeHasAnycase",
        "normalized": "Tree a-\u003eFilePath-\u003ea Bool",
        "package": "darcs",
        "partial": "Has Anycase",
        "signature": "Tree m-\u003eFilePath-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:treeHasDir",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "Tree m -\u003e FilePath -\u003e m Bool",
        "fct-source": "src/Darcs-Utils.html#treeHasDir",
        "fct-type": "function",
        "title": "treeHasDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "treeHasDir",
        "normalized": "Tree a-\u003eFilePath-\u003ea Bool",
        "package": "darcs",
        "partial": "Has Dir",
        "signature": "Tree m-\u003eFilePath-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:treeHasFile",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "Tree m -\u003e FilePath -\u003e m Bool",
        "fct-source": "src/Darcs-Utils.html#treeHasFile",
        "fct-type": "function",
        "title": "treeHasFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "treeHasFile",
        "normalized": "Tree a-\u003eFilePath-\u003ea Bool",
        "package": "darcs",
        "partial": "Has File",
        "signature": "Tree m-\u003eFilePath-\u003em Bool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:withCurrentDirectory",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "p -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-Utils.html#withCurrentDirectory",
        "fct-type": "function",
        "title": "withCurrentDirectory"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "withCurrentDirectory",
        "normalized": "a-\u003eIO b-\u003eIO b",
        "package": "darcs",
        "partial": "Current Directory",
        "signature": "p-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Utils.html#v:withUMask",
      "description": {
        "fct-module": "Darcs.Utils",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO a -\u003e IO a",
        "fct-source": "src/Darcs-Utils.html#withUMask",
        "fct-type": "function",
        "title": "withUMask"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Utils",
        "module": "Darcs.Utils",
        "name": "withUMask",
        "normalized": "String-\u003eIO a-\u003eIO a",
        "package": "darcs",
        "partial": "UMask",
        "signature": "String-\u003eIO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#",
      "description": {
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Witnesses-Eq.html",
        "fct-type": "module",
        "title": "Eq"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "Eq",
        "normalized": "",
        "package": "darcs",
        "partial": "Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#t:EqCheck",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eEqCheck\u003c/a\u003e\u003c/code\u003e is used to pass around evidence (or lack thereof) of\n two witness types being equal.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Eq.html#EqCheck",
        "fct-type": "data",
        "title": "EqCheck"
      },
      "index": {
        "description": "EqCheck is used to pass around evidence or lack thereof of two witness types being equal",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "EqCheck",
        "normalized": "",
        "package": "darcs",
        "partial": "Eq Check",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#t:MyEq",
      "description": {
        "fct-descr": "\u003cp\u003eAn witness aware equality class.\n A minimal definition defines any one of \u003ccode\u003e\u003ca\u003eunsafeCompare\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e=\\/=\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003e=/\\=\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Witnesses-Eq.html#MyEq",
        "fct-type": "class",
        "title": "MyEq"
      },
      "index": {
        "description": "An witness aware equality class minimal definition defines any one of unsafeCompare and",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "MyEq",
        "normalized": "",
        "package": "darcs",
        "partial": "My Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#v:-61--47--92--61-",
      "description": {
        "fct-descr": "\u003cp\u003eCompare two things with the same ending witness. If the things\n compare equal, evidence of the starting witnesses being equal will\n be returned.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "p a c -\u003e p b c -\u003e EqCheck a b",
        "fct-source": "src/Darcs-Witnesses-Eq.html#%3D%2F%5C%3D",
        "fct-type": "method",
        "title": "(=/\\=)"
      },
      "index": {
        "description": "Compare two things with the same ending witness If the things compare equal evidence of the starting witnesses being equal will be returned",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "(=/\\=) =/\\=",
        "normalized": "a b c-\u003ea d c-\u003eEqCheck b d",
        "package": "darcs",
        "partial": "",
        "signature": "p a c-\u003ep b c-\u003eEqCheck a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#v:-61--92--47--61-",
      "description": {
        "fct-descr": "\u003cp\u003eCompare two things with the same starting witness. If the things\n compare equal, evidence of the ending witnesses being equal will\n be returned.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "p a b -\u003e p a c -\u003e EqCheck b c",
        "fct-source": "src/Darcs-Witnesses-Eq.html#%3D%5C%2F%3D",
        "fct-type": "method",
        "title": "(=\\/=)"
      },
      "index": {
        "description": "Compare two things with the same starting witness If the things compare equal evidence of the ending witnesses being equal will be returned",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "(=\\/=) =\\/=",
        "normalized": "a b c-\u003ea b d-\u003eEqCheck c d",
        "package": "darcs",
        "partial": "",
        "signature": "p a b-\u003ep a c-\u003eEqCheck b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#v:IsEq",
      "description": {
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "EqCheck a a",
        "fct-source": "src/Darcs-Witnesses-Eq.html#EqCheck",
        "fct-type": "function",
        "title": "IsEq"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "IsEq",
        "normalized": "",
        "package": "darcs",
        "partial": "Is Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#v:NotEq",
      "description": {
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "EqCheck a b",
        "fct-source": "src/Darcs-Witnesses-Eq.html#EqCheck",
        "fct-type": "function",
        "title": "NotEq"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "NotEq",
        "normalized": "",
        "package": "darcs",
        "partial": "Not Eq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#v:isIsEq",
      "description": {
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "EqCheck a b -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Eq.html#isIsEq",
        "fct-type": "function",
        "title": "isIsEq"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "isIsEq",
        "normalized": "EqCheck a b-\u003eBool",
        "package": "darcs",
        "partial": "Is Eq",
        "signature": "EqCheck a b-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Eq.html#v:unsafeCompare",
      "description": {
        "fct-descr": "\u003cp\u003eIt is unsafe to define a class instance via this method, because\n if it returns True then the default implementations of \u003ccode\u003e\u003ca\u003e=\\/=\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003e=/\\=\u003c/a\u003e\u003c/code\u003e\n will coerce the equality of two witnesses.\n\u003c/p\u003e\u003cp\u003eCalling this method is safe, although \u003ccode\u003e\u003ca\u003e=\\/=\u003c/a\u003e\u003c/code\u003e or \u003ccode\u003e\u003ca\u003e=/\\=\u003c/a\u003e\u003c/code\u003e would be better\n choices as it is not usually meaningul to compare two patches that\n don't share either a starting or an ending context\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Eq",
        "fct-package": "darcs",
        "fct-signature": "p a b -\u003e p c d -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Eq.html#unsafeCompare",
        "fct-type": "method",
        "title": "unsafeCompare"
      },
      "index": {
        "description": "It is unsafe to define class instance via this method because if it returns True then the default implementations of and will coerce the equality of two witnesses Calling this method is safe although or would be better choices as it is not usually meaningul to compare two patches that don share either starting or an ending context",
        "hierarchy": "Darcs Witnesses Eq",
        "module": "Darcs.Witnesses.Eq",
        "name": "unsafeCompare",
        "normalized": "a b c-\u003ea d e-\u003eBool",
        "package": "darcs",
        "partial": "Compare",
        "signature": "p a b-\u003ep c d-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Witnesses-Ordered.html",
        "fct-type": "module",
        "title": "Ordered"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "Ordered",
        "normalized": "",
        "package": "darcs",
        "partial": "Ordered",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t::-124--124-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%7C%7C%3A",
        "fct-type": "data",
        "title": ":||:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":||:",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t::-47--92-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%2F%5C%3A",
        "fct-type": "data",
        "title": ":/\\:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":/\\:",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t::-60-",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%3C",
        "fct-type": "data",
        "title": ":\u003c"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\u003c",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t::-62-",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%3E",
        "fct-type": "data",
        "title": ":\u003e"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\u003e",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t::-92--47-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%5C%2F%3A",
        "fct-type": "data",
        "title": ":\\/:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\\/:",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t:FL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#FL",
        "fct-type": "data",
        "title": "FL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "FL",
        "normalized": "",
        "package": "darcs",
        "partial": "FL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#t:RL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#RL",
        "fct-type": "data",
        "title": "RL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "RL",
        "normalized": "",
        "package": "darcs",
        "partial": "RL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:-43--60--43-",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL a y z -\u003e RL a x y -\u003e RL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%2B%3C%2B",
        "fct-type": "function",
        "title": "(+\u003c+)"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "(+\u003c+) +\u003c+",
        "normalized": "RL a b c-\u003eRL a d b-\u003eRL a d c",
        "package": "darcs",
        "partial": "",
        "signature": "RL a y z-\u003eRL a x y-\u003eRL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:-43--62--43-",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x y -\u003e FL a y z -\u003e FL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%2B%3E%2B",
        "fct-type": "function",
        "title": "(+\u003e+)"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "(+\u003e+) +\u003e+",
        "normalized": "FL a b c-\u003eFL a c d-\u003eFL a b d",
        "package": "darcs",
        "partial": "",
        "signature": "FL a x y-\u003eFL a y z-\u003eFL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-124--124-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(a1 x y) :||: (a2 x y)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%7C%7C%3A",
        "fct-type": "function",
        "title": ":||:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":||:",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-47--92-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "forall z . (a1 x z) :/\\: (a2 y z)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%2F%5C%3A",
        "fct-type": "function",
        "title": ":/\\:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":/\\:",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-60-",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "forall z . (a1 z y) :\u003c (a2 x z)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%3C",
        "fct-type": "function",
        "title": ":\u003c"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\u003c",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-60-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "a y z -\u003e RL a x y -\u003e RL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#RL",
        "fct-type": "function",
        "title": ":\u003c:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\u003c:",
        "normalized": "a b c-\u003eRL a d b-\u003eRL a d c",
        "package": "darcs",
        "partial": "",
        "signature": "a y z-\u003eRL a x y-\u003eRL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-62-",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "forall z . (a1 x z) :\u003e (a2 z y)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%3E",
        "fct-type": "function",
        "title": ":\u003e"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\u003e",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-62-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "a x y -\u003e FL a y z -\u003e FL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#FL",
        "fct-type": "function",
        "title": ":\u003e:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\u003e:",
        "normalized": "a b c-\u003eFL a c d-\u003eFL a b d",
        "package": "darcs",
        "partial": "",
        "signature": "a x y-\u003eFL a y z-\u003eFL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v::-92--47-:",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "forall z . (a1 z x) :\\/: (a2 z y)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#%3A%5C%2F%3A",
        "fct-type": "function",
        "title": ":\\/:"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": ":\\/:",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:NilFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x x",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#FL",
        "fct-type": "function",
        "title": "NilFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "NilFL",
        "normalized": "",
        "package": "darcs",
        "partial": "Nil FL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:NilRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL a x x",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#RL",
        "fct-type": "function",
        "title": "NilRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "NilRL",
        "normalized": "",
        "package": "darcs",
        "partial": "Nil RL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:allFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e Bool) -\u003e FL a w z -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#allFL",
        "fct-type": "function",
        "title": "allFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "allFL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eFL d f g-\u003eBool",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall x y. a x y-\u003eBool)-\u003eFL a w z-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:anyFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e Bool) -\u003e FL a w z -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#anyFL",
        "fct-type": "function",
        "title": "anyFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "anyFL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eFL d f g-\u003eBool",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall x y. a x y-\u003eBool)-\u003eFL a w z-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:bunchFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e FL a x y -\u003e FL (FL a) x y",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#bunchFL",
        "fct-type": "function",
        "title": "bunchFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "bunchFL",
        "normalized": "Int-\u003eFL a b c-\u003eFL(FL a)b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "Int-\u003eFL a x y-\u003eFL(FL a)x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:concatFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL (FL a) x z -\u003e FL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#concatFL",
        "fct-type": "function",
        "title": "concatFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "concatFL",
        "normalized": "FL(FL a)b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL(FL a)x z-\u003eFL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:concatRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL (RL a) x z -\u003e RL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#concatRL",
        "fct-type": "function",
        "title": "concatRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "concatRL",
        "normalized": "RL(RL a)b c-\u003eRL a b c",
        "package": "darcs",
        "partial": "RL",
        "signature": "RL(RL a)x z-\u003eRL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:consRLSealed",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "a y z -\u003e FlippedSeal (RL a) y -\u003e FlippedSeal (RL a) z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#consRLSealed",
        "fct-type": "function",
        "title": "consRLSealed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "consRLSealed",
        "normalized": "a b c-\u003eFlippedSeal(RL a)b-\u003eFlippedSeal(RL a)c",
        "package": "darcs",
        "partial": "RLSealed",
        "signature": "a y z-\u003eFlippedSeal(RL a)y-\u003eFlippedSeal(RL a)z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:dropWhileFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e Bool) -\u003e FL a r v -\u003e FlippedSeal (FL a) v",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#dropWhileFL",
        "fct-type": "function",
        "title": "dropWhileFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "dropWhileFL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eFL d f g-\u003eFlippedSeal(FL d)g",
        "package": "darcs",
        "partial": "While FL",
        "signature": "(forall x y. a x y-\u003eBool)-\u003eFL a r v-\u003eFlippedSeal(FL a)v"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:dropWhileRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e Bool) -\u003e RL a r v -\u003e Sealed (RL a r)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#dropWhileRL",
        "fct-type": "function",
        "title": "dropWhileRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "dropWhileRL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eRL d f g-\u003eSealed(RL d f)",
        "package": "darcs",
        "partial": "While RL",
        "signature": "(forall x y. a x y-\u003eBool)-\u003eRL a r v-\u003eSealed(RL a r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:eqFL",
      "description": {
        "fct-descr": "\u003cp\u003eCheck that two \u003ccode\u003e\u003ca\u003eFL\u003c/a\u003e\u003c/code\u003es are equal element by element.\n This differs from the \u003ccode\u003e\u003ca\u003eMyEq\u003c/a\u003e\u003c/code\u003e instance for \u003ccode\u003e\u003ca\u003eFL\u003c/a\u003e\u003c/code\u003e which\n uses commutation.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x y -\u003e FL a x z -\u003e EqCheck y z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#eqFL",
        "fct-type": "function",
        "title": "eqFL"
      },
      "index": {
        "description": "Check that two FL are equal element by element This differs from the MyEq instance for FL which uses commutation",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "eqFL",
        "normalized": "FL a b c-\u003eFL a b d-\u003eEqCheck c d",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL a x y-\u003eFL a x z-\u003eEqCheck y z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:eqFLRev",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x z -\u003e FL a y z -\u003e EqCheck x y",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#eqFLRev",
        "fct-type": "function",
        "title": "eqFLRev"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "eqFLRev",
        "normalized": "FL a b c-\u003eFL a d c-\u003eEqCheck b d",
        "package": "darcs",
        "partial": "FLRev",
        "signature": "FL a x z-\u003eFL a y z-\u003eEqCheck x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:eqFLUnsafe",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x y -\u003e FL a z w -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#eqFLUnsafe",
        "fct-type": "function",
        "title": "eqFLUnsafe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "eqFLUnsafe",
        "normalized": "FL a b c-\u003eFL a d e-\u003eBool",
        "package": "darcs",
        "partial": "FLUnsafe",
        "signature": "FL a x y-\u003eFL a z w-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:filterFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e Bool) -\u003e FL a w z -\u003e [Sealed2 a]",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#filterFL",
        "fct-type": "function",
        "title": "filterFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "filterFL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eFL d f g-\u003e[Sealed d]",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall x y. a x y-\u003eBool)-\u003eFL a w z-\u003e[Sealed a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:filterFLFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  p x y -\u003e EqCheck x y) -\u003e FL p w z -\u003e FL p w z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#filterFLFL",
        "fct-type": "function",
        "title": "filterFLFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "filterFLFL",
        "normalized": "(a b c d b e-\u003eEqCheck b e)-\u003eFL d f g-\u003eFL d f g",
        "package": "darcs",
        "partial": "FLFL",
        "signature": "(forall x y. p x y-\u003eEqCheck x y)-\u003eFL p w z-\u003eFL p w z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:filterRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  p x y -\u003e Bool) -\u003e RL p a b -\u003e [Sealed2 p]",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#filterRL",
        "fct-type": "function",
        "title": "filterRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "filterRL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eRL d f g-\u003e[Sealed d]",
        "package": "darcs",
        "partial": "RL",
        "signature": "(forall x y. p x y-\u003eBool)-\u003eRL p a b-\u003e[Sealed p]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:foldlFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w y.  a -\u003e b w y -\u003e a) -\u003e a -\u003e FL b x z -\u003e a",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#foldlFL",
        "fct-type": "function",
        "title": "foldlFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "foldlFL",
        "normalized": "(a b c d-\u003ee b f-\u003ed)-\u003ed-\u003eFL e g h-\u003ed",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall w y. a-\u003eb w y-\u003ea)-\u003ea-\u003eFL b x z-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:foldlRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w y.  a -\u003e b w y -\u003e a) -\u003e a -\u003e RL b x z -\u003e a",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#foldlRL",
        "fct-type": "function",
        "title": "foldlRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "foldlRL",
        "normalized": "(a b c d-\u003ee b f-\u003ed)-\u003ed-\u003eRL e g h-\u003ed",
        "package": "darcs",
        "partial": "RL",
        "signature": "(forall w y. a-\u003eb w y-\u003ea)-\u003ea-\u003eRL b x z-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:isShorterThanRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL a x y -\u003e Int -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#isShorterThanRL",
        "fct-type": "function",
        "title": "isShorterThanRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "isShorterThanRL",
        "normalized": "RL a b c-\u003eInt-\u003eBool",
        "package": "darcs",
        "partial": "Shorter Than RL",
        "signature": "RL a x y-\u003eInt-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:lengthFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x z -\u003e Int",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#lengthFL",
        "fct-type": "function",
        "title": "lengthFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "lengthFL",
        "normalized": "FL a b c-\u003eInt",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL a x z-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:lengthRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL a x z -\u003e Int",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#lengthRL",
        "fct-type": "function",
        "title": "lengthRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "lengthRL",
        "normalized": "RL a b c-\u003eInt",
        "package": "darcs",
        "partial": "RL",
        "signature": "RL a x z-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:mapFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w z.  a w z -\u003e b) -\u003e FL a x y -\u003e [b]",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#mapFL",
        "fct-type": "function",
        "title": "mapFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "mapFL",
        "normalized": "(a b c d b e-\u003ef)-\u003eFL d g h-\u003e[f]",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall w z. a w z-\u003eb)-\u003eFL a x y-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:mapFL_FL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w y.  a w y -\u003e b w y) -\u003e FL a x z -\u003e FL b x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#mapFL_FL",
        "fct-type": "function",
        "title": "mapFL_FL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "mapFL_FL",
        "normalized": "(a b c d b e-\u003ef b e)-\u003eFL d g h-\u003eFL f g h",
        "package": "darcs",
        "partial": "FL FL",
        "signature": "(forall w y. a w y-\u003eb w y)-\u003eFL a x z-\u003eFL b x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:mapRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w z.  a w z -\u003e b) -\u003e RL a x y -\u003e [b]",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#mapRL",
        "fct-type": "function",
        "title": "mapRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "mapRL",
        "normalized": "(a b c d b e-\u003ef)-\u003eRL d g h-\u003e[f]",
        "package": "darcs",
        "partial": "RL",
        "signature": "(forall w z. a w z-\u003eb)-\u003eRL a x y-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:mapRL_RL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w y.  a w y -\u003e b w y) -\u003e RL a x z -\u003e RL b x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#mapRL_RL",
        "fct-type": "function",
        "title": "mapRL_RL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "mapRL_RL",
        "normalized": "(a b c d b e-\u003ef b e)-\u003eRL d g h-\u003eRL f g h",
        "package": "darcs",
        "partial": "RL RL",
        "signature": "(forall w y. a w y-\u003eb w y)-\u003eRL a x z-\u003eRL b x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:nullFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x z -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#nullFL",
        "fct-type": "function",
        "title": "nullFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "nullFL",
        "normalized": "FL a b c-\u003eBool",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL a x z-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:nullRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL a x z -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#nullRL",
        "fct-type": "function",
        "title": "nullRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "nullRL",
        "normalized": "RL a b c-\u003eBool",
        "package": "darcs",
        "partial": "RL",
        "signature": "RL a x z-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:reverseFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "FL a x z -\u003e RL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#reverseFL",
        "fct-type": "function",
        "title": "reverseFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "reverseFL",
        "normalized": "FL a b c-\u003eRL a b c",
        "package": "darcs",
        "partial": "FL",
        "signature": "FL a x z-\u003eRL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:reverseRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "RL a x z -\u003e FL a x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#reverseRL",
        "fct-type": "function",
        "title": "reverseRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "reverseRL",
        "normalized": "RL a b c-\u003eFL a b c",
        "package": "darcs",
        "partial": "RL",
        "signature": "RL a x z-\u003eFL a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:spanFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w y.  a w y -\u003e Bool) -\u003e FL a x z -\u003e (FL a :\u003e FL a) x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#spanFL",
        "fct-type": "function",
        "title": "spanFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "spanFL",
        "normalized": "(a b c d b e-\u003eBool)-\u003eFL d f g-\u003e(FL d FL d)f g",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall w y. a w y-\u003eBool)-\u003eFL a x z-\u003e(FL a FL a)x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:spanFL_M",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall w y.  a w y -\u003e m Bool) -\u003e FL a x z -\u003e m ((FL a :\u003e FL a) x z)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#spanFL_M",
        "fct-type": "function",
        "title": "spanFL_M"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "spanFL_M",
        "normalized": "(a b c d b e-\u003ef Bool)-\u003eFL d g h-\u003ef((FL d FL d)g h)",
        "package": "darcs",
        "partial": "FL",
        "signature": "(forall w y. a w y-\u003em Bool)-\u003eFL a x z-\u003em((FL a FL a)x z)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:splitAtFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e FL a x z -\u003e (FL a :\u003e FL a) x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#splitAtFL",
        "fct-type": "function",
        "title": "splitAtFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "splitAtFL",
        "normalized": "Int-\u003eFL a b c-\u003e(FL a FL a)b c",
        "package": "darcs",
        "partial": "At FL",
        "signature": "Int-\u003eFL a x z-\u003e(FL a FL a)x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:splitAtRL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e RL a x z -\u003e (RL a :\u003c RL a) x z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#splitAtRL",
        "fct-type": "function",
        "title": "splitAtRL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "splitAtRL",
        "normalized": "Int-\u003eRL a b c-\u003e(RL a RL a)b c",
        "package": "darcs",
        "partial": "At RL",
        "signature": "Int-\u003eRL a x z-\u003e(RL a RL a)x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:toFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "[FreeLeft a] -\u003e Sealed (FL a x)",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#toFL",
        "fct-type": "function",
        "title": "toFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "toFL",
        "normalized": "[FreeLeft a]-\u003eSealed(FL a b)",
        "package": "darcs",
        "partial": "FL",
        "signature": "[FreeLeft a]-\u003eSealed(FL a x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Ordered.html#v:zipWithFL",
      "description": {
        "fct-module": "Darcs.Witnesses.Ordered",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a -\u003e p x y -\u003e q x y) -\u003e [a] -\u003e FL p w z -\u003e FL q w z",
        "fct-source": "src/Darcs-Witnesses-Ordered.html#zipWithFL",
        "fct-type": "function",
        "title": "zipWithFL"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Ordered",
        "module": "Darcs.Witnesses.Ordered",
        "name": "zipWithFL",
        "normalized": "(a b c d-\u003ee b f-\u003eg b f)-\u003e[d]-\u003eFL e h i-\u003eFL g h i",
        "package": "darcs",
        "partial": "With FL",
        "signature": "(forall x y. a-\u003ep x y-\u003eq x y)-\u003e[a]-\u003eFL p w z-\u003eFL q w z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Witnesses-Sealed.html",
        "fct-type": "module",
        "title": "Sealed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "Sealed",
        "normalized": "",
        "package": "darcs",
        "partial": "Sealed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#t:FlippedSeal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#FlippedSeal",
        "fct-type": "data",
        "title": "FlippedSeal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "FlippedSeal",
        "normalized": "",
        "package": "darcs",
        "partial": "Flipped Seal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#t:FreeLeft",
      "description": {
        "fct-descr": "\u003cp\u003e'FreeLeft p' is 'forall x . exists y . p x y'\n In other words the caller is free to specify the left witness,\n and then the right witness is an existential.\n Note that the order of the type constructors is important for ensuring\n that \u003ccode\u003ey\u003c/code\u003e is dependent on the \u003ccode\u003ex\u003c/code\u003e that is supplied.\n This is why \u003ccode\u003eStepped\u003c/code\u003e is needed, rather than writing the more obvious\n 'Sealed (Poly p)' which would notionally have the same quantification\n of the type witnesses.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#FreeLeft",
        "fct-type": "data",
        "title": "FreeLeft"
      },
      "index": {
        "description": "FreeLeft is forall exists In other words the caller is free to specify the left witness and then the right witness is an existential Note that the order of the type constructors is important for ensuring that is dependent on the that is supplied This is why Stepped is needed rather than writing the more obvious Sealed Poly which would notionally have the same quantification of the type witnesses",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "FreeLeft",
        "normalized": "",
        "package": "darcs",
        "partial": "Free Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#t:FreeRight",
      "description": {
        "fct-descr": "\u003cp\u003e'FreeLeft p' is 'forall y . exists x . p x y'\n In other words the caller is free to specify the right witness,\n and then the left witness is an existential.\n Note that the order of the type constructors is important for ensuring\n that \u003ccode\u003ex\u003c/code\u003e is dependent on the \u003ccode\u003ey\u003c/code\u003e that is supplied.\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#FreeRight",
        "fct-type": "data",
        "title": "FreeRight"
      },
      "index": {
        "description": "FreeLeft is forall exists In other words the caller is free to specify the right witness and then the left witness is an existential Note that the order of the type constructors is important for ensuring that is dependent on the that is supplied",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "FreeRight",
        "normalized": "",
        "package": "darcs",
        "partial": "Free Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#t:Gap",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eGap\u003c/a\u003e\u003c/code\u003e abstracts over \u003ccode\u003e\u003ca\u003eFreeLeft\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eFreeRight\u003c/a\u003e\u003c/code\u003e for code constructing these values\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#Gap",
        "fct-type": "class",
        "title": "Gap"
      },
      "index": {
        "description": "Gap abstracts over FreeLeft and FreeRight for code constructing these values",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "Gap",
        "normalized": "",
        "package": "darcs",
        "partial": "Gap",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#t:Sealed",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#Sealed",
        "fct-type": "data",
        "title": "Sealed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "Sealed",
        "normalized": "",
        "package": "darcs",
        "partial": "Sealed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#t:Sealed2",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#Sealed2",
        "fct-type": "data",
        "title": "Sealed2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "Sealed2",
        "normalized": "",
        "package": "darcs",
        "partial": "Sealed",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:FlippedSeal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "!(a x y) -\u003e FlippedSeal a y",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#FlippedSeal",
        "fct-type": "function",
        "title": "FlippedSeal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "FlippedSeal",
        "normalized": "(a b c)-\u003eFlippedSeal a c",
        "package": "darcs",
        "partial": "Flipped Seal",
        "signature": "(a x y)-\u003eFlippedSeal a y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:Sealed",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "a x -\u003e Sealed a",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#Sealed",
        "fct-type": "function",
        "title": "Sealed"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "Sealed",
        "normalized": "a b-\u003eSealed a",
        "package": "darcs",
        "partial": "Sealed",
        "signature": "a x-\u003eSealed a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:Sealed2",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "!(a x y) -\u003e Sealed2 a",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#Sealed2",
        "fct-type": "function",
        "title": "Sealed2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "Sealed2",
        "normalized": "(a b c)-\u003eSealed a",
        "package": "darcs",
        "partial": "Sealed",
        "signature": "(a x y)-\u003eSealed a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:emptyGap",
      "description": {
        "fct-descr": "\u003cp\u003eAn empty \u003ccode\u003e\u003ca\u003eGap\u003c/a\u003e\u003c/code\u003e, e.g. \u003ccode\u003eNilFL\u003c/code\u003e or \u003ccode\u003eNilRL\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x.  p x x) -\u003e w p",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#emptyGap",
        "fct-type": "method",
        "title": "emptyGap"
      },
      "index": {
        "description": "An empty Gap e.g NilFL or NilRL",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "emptyGap",
        "normalized": "(a b c d d)-\u003ee c",
        "package": "darcs",
        "partial": "Gap",
        "signature": "(forall x. p x x)-\u003ew p"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:flipSeal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "a x y -\u003e FlippedSeal a y",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#flipSeal",
        "fct-type": "function",
        "title": "flipSeal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "flipSeal",
        "normalized": "a b c-\u003eFlippedSeal a c",
        "package": "darcs",
        "partial": "Seal",
        "signature": "a x y-\u003eFlippedSeal a y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:freeGap",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eGap\u003c/a\u003e\u003c/code\u003e constructed from a completely polymorphic value, for example the constructors\n for primitive patches\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  p x y) -\u003e w p",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#freeGap",
        "fct-type": "method",
        "title": "freeGap"
      },
      "index": {
        "description": "Gap constructed from completely polymorphic value for example the constructors for primitive patches",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "freeGap",
        "normalized": "(a b c d b e)-\u003ef d",
        "package": "darcs",
        "partial": "Gap",
        "signature": "(forall x y. p x y)-\u003ew p"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:joinGap",
      "description": {
        "fct-descr": "\u003cp\u003eCompose two \u003ccode\u003e\u003ca\u003eGap\u003c/a\u003e\u003c/code\u003e values together in series, e.g. 'joinGap (+\u003e+)' or 'joinGap (:\u003e:)'\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x y z.  p x y -\u003e q y z -\u003e r x z) -\u003e w p -\u003e w q -\u003e w r",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#joinGap",
        "fct-type": "method",
        "title": "joinGap"
      },
      "index": {
        "description": "Compose two Gap values together in series e.g joinGap or joinGap",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "joinGap",
        "normalized": "(a b c d e b c-\u003ef c g-\u003eh b g)-\u003ei e-\u003ei f-\u003ei h",
        "package": "darcs",
        "partial": "Gap",
        "signature": "(forall x y z. p x y-\u003eq y z-\u003er x z)-\u003ew p-\u003ew q-\u003ew r"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:liftSM",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x.  a x -\u003e b) -\u003e m (Sealed a) -\u003e m b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#liftSM",
        "fct-type": "function",
        "title": "liftSM"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "liftSM",
        "normalized": "(a b c d-\u003ee)-\u003ef(Sealed c)-\u003ef e",
        "package": "darcs",
        "partial": "SM",
        "signature": "(forall x. a x-\u003eb)-\u003em(Sealed a)-\u003em b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:mapFlipped",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x.  a x y -\u003e b x z) -\u003e FlippedSeal a y -\u003e FlippedSeal b z",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#mapFlipped",
        "fct-type": "function",
        "title": "mapFlipped"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "mapFlipped",
        "normalized": "(a b c d e-\u003ef d g)-\u003eFlippedSeal c e-\u003eFlippedSeal f g",
        "package": "darcs",
        "partial": "Flipped",
        "signature": "(forall x. a x y-\u003eb x z)-\u003eFlippedSeal a y-\u003eFlippedSeal b z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:mapSeal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x.  a x -\u003e b x) -\u003e Sealed a -\u003e Sealed b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#mapSeal",
        "fct-type": "function",
        "title": "mapSeal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "mapSeal",
        "normalized": "(a b c d-\u003ee d)-\u003eSealed c-\u003eSealed e",
        "package": "darcs",
        "partial": "Seal",
        "signature": "(forall x. a x-\u003eb x)-\u003eSealed a-\u003eSealed b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:mapSeal2",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e b x y) -\u003e Sealed2 a -\u003e Sealed2 b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#mapSeal2",
        "fct-type": "function",
        "title": "mapSeal2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "mapSeal2",
        "normalized": "(a b c d b e-\u003ef b e)-\u003eSealed d-\u003eSealed f",
        "package": "darcs",
        "partial": "Seal",
        "signature": "(forall x y. a x y-\u003eb x y)-\u003eSealed a-\u003eSealed b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:seal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "a x -\u003e Sealed a",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#seal",
        "fct-type": "function",
        "title": "seal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "seal",
        "normalized": "a b-\u003eSealed a",
        "package": "darcs",
        "partial": "",
        "signature": "a x-\u003eSealed a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:seal2",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "a x y -\u003e Sealed2 a",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#seal2",
        "fct-type": "function",
        "title": "seal2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "seal2",
        "normalized": "a b c-\u003eSealed a",
        "package": "darcs",
        "partial": "",
        "signature": "a x y-\u003eSealed a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unFreeLeft",
      "description": {
        "fct-descr": "\u003cp\u003eUnwrap a \u003ccode\u003e\u003ca\u003eFreeLeft\u003c/a\u003e\u003c/code\u003e value\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "FreeLeft p -\u003e Sealed (p x)",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unFreeLeft",
        "fct-type": "function",
        "title": "unFreeLeft"
      },
      "index": {
        "description": "Unwrap FreeLeft value",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unFreeLeft",
        "normalized": "FreeLeft a-\u003eSealed(a b)",
        "package": "darcs",
        "partial": "Free Left",
        "signature": "FreeLeft p-\u003eSealed(p x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unFreeRight",
      "description": {
        "fct-descr": "\u003cp\u003eUnwrap a \u003ccode\u003e\u003ca\u003eFreeRight\u003c/a\u003e\u003c/code\u003e value\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "FreeRight p -\u003e FlippedSeal p x",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unFreeRight",
        "fct-type": "function",
        "title": "unFreeRight"
      },
      "index": {
        "description": "Unwrap FreeRight value",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unFreeRight",
        "normalized": "FreeRight a-\u003eFlippedSeal a b",
        "package": "darcs",
        "partial": "Free Right",
        "signature": "FreeRight p-\u003eFlippedSeal p x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unsafeUnseal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "Sealed a -\u003e a x",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unsafeUnseal",
        "fct-type": "function",
        "title": "unsafeUnseal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unsafeUnseal",
        "normalized": "Sealed a-\u003ea b",
        "package": "darcs",
        "partial": "Unseal",
        "signature": "Sealed a-\u003ea x"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unsafeUnseal2",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "Sealed2 a -\u003e a x y",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unsafeUnseal2",
        "fct-type": "function",
        "title": "unsafeUnseal2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unsafeUnseal2",
        "normalized": "Sealed a-\u003ea b c",
        "package": "darcs",
        "partial": "Unseal",
        "signature": "Sealed a-\u003ea x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unsafeUnsealFlipped",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "FlippedSeal a y -\u003e a x y",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unsafeUnsealFlipped",
        "fct-type": "function",
        "title": "unsafeUnsealFlipped"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unsafeUnsealFlipped",
        "normalized": "FlippedSeal a b-\u003ea c b",
        "package": "darcs",
        "partial": "Unseal Flipped",
        "signature": "FlippedSeal a y-\u003ea x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unseal",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x.  a x -\u003e b) -\u003e Sealed a -\u003e b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unseal",
        "fct-type": "function",
        "title": "unseal"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unseal",
        "normalized": "(a b c d-\u003ee)-\u003eSealed c-\u003ee",
        "package": "darcs",
        "partial": "",
        "signature": "(forall x. a x-\u003eb)-\u003eSealed a-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unseal2",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e b) -\u003e Sealed2 a -\u003e b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unseal2",
        "fct-type": "function",
        "title": "unseal2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unseal2",
        "normalized": "(a b c d b e-\u003ef)-\u003eSealed d-\u003ef",
        "package": "darcs",
        "partial": "",
        "signature": "(forall x y. a x y-\u003eb)-\u003eSealed a-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unsealFlipped",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "(forall x y.  a x y -\u003e b) -\u003e FlippedSeal a z -\u003e b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unsealFlipped",
        "fct-type": "function",
        "title": "unsealFlipped"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unsealFlipped",
        "normalized": "(a b c d b e-\u003ef)-\u003eFlippedSeal d g-\u003ef",
        "package": "darcs",
        "partial": "Flipped",
        "signature": "(forall x y. a x y-\u003eb)-\u003eFlippedSeal a z-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Sealed.html#v:unsealM",
      "description": {
        "fct-module": "Darcs.Witnesses.Sealed",
        "fct-package": "darcs",
        "fct-signature": "m (Sealed a) -\u003e (forall x.  a x -\u003e m b) -\u003e m b",
        "fct-source": "src/Darcs-Witnesses-Sealed.html#unsealM",
        "fct-type": "function",
        "title": "unsealM"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Sealed",
        "module": "Darcs.Witnesses.Sealed",
        "name": "unsealM",
        "normalized": "a(Sealed b)-\u003e(c d b e-\u003ea f)-\u003ea f",
        "package": "darcs",
        "partial": "",
        "signature": "m(Sealed a)-\u003e(forall x. a x-\u003em b)-\u003em b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Witnesses-Show.html",
        "fct-type": "module",
        "title": "Show"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "Show",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#t:Show1",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Witnesses-Show.html#Show1",
        "fct-type": "class",
        "title": "Show1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "Show1",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#t:Show2",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/Darcs-Witnesses-Show.html#Show2",
        "fct-type": "class",
        "title": "Show2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "Show2",
        "normalized": "",
        "package": "darcs",
        "partial": "Show",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#t:ShowDict",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-Show.html#ShowDict",
        "fct-type": "data",
        "title": "ShowDict"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "ShowDict",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Dict",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:ShowDictClass",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "ShowDict a",
        "fct-source": "src/Darcs-Witnesses-Show.html#ShowDict",
        "fct-type": "function",
        "title": "ShowDictClass"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "ShowDictClass",
        "normalized": "",
        "package": "darcs",
        "partial": "Show Dict Class",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:ShowDictRecord",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "(Int -\u003e a -\u003e ShowS) -\u003e (a -\u003e String) -\u003e ([a] -\u003e ShowS) -\u003e ShowDict a",
        "fct-source": "src/Darcs-Witnesses-Show.html#ShowDict",
        "fct-type": "function",
        "title": "ShowDictRecord"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "ShowDictRecord",
        "normalized": "(Int-\u003ea-\u003eShowS)-\u003e(a-\u003eString)-\u003e([a]-\u003eShowS)-\u003eShowDict a",
        "package": "darcs",
        "partial": "Show Dict Record",
        "signature": "(Int-\u003ea-\u003eShowS)-\u003e(a-\u003eString)-\u003e([a]-\u003eShowS)-\u003eShowDict a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:appPrec",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "Int",
        "fct-source": "src/Darcs-Witnesses-Show.html#appPrec",
        "fct-type": "function",
        "title": "appPrec"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "appPrec",
        "normalized": "",
        "package": "darcs",
        "partial": "Prec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:show1",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "a x -\u003e String",
        "fct-source": "src/Darcs-Witnesses-Show.html#show1",
        "fct-type": "function",
        "title": "show1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "show1",
        "normalized": "a b-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "a x-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:show2",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "a x y -\u003e String",
        "fct-source": "src/Darcs-Witnesses-Show.html#show2",
        "fct-type": "function",
        "title": "show2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "show2",
        "normalized": "a b c-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "a x y-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showD",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "ShowDict a -\u003e a -\u003e String",
        "fct-source": "src/Darcs-Witnesses-Show.html#showD",
        "fct-type": "function",
        "title": "showD"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showD",
        "normalized": "ShowDict a-\u003ea-\u003eString",
        "package": "darcs",
        "partial": "",
        "signature": "ShowDict a-\u003ea-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showDict1",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "ShowDict (a x)",
        "fct-source": "src/Darcs-Witnesses-Show.html#showDict1",
        "fct-type": "method",
        "title": "showDict1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showDict1",
        "normalized": "",
        "package": "darcs",
        "partial": "Dict",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showDict2",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "ShowDict (a x y)",
        "fct-source": "src/Darcs-Witnesses-Show.html#showDict2",
        "fct-type": "method",
        "title": "showDict2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showDict2",
        "normalized": "",
        "package": "darcs",
        "partial": "Dict",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showListD",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "ShowDict a -\u003e [a] -\u003e ShowS",
        "fct-source": "src/Darcs-Witnesses-Show.html#showListD",
        "fct-type": "function",
        "title": "showListD"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showListD",
        "normalized": "ShowDict a-\u003e[a]-\u003eShowS",
        "package": "darcs",
        "partial": "List",
        "signature": "ShowDict a-\u003e[a]-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showOp2",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e String -\u003e Int -\u003e a w x -\u003e b y z -\u003e String -\u003e String",
        "fct-source": "src/Darcs-Witnesses-Show.html#showOp2",
        "fct-type": "function",
        "title": "showOp2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showOp2",
        "normalized": "Int-\u003eString-\u003eInt-\u003ea b c-\u003ed e f-\u003eString-\u003eString",
        "package": "darcs",
        "partial": "Op",
        "signature": "Int-\u003eString-\u003eInt-\u003ea w x-\u003eb y z-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showsPrec1",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e a x -\u003e ShowS",
        "fct-source": "src/Darcs-Witnesses-Show.html#showsPrec1",
        "fct-type": "function",
        "title": "showsPrec1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showsPrec1",
        "normalized": "Int-\u003ea b-\u003eShowS",
        "package": "darcs",
        "partial": "Prec",
        "signature": "Int-\u003ea x-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showsPrec2",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e a x y -\u003e ShowS",
        "fct-source": "src/Darcs-Witnesses-Show.html#showsPrec2",
        "fct-type": "function",
        "title": "showsPrec2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showsPrec2",
        "normalized": "Int-\u003ea b c-\u003eShowS",
        "package": "darcs",
        "partial": "Prec",
        "signature": "Int-\u003ea x y-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Show.html#v:showsPrecD",
      "description": {
        "fct-module": "Darcs.Witnesses.Show",
        "fct-package": "darcs",
        "fct-signature": "ShowDict a -\u003e Int -\u003e a -\u003e ShowS",
        "fct-source": "src/Darcs-Witnesses-Show.html#showsPrecD",
        "fct-type": "function",
        "title": "showsPrecD"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Show",
        "module": "Darcs.Witnesses.Show",
        "name": "showsPrecD",
        "normalized": "ShowDict a-\u003eInt-\u003ea-\u003eShowS",
        "package": "darcs",
        "partial": "Prec",
        "signature": "ShowDict a-\u003eInt-\u003ea-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Unsafe.html#",
      "description": {
        "fct-module": "Darcs.Witnesses.Unsafe",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Witnesses-Unsafe.html",
        "fct-type": "module",
        "title": "Unsafe"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Unsafe",
        "module": "Darcs.Witnesses.Unsafe",
        "name": "Unsafe",
        "normalized": "",
        "package": "darcs",
        "partial": "Unsafe",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Unsafe.html#v:unsafeCoerceP",
      "description": {
        "fct-module": "Darcs.Witnesses.Unsafe",
        "fct-package": "darcs",
        "fct-signature": "a x y -\u003e a b c",
        "fct-source": "src/Darcs-Witnesses-Unsafe.html#unsafeCoerceP",
        "fct-type": "function",
        "title": "unsafeCoerceP"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Unsafe",
        "module": "Darcs.Witnesses.Unsafe",
        "name": "unsafeCoerceP",
        "normalized": "a b c-\u003ea d e",
        "package": "darcs",
        "partial": "Coerce",
        "signature": "a x y-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Unsafe.html#v:unsafeCoerceP1",
      "description": {
        "fct-module": "Darcs.Witnesses.Unsafe",
        "fct-package": "darcs",
        "fct-signature": "a x -\u003e a y",
        "fct-source": "src/Darcs-Witnesses-Unsafe.html#unsafeCoerceP1",
        "fct-type": "function",
        "title": "unsafeCoerceP1"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Unsafe",
        "module": "Darcs.Witnesses.Unsafe",
        "name": "unsafeCoerceP1",
        "normalized": "a b-\u003ea c",
        "package": "darcs",
        "partial": "Coerce",
        "signature": "a x-\u003ea y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Unsafe.html#v:unsafeCoerceP2",
      "description": {
        "fct-module": "Darcs.Witnesses.Unsafe",
        "fct-package": "darcs",
        "fct-signature": "t w x y z -\u003e t a b c d",
        "fct-source": "src/Darcs-Witnesses-Unsafe.html#unsafeCoerceP2",
        "fct-type": "function",
        "title": "unsafeCoerceP2"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Unsafe",
        "module": "Darcs.Witnesses.Unsafe",
        "name": "unsafeCoerceP2",
        "normalized": "a b c d e-\u003ea f g h i",
        "package": "darcs",
        "partial": "Coerce",
        "signature": "t w x y z-\u003et a b c d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Unsafe.html#v:unsafeCoercePEnd",
      "description": {
        "fct-module": "Darcs.Witnesses.Unsafe",
        "fct-package": "darcs",
        "fct-signature": "a x y1 -\u003e a x y2",
        "fct-source": "src/Darcs-Witnesses-Unsafe.html#unsafeCoercePEnd",
        "fct-type": "function",
        "title": "unsafeCoercePEnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Unsafe",
        "module": "Darcs.Witnesses.Unsafe",
        "name": "unsafeCoercePEnd",
        "normalized": "a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Coerce PEnd",
        "signature": "a x y-\u003ea x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-Unsafe.html#v:unsafeCoercePStart",
      "description": {
        "fct-module": "Darcs.Witnesses.Unsafe",
        "fct-package": "darcs",
        "fct-signature": "a x1 y -\u003e a x2 y",
        "fct-source": "src/Darcs-Witnesses-Unsafe.html#unsafeCoercePStart",
        "fct-type": "function",
        "title": "unsafeCoercePStart"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses Unsafe",
        "module": "Darcs.Witnesses.Unsafe",
        "name": "unsafeCoercePStart",
        "normalized": "a b c-\u003ea b c",
        "package": "darcs",
        "partial": "Coerce PStart",
        "signature": "a x y-\u003ea x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Darcs-Witnesses-WZipper.html",
        "fct-type": "module",
        "title": "WZipper"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "WZipper",
        "normalized": "",
        "package": "darcs",
        "partial": "WZipper",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#t:FZipper",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#FZipper",
        "fct-type": "data",
        "title": "FZipper"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "FZipper",
        "normalized": "",
        "package": "darcs",
        "partial": "FZipper",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:FZipper",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "RL a x y -\u003e FL a y z -\u003e FZipper a x z",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#FZipper",
        "fct-type": "function",
        "title": "FZipper"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "FZipper",
        "normalized": "RL a b c-\u003eFL a c d-\u003eFZipper a b d",
        "package": "darcs",
        "partial": "FZipper",
        "signature": "RL a x y-\u003eFL a y z-\u003eFZipper a x z"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:clowns",
      "description": {
        "fct-descr": "\u003cp\u003e\"Clowns to the left of me, jokers to the right.  Here I am, stuck\n   in the middle of you\"\n   \u003ca\u003ehttp://en.wikipedia.org/wiki/Stuck_in_the_Middle\u003c/a\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper a x y -\u003e Sealed (RL a x)",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#clowns",
        "fct-type": "function",
        "title": "clowns"
      },
      "index": {
        "description": "Clowns to the left of me jokers to the right Here am stuck in the middle of you http en.wikipedia.org wiki Stuck in the Middle",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "clowns",
        "normalized": "FZipper a b c-\u003eSealed(RL a b)",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper a x y-\u003eSealed(RL a x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:flToZipper",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FL a x y -\u003e FZipper a x y",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#flToZipper",
        "fct-type": "function",
        "title": "flToZipper"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "flToZipper",
        "normalized": "FL a b c-\u003eFZipper a b c",
        "package": "darcs",
        "partial": "To Zipper",
        "signature": "FL a x y-\u003eFZipper a x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:focus",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper a x y -\u003e Maybe (Sealed2 a)",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#focus",
        "fct-type": "function",
        "title": "focus"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "focus",
        "normalized": "FZipper a b c-\u003eMaybe(Sealed a)",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper a x y-\u003eMaybe(Sealed a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:jokers",
      "description": {
        "fct-descr": "\u003cp\u003eSee \u003ccode\u003e\u003ca\u003eclowns\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper a x y -\u003e FlippedSeal (FL a) y",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#jokers",
        "fct-type": "function",
        "title": "jokers"
      },
      "index": {
        "description": "See clowns",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "jokers",
        "normalized": "FZipper a b c-\u003eFlippedSeal(FL a)c",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper a x y-\u003eFlippedSeal(FL a)y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:left",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper p x y -\u003e FZipper p x y",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#left",
        "fct-type": "function",
        "title": "left"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "left",
        "normalized": "FZipper a b c-\u003eFZipper a b c",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper p x y-\u003eFZipper p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:leftmost",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper p x y -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#leftmost",
        "fct-type": "function",
        "title": "leftmost"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "leftmost",
        "normalized": "FZipper a b c-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper p x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:lengthFZ",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper a x y -\u003e Int",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#lengthFZ",
        "fct-type": "function",
        "title": "lengthFZ"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "lengthFZ",
        "normalized": "FZipper a b c-\u003eInt",
        "package": "darcs",
        "partial": "FZ",
        "signature": "FZipper a x y-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:nullFZ",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper a x y -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#nullFZ",
        "fct-type": "function",
        "title": "nullFZ"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "nullFZ",
        "normalized": "FZipper a b c-\u003eBool",
        "package": "darcs",
        "partial": "FZ",
        "signature": "FZipper a x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:right",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper p x y -\u003e FZipper p x y",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#right",
        "fct-type": "function",
        "title": "right"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "right",
        "normalized": "FZipper a b c-\u003eFZipper a b c",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper p x y-\u003eFZipper p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:rightmost",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper p x y -\u003e Bool",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#rightmost",
        "fct-type": "function",
        "title": "rightmost"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "rightmost",
        "normalized": "FZipper a b c-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "FZipper p x y-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:toEnd",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper p x y -\u003e FZipper p x y",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#toEnd",
        "fct-type": "function",
        "title": "toEnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "toEnd",
        "normalized": "FZipper a b c-\u003eFZipper a b c",
        "package": "darcs",
        "partial": "End",
        "signature": "FZipper p x y-\u003eFZipper p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Darcs-Witnesses-WZipper.html#v:toStart",
      "description": {
        "fct-module": "Darcs.Witnesses.WZipper",
        "fct-package": "darcs",
        "fct-signature": "FZipper p x y -\u003e FZipper p x y",
        "fct-source": "src/Darcs-Witnesses-WZipper.html#toStart",
        "fct-type": "function",
        "title": "toStart"
      },
      "index": {
        "description": "",
        "hierarchy": "Darcs Witnesses WZipper",
        "module": "Darcs.Witnesses.WZipper",
        "name": "toStart",
        "normalized": "FZipper a b c-\u003eFZipper a b c",
        "package": "darcs",
        "partial": "Start",
        "signature": "FZipper p x y-\u003eFZipper p x y"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/DateMatcher.html#",
      "description": {
        "fct-module": "DateMatcher",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/DateMatcher.html",
        "fct-type": "module",
        "title": "DateMatcher"
      },
      "index": {
        "description": "",
        "hierarchy": "DateMatcher",
        "module": "DateMatcher",
        "name": "DateMatcher",
        "normalized": "",
        "package": "darcs",
        "partial": "Date Matcher",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/DateMatcher.html#t:DateMatcher",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003eDateMatcher\u003c/a\u003e\u003c/code\u003e combines a potential parse for a date string\n   with a \u003ca\u003ematcher\u003c/a\u003e function that operates on a given date.\n   We use an existential type on the matcher to allow\n   the date string to either be interpreted as a point in time\n   or as an interval.\n\u003c/p\u003e",
        "fct-module": "DateMatcher",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/DateMatcher.html#DateMatcher",
        "fct-type": "data",
        "title": "DateMatcher"
      },
      "index": {
        "description": "DateMatcher combines potential parse for date string with matcher function that operates on given date We use an existential type on the matcher to allow the date string to either be interpreted as point in time or as an interval",
        "hierarchy": "DateMatcher",
        "module": "DateMatcher",
        "name": "DateMatcher",
        "normalized": "",
        "package": "darcs",
        "partial": "Date Matcher",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/DateMatcher.html#v:DM",
      "description": {
        "fct-module": "DateMatcher",
        "fct-package": "darcs",
        "fct-signature": "DM String (Either ParseError d) (d -\u003e CalendarTime -\u003e Bool)",
        "fct-source": "src/DateMatcher.html#DateMatcher",
        "fct-type": "function",
        "title": "DM"
      },
      "index": {
        "description": "",
        "hierarchy": "DateMatcher",
        "module": "DateMatcher",
        "name": "DM",
        "normalized": "DM String(Either ParseError a)(a-\u003eCalendarTime-\u003eBool)",
        "package": "darcs",
        "partial": "DM",
        "signature": "DM String(Either ParseError d)(d-\u003eCalendarTime-\u003eBool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/DateMatcher.html#v:getMatchers",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003egetMatchers\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ed\u003c/code\u003e returns the list of matchers that will be\n   applied on \u003ccode\u003ed\u003c/code\u003e.  If you wish to extend the date parsing code,\n   this will likely be the function that you modify to do so.\n\u003c/p\u003e",
        "fct-module": "DateMatcher",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO [DateMatcher]",
        "fct-source": "src/DateMatcher.html#getMatchers",
        "fct-type": "function",
        "title": "getMatchers"
      },
      "index": {
        "description": "getMatchers returns the list of matchers that will be applied on If you wish to extend the date parsing code this will likely be the function that you modify to do so",
        "hierarchy": "DateMatcher",
        "module": "DateMatcher",
        "name": "getMatchers",
        "normalized": "String-\u003eIO[DateMatcher]",
        "package": "darcs",
        "partial": "Matchers",
        "signature": "String-\u003eIO[DateMatcher]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/DateMatcher.html#v:parseDateMatcher",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eparseDateMatcher\u003c/a\u003e\u003c/code\u003e \u003ccode\u003es\u003c/code\u003e return the first  matcher in\n    \u003ccode\u003e\u003ca\u003egetMatchers\u003c/a\u003e\u003c/code\u003e that can parse \u003ccode\u003es\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "DateMatcher",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO (CalendarTime -\u003e Bool)",
        "fct-source": "src/DateMatcher.html#parseDateMatcher",
        "fct-type": "function",
        "title": "parseDateMatcher"
      },
      "index": {
        "description": "parseDateMatcher return the first matcher in getMatchers that can parse",
        "hierarchy": "DateMatcher",
        "module": "DateMatcher",
        "name": "parseDateMatcher",
        "normalized": "String-\u003eIO(CalendarTime-\u003eBool)",
        "package": "darcs",
        "partial": "Date Matcher",
        "signature": "String-\u003eIO(CalendarTime-\u003eBool)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Encoding.html#",
      "description": {
        "fct-module": "Encoding",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Encoding.html",
        "fct-type": "module",
        "title": "Encoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Encoding",
        "module": "Encoding",
        "name": "Encoding",
        "normalized": "",
        "package": "darcs",
        "partial": "Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Encoding.html#v:decode",
      "description": {
        "fct-descr": "\u003cp\u003eConvert a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e from the console's encoding into a Unicode \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Encoding",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e IO String",
        "fct-source": "src/Encoding.html#decode",
        "fct-type": "function",
        "title": "decode"
      },
      "index": {
        "description": "Convert ByteString from the console encoding into Unicode String",
        "hierarchy": "Encoding",
        "module": "Encoding",
        "name": "decode",
        "normalized": "ByteString-\u003eIO String",
        "package": "darcs",
        "partial": "",
        "signature": "ByteString-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Encoding.html#v:encode",
      "description": {
        "fct-descr": "\u003cp\u003eEncode a Unicode \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e into a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e suitable for the current\n console.\n\u003c/p\u003e",
        "fct-module": "Encoding",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ByteString",
        "fct-source": "src/Encoding.html#encode",
        "fct-type": "function",
        "title": "encode"
      },
      "index": {
        "description": "Encode Unicode String into ByteString suitable for the current console",
        "hierarchy": "Encoding",
        "module": "Encoding",
        "name": "encode",
        "normalized": "String-\u003eIO ByteString",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eIO ByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis modules provides rudimentary natural language generation\n (NLG) utilities.  That is, generating natural language from a\n machine representation.  Initially, only English is supported at\n all.  Representations are implemented for:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e countable nouns (plurality); and\n  * lists of clauses (foo, bar and/or baz).\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/English.html",
        "fct-type": "module",
        "title": "English"
      },
      "index": {
        "description": "This modules provides rudimentary natural language generation NLG utilities That is generating natural language from machine representation Initially only English is supported at all Representations are implemented for countable nouns plurality and lists of clauses foo bar and or baz",
        "hierarchy": "English",
        "module": "English",
        "name": "English",
        "normalized": "",
        "package": "darcs",
        "partial": "English",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#t:Countable",
      "description": {
        "fct-descr": "\u003cp\u003eThings that have a plural and singular spelling\n\u003c/p\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "class",
        "fct-source": "src/English.html#Countable",
        "fct-type": "class",
        "title": "Countable"
      },
      "index": {
        "description": "Things that have plural and singular spelling",
        "hierarchy": "English",
        "module": "English",
        "name": "Countable",
        "normalized": "",
        "package": "darcs",
        "partial": "Countable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#t:Noun",
      "description": {
        "fct-descr": "\u003cp\u003eThis only distinguishes between nouns with a final -ch,\n   and nouns which do not.\n   More irregular nouns will just need to have their own type\n\u003c/p\u003e\u003cpre\u003e plural (Noun \"batch\") \"\" == \"batches\"\n plural (Noun \"bat\")   \"\" == \"bats\"\n plural (Noun \"mouse\") \"\" == \"mouses\" -- :-(\n\u003c/pre\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/English.html#Noun",
        "fct-type": "newtype",
        "title": "Noun"
      },
      "index": {
        "description": "This only distinguishes between nouns with final ch and nouns which do not More irregular nouns will just need to have their own type plural Noun batch batches plural Noun bat bats plural Noun mouse mouses",
        "hierarchy": "English",
        "module": "English",
        "name": "Noun",
        "normalized": "",
        "package": "darcs",
        "partial": "Noun",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#t:Pronoun",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/English.html#Pronoun",
        "fct-type": "data",
        "title": "Pronoun"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "Pronoun",
        "normalized": "",
        "package": "darcs",
        "partial": "Pronoun",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#t:This",
      "description": {
        "fct-descr": "\u003cpre\u003e singular This (Noun \"batch\") \"\" == \"this batch\"\n plural   This (Noun \"batch\") \"\" == \"these batches\"\n\u003c/pre\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/English.html#This",
        "fct-type": "data",
        "title": "This"
      },
      "index": {
        "description": "singular This Noun batch this batch plural This Noun batch these batches",
        "hierarchy": "English",
        "module": "English",
        "name": "This",
        "normalized": "",
        "package": "darcs",
        "partial": "This",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:It",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "It",
        "fct-source": "src/English.html#Pronoun",
        "fct-type": "function",
        "title": "It"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "It",
        "normalized": "",
        "package": "darcs",
        "partial": "It",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:Noun",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "Noun String",
        "fct-source": "src/English.html#Noun",
        "fct-type": "function",
        "title": "Noun"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "Noun",
        "normalized": "",
        "package": "darcs",
        "partial": "Noun",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:This",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "This Noun",
        "fct-source": "src/English.html#This",
        "fct-type": "function",
        "title": "This"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "This",
        "normalized": "",
        "package": "darcs",
        "partial": "This",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:andClauses",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a list of things, combine them thusly:\n\u003c/p\u003e\u003cpre\u003e orClauses [\"foo\", \"bar\", \"baz\"] == \"foo, bar or baz\"\n\u003c/pre\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "[String] -\u003e String",
        "fct-source": "src/English.html#andClauses",
        "fct-type": "function",
        "title": "andClauses"
      },
      "index": {
        "description": "Given list of things combine them thusly orClauses foo bar baz foo bar or baz",
        "hierarchy": "English",
        "module": "English",
        "name": "andClauses",
        "normalized": "[String]-\u003eString",
        "package": "darcs",
        "partial": "Clauses",
        "signature": "[String]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:englishNum",
      "description": {
        "fct-descr": "\u003cpre\u003e englishNum 0 (Noun \"watch\") \"\" == \"watches\"\n englishNum 1 (Noun \"watch\") \"\" == \"watch\"\n englishNum 2 (Noun \"watch\") \"\" == \"watches\"\n\u003c/pre\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e n -\u003e ShowS",
        "fct-source": "src/English.html#englishNum",
        "fct-type": "function",
        "title": "englishNum"
      },
      "index": {
        "description": "englishNum Noun watch watches englishNum Noun watch watch englishNum Noun watch watches",
        "hierarchy": "English",
        "module": "English",
        "name": "englishNum",
        "normalized": "Int-\u003ea-\u003eShowS",
        "package": "darcs",
        "partial": "Num",
        "signature": "Int-\u003en-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:intersperseLast",
      "description": {
        "fct-descr": "\u003cp\u003eAs \u003ccode\u003eintersperse\u003c/code\u003e, with a different separator for the last\n | interspersal.\n\u003c/p\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e [String] -\u003e String",
        "fct-source": "src/English.html#intersperseLast",
        "fct-type": "function",
        "title": "intersperseLast"
      },
      "index": {
        "description": "As intersperse with different separator for the last interspersal",
        "hierarchy": "English",
        "module": "English",
        "name": "intersperseLast",
        "normalized": "String-\u003eString-\u003e[String]-\u003eString",
        "package": "darcs",
        "partial": "Last",
        "signature": "String-\u003eString-\u003e[String]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:orClauses",
      "description": {
        "fct-descr": "\u003cp\u003eGiven a list of things, combine them thusly:\n\u003c/p\u003e\u003cpre\u003e orClauses [\"foo\", \"bar\", \"baz\"] == \"foo, bar or baz\"\n\u003c/pre\u003e",
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "[String] -\u003e String",
        "fct-source": "src/English.html#orClauses",
        "fct-type": "function",
        "title": "orClauses"
      },
      "index": {
        "description": "Given list of things combine them thusly orClauses foo bar baz foo bar or baz",
        "hierarchy": "English",
        "module": "English",
        "name": "orClauses",
        "normalized": "[String]-\u003eString",
        "package": "darcs",
        "partial": "Clauses",
        "signature": "[String]-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:plural",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e ShowS",
        "fct-source": "src/English.html#plural",
        "fct-type": "method",
        "title": "plural"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "plural",
        "normalized": "a-\u003eShowS",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:presentParticiple",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/English.html#presentParticiple",
        "fct-type": "function",
        "title": "presentParticiple"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "presentParticiple",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "Participle",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/English.html#v:singular",
      "description": {
        "fct-module": "English",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e ShowS",
        "fct-source": "src/English.html#singular",
        "fct-type": "method",
        "title": "singular"
      },
      "index": {
        "description": "",
        "hierarchy": "English",
        "module": "English",
        "name": "singular",
        "normalized": "a-\u003eShowS",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003eShowS"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Exec.html",
        "fct-type": "module",
        "title": "Exec"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "Exec",
        "normalized": "",
        "package": "darcs",
        "partial": "Exec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#t:ExecException",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Exec.html#ExecException",
        "fct-type": "data",
        "title": "ExecException"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "ExecException",
        "normalized": "",
        "package": "darcs",
        "partial": "Exec Exception",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#t:Redirect",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Exec.html#Redirect",
        "fct-type": "data",
        "title": "Redirect"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "Redirect",
        "normalized": "",
        "package": "darcs",
        "partial": "Redirect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#t:Redirects",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Exec.html#Redirects",
        "fct-type": "type",
        "title": "Redirects"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "Redirects",
        "normalized": "",
        "package": "darcs",
        "partial": "Redirects",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:AsIs",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "AsIs",
        "fct-source": "src/Exec.html#Redirect",
        "fct-type": "function",
        "title": "AsIs"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "AsIs",
        "normalized": "",
        "package": "darcs",
        "partial": "As Is",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:ExecException",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "ExecException String [String] Redirects String",
        "fct-source": "src/Exec.html#ExecException",
        "fct-type": "function",
        "title": "ExecException"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "ExecException",
        "normalized": "ExecException String[String]Redirects String",
        "package": "darcs",
        "partial": "Exec Exception",
        "signature": "ExecException String[String]Redirects String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:File",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "File FilePath",
        "fct-source": "src/Exec.html#Redirect",
        "fct-type": "function",
        "title": "File"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "File",
        "normalized": "",
        "package": "darcs",
        "partial": "File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:Null",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "Null",
        "fct-source": "src/Exec.html#Redirect",
        "fct-type": "function",
        "title": "Null"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "Null",
        "normalized": "",
        "package": "darcs",
        "partial": "Null",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:Stdout",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "Stdout",
        "fct-source": "src/Exec.html#Redirect",
        "fct-type": "function",
        "title": "Stdout"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "Stdout",
        "normalized": "",
        "package": "darcs",
        "partial": "Stdout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:exec",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [String] -\u003e Redirects -\u003e IO ExitCode",
        "fct-source": "src/Exec.html#exec",
        "fct-type": "function",
        "title": "exec"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "exec",
        "normalized": "String-\u003e[String]-\u003eRedirects-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003e[String]-\u003eRedirects-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:execInteractive",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO ExitCode",
        "fct-source": "src/Exec.html#execInteractive",
        "fct-type": "function",
        "title": "execInteractive"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "execInteractive",
        "normalized": "String-\u003eString-\u003eIO ExitCode",
        "package": "darcs",
        "partial": "Interactive",
        "signature": "String-\u003eString-\u003eIO ExitCode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Exec.html#v:withoutNonBlock",
      "description": {
        "fct-module": "Exec",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a",
        "fct-source": "src/Exec.html#withoutNonBlock",
        "fct-type": "function",
        "title": "withoutNonBlock"
      },
      "index": {
        "description": "",
        "hierarchy": "Exec",
        "module": "Exec",
        "name": "withoutNonBlock",
        "normalized": "IO a-\u003eIO a",
        "package": "darcs",
        "partial": "Non Block",
        "signature": "IO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#",
      "description": {
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/IsoDate.html",
        "fct-type": "module",
        "title": "IsoDate"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "IsoDate",
        "normalized": "",
        "package": "darcs",
        "partial": "Iso Date",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#t:MCalendarTime",
      "description": {
        "fct-descr": "\u003cp\u003eAn \u003ccode\u003eMCalenderTime\u003c/code\u003e is an underspecified \u003ccode\u003e\u003ca\u003eCalendarTime\u003c/a\u003e\u003c/code\u003e\n   It is used for parsing dates.  For example, if you want to parse\n   the date '4 January', it may be useful to underspecify the year\n   by setting it to \u003ccode\u003e\u003ca\u003eNothing\u003c/a\u003e\u003c/code\u003e.  This uses almost the same fields as\n   \u003ccode\u003e\u003ca\u003eCalendarTime\u003c/a\u003e\u003c/code\u003e, a notable exception being that we\n   introduce \u003ccode\u003e\u003ca\u003emctWeek\u003c/a\u003e\u003c/code\u003e to indicate if a weekday was specified or not\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "data",
        "title": "MCalendarTime"
      },
      "index": {
        "description": "An MCalenderTime is an underspecified CalendarTime It is used for parsing dates For example if you want to parse the date January it may be useful to underspecify the year by setting it to Nothing This uses almost the same fields as CalendarTime notable exception being that we introduce mctWeek to indicate if weekday was specified or not",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "MCalendarTime",
        "normalized": "",
        "package": "darcs",
        "partial": "MCalendar Time",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#t:TimeInterval",
      "description": {
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/IsoDate.html#TimeInterval",
        "fct-type": "type",
        "title": "TimeInterval"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "TimeInterval",
        "normalized": "",
        "package": "darcs",
        "partial": "Time Interval",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:MCalendarTime",
      "description": {
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "MCalendarTime",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "MCalendarTime"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "MCalendarTime",
        "normalized": "",
        "package": "darcs",
        "partial": "MCalendar Time",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:addToMCal",
      "description": {
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "TimeDiff -\u003e MCalendarTime -\u003e MCalendarTime",
        "fct-source": "src/IsoDate.html#addToMCal",
        "fct-type": "function",
        "title": "addToMCal"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "addToMCal",
        "normalized": "TimeDiff-\u003eMCalendarTime-\u003eMCalendarTime",
        "package": "darcs",
        "partial": "To MCal",
        "signature": "TimeDiff-\u003eMCalendarTime-\u003eMCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:cleanLocalDate",
      "description": {
        "fct-descr": "\u003cp\u003eConvert a date string into ISO 8601 format (yyyymmdd variant)\n   assuming local timezone if not specified in the string\n   Warning! This errors out if we fail to interpret the date\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/IsoDate.html#cleanLocalDate",
        "fct-type": "function",
        "title": "cleanLocalDate"
      },
      "index": {
        "description": "Convert date string into ISO format yyyymmdd variant assuming local timezone if not specified in the string Warning This errors out if we fail to interpret the date",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "cleanLocalDate",
        "normalized": "String-\u003eString",
        "package": "darcs",
        "partial": "Local Date",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:englishDateTime",
      "description": {
        "fct-descr": "\u003cp\u003eIn English, either a date followed by a time, or vice-versa, e.g,\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e yesterday at noon\n\u003c/li\u003e\u003cli\u003e yesterday tea time\n\u003c/li\u003e\u003cli\u003e 12:00 yesterday\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eSee \u003ccode\u003eenglishDate\u003c/code\u003e and \u003ccode\u003eenglishTime\u003c/code\u003e\n   Uses its first argument as \u003ca\u003enow\u003c/a\u003e, i.e. the time relative to which\n   \u003ca\u003eyesterday\u003c/a\u003e, \u003ca\u003etoday\u003c/a\u003e etc are to be interpreted\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e CharParser a CalendarTime",
        "fct-source": "src/IsoDate.html#englishDateTime",
        "fct-type": "function",
        "title": "englishDateTime"
      },
      "index": {
        "description": "In English either date followed by time or vice-versa e.g yesterday at noon yesterday tea time yesterday See englishDate and englishTime Uses its first argument as now i.e the time relative to which yesterday today etc are to be interpreted",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "englishDateTime",
        "normalized": "CalendarTime-\u003eCharParser a CalendarTime",
        "package": "darcs",
        "partial": "Date Time",
        "signature": "CalendarTime-\u003eCharParser a CalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:englishInterval",
      "description": {
        "fct-descr": "\u003cp\u003eEnglish expressions for intervals of time,\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e before tea time (i.e. from the beginning of time)\n\u003c/li\u003e\u003cli\u003e after 14:00 last month (i.e. till now)\n\u003c/li\u003e\u003cli\u003e between last year and last month\n\u003c/li\u003e\u003cli\u003e in the last three months (i.e. from then till now)\n\u003c/li\u003e\u003cli\u003e 4 months ago (i.e. till now; see \u003ccode\u003eenglishAgo\u003c/code\u003e)\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e CharParser a TimeInterval",
        "fct-source": "src/IsoDate.html#englishInterval",
        "fct-type": "function",
        "title": "englishInterval"
      },
      "index": {
        "description": "English expressions for intervals of time before tea time i.e from the beginning of time after last month i.e till now between last year and last month in the last three months i.e from then till now months ago i.e till now see englishAgo",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "englishInterval",
        "normalized": "CalendarTime-\u003eCharParser a TimeInterval",
        "package": "darcs",
        "partial": "Interval",
        "signature": "CalendarTime-\u003eCharParser a TimeInterval"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:englishLast",
      "description": {
        "fct-descr": "\u003cp\u003eDurations in English that begin with the word \"last\",\n   E.g. \"last 4 months\" is treated as the duration between\n   4 months ago and now\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e CharParser a (CalendarTime, CalendarTime)",
        "fct-source": "src/IsoDate.html#englishLast",
        "fct-type": "function",
        "title": "englishLast"
      },
      "index": {
        "description": "Durations in English that begin with the word last E.g last months is treated as the duration between months ago and now",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "englishLast",
        "normalized": "CalendarTime-\u003eCharParser a(CalendarTime,CalendarTime)",
        "package": "darcs",
        "partial": "Last",
        "signature": "CalendarTime-\u003eCharParser a(CalendarTime,CalendarTime)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:getIsoDateTime",
      "description": {
        "fct-descr": "\u003cp\u003eThe current time in the format returned by \u003ccode\u003eshowIsoDateTime\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "IO String",
        "fct-source": "src/IsoDate.html#getIsoDateTime",
        "fct-type": "function",
        "title": "getIsoDateTime"
      },
      "index": {
        "description": "The current time in the format returned by showIsoDateTime",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "getIsoDateTime",
        "normalized": "",
        "package": "darcs",
        "partial": "Iso Date Time",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:getLocalTz",
      "description": {
        "fct-descr": "\u003cp\u003eReturn the local timezone offset from UTC in seconds\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "IO Int",
        "fct-source": "src/IsoDate.html#getLocalTz",
        "fct-type": "function",
        "title": "getLocalTz"
      },
      "index": {
        "description": "Return the local timezone offset from UTC in seconds",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "getLocalTz",
        "normalized": "",
        "package": "darcs",
        "partial": "Local Tz",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:iso8601Duration",
      "description": {
        "fct-descr": "\u003cp\u003eDurations in ISO 8601, e.g.,\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e P4Y (four years)\n\u003c/li\u003e\u003cli\u003e P5M (five months)\n\u003c/li\u003e\u003cli\u003e P4Y5M (four years and five months)\n\u003c/li\u003e\u003cli\u003e P4YT3H6S (four years, three hours and six seconds)\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CharParser a TimeDiff",
        "fct-source": "src/IsoDate.html#iso8601Duration",
        "fct-type": "function",
        "title": "iso8601Duration"
      },
      "index": {
        "description": "Durations in ISO e.g P4Y four years P5M five months P4Y5M four years and five months P4YT3H6S four years three hours and six seconds",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "iso8601Duration",
        "normalized": "",
        "package": "darcs",
        "partial": "Duration",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:iso8601Interval",
      "description": {
        "fct-descr": "\u003cp\u003eIntervals in ISO 8601, e.g.,\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 2008-09/2012-08-17T16:30\n\u003c/li\u003e\u003cli\u003e 2008-09/P2Y11MT16H30M\n\u003c/li\u003e\u003cli\u003e P2Y11MT16H30M/2012-08-17T16:30\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eSee \u003ccode\u003e\u003ca\u003eiso8601Duration\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e CharParser a (Either TimeDiff (MCalendarTime, MCalendarTime))",
        "fct-source": "src/IsoDate.html#iso8601Interval",
        "fct-type": "function",
        "title": "iso8601Interval"
      },
      "index": {
        "description": "Intervals in ISO e.g T16 P2Y11MT16H30M P2Y11MT16H30M T16 See iso8601Duration",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "iso8601Interval",
        "normalized": "Int-\u003eCharParser a(Either TimeDiff(MCalendarTime,MCalendarTime))",
        "package": "darcs",
        "partial": "Interval",
        "signature": "Int-\u003eCharParser a(Either TimeDiff(MCalendarTime,MCalendarTime))"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctDay",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctDay"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctDay",
        "normalized": "",
        "package": "darcs",
        "partial": "Day",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctHour",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctHour"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctHour",
        "normalized": "",
        "package": "darcs",
        "partial": "Hour",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctIsDST",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Bool",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctIsDST"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctIsDST",
        "normalized": "",
        "package": "darcs",
        "partial": "Is DST",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctMin",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctMin"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctMin",
        "normalized": "",
        "package": "darcs",
        "partial": "Min",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctMonth",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Month",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctMonth"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctMonth",
        "normalized": "",
        "package": "darcs",
        "partial": "Month",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctPicosec",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Integer",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctPicosec"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctPicosec",
        "normalized": "",
        "package": "darcs",
        "partial": "Picosec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctSec",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctSec"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctSec",
        "normalized": "",
        "package": "darcs",
        "partial": "Sec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctTZ",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctTZ"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctTZ",
        "normalized": "",
        "package": "darcs",
        "partial": "TZ",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctTZName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe String",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctTZName"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctTZName",
        "normalized": "",
        "package": "darcs",
        "partial": "TZName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctWDay",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Day",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctWDay"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctWDay",
        "normalized": "",
        "package": "darcs",
        "partial": "WDay",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctWeek",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Bool",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctWeek"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctWeek",
        "normalized": "",
        "package": "darcs",
        "partial": "Week",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctYDay",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctYDay"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctYDay",
        "normalized": "",
        "package": "darcs",
        "partial": "YDay",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:mctYear",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Maybe Int",
        "fct-source": "src/IsoDate.html#MCalendarTime",
        "fct-type": "function",
        "title": "mctYear"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "mctYear",
        "normalized": "",
        "package": "darcs",
        "partial": "Year",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:parseDate",
      "description": {
        "fct-descr": "\u003cp\u003eParse a date string, assuming a default timezone if\n   the date string does not specify one.  The date formats\n   understood are those of \u003ccode\u003eshowIsoDateTime\u003c/code\u003e and \u003ccode\u003edateTime\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e String -\u003e Either ParseError MCalendarTime",
        "fct-source": "src/IsoDate.html#parseDate",
        "fct-type": "function",
        "title": "parseDate"
      },
      "index": {
        "description": "Parse date string assuming default timezone if the date string does not specify one The date formats understood are those of showIsoDateTime and dateTime",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "parseDate",
        "normalized": "Int-\u003eString-\u003eEither ParseError MCalendarTime",
        "package": "darcs",
        "partial": "Date",
        "signature": "Int-\u003eString-\u003eEither ParseError MCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:readLocalDate",
      "description": {
        "fct-descr": "\u003cp\u003eRead/interpret a date string, assuming local timezone if not\n   specified in the string\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e CalendarTime",
        "fct-source": "src/IsoDate.html#readLocalDate",
        "fct-type": "function",
        "title": "readLocalDate"
      },
      "index": {
        "description": "Read interpret date string assuming local timezone if not specified in the string",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "readLocalDate",
        "normalized": "String-\u003eCalendarTime",
        "package": "darcs",
        "partial": "Local Date",
        "signature": "String-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:readUTCDate",
      "description": {
        "fct-descr": "\u003cp\u003eRead/interpret a date string, assuming UTC if timezone\n   is not specified in the string (see \u003ccode\u003ereadDate\u003c/code\u003e)\n   Warning! This errors out if we fail to interpret the\n   date\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e CalendarTime",
        "fct-source": "src/IsoDate.html#readUTCDate",
        "fct-type": "function",
        "title": "readUTCDate"
      },
      "index": {
        "description": "Read interpret date string assuming UTC if timezone is not specified in the string see readDate Warning This errors out if we fail to interpret the date",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "readUTCDate",
        "normalized": "String-\u003eCalendarTime",
        "package": "darcs",
        "partial": "UTCDate",
        "signature": "String-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:resetCalendar",
      "description": {
        "fct-descr": "\u003cp\u003eSet a calendar to UTC time any eliminate any inconsistencies within\n   (for example, where the weekday is given as \u003ccode\u003eThursday\u003c/code\u003e, but this does not\n   match what the numerical date would lead one to expect)\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e CalendarTime",
        "fct-source": "src/IsoDate.html#resetCalendar",
        "fct-type": "function",
        "title": "resetCalendar"
      },
      "index": {
        "description": "Set calendar to UTC time any eliminate any inconsistencies within for example where the weekday is given as Thursday but this does not match what the numerical date would lead one to expect",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "resetCalendar",
        "normalized": "CalendarTime-\u003eCalendarTime",
        "package": "darcs",
        "partial": "Calendar",
        "signature": "CalendarTime-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:subtractFromMCal",
      "description": {
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "TimeDiff -\u003e MCalendarTime -\u003e MCalendarTime",
        "fct-source": "src/IsoDate.html#subtractFromMCal",
        "fct-type": "function",
        "title": "subtractFromMCal"
      },
      "index": {
        "description": "",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "subtractFromMCal",
        "normalized": "TimeDiff-\u003eMCalendarTime-\u003eMCalendarTime",
        "package": "darcs",
        "partial": "From MCal",
        "signature": "TimeDiff-\u003eMCalendarTime-\u003eMCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:toMCalendarTime",
      "description": {
        "fct-descr": "\u003cp\u003eTrivially convert a \u003ccode\u003e\u003ca\u003eCalendarTime\u003c/a\u003e\u003c/code\u003e to a fully specified\n   \u003ccode\u003e\u003ca\u003eMCalendarTime\u003c/a\u003e\u003c/code\u003e (note that this sets the \u003ccode\u003e\u003ca\u003emctWeek\u003c/a\u003e\u003c/code\u003e flag to\n   \u003ccode\u003eFalse\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e MCalendarTime",
        "fct-source": "src/IsoDate.html#toMCalendarTime",
        "fct-type": "function",
        "title": "toMCalendarTime"
      },
      "index": {
        "description": "Trivially convert CalendarTime to fully specified MCalendarTime note that this sets the mctWeek flag to False",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "toMCalendarTime",
        "normalized": "CalendarTime-\u003eMCalendarTime",
        "package": "darcs",
        "partial": "MCalendar Time",
        "signature": "CalendarTime-\u003eMCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:unsafeToCalendarTime",
      "description": {
        "fct-descr": "\u003cp\u003eReturns the first \u003ccode\u003e\u003ca\u003eCalendarTime\u003c/a\u003e\u003c/code\u003e that falls within a \u003ccode\u003e\u003ca\u003eMCalendarTime\u003c/a\u003e\u003c/code\u003e\n   This is only unsafe in the sense that it plugs in default values\n   for fields that have not been set, e.g. \u003ccode\u003eJanuary\u003c/code\u003e for the month\n   or \u003ccode\u003e0\u003c/code\u003e for the seconds field.\n   Maybe we should rename it something happier.\n   See also \u003ccode\u003e\u003ca\u003eresetCalendar\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "MCalendarTime -\u003e CalendarTime",
        "fct-source": "src/IsoDate.html#unsafeToCalendarTime",
        "fct-type": "function",
        "title": "unsafeToCalendarTime"
      },
      "index": {
        "description": "Returns the first CalendarTime that falls within MCalendarTime This is only unsafe in the sense that it plugs in default values for fields that have not been set e.g January for the month or for the seconds field Maybe we should rename it something happier See also resetCalendar",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "unsafeToCalendarTime",
        "normalized": "MCalendarTime-\u003eCalendarTime",
        "package": "darcs",
        "partial": "To Calendar Time",
        "signature": "MCalendarTime-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/IsoDate.html#v:unsetTime",
      "description": {
        "fct-descr": "\u003cp\u003eZero the time fields of a \u003ccode\u003e\u003ca\u003eCalendarTime\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "IsoDate",
        "fct-package": "darcs",
        "fct-signature": "CalendarTime -\u003e CalendarTime",
        "fct-source": "src/IsoDate.html#unsetTime",
        "fct-type": "function",
        "title": "unsetTime"
      },
      "index": {
        "description": "Zero the time fields of CalendarTime",
        "hierarchy": "IsoDate",
        "module": "IsoDate",
        "name": "unsetTime",
        "normalized": "CalendarTime-\u003eCalendarTime",
        "package": "darcs",
        "partial": "Time",
        "signature": "CalendarTime-\u003eCalendarTime"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Lcs.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLCS stands for Longest Common Subsequence, and it is a relatively\n challenging problem to find an LCS efficiently.  This module implements\n the algorithm described in:\n\u003c/p\u003e\u003cp\u003e\u003ca\u003eAn O(ND) Difference Algorithm and its Variations\u003c/a\u003e, Eugene Myers,\n   Algorithmica Vol. 1 No. 2, 1986, pp. 251-266;\n   especially the variation described in section 4.2 and most refinements\n   implemented in GNU diff (D is the edit-distance).\n\u003c/p\u003e\u003cp\u003eThere is currently no heuristic to reduce the running time and produce\n suboptimal output for large inputs with many differences. It behaves like\n GNU diff with the -d option in this regard.\n\u003c/p\u003e\u003cp\u003eIn the first step, a hash value for every line is calculated and collisions\n are marked with a special value. This reduces a string comparison to an\n int comparison for line tuples where at least one of the hash values is\n not equal to the special value. After that, lines which only exists in one\n of the files are removed and marked as changed which reduces the running\n time of the following difference algorithm. GNU diff additionally removes\n lines that appear very often in the other file in some cases.\n The last step tries to create longer changed regions and line up deletions\n in the first file to insertions in the second by shifting changed lines\n forward and backward.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Lcs",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Lcs.html",
        "fct-type": "module",
        "title": "Lcs"
      },
      "index": {
        "description": "LCS stands for Longest Common Subsequence and it is relatively challenging problem to find an LCS efficiently This module implements the algorithm described in An ND Difference Algorithm and its Variations Eugene Myers Algorithmica Vol No pp especially the variation described in section and most refinements implemented in GNU diff is the edit-distance There is currently no heuristic to reduce the running time and produce suboptimal output for large inputs with many differences It behaves like GNU diff with the option in this regard In the first step hash value for every line is calculated and collisions are marked with special value This reduces string comparison to an int comparison for line tuples where at least one of the hash values is not equal to the special value After that lines which only exists in one of the files are removed and marked as changed which reduces the running time of the following difference algorithm GNU diff additionally removes lines that appear very often in the other file in some cases The last step tries to create longer changed regions and line up deletions in the first file to insertions in the second by shifting changed lines forward and backward",
        "hierarchy": "Lcs",
        "module": "Lcs",
        "name": "Lcs",
        "normalized": "",
        "package": "darcs",
        "partial": "Lcs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Lcs.html#v:getChanges",
      "description": {
        "fct-descr": "\u003cp\u003ecreate a list of changes between a and b, each change has the form\n   (starta, lima, startb, limb) which means that a[starta, lima)\n   has to be replaced by b[startb, limb)\n\u003c/p\u003e",
        "fct-module": "Lcs",
        "fct-package": "darcs",
        "fct-signature": "[ByteString] -\u003e [ByteString] -\u003e [(Int, [ByteString], [ByteString])]",
        "fct-source": "src/Lcs.html#getChanges",
        "fct-type": "function",
        "title": "getChanges"
      },
      "index": {
        "description": "create list of changes between and each change has the form starta lima startb limb which means that starta lima has to be replaced by startb limb",
        "hierarchy": "Lcs",
        "module": "Lcs",
        "name": "getChanges",
        "normalized": "[ByteString]-\u003e[ByteString]-\u003e[(Int,[ByteString],[ByteString])]",
        "package": "darcs",
        "partial": "Changes",
        "signature": "[ByteString]-\u003e[ByteString]-\u003e[(Int,[ByteString],[ByteString])]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Lcs.html#v:shiftBoundaries",
      "description": {
        "fct-descr": "\u003cp\u003etry to create nicer diffs by shifting around regions of changed lines\n\u003c/p\u003e",
        "fct-module": "Lcs",
        "fct-package": "darcs",
        "fct-signature": "BSTArray s -\u003e BSTArray s -\u003e PArray -\u003e Int -\u003e Int -\u003e ST s ()",
        "fct-source": "src/Lcs.html#shiftBoundaries",
        "fct-type": "function",
        "title": "shiftBoundaries"
      },
      "index": {
        "description": "try to create nicer diffs by shifting around regions of changed lines",
        "hierarchy": "Lcs",
        "module": "Lcs",
        "name": "shiftBoundaries",
        "normalized": "BSTArray a-\u003eBSTArray a-\u003ePArray-\u003eInt-\u003eInt-\u003eST a()",
        "package": "darcs",
        "partial": "Boundaries",
        "signature": "BSTArray s-\u003eBSTArray s-\u003ePArray-\u003eInt-\u003eInt-\u003eST s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Printer.html",
        "fct-type": "module",
        "title": "Printer"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Printer",
        "normalized": "",
        "package": "darcs",
        "partial": "Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#t:Color",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Printer.html#Color",
        "fct-type": "data",
        "title": "Color"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Color",
        "normalized": "",
        "package": "darcs",
        "partial": "Color",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#t:Doc",
      "description": {
        "fct-descr": "\u003cp\u003ea \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e is a bit of enriched text. \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es get concatanated using\n \u003ccode\u003e\u003ca\u003e\u003c\u003e\u003c/a\u003e\u003c/code\u003e, which is right-associative.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "newtype",
        "fct-source": "src/Printer.html#Doc",
        "fct-type": "newtype",
        "title": "Doc"
      },
      "index": {
        "description": "Doc is bit of enriched text Doc get concatanated using which is right-associative",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Doc",
        "normalized": "",
        "package": "darcs",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#t:Printable",
      "description": {
        "fct-descr": "\u003cp\u003eA \u003ccode\u003e\u003ca\u003ePrintable\u003c/a\u003e\u003c/code\u003e is either a String, a packed string, or a chunk of\n text with both representations.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Printer.html#Printable",
        "fct-type": "data",
        "title": "Printable"
      },
      "index": {
        "description": "Printable is either String packed string or chunk of text with both representations",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Printable",
        "normalized": "",
        "package": "darcs",
        "partial": "Printable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#t:Printer",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Printer.html#Printer",
        "fct-type": "type",
        "title": "Printer"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Printer",
        "normalized": "",
        "package": "darcs",
        "partial": "Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#t:Printers",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-source": "src/Printer.html#Printers",
        "fct-type": "type",
        "title": "Printers"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Printers",
        "normalized": "",
        "package": "darcs",
        "partial": "Printers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#t:Printers-39-",
      "description": {
        "fct-descr": "\u003cp\u003eA set of printers to print different types of text to a handle.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "data",
        "title": "Printers'"
      },
      "index": {
        "description": "set of printers to print different types of text to handle",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Printers'",
        "normalized": "",
        "package": "darcs",
        "partial": "Printers'",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:-36--36-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ea \u003ccode\u003e\u003ca\u003e$$\u003c/a\u003e\u003c/code\u003e b\u003c/code\u003e is \u003ccode\u003ea\u003c/code\u003e above \u003ccode\u003eb\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#%24%24",
        "fct-type": "function",
        "title": "($$)"
      },
      "index": {
        "description": "is above",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "($$) $$",
        "normalized": "Doc-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "Doc-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:-60--43--62-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ea \u003ccode\u003e\u003ca\u003e\u003c+\u003e\u003c/a\u003e\u003c/code\u003e b\u003c/code\u003e is \u003ccode\u003ea\u003c/code\u003e followed by a space, then \u003ccode\u003eb\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#%3C%2B%3E",
        "fct-type": "function",
        "title": "(\u003c+\u003e)"
      },
      "index": {
        "description": "is followed by space then",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "(\u003c+\u003e) \u003c+\u003e",
        "normalized": "Doc-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "Doc-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:-60--62-",
      "description": {
        "fct-descr": "\u003cp\u003e'(\u003ca/\u003e)' is the concatenation operator for \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#%3C%3E",
        "fct-type": "function",
        "title": "(\u003c\u003e)"
      },
      "index": {
        "description": "is the concatenation operator for Doc",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "(\u003c\u003e) \u003c\u003e",
        "normalized": "Doc-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "Doc-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:-60--63--62-",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ea \u003ccode\u003e\u003ca\u003e\u003c?\u003e\u003c/a\u003e\u003c/code\u003e b\u003c/code\u003e is \u003ccode\u003ea \u003ca/\u003e b\u003c/code\u003e if \u003ccode\u003ea\u003c/code\u003e is not empty, else empty.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#%3C%3F%3E",
        "fct-type": "function",
        "title": "(\u003c?\u003e)"
      },
      "index": {
        "description": "is if is not empty else empty",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "(\u003c?\u003e) \u003c?\u003e",
        "normalized": "Doc-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "Doc-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Blue",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Blue",
        "fct-source": "src/Printer.html#Color",
        "fct-type": "function",
        "title": "Blue"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Blue",
        "normalized": "",
        "package": "darcs",
        "partial": "Blue",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Both",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Both !String !ByteString",
        "fct-source": "src/Printer.html#Printable",
        "fct-type": "function",
        "title": "Both"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Both",
        "normalized": "",
        "package": "darcs",
        "partial": "Both",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Cyan",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Cyan",
        "fct-source": "src/Printer.html#Color",
        "fct-type": "function",
        "title": "Cyan"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Cyan",
        "normalized": "",
        "package": "darcs",
        "partial": "Cyan",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Doc",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#Doc",
        "fct-type": "function",
        "title": "Doc"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Doc",
        "normalized": "",
        "package": "darcs",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Green",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Green",
        "fct-source": "src/Printer.html#Color",
        "fct-type": "function",
        "title": "Green"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Green",
        "normalized": "",
        "package": "darcs",
        "partial": "Green",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Magenta",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Magenta",
        "fct-source": "src/Printer.html#Color",
        "fct-type": "function",
        "title": "Magenta"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Magenta",
        "normalized": "",
        "package": "darcs",
        "partial": "Magenta",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:PS",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "PS !ByteString",
        "fct-source": "src/Printer.html#Printable",
        "fct-type": "function",
        "title": "PS"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "PS",
        "normalized": "",
        "package": "darcs",
        "partial": "PS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Printers",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "Printers"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Printers",
        "normalized": "",
        "package": "darcs",
        "partial": "Printers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:Red",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Red",
        "fct-source": "src/Printer.html#Color",
        "fct-type": "function",
        "title": "Red"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "Red",
        "normalized": "",
        "package": "darcs",
        "partial": "Red",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:S",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "S !String",
        "fct-source": "src/Printer.html#Printable",
        "fct-type": "function",
        "title": "S"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "S",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:backslash",
      "description": {
        "fct-descr": "\u003cp\u003eMinimal \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es representing the common characters \u003ccode\u003e\u003ca\u003espace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enewline\u003c/a\u003e\u003c/code\u003e\n \u003ccode\u003e\u003ca\u003eminus\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eplus\u003c/a\u003e\u003c/code\u003e, and \u003ccode\u003e\u003ca\u003ebackslash\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#backslash",
        "fct-type": "function",
        "title": "backslash"
      },
      "index": {
        "description": "Minimal Doc representing the common characters space newline minus plus and backslash",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "backslash",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:blueText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eblueText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing blue text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#blueText",
        "fct-type": "function",
        "title": "blueText"
      },
      "index": {
        "description": "blueText creates Doc containing blue text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "blueText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:colorP",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!(Color -\u003e Printer)",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "colorP"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "colorP",
        "normalized": "(Color-\u003ePrinter)",
        "package": "darcs",
        "partial": "",
        "signature": "(Color-\u003ePrinter)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:colorText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ecolorText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing colored text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Color -\u003e String -\u003e Doc",
        "fct-source": "src/Printer.html#colorText",
        "fct-type": "function",
        "title": "colorText"
      },
      "index": {
        "description": "colorText creates Doc containing colored text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "colorText",
        "normalized": "Color-\u003eString-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "Color-\u003eString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:cyanText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eblueText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing blue text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#cyanText",
        "fct-type": "function",
        "title": "cyanText"
      },
      "index": {
        "description": "blueText creates Doc containing blue text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "cyanText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:defP",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!Printer",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "defP"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "defP",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:doc",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "([Printable] -\u003e [Printable]) -\u003e Doc",
        "fct-source": "src/Printer.html#doc",
        "fct-type": "function",
        "title": "doc"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "doc",
        "normalized": "([Printable]-\u003e[Printable])-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "([Printable]-\u003e[Printable])-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:empty",
      "description": {
        "fct-descr": "\u003cp\u003eThe empty \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#empty",
        "fct-type": "function",
        "title": "empty"
      },
      "index": {
        "description": "The empty Doc",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "empty",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:errorDoc",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e a",
        "fct-source": "src/Printer.html#errorDoc",
        "fct-type": "function",
        "title": "errorDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "errorDoc",
        "normalized": "Doc-\u003ea",
        "package": "darcs",
        "partial": "Doc",
        "signature": "Doc-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:greenText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eblueText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing blue text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#greenText",
        "fct-type": "function",
        "title": "greenText"
      },
      "index": {
        "description": "blueText creates Doc containing blue text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "greenText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hPutDoc",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehputDoc\u003c/code\u003e puts a doc on the given handle using \u003ccode\u003e\u003ca\u003esimplePrinters\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Handle -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#hPutDoc",
        "fct-type": "function",
        "title": "hPutDoc"
      },
      "index": {
        "description": "hputDoc puts doc on the given handle using simplePrinters",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hPutDoc",
        "normalized": "Handle-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Put Doc",
        "signature": "Handle-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hPutDocLn",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Handle -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#hPutDocLn",
        "fct-type": "function",
        "title": "hPutDocLn"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hPutDocLn",
        "normalized": "Handle-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Put Doc Ln",
        "signature": "Handle-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hPutDocLnWith",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehputDocLnWith\u003c/code\u003e puts a doc, followed by a newline on the given\n handle using the given printer.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers -\u003e Handle -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#hPutDocLnWith",
        "fct-type": "function",
        "title": "hPutDocLnWith"
      },
      "index": {
        "description": "hputDocLnWith puts doc followed by newline on the given handle using the given printer",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hPutDocLnWith",
        "normalized": "Printers-\u003eHandle-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Put Doc Ln With",
        "signature": "Printers-\u003eHandle-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hPutDocWith",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ehputDocWith\u003c/code\u003e puts a doc on the given handle using the given printer.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers -\u003e Handle -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#hPutDocWith",
        "fct-type": "function",
        "title": "hPutDocWith"
      },
      "index": {
        "description": "hputDocWith puts doc on the given handle using the given printer",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hPutDocWith",
        "normalized": "Printers-\u003eHandle-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Put Doc With",
        "signature": "Printers-\u003eHandle-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hcat",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ehcat\u003c/a\u003e\u003c/code\u003e concatenates (horizontally) a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "[Doc] -\u003e Doc",
        "fct-source": "src/Printer.html#hcat",
        "fct-type": "function",
        "title": "hcat"
      },
      "index": {
        "description": "hcat concatenates horizontally list of Doc",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hcat",
        "normalized": "[Doc]-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "[Doc]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hiddenP",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!Printer",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "hiddenP"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hiddenP",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hiddenPrefix",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#hiddenPrefix",
        "fct-type": "function",
        "title": "hiddenPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hiddenPrefix",
        "normalized": "String-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "Prefix",
        "signature": "String-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:hiddenText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ehiddenText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing hidden text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#hiddenText",
        "fct-type": "function",
        "title": "hiddenText"
      },
      "index": {
        "description": "hiddenText creates Doc containing hidden text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "hiddenText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:insertBeforeLastline",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#insertBeforeLastline",
        "fct-type": "function",
        "title": "insertBeforeLastline"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "insertBeforeLastline",
        "normalized": "Doc-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "Before Lastline",
        "signature": "Doc-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:invisibleP",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!Printer",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "invisibleP"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "invisibleP",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:invisiblePS",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003einvisiblePS\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e with invisible text from a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Doc",
        "fct-source": "src/Printer.html#invisiblePS",
        "fct-type": "function",
        "title": "invisiblePS"
      },
      "index": {
        "description": "invisiblePS creates Doc with invisible text from ByteString",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "invisiblePS",
        "normalized": "ByteString-\u003eDoc",
        "package": "darcs",
        "partial": "PS",
        "signature": "ByteString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:invisiblePrinter",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003einvisiblePrinter\u003c/a\u003e\u003c/code\u003e is the \u003ccode\u003e\u003ca\u003ePrinter\u003c/a\u003e\u003c/code\u003e for hidden text. It just replaces\n the document with \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e.  It's useful to have a printer that doesn't\n actually do anything because this allows you to have tunable policies,\n for example, only printing some text if it's to the terminal, but not\n if it's to a file or vice-versa.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printer",
        "fct-source": "src/Printer.html#invisiblePrinter",
        "fct-type": "function",
        "title": "invisiblePrinter"
      },
      "index": {
        "description": "invisiblePrinter is the Printer for hidden text It just replaces the document with empty It useful to have printer that doesn actually do anything because this allows you to have tunable policies for example only printing some text if it to the terminal but not if it to file or vice-versa",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "invisiblePrinter",
        "normalized": "",
        "package": "darcs",
        "partial": "Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:invisibleText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003einvisibleText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing invisible text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#invisibleText",
        "fct-type": "function",
        "title": "invisibleText"
      },
      "index": {
        "description": "invisibleText creates Doc containing invisible text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "invisibleText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:lineColor",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Color -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#lineColor",
        "fct-type": "function",
        "title": "lineColor"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "lineColor",
        "normalized": "Color-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "Color",
        "signature": "Color-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:lineColorS",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!([Printable] -\u003e [Printable])",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "lineColorS"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "lineColorS",
        "normalized": "([Printable]-\u003e[Printable])",
        "package": "darcs",
        "partial": "Color",
        "signature": "([Printable]-\u003e[Printable])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:lineColorT",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!(Color -\u003e Doc -\u003e Doc)",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "lineColorT"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "lineColorT",
        "normalized": "(Color-\u003eDoc-\u003eDoc)",
        "package": "darcs",
        "partial": "Color",
        "signature": "(Color-\u003eDoc-\u003eDoc)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:lparen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003elparen\u003c/a\u003e\u003c/code\u003e is the \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e that represents \u003ccode\u003e\"(\"\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#lparen",
        "fct-type": "function",
        "title": "lparen"
      },
      "index": {
        "description": "lparen is the Doc that represents",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "lparen",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:magentaText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eblueText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing blue text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#magentaText",
        "fct-type": "function",
        "title": "magentaText"
      },
      "index": {
        "description": "blueText creates Doc containing blue text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "magentaText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:minus",
      "description": {
        "fct-descr": "\u003cp\u003eMinimal \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es representing the common characters \u003ccode\u003e\u003ca\u003espace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enewline\u003c/a\u003e\u003c/code\u003e\n \u003ccode\u003e\u003ca\u003eminus\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eplus\u003c/a\u003e\u003c/code\u003e, and \u003ccode\u003e\u003ca\u003ebackslash\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#minus",
        "fct-type": "function",
        "title": "minus"
      },
      "index": {
        "description": "Minimal Doc representing the common characters space newline minus plus and backslash",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "minus",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:newline",
      "description": {
        "fct-descr": "\u003cp\u003eMinimal \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es representing the common characters \u003ccode\u003e\u003ca\u003espace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enewline\u003c/a\u003e\u003c/code\u003e\n \u003ccode\u003e\u003ca\u003eminus\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eplus\u003c/a\u003e\u003c/code\u003e, and \u003ccode\u003e\u003ca\u003ebackslash\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#newline",
        "fct-type": "function",
        "title": "newline"
      },
      "index": {
        "description": "Minimal Doc representing the common characters space newline minus plus and backslash",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "newline",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:packedString",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003epackedString\u003c/a\u003e\u003c/code\u003e builds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e using \u003ccode\u003e\u003ca\u003eprintable\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Doc",
        "fct-source": "src/Printer.html#packedString",
        "fct-type": "function",
        "title": "packedString"
      },
      "index": {
        "description": "packedString builds Doc from ByteString using printable",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "packedString",
        "normalized": "ByteString-\u003eDoc",
        "package": "darcs",
        "partial": "String",
        "signature": "ByteString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:parens",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003eparens\u003c/a\u003e\u003c/code\u003e doc\u003c/code\u003e returns a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e with the content of \u003ccode\u003edoc\u003c/code\u003e put within\n a pair of parenthesis.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e Doc",
        "fct-source": "src/Printer.html#parens",
        "fct-type": "function",
        "title": "parens"
      },
      "index": {
        "description": "parens doc returns Doc with the content of doc put within pair of parenthesis",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "parens",
        "normalized": "Doc-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "Doc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:plus",
      "description": {
        "fct-descr": "\u003cp\u003eMinimal \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es representing the common characters \u003ccode\u003e\u003ca\u003espace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enewline\u003c/a\u003e\u003c/code\u003e\n \u003ccode\u003e\u003ca\u003eminus\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eplus\u003c/a\u003e\u003c/code\u003e, and \u003ccode\u003e\u003ca\u003ebackslash\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#plus",
        "fct-type": "function",
        "title": "plus"
      },
      "index": {
        "description": "Minimal Doc representing the common characters space newline minus plus and backslash",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "plus",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:prefix",
      "description": {
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc -\u003e Doc",
        "fct-source": "src/Printer.html#prefix",
        "fct-type": "function",
        "title": "prefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "prefix",
        "normalized": "String-\u003eDoc-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eDoc-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:printable",
      "description": {
        "fct-descr": "\u003cp\u003e'printable x' creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e from any \u003ccode\u003e\u003ca\u003ePrintable\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printable -\u003e Doc",
        "fct-source": "src/Printer.html#printable",
        "fct-type": "function",
        "title": "printable"
      },
      "index": {
        "description": "printable creates Doc from any Printable",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "printable",
        "normalized": "Printable-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "Printable-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:putDoc",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eputDoc\u003c/a\u003e\u003c/code\u003e puts a doc on stdout using the simple printer \u003ccode\u003e\u003ca\u003esimplePrinters\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#putDoc",
        "fct-type": "function",
        "title": "putDoc"
      },
      "index": {
        "description": "putDoc puts doc on stdout using the simple printer simplePrinters",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "putDoc",
        "normalized": "Doc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc",
        "signature": "Doc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:putDocLn",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eputDocLn\u003c/a\u003e\u003c/code\u003e puts a doc, followed by a newline on stdout using\n \u003ccode\u003e\u003ca\u003esimplePrinters\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#putDocLn",
        "fct-type": "function",
        "title": "putDocLn"
      },
      "index": {
        "description": "putDocLn puts doc followed by newline on stdout using simplePrinters",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "putDocLn",
        "normalized": "Doc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc Ln",
        "signature": "Doc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:putDocLnWith",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eputDocLnWith\u003c/a\u003e\u003c/code\u003e puts a doc, followed by a newline on stdout using\n the given printer.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#putDocLnWith",
        "fct-type": "function",
        "title": "putDocLnWith"
      },
      "index": {
        "description": "putDocLnWith puts doc followed by newline on stdout using the given printer",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "putDocLnWith",
        "normalized": "Printers-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc Ln With",
        "signature": "Printers-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:putDocWith",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eputDocWith\u003c/a\u003e\u003c/code\u003e puts a doc on stdout using the given printer.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers -\u003e Doc -\u003e IO ()",
        "fct-source": "src/Printer.html#putDocWith",
        "fct-type": "function",
        "title": "putDocWith"
      },
      "index": {
        "description": "putDocWith puts doc on stdout using the given printer",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "putDocWith",
        "normalized": "Printers-\u003eDoc-\u003eIO()",
        "package": "darcs",
        "partial": "Doc With",
        "signature": "Printers-\u003eDoc-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:redText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eblueText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing blue text from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#redText",
        "fct-type": "function",
        "title": "redText"
      },
      "index": {
        "description": "blueText creates Doc containing blue text from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "redText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:renderPS",
      "description": {
        "fct-descr": "\u003cp\u003erenders a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e into \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e with control codes for the\n special features of the Doc. See also \u003ccode\u003ereaderString\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e ByteString",
        "fct-source": "src/Printer.html#renderPS",
        "fct-type": "function",
        "title": "renderPS"
      },
      "index": {
        "description": "renders Doc into ByteString with control codes for the special features of the Doc See also readerString",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "renderPS",
        "normalized": "Doc-\u003eByteString",
        "package": "darcs",
        "partial": "PS",
        "signature": "Doc-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:renderPSWith",
      "description": {
        "fct-descr": "\u003cp\u003erenders a doc into a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e using a given set of printers.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers' -\u003e Doc -\u003e ByteString",
        "fct-source": "src/Printer.html#renderPSWith",
        "fct-type": "function",
        "title": "renderPSWith"
      },
      "index": {
        "description": "renders doc into ByteString using given set of printers",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "renderPSWith",
        "normalized": "Printers'-\u003eDoc-\u003eByteString",
        "package": "darcs",
        "partial": "PSWith",
        "signature": "Printers'-\u003eDoc-\u003eByteString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:renderPSs",
      "description": {
        "fct-descr": "\u003cp\u003erenders a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e into a list of \u003ccode\u003ePackedStrings\u003c/code\u003e, one for each line.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e [ByteString]",
        "fct-source": "src/Printer.html#renderPSs",
        "fct-type": "function",
        "title": "renderPSs"
      },
      "index": {
        "description": "renders Doc into list of PackedStrings one for each line",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "renderPSs",
        "normalized": "Doc-\u003e[ByteString]",
        "package": "darcs",
        "partial": "PSs",
        "signature": "Doc-\u003e[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:renderPSsWith",
      "description": {
        "fct-descr": "\u003cp\u003erenders a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e into a list of \u003ccode\u003ePackedStrings\u003c/code\u003e, one for each\n chunk of text that was added to the doc, using the given set of\n printers.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers' -\u003e Doc -\u003e [ByteString]",
        "fct-source": "src/Printer.html#renderPSsWith",
        "fct-type": "function",
        "title": "renderPSsWith"
      },
      "index": {
        "description": "renders Doc into list of PackedStrings one for each chunk of text that was added to the doc using the given set of printers",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "renderPSsWith",
        "normalized": "Printers'-\u003eDoc-\u003e[ByteString]",
        "package": "darcs",
        "partial": "PSs With",
        "signature": "Printers'-\u003eDoc-\u003e[ByteString]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:renderString",
      "description": {
        "fct-descr": "\u003cp\u003erenders a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e into a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e with control codes for the\n special features of the doc.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc -\u003e String",
        "fct-source": "src/Printer.html#renderString",
        "fct-type": "function",
        "title": "renderString"
      },
      "index": {
        "description": "renders Doc into String with control codes for the special features of the doc",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "renderString",
        "normalized": "Doc-\u003eString",
        "package": "darcs",
        "partial": "String",
        "signature": "Doc-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:renderStringWith",
      "description": {
        "fct-descr": "\u003cp\u003erenders a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e into a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e using a given set of printers.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers' -\u003e Doc -\u003e String",
        "fct-source": "src/Printer.html#renderStringWith",
        "fct-type": "function",
        "title": "renderStringWith"
      },
      "index": {
        "description": "renders Doc into String using given set of printers",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "renderStringWith",
        "normalized": "Printers'-\u003eDoc-\u003eString",
        "package": "darcs",
        "partial": "String With",
        "signature": "Printers'-\u003eDoc-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:rparen",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003erparen\u003c/a\u003e\u003c/code\u003e is the \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e that represents \u003ccode\u003e\")\"\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#rparen",
        "fct-type": "function",
        "title": "rparen"
      },
      "index": {
        "description": "rparen is the Doc that represents",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "rparen",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:simplePrinter",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esimplePrinter\u003c/a\u003e\u003c/code\u003e is the simplest \u003ccode\u003e\u003ca\u003ePrinter\u003c/a\u003e\u003c/code\u003e: it just concatenates together\n the pieces of the \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printer",
        "fct-source": "src/Printer.html#simplePrinter",
        "fct-type": "function",
        "title": "simplePrinter"
      },
      "index": {
        "description": "simplePrinter is the simplest Printer it just concatenates together the pieces of the Doc",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "simplePrinter",
        "normalized": "",
        "package": "darcs",
        "partial": "Printer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:simplePrinters",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003esimplePrinters\u003c/a\u003e\u003c/code\u003e is a \u003ccode\u003e\u003ca\u003ePrinters\u003c/a\u003e\u003c/code\u003e which uses the set 'simplePriners\\'' on any\n handle.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Printers",
        "fct-source": "src/Printer.html#simplePrinters",
        "fct-type": "function",
        "title": "simplePrinters"
      },
      "index": {
        "description": "simplePrinters is Printers which uses the set simplePriners on any handle",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "simplePrinters",
        "normalized": "",
        "package": "darcs",
        "partial": "Printers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:space",
      "description": {
        "fct-descr": "\u003cp\u003eMinimal \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es representing the common characters \u003ccode\u003e\u003ca\u003espace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enewline\u003c/a\u003e\u003c/code\u003e\n \u003ccode\u003e\u003ca\u003eminus\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eplus\u003c/a\u003e\u003c/code\u003e, and \u003ccode\u003e\u003ca\u003ebackslash\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Doc",
        "fct-source": "src/Printer.html#space",
        "fct-type": "function",
        "title": "space"
      },
      "index": {
        "description": "Minimal Doc representing the common characters space newline minus plus and backslash",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "space",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:text",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003eString\u003c/code\u003e, using \u003ccode\u003e\u003ca\u003eprintable\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#text",
        "fct-type": "function",
        "title": "text"
      },
      "index": {
        "description": "text creates Doc from String using printable",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "text",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:unDoc",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "St -\u003e Document",
        "fct-source": "src/Printer.html#Doc",
        "fct-type": "function",
        "title": "unDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "unDoc",
        "normalized": "St-\u003eDocument",
        "package": "darcs",
        "partial": "Doc",
        "signature": "St-\u003eDocument"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:unsafeBoth",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eunsafeBoth\u003c/a\u003e\u003c/code\u003e builds a Doc from a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e and a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e representing\n the same text, but does not check that they do.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e ByteString -\u003e Doc",
        "fct-source": "src/Printer.html#unsafeBoth",
        "fct-type": "function",
        "title": "unsafeBoth"
      },
      "index": {
        "description": "unsafeBoth builds Doc from String and ByteString representing the same text but does not check that they do",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "unsafeBoth",
        "normalized": "String-\u003eByteString-\u003eDoc",
        "package": "darcs",
        "partial": "Both",
        "signature": "String-\u003eByteString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:unsafeBothText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eunsafeBothText\u003c/a\u003e\u003c/code\u003e builds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e. The string is stored in the\n Doc as both a String and a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#unsafeBothText",
        "fct-type": "function",
        "title": "unsafeBothText"
      },
      "index": {
        "description": "unsafeBothText builds Doc from String The string is stored in the Doc as both String and ByteString",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "unsafeBothText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Both Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:unsafeChar",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eunsafeChar\u003c/a\u003e\u003c/code\u003e creates a Doc containing just one character.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Char -\u003e Doc",
        "fct-source": "src/Printer.html#unsafeChar",
        "fct-type": "function",
        "title": "unsafeChar"
      },
      "index": {
        "description": "unsafeChar creates Doc containing just one character",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "unsafeChar",
        "normalized": "Char-\u003eDoc",
        "package": "darcs",
        "partial": "Char",
        "signature": "Char-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:unsafePackedString",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eunsafePackedString\u003c/a\u003e\u003c/code\u003e builds a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e using \u003ccode\u003e\u003ca\u003esimplePrinter\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Doc",
        "fct-source": "src/Printer.html#unsafePackedString",
        "fct-type": "function",
        "title": "unsafePackedString"
      },
      "index": {
        "description": "unsafePackedString builds Doc from ByteString using simplePrinter",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "unsafePackedString",
        "normalized": "ByteString-\u003eDoc",
        "package": "darcs",
        "partial": "Packed String",
        "signature": "ByteString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:unsafeText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003eunsafeText\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e from a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e, using \u003ccode\u003e\u003ca\u003esimplePrinter\u003c/a\u003e\u003c/code\u003e directly\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#unsafeText",
        "fct-type": "function",
        "title": "unsafeText"
      },
      "index": {
        "description": "unsafeText creates Doc from String using simplePrinter directly",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "unsafeText",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:userchunk",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003euserchunk\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e containing a user chunk from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Doc",
        "fct-source": "src/Printer.html#userchunk",
        "fct-type": "function",
        "title": "userchunk"
      },
      "index": {
        "description": "userchunk creates Doc containing user chunk from String",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "userchunk",
        "normalized": "String-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:userchunkP",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "!Printer",
        "fct-source": "src/Printer.html#Printers%27",
        "fct-type": "function",
        "title": "userchunkP"
      },
      "index": {
        "description": "",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "userchunkP",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:userchunkPS",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003euserchunkPS\u003c/a\u003e\u003c/code\u003e creates a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e representing a user chunk from a \u003ccode\u003e\u003ca\u003eByteString\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e Doc",
        "fct-source": "src/Printer.html#userchunkPS",
        "fct-type": "function",
        "title": "userchunkPS"
      },
      "index": {
        "description": "userchunkPS creates Doc representing user chunk from ByteString",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "userchunkPS",
        "normalized": "ByteString-\u003eDoc",
        "package": "darcs",
        "partial": "PS",
        "signature": "ByteString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:vcat",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003evcat\u003c/a\u003e\u003c/code\u003e piles vertically a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "[Doc] -\u003e Doc",
        "fct-source": "src/Printer.html#vcat",
        "fct-type": "function",
        "title": "vcat"
      },
      "index": {
        "description": "vcat piles vertically list of Doc",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "vcat",
        "normalized": "[Doc]-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "[Doc]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:vsep",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ca\u003evsep\u003c/a\u003e\u003c/code\u003e piles vertically a list of \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003es leaving a blank line between each.\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "[Doc] -\u003e Doc",
        "fct-source": "src/Printer.html#vsep",
        "fct-type": "function",
        "title": "vsep"
      },
      "index": {
        "description": "vsep piles vertically list of Doc leaving blank line between each",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "vsep",
        "normalized": "[Doc]-\u003eDoc",
        "package": "darcs",
        "partial": "",
        "signature": "[Doc]-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Printer.html#v:wrapText",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003ewrapText\u003c/a\u003e\u003c/code\u003e n s\u003c/code\u003e is a \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e representing \u003ccode\u003es\u003c/code\u003e line-wrapped at \u003ccode\u003en\u003c/code\u003e characters\n\u003c/p\u003e",
        "fct-module": "Printer",
        "fct-package": "darcs",
        "fct-signature": "Int -\u003e String -\u003e Doc",
        "fct-source": "src/Printer.html#wrapText",
        "fct-type": "function",
        "title": "wrapText"
      },
      "index": {
        "description": "wrapText is Doc representing line-wrapped at characters",
        "hierarchy": "Printer",
        "module": "Printer",
        "name": "wrapText",
        "normalized": "Int-\u003eString-\u003eDoc",
        "package": "darcs",
        "partial": "Text",
        "signature": "Int-\u003eString-\u003eDoc"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUtility functions for tracking progress of long-running actions.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Progress.html",
        "fct-type": "module",
        "title": "Progress"
      },
      "index": {
        "description": "Utility functions for tracking progress of long-running actions",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "Progress",
        "normalized": "",
        "package": "darcs",
        "partial": "Progress",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:beginTedious",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ebeginTedious k\u003c/code\u003e starts a tedious process and registers it in\n \u003ccode\u003e_progressData\u003c/code\u003e with the key \u003ccode\u003ek\u003c/code\u003e. A tedious process is one for which we want\n a progress indicator.\n\u003c/p\u003e\u003cp\u003eWouldn't it be safer if it had type String -\u003e IO ProgressDataKey, so that we\n can ensure there is no collision? What happens if you call beginTedious twice\n with the same string, without calling endTedious in the meantime?\n\u003c/p\u003e",
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Progress.html#beginTedious",
        "fct-type": "function",
        "title": "beginTedious"
      },
      "index": {
        "description": "beginTedious starts tedious process and registers it in progressData with the key tedious process is one for which we want progress indicator Wouldn it be safer if it had type String IO ProgressDataKey so that we can ensure there is no collision What happens if you call beginTedious twice with the same string without calling endTedious in the meantime",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "beginTedious",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Tedious",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:debugFail",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO a",
        "fct-source": "src/Darcs-Global.html#debugFail",
        "fct-type": "function",
        "title": "debugFail"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "debugFail",
        "normalized": "String-\u003eIO a",
        "package": "darcs",
        "partial": "Fail",
        "signature": "String-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:debugMessage",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Darcs-Global.html#debugMessage",
        "fct-type": "function",
        "title": "debugMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "debugMessage",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Message",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:endTedious",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eendTedious k\u003c/code\u003e unregisters the tedious process with key \u003ccode\u003ek\u003c/code\u003e, printing\n \u003ca\u003eDone\u003c/a\u003e if such a tedious process exists.\n\u003c/p\u003e",
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Progress.html#endTedious",
        "fct-type": "function",
        "title": "endTedious"
      },
      "index": {
        "description": "endTedious unregisters the tedious process with key printing Done if such tedious process exists",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "endTedious",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Tedious",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:finishedOne",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e a -\u003e a",
        "fct-source": "src/Progress.html#finishedOne",
        "fct-type": "function",
        "title": "finishedOne"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "finishedOne",
        "normalized": "String-\u003eString-\u003ea-\u003ea",
        "package": "darcs",
        "partial": "One",
        "signature": "String-\u003eString-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:finishedOneIO",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e String -\u003e IO ()",
        "fct-source": "src/Progress.html#finishedOneIO",
        "fct-type": "function",
        "title": "finishedOneIO"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "finishedOneIO",
        "normalized": "String-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "One IO",
        "signature": "String-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:minlist",
      "description": {
        "fct-descr": "\u003cp\u003eXXX: document this constant\n\u003c/p\u003e",
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "Int",
        "fct-source": "src/Progress.html#minlist",
        "fct-type": "function",
        "title": "minlist"
      },
      "index": {
        "description": "XXX document this constant",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "minlist",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:progress",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e a -\u003e a",
        "fct-source": "src/Progress.html#progress",
        "fct-type": "function",
        "title": "progress"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "progress",
        "normalized": "String-\u003ea-\u003ea",
        "package": "darcs",
        "partial": "",
        "signature": "String-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:progressKeepLatest",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e a -\u003e a",
        "fct-source": "src/Progress.html#progressKeepLatest",
        "fct-type": "function",
        "title": "progressKeepLatest"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "progressKeepLatest",
        "normalized": "String-\u003ea-\u003ea",
        "package": "darcs",
        "partial": "Keep Latest",
        "signature": "String-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:progressList",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e [a] -\u003e [a]",
        "fct-source": "src/Progress.html#progressList",
        "fct-type": "function",
        "title": "progressList"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "progressList",
        "normalized": "String-\u003e[a]-\u003e[a]",
        "package": "darcs",
        "partial": "List",
        "signature": "String-\u003e[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:setProgressMode",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "Bool -\u003e IO ()",
        "fct-source": "src/Progress.html#setProgressMode",
        "fct-type": "function",
        "title": "setProgressMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "setProgressMode",
        "normalized": "Bool-\u003eIO()",
        "package": "darcs",
        "partial": "Progress Mode",
        "signature": "Bool-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:tediousSize",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e Int -\u003e IO ()",
        "fct-source": "src/Progress.html#tediousSize",
        "fct-type": "function",
        "title": "tediousSize"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "tediousSize",
        "normalized": "String-\u003eInt-\u003eIO()",
        "package": "darcs",
        "partial": "Size",
        "signature": "String-\u003eInt-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Progress.html#v:withoutProgress",
      "description": {
        "fct-module": "Progress",
        "fct-package": "darcs",
        "fct-signature": "IO a -\u003e IO a",
        "fct-source": "src/Progress.html#withoutProgress",
        "fct-type": "function",
        "title": "withoutProgress"
      },
      "index": {
        "description": "",
        "hierarchy": "Progress",
        "module": "Progress",
        "name": "withoutProgress",
        "normalized": "IO a-\u003eIO a",
        "package": "darcs",
        "partial": "Progress",
        "signature": "IO a-\u003eIO a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Ratified.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eXXX: Perhaps a word of explanation here [WL]\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Ratified",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Ratified.html",
        "fct-type": "module",
        "title": "Ratified"
      },
      "index": {
        "description": "XXX Perhaps word of explanation here WL",
        "hierarchy": "Ratified",
        "module": "Ratified",
        "name": "Ratified",
        "normalized": "",
        "package": "darcs",
        "partial": "Ratified",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Ratified.html#v:hGetContents",
      "description": {
        "fct-descr": "\u003cp\u003eComputation \u003ccode\u003e\u003ca\u003ehGetContents\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ehdl\u003c/code\u003e returns the list of characters\n corresponding to the unread portion of the channel or file managed\n by \u003ccode\u003ehdl\u003c/code\u003e, which is put into an intermediate state, \u003cem\u003esemi-closed\u003c/em\u003e.\n In this state, \u003ccode\u003ehdl\u003c/code\u003e is effectively closed,\n but items are read from \u003ccode\u003ehdl\u003c/code\u003e on demand and accumulated in a special\n list returned by \u003ccode\u003e\u003ca\u003ehGetContents\u003c/a\u003e\u003c/code\u003e \u003ccode\u003ehdl\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eAny operation that fails because a handle is closed,\n also fails if a handle is semi-closed.  The only exception is \u003ccode\u003ehClose\u003c/code\u003e.\n A semi-closed handle becomes closed:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e if \u003ccode\u003ehClose\u003c/code\u003e is applied to it;\n\u003c/li\u003e\u003cli\u003e if an I/O error occurs when reading an item from the handle;\n\u003c/li\u003e\u003cli\u003e or once the entire contents of the handle has been read.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eOnce a semi-closed handle becomes closed, the contents of the\n associated list becomes fixed.  The contents of this final list is\n only partially specified: it will contain at least all the items of\n the stream that were evaluated prior to the handle becoming closed.\n\u003c/p\u003e\u003cp\u003eAny I/O errors encountered while a handle is semi-closed are simply\n discarded.\n\u003c/p\u003e\u003cp\u003eThis operation may fail with:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisEOFError\u003c/a\u003e\u003c/code\u003e if the end of file has been reached.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Ratified",
        "fct-package": "darcs",
        "fct-signature": "Handle -\u003e IO String",
        "fct-type": "function",
        "title": "hGetContents"
      },
      "index": {
        "description": "Computation hGetContents hdl returns the list of characters corresponding to the unread portion of the channel or file managed by hdl which is put into an intermediate state semi-closed In this state hdl is effectively closed but items are read from hdl on demand and accumulated in special list returned by hGetContents hdl Any operation that fails because handle is closed also fails if handle is semi-closed The only exception is hClose semi-closed handle becomes closed if hClose is applied to it if an error occurs when reading an item from the handle or once the entire contents of the handle has been read Once semi-closed handle becomes closed the contents of the associated list becomes fixed The contents of this final list is only partially specified it will contain at least all the items of the stream that were evaluated prior to the handle becoming closed Any errors encountered while handle is semi-closed are simply discarded This operation may fail with isEOFError if the end of file has been reached",
        "hierarchy": "Ratified",
        "module": "Ratified",
        "name": "hGetContents",
        "normalized": "Handle-\u003eIO String",
        "package": "darcs",
        "partial": "Get Contents",
        "signature": "Handle-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Ratified.html#v:readFile",
      "description": {
        "fct-descr": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003ereadFile\u003c/a\u003e\u003c/code\u003e function reads a file and\n returns the contents of the file as a string.\n The file is read lazily, on demand, as with \u003ccode\u003e\u003ca\u003egetContents\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Ratified",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e IO String",
        "fct-type": "function",
        "title": "readFile"
      },
      "index": {
        "description": "The readFile function reads file and returns the contents of the file as string The file is read lazily on demand as with getContents",
        "hierarchy": "Ratified",
        "module": "Ratified",
        "name": "readFile",
        "normalized": "FilePath-\u003eIO String",
        "package": "darcs",
        "partial": "File",
        "signature": "FilePath-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/SHA1.html#",
      "description": {
        "fct-module": "SHA1",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/SHA1.html",
        "fct-type": "module",
        "title": "SHA1"
      },
      "index": {
        "description": "",
        "hierarchy": "SHA1",
        "module": "SHA1",
        "name": "SHA1",
        "normalized": "",
        "package": "darcs",
        "partial": "SHA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/SHA1.html#v:sha1PS",
      "description": {
        "fct-module": "SHA1",
        "fct-package": "darcs",
        "fct-signature": "ByteString -\u003e String",
        "fct-source": "src/SHA1.html#sha1PS",
        "fct-type": "function",
        "title": "sha1PS"
      },
      "index": {
        "description": "",
        "hierarchy": "SHA1",
        "module": "SHA1",
        "name": "sha1PS",
        "normalized": "ByteString-\u003eString",
        "package": "darcs",
        "partial": "PS",
        "signature": "ByteString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-HTTP.html#",
      "description": {
        "fct-module": "URL.HTTP",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/URL-HTTP.html",
        "fct-type": "module",
        "title": "HTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "URL HTTP",
        "module": "URL.HTTP",
        "name": "HTTP",
        "normalized": "",
        "package": "darcs",
        "partial": "HTTP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-HTTP.html#v:fetchUrl",
      "description": {
        "fct-module": "URL.HTTP",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO String",
        "fct-source": "src/URL-HTTP.html#fetchUrl",
        "fct-type": "function",
        "title": "fetchUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "URL HTTP",
        "module": "URL.HTTP",
        "name": "fetchUrl",
        "normalized": "String-\u003eIO String",
        "package": "darcs",
        "partial": "Url",
        "signature": "String-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-HTTP.html#v:postUrl",
      "description": {
        "fct-module": "URL.HTTP",
        "fct-package": "darcs",
        "fct-signature": "String-\u003e String-\u003e String-\u003e IO ()",
        "fct-type": "function",
        "title": "postUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "URL HTTP",
        "module": "URL.HTTP",
        "name": "postUrl",
        "normalized": "String-\u003eString-\u003eString-\u003eIO()",
        "package": "darcs",
        "partial": "Url",
        "signature": "String-\u003eString-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-HTTP.html#v:requestUrl",
      "description": {
        "fct-module": "URL.HTTP",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FilePath -\u003e a -\u003e IO String",
        "fct-source": "src/URL-HTTP.html#requestUrl",
        "fct-type": "function",
        "title": "requestUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "URL HTTP",
        "module": "URL.HTTP",
        "name": "requestUrl",
        "normalized": "String-\u003eFilePath-\u003ea-\u003eIO String",
        "package": "darcs",
        "partial": "Url",
        "signature": "String-\u003eFilePath-\u003ea-\u003eIO String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-HTTP.html#v:waitNextUrl",
      "description": {
        "fct-module": "URL.HTTP",
        "fct-package": "darcs",
        "fct-signature": "IO (String, String, Maybe ConnectionError)",
        "fct-source": "src/URL-HTTP.html#waitNextUrl",
        "fct-type": "function",
        "title": "waitNextUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "URL HTTP",
        "module": "URL.HTTP",
        "name": "waitNextUrl",
        "normalized": "IO(String,String,Maybe ConnectionError)",
        "package": "darcs",
        "partial": "Next Url",
        "signature": "IO(String,String,Maybe ConnectionError)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/URL-Request.html",
        "fct-type": "module",
        "title": "Request"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Request",
        "normalized": "",
        "package": "darcs",
        "partial": "Request",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#t:Cachable",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "data",
        "title": "Cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Cachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#t:ConnectionError",
      "description": {
        "fct-descr": "\u003cp\u003eData type to represent a connection error.\n The following are the codes from libcurl\n which map to each of the constructors:\n * 6  -\u003e CouldNotResolveHost : The remote host was not resolved.\n * 7  -\u003e CouldNotConnectToServer : Failed to connect() to host or proxy.\n * 28 -\u003e OperationTimeout: the specified time-out period was reached.\n\u003c/p\u003e",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "data",
        "title": "ConnectionError"
      },
      "index": {
        "description": "Data type to represent connection error The following are the codes from libcurl which map to each of the constructors CouldNotResolveHost The remote host was not resolved CouldNotConnectToServer Failed to connect to host or proxy OperationTimeout the specified time-out period was reached",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "ConnectionError",
        "normalized": "",
        "package": "darcs",
        "partial": "Connection Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#t:Priority",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#Priority",
        "fct-type": "data",
        "title": "Priority"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Priority",
        "normalized": "",
        "package": "darcs",
        "partial": "Priority",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#t:Q",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#Q",
        "fct-type": "data",
        "title": "Q"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Q",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#t:UrlRequest",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#UrlRequest",
        "fct-type": "data",
        "title": "UrlRequest"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "UrlRequest",
        "normalized": "",
        "package": "darcs",
        "partial": "Url Request",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#t:UrlState",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#UrlState",
        "fct-type": "data",
        "title": "UrlState"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "UrlState",
        "normalized": "",
        "package": "darcs",
        "partial": "Url State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:Cachable",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Cachable",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "Cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Cachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:CouldNotConnectToServer",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "CouldNotConnectToServer",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "function",
        "title": "CouldNotConnectToServer"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "CouldNotConnectToServer",
        "normalized": "",
        "package": "darcs",
        "partial": "Could Not Connect To Server",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:CouldNotResolveHost",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "CouldNotResolveHost",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "function",
        "title": "CouldNotResolveHost"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "CouldNotResolveHost",
        "normalized": "",
        "package": "darcs",
        "partial": "Could Not Resolve Host",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:High",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "High",
        "fct-source": "src/URL-Request.html#Priority",
        "fct-type": "function",
        "title": "High"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "High",
        "normalized": "",
        "package": "darcs",
        "partial": "High",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:Low",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Low",
        "fct-source": "src/URL-Request.html#Priority",
        "fct-type": "function",
        "title": "Low"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Low",
        "normalized": "",
        "package": "darcs",
        "partial": "Low",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:MaxAge",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "MaxAge !CInt",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "MaxAge"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "MaxAge",
        "normalized": "",
        "package": "darcs",
        "partial": "Max Age",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:OperationTimeout",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "OperationTimeout",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "function",
        "title": "OperationTimeout"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "OperationTimeout",
        "normalized": "",
        "package": "darcs",
        "partial": "Operation Timeout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:Q",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Q [a] [a]",
        "fct-source": "src/URL-Request.html#Q",
        "fct-type": "function",
        "title": "Q"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Q",
        "normalized": "Q[a][a]",
        "package": "darcs",
        "partial": "",
        "signature": "Q[a][a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:Uncachable",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Uncachable",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "Uncachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "Uncachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Uncachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:UrlRequest",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "UrlRequest",
        "fct-source": "src/URL-Request.html#UrlRequest",
        "fct-type": "function",
        "title": "UrlRequest"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "UrlRequest",
        "normalized": "",
        "package": "darcs",
        "partial": "Url Request",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:UrlState",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "UrlState",
        "fct-source": "src/URL-Request.html#UrlState",
        "fct-type": "function",
        "title": "UrlState"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "UrlState",
        "normalized": "",
        "package": "darcs",
        "partial": "Url State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:cachable",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Cachable",
        "fct-source": "src/URL-Request.html#UrlRequest",
        "fct-type": "function",
        "title": "cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:deleteQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e Q a -\u003e Q a",
        "fct-source": "src/URL-Request.html#deleteQ",
        "fct-type": "function",
        "title": "deleteQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "deleteQ",
        "normalized": "a-\u003eQ a-\u003eQ a",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003eQ a-\u003eQ a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:elemQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e Q a -\u003e Bool",
        "fct-source": "src/URL-Request.html#elemQ",
        "fct-type": "function",
        "title": "elemQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "elemQ",
        "normalized": "a-\u003eQ a-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003eQ a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:emptyQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Q a",
        "fct-source": "src/URL-Request.html#emptyQ",
        "fct-type": "function",
        "title": "emptyQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "emptyQ",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:file",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "FilePath",
        "fct-source": "src/URL-Request.html#UrlRequest",
        "fct-type": "function",
        "title": "file"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "file",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:inProgress",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Map String (FilePath, [FilePath], Cachable)",
        "fct-source": "src/URL-Request.html#UrlState",
        "fct-type": "function",
        "title": "inProgress"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "inProgress",
        "normalized": "Map String(FilePath,[FilePath],Cachable)",
        "package": "darcs",
        "partial": "Progress",
        "signature": "Map String(FilePath,[FilePath],Cachable)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:insertQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e Q a -\u003e Q a",
        "fct-source": "src/URL-Request.html#insertQ",
        "fct-type": "function",
        "title": "insertQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "insertQ",
        "normalized": "a-\u003eQ a-\u003eQ a",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003eQ a-\u003eQ a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:nullQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Q a -\u003e Bool",
        "fct-source": "src/URL-Request.html#nullQ",
        "fct-type": "function",
        "title": "nullQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "nullQ",
        "normalized": "Q a-\u003eBool",
        "package": "darcs",
        "partial": "",
        "signature": "Q a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:pipeLength",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Int",
        "fct-source": "src/URL-Request.html#UrlState",
        "fct-type": "function",
        "title": "pipeLength"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "pipeLength",
        "normalized": "",
        "package": "darcs",
        "partial": "Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:priority",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Priority",
        "fct-source": "src/URL-Request.html#UrlRequest",
        "fct-type": "function",
        "title": "priority"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "priority",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:pushQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "a -\u003e Q a -\u003e Q a",
        "fct-source": "src/URL-Request.html#pushQ",
        "fct-type": "function",
        "title": "pushQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "pushQ",
        "normalized": "a-\u003eQ a-\u003eQ a",
        "package": "darcs",
        "partial": "",
        "signature": "a-\u003eQ a-\u003eQ a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:randomJunk",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/URL-Request.html#UrlState",
        "fct-type": "function",
        "title": "randomJunk"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "randomJunk",
        "normalized": "",
        "package": "darcs",
        "partial": "Junk",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:readQ",
      "description": {
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Q a -\u003e Maybe (a, Q a)",
        "fct-source": "src/URL-Request.html#readQ",
        "fct-type": "function",
        "title": "readQ"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "readQ",
        "normalized": "Q a-\u003eMaybe(a,Q a)",
        "package": "darcs",
        "partial": "",
        "signature": "Q a-\u003eMaybe(a,Q a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:url",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "String",
        "fct-source": "src/URL-Request.html#UrlRequest",
        "fct-type": "function",
        "title": "url"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "url",
        "normalized": "",
        "package": "darcs",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL-Request.html#v:waitToStart",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "URL.Request",
        "fct-package": "darcs",
        "fct-signature": "Q String",
        "fct-source": "src/URL-Request.html#UrlState",
        "fct-type": "function",
        "title": "waitToStart"
      },
      "index": {
        "description": "",
        "hierarchy": "URL Request",
        "module": "URL.Request",
        "name": "waitToStart",
        "normalized": "",
        "package": "darcs",
        "partial": "To Start",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/URL.html",
        "fct-type": "module",
        "title": "URL"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "URL",
        "normalized": "",
        "package": "darcs",
        "partial": "URL",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#t:Cachable",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "data",
        "title": "Cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "Cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Cachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#t:ConnectionError",
      "description": {
        "fct-descr": "\u003cp\u003eData type to represent a connection error.\n The following are the codes from libcurl\n which map to each of the constructors:\n * 6  -\u003e CouldNotResolveHost : The remote host was not resolved.\n * 7  -\u003e CouldNotConnectToServer : Failed to connect() to host or proxy.\n * 28 -\u003e OperationTimeout: the specified time-out period was reached.\n\u003c/p\u003e",
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "data",
        "title": "ConnectionError"
      },
      "index": {
        "description": "Data type to represent connection error The following are the codes from libcurl which map to each of the constructors CouldNotResolveHost The remote host was not resolved CouldNotConnectToServer Failed to connect to host or proxy OperationTimeout the specified time-out period was reached",
        "hierarchy": "URL",
        "module": "URL",
        "name": "ConnectionError",
        "normalized": "",
        "package": "darcs",
        "partial": "Connection Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:Cachable",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "Cachable",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "Cachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "Cachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Cachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:CouldNotConnectToServer",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "CouldNotConnectToServer",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "function",
        "title": "CouldNotConnectToServer"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "CouldNotConnectToServer",
        "normalized": "",
        "package": "darcs",
        "partial": "Could Not Connect To Server",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:CouldNotResolveHost",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "CouldNotResolveHost",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "function",
        "title": "CouldNotResolveHost"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "CouldNotResolveHost",
        "normalized": "",
        "package": "darcs",
        "partial": "Could Not Resolve Host",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:MaxAge",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "MaxAge !CInt",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "MaxAge"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "MaxAge",
        "normalized": "",
        "package": "darcs",
        "partial": "Max Age",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:OperationTimeout",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "OperationTimeout",
        "fct-source": "src/URL-Request.html#ConnectionError",
        "fct-type": "function",
        "title": "OperationTimeout"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "OperationTimeout",
        "normalized": "",
        "package": "darcs",
        "partial": "Operation Timeout",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:Uncachable",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "Uncachable",
        "fct-source": "src/URL-Request.html#Cachable",
        "fct-type": "function",
        "title": "Uncachable"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "Uncachable",
        "normalized": "",
        "package": "darcs",
        "partial": "Uncachable",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:copyUrl",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FilePath -\u003e Cachable -\u003e IO ()",
        "fct-source": "src/URL.html#copyUrl",
        "fct-type": "function",
        "title": "copyUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "copyUrl",
        "normalized": "String-\u003eFilePath-\u003eCachable-\u003eIO()",
        "package": "darcs",
        "partial": "Url",
        "signature": "String-\u003eFilePath-\u003eCachable-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:copyUrlFirst",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e FilePath -\u003e Cachable -\u003e IO ()",
        "fct-source": "src/URL.html#copyUrlFirst",
        "fct-type": "function",
        "title": "copyUrlFirst"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "copyUrlFirst",
        "normalized": "String-\u003eFilePath-\u003eCachable-\u003eIO()",
        "package": "darcs",
        "partial": "Url First",
        "signature": "String-\u003eFilePath-\u003eCachable-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:disableHTTPPipelining",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/URL.html#disableHTTPPipelining",
        "fct-type": "function",
        "title": "disableHTTPPipelining"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "disableHTTPPipelining",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "HTTPPipelining",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:environmentHelpProxy",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/URL.html#environmentHelpProxy",
        "fct-type": "function",
        "title": "environmentHelpProxy"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "environmentHelpProxy",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Proxy",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:environmentHelpProxyPassword",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "([String], [String])",
        "fct-source": "src/URL.html#environmentHelpProxyPassword",
        "fct-type": "function",
        "title": "environmentHelpProxyPassword"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "environmentHelpProxyPassword",
        "normalized": "([String],[String])",
        "package": "darcs",
        "partial": "Help Proxy Password",
        "signature": "([String],[String])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:maxPipelineLength",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "IO Int",
        "fct-source": "src/URL.html#maxPipelineLength",
        "fct-type": "function",
        "title": "maxPipelineLength"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "maxPipelineLength",
        "normalized": "",
        "package": "darcs",
        "partial": "Pipeline Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:setDebugHTTP",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "IO ()",
        "fct-source": "src/URL.html#setDebugHTTP",
        "fct-type": "function",
        "title": "setDebugHTTP"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "setDebugHTTP",
        "normalized": "IO()",
        "package": "darcs",
        "partial": "Debug HTTP",
        "signature": "IO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/URL.html#v:waitUrl",
      "description": {
        "fct-module": "URL",
        "fct-package": "darcs",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/URL.html#waitUrl",
        "fct-type": "function",
        "title": "waitUrl"
      },
      "index": {
        "description": "",
        "hierarchy": "URL",
        "module": "URL",
        "name": "waitUrl",
        "normalized": "String-\u003eIO()",
        "package": "darcs",
        "partial": "Url",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "module",
        "fct-source": "src/Workaround.html",
        "fct-type": "module",
        "title": "Workaround"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "Workaround",
        "normalized": "",
        "package": "darcs",
        "partial": "Workaround",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#t:Handler",
      "description": {
        "fct-descr": "\u003cp\u003eThe actions to perform when a signal is received.\n\u003c/p\u003e",
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "data",
        "fct-type": "data",
        "title": "Handler"
      },
      "index": {
        "description": "The actions to perform when signal is received",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "Handler",
        "normalized": "",
        "package": "darcs",
        "partial": "Handler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#t:Signal",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "type",
        "fct-type": "type",
        "title": "Signal"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "Signal",
        "normalized": "",
        "package": "darcs",
        "partial": "Signal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:Catch",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "Catch (IO ())",
        "fct-type": "function",
        "title": "Catch"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "Catch",
        "normalized": "Catch(IO())",
        "package": "darcs",
        "partial": "Catch",
        "signature": "Catch(IO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:CatchOnce",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CatchOnce (IO ())",
        "fct-type": "function",
        "title": "CatchOnce"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "CatchOnce",
        "normalized": "CatchOnce(IO())",
        "package": "darcs",
        "partial": "Catch Once",
        "signature": "CatchOnce(IO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:Default",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "Default",
        "fct-type": "function",
        "title": "Default"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "Default",
        "normalized": "",
        "package": "darcs",
        "partial": "Default",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:Ignore",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "Ignore",
        "fct-type": "function",
        "title": "Ignore"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "Ignore",
        "normalized": "",
        "package": "darcs",
        "partial": "Ignore",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:getCurrentDirectory",
      "description": {
        "fct-descr": "\u003cp\u003eIf the operating system has a notion of current directories,\n\u003ccode\u003e\u003ca\u003egetCurrentDirectory\u003c/a\u003e\u003c/code\u003e returns an absolute path to the\ncurrent directory of the calling process.\n\u003c/p\u003e\u003cp\u003eThe operation may fail with:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003eHardwareFault\u003c/code\u003e\nA physical I/O error has occurred.\n\u003ccode\u003e[EIO]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisDoesNotExistError\u003c/a\u003e\u003c/code\u003e / \u003ccode\u003eNoSuchThing\u003c/code\u003e\nThere is no path referring to the current directory.\n\u003ccode\u003e[EPERM, ENOENT, ESTALE...]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisPermissionError\u003c/a\u003e\u003c/code\u003e / \u003ccode\u003ePermissionDenied\u003c/code\u003e\nThe process has insufficient privileges to perform the operation.\n\u003ccode\u003e[EACCES]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eResourceExhausted\u003c/code\u003e\nInsufficient resources are available to perform the operation.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eUnsupportedOperation\u003c/code\u003e\nThe operating system has no notion of current directory.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eNote that in a concurrent program, the current directory is global\nstate shared between all threads of the process.  When using\nfilesystem operations from multiple threads, it is therefore highly\nrecommended to use absolute rather than relative \u003ccode\u003e\u003ca\u003eFilePath\u003c/a\u003e\u003c/code\u003es.\n\u003c/p\u003e",
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "IO FilePath",
        "fct-type": "function",
        "title": "getCurrentDirectory"
      },
      "index": {
        "description": "If the operating system has notion of current directories getCurrentDirectory returns an absolute path to the current directory of the calling process The operation may fail with HardwareFault physical error has occurred EIO isDoesNotExistError NoSuchThing There is no path referring to the current directory EPERM ENOENT ESTALE isPermissionError PermissionDenied The process has insufficient privileges to perform the operation EACCES ResourceExhausted Insufficient resources are available to perform the operation UnsupportedOperation The operating system has no notion of current directory Note that in concurrent program the current directory is global state shared between all threads of the process When using filesystem operations from multiple threads it is therefore highly recommended to use absolute rather than relative FilePath",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "getCurrentDirectory",
        "normalized": "",
        "package": "darcs",
        "partial": "Current Directory",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:installHandler",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003einstallHandler int handler iset\u003c/code\u003e calls \u003ccode\u003esigaction\u003c/code\u003e to install an\n   interrupt handler for signal \u003ccode\u003eint\u003c/code\u003e.  If \u003ccode\u003ehandler\u003c/code\u003e is \u003ccode\u003eDefault\u003c/code\u003e,\n   \u003ccode\u003eSIG_DFL\u003c/code\u003e is installed; if \u003ccode\u003ehandler\u003c/code\u003e is \u003ccode\u003eIgnore\u003c/code\u003e, \u003ccode\u003eSIG_IGN\u003c/code\u003e is\n   installed; if \u003ccode\u003ehandler\u003c/code\u003e is \u003ccode\u003eCatch action\u003c/code\u003e, a handler is installed\n   which will invoke \u003ccode\u003eaction\u003c/code\u003e in a new thread when (or shortly after) the\n   signal is received.\n   If \u003ccode\u003eiset\u003c/code\u003e is \u003ccode\u003eJust s\u003c/code\u003e, then the \u003ccode\u003esa_mask\u003c/code\u003e of the \u003ccode\u003esigaction\u003c/code\u003e structure\n   is set to \u003ccode\u003es\u003c/code\u003e; otherwise it is cleared.  The previously installed\n   signal handler for \u003ccode\u003eint\u003c/code\u003e is returned\n\u003c/p\u003e",
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "Signal-\u003e Handler-\u003e Maybe SignalSet-\u003e IO Handler",
        "fct-type": "function",
        "title": "installHandler"
      },
      "index": {
        "description": "installHandler int handler iset calls sigaction to install an interrupt handler for signal int If handler is Default SIG DFL is installed if handler is Ignore SIG IGN is installed if handler is Catch action handler is installed which will invoke action in new thread when or shortly after the signal is received If iset is Just then the sa mask of the sigaction structure is set to otherwise it is cleared The previously installed signal handler for int is returned",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "installHandler",
        "normalized": "Signal-\u003eHandler-\u003eMaybe SignalSet-\u003eIO Handler",
        "package": "darcs",
        "partial": "Handler",
        "signature": "Signal-\u003eHandler-\u003eMaybe SignalSet-\u003eIO Handler"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:raiseSignal",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003eraiseSignal int\u003c/code\u003e calls \u003ccode\u003ekill\u003c/code\u003e to signal the current process\n   with interrupt signal \u003ccode\u003eint\u003c/code\u003e. \n\u003c/p\u003e",
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "Signal -\u003e IO ()",
        "fct-type": "function",
        "title": "raiseSignal"
      },
      "index": {
        "description": "raiseSignal int calls kill to signal the current process with interrupt signal int",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "raiseSignal",
        "normalized": "Signal-\u003eIO()",
        "package": "darcs",
        "partial": "Signal",
        "signature": "Signal-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:renameFile",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e\u003ccode\u003e\u003ca\u003erenameFile\u003c/a\u003e\u003c/code\u003e old new\u003c/code\u003e changes the name of an existing file system\nobject from \u003cem\u003eold\u003c/em\u003e to \u003cem\u003enew\u003c/em\u003e.  If the \u003cem\u003enew\u003c/em\u003e object already\nexists, it is atomically replaced by the \u003cem\u003eold\u003c/em\u003e object.  Neither\npath may refer to an existing directory.  A conformant implementation\nneed not support renaming files in all situations (e.g. renaming\nacross different physical devices), but the constraints must be\ndocumented.\n\u003c/p\u003e\u003cp\u003eThe operation may fail with:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003eHardwareFault\u003c/code\u003e\nA physical I/O error has occurred.\n\u003ccode\u003e[EIO]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eInvalidArgument\u003c/code\u003e\nEither operand is not a valid file name.\n\u003ccode\u003e[ENAMETOOLONG, ELOOP]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisDoesNotExistError\u003c/a\u003e\u003c/code\u003e / \u003ccode\u003eNoSuchThing\u003c/code\u003e\nThe original file does not exist, or there is no path to the target.\n\u003ccode\u003e[ENOENT, ENOTDIR]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eisPermissionError\u003c/a\u003e\u003c/code\u003e / \u003ccode\u003ePermissionDenied\u003c/code\u003e\nThe process has insufficient privileges to perform the operation.\n\u003ccode\u003e[EROFS, EACCES, EPERM]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eResourceExhausted\u003c/code\u003e\nInsufficient resources are available to perform the operation.  \n\u003ccode\u003e[EDQUOT, ENOSPC, ENOMEM, EMLINK]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eUnsatisfiedConstraints\u003c/code\u003e\nImplementation-dependent constraints are not satisfied.\n\u003ccode\u003e[EBUSY]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eUnsupportedOperation\u003c/code\u003e\nThe implementation does not support renaming in this situation.\n\u003ccode\u003e[EXDEV]\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003eInappropriateType\u003c/code\u003e\nEither path refers to an existing directory.\n\u003ccode\u003e[ENOTDIR, EISDIR, EINVAL, EEXIST, ENOTEMPTY]\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e FilePath -\u003e IO ()",
        "fct-type": "function",
        "title": "renameFile"
      },
      "index": {
        "description": "renameFile old new changes the name of an existing file system object from old to new If the new object already exists it is atomically replaced by the old object Neither path may refer to an existing directory conformant implementation need not support renaming files in all situations e.g renaming across different physical devices but the constraints must be documented The operation may fail with HardwareFault physical error has occurred EIO InvalidArgument Either operand is not valid file name ENAMETOOLONG ELOOP isDoesNotExistError NoSuchThing The original file does not exist or there is no path to the target ENOENT ENOTDIR isPermissionError PermissionDenied The process has insufficient privileges to perform the operation EROFS EACCES EPERM ResourceExhausted Insufficient resources are available to perform the operation EDQUOT ENOSPC ENOMEM EMLINK UnsatisfiedConstraints Implementation-dependent constraints are not satisfied EBUSY UnsupportedOperation The implementation does not support renaming in this situation EXDEV InappropriateType Either path refers to an existing directory ENOTDIR EISDIR EINVAL EEXIST ENOTEMPTY",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "renameFile",
        "normalized": "FilePath-\u003eFilePath-\u003eIO()",
        "package": "darcs",
        "partial": "File",
        "signature": "FilePath-\u003eFilePath-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:setExecutable",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "FilePath -\u003e Bool -\u003e IO ()",
        "fct-source": "src/Workaround.html#setExecutable",
        "fct-type": "function",
        "title": "setExecutable"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "setExecutable",
        "normalized": "FilePath-\u003eBool-\u003eIO()",
        "package": "darcs",
        "partial": "Executable",
        "signature": "FilePath-\u003eBool-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:sigABRT",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CInt",
        "fct-type": "function",
        "title": "sigABRT"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "sigABRT",
        "normalized": "",
        "package": "darcs",
        "partial": "ABRT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:sigALRM",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CInt",
        "fct-type": "function",
        "title": "sigALRM"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "sigALRM",
        "normalized": "",
        "package": "darcs",
        "partial": "ALRM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:sigHUP",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CInt",
        "fct-type": "function",
        "title": "sigHUP"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "sigHUP",
        "normalized": "",
        "package": "darcs",
        "partial": "HUP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:sigINT",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CInt",
        "fct-type": "function",
        "title": "sigINT"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "sigINT",
        "normalized": "",
        "package": "darcs",
        "partial": "INT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:sigPIPE",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CInt",
        "fct-type": "function",
        "title": "sigPIPE"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "sigPIPE",
        "normalized": "",
        "package": "darcs",
        "partial": "PIPE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/darcs/docs/Workaround.html#v:sigTERM",
      "description": {
        "fct-module": "Workaround",
        "fct-package": "darcs",
        "fct-signature": "CInt",
        "fct-type": "function",
        "title": "sigTERM"
      },
      "index": {
        "description": "",
        "hierarchy": "Workaround",
        "module": "Workaround",
        "name": "sigTERM",
        "normalized": "",
        "package": "darcs",
        "partial": "TERM",
        "signature": ""
      }
    }
  }
]