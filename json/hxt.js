[
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowExc.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe exception arrow class\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowExc",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowExc.html",
        "fct-type": "module",
        "title": "ArrowExc"
      },
      "index": {
        "description": "The exception arrow class",
        "hierarchy": "Control Arrow ArrowExc",
        "module": "Control.Arrow.ArrowExc",
        "name": "ArrowExc",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Exc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowExc.html#t:ArrowExc",
      "description": {
        "fct-module": "Control.Arrow.ArrowExc",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowExc.html#ArrowExc",
        "fct-type": "class",
        "title": "ArrowExc"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowExc",
        "module": "Control.Arrow.ArrowExc",
        "name": "ArrowExc",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Exc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowExc.html#v:catchA",
      "description": {
        "fct-module": "Control.Arrow.ArrowExc",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a SomeException c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowExc.html#catchA",
        "fct-type": "method",
        "title": "catchA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowExc",
        "module": "Control.Arrow.ArrowExc",
        "name": "catchA",
        "normalized": "a b c-\u003ea SomeException c-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea SomeException c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowExc.html#v:tryA",
      "description": {
        "fct-module": "Control.Arrow.ArrowExc",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b (Either SomeException c)",
        "fct-source": "src/Control-Arrow-ArrowExc.html#tryA",
        "fct-type": "method",
        "title": "tryA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowExc",
        "module": "Control.Arrow.ArrowExc",
        "name": "tryA",
        "normalized": "a b c-\u003ea b(Either SomeException c)",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b(Either SomeException c)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLifting of IO actions to arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowIO.html",
        "fct-type": "module",
        "title": "ArrowIO"
      },
      "index": {
        "description": "Lifting of IO actions to arrows",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "ArrowIO",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow IO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#t:ArrowIO",
      "description": {
        "fct-descr": "\u003cp\u003ethe interface for converting an IO action into an arrow\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowIO.html#ArrowIO",
        "fct-type": "class",
        "title": "ArrowIO"
      },
      "index": {
        "description": "the interface for converting an IO action into an arrow",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "ArrowIO",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow IO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#t:ArrowIOIf",
      "description": {
        "fct-descr": "\u003cp\u003ethe interface for converting an IO predicate into a list arrow\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowIO.html#ArrowIOIf",
        "fct-type": "class",
        "title": "ArrowIOIf"
      },
      "index": {
        "description": "the interface for converting an IO predicate into list arrow",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "ArrowIOIf",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow IOIf",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#v:arrIO",
      "description": {
        "fct-descr": "\u003cp\u003econstruct an arrow from an IO action\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e IO c) -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowIO.html#arrIO",
        "fct-type": "method",
        "title": "arrIO"
      },
      "index": {
        "description": "construct an arrow from an IO action",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "arrIO",
        "normalized": "(a-\u003eIO b)-\u003ec a b",
        "package": "hxt",
        "partial": "IO",
        "signature": "(b-\u003eIO c)-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#v:arrIO0",
      "description": {
        "fct-descr": "\u003cp\u003econstruct an arrow from an IO action without any parameter\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "IO c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowIO.html#arrIO0",
        "fct-type": "method",
        "title": "arrIO0"
      },
      "index": {
        "description": "construct an arrow from an IO action without any parameter",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "arrIO0",
        "normalized": "IO a-\u003eb c a",
        "package": "hxt",
        "partial": "IO",
        "signature": "IO c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#v:arrIO2",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 2 argument arrow from a binary IO action\n |\n | example: \u003ccode\u003e a1 &&& a2 \u003e\u003e\u003e arr2 f \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "(b1 -\u003e b2 -\u003e IO c) -\u003e a (b1, b2) c",
        "fct-source": "src/Control-Arrow-ArrowIO.html#arrIO2",
        "fct-type": "method",
        "title": "arrIO2"
      },
      "index": {
        "description": "construction of argument arrow from binary IO action example a1 a2 arr2",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "arrIO2",
        "normalized": "(a-\u003ea-\u003eIO b)-\u003ec(a,a)b",
        "package": "hxt",
        "partial": "IO",
        "signature": "(b-\u003eb-\u003eIO c)-\u003ea(b,b)c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#v:arrIO3",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 3 argument arrow from a 3-ary IO action\n |\n | example: \u003ccode\u003e a1 &&& a2 &&& a3 \u003e\u003e\u003e arr3 f \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "(b1 -\u003e b2 -\u003e b3 -\u003e IO c) -\u003e a (b1, (b2, b3)) c",
        "fct-source": "src/Control-Arrow-ArrowIO.html#arrIO3",
        "fct-type": "method",
        "title": "arrIO3"
      },
      "index": {
        "description": "construction of argument arrow from ary IO action example a1 a2 a3 arr3",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "arrIO3",
        "normalized": "(a-\u003ea-\u003ea-\u003eIO b)-\u003ec(a,(a,a))b",
        "package": "hxt",
        "partial": "IO",
        "signature": "(b-\u003eb-\u003eb-\u003eIO c)-\u003ea(b,(b,b))c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#v:arrIO4",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 4 argument arrow from a 4-ary IO action\n |\n | example: \u003ccode\u003e a1 &&& a2 &&& a3 &&& a4 \u003e\u003e\u003e arr4 f \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "(b1 -\u003e b2 -\u003e b3 -\u003e b4 -\u003e IO c) -\u003e a (b1, (b2, (b3, b4))) c",
        "fct-source": "src/Control-Arrow-ArrowIO.html#arrIO4",
        "fct-type": "method",
        "title": "arrIO4"
      },
      "index": {
        "description": "construction of argument arrow from ary IO action example a1 a2 a3 a4 arr4",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "arrIO4",
        "normalized": "(a-\u003ea-\u003ea-\u003ea-\u003eIO b)-\u003ec(a,(a,(a,a)))b",
        "package": "hxt",
        "partial": "IO",
        "signature": "(b-\u003eb-\u003eb-\u003eb-\u003eIO c)-\u003ea(b,(b,(b,b)))c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIO.html#v:isIOA",
      "description": {
        "fct-descr": "\u003cp\u003ebuilds an arrow from an IO predicate\n\u003c/p\u003e\u003cp\u003eif the predicate holds, the single list containing the input is returned, else the empty list,\n similar to \u003ccode\u003e\u003ca\u003eisA\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIO",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e IO Bool) -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIO.html#isIOA",
        "fct-type": "method",
        "title": "isIOA"
      },
      "index": {
        "description": "builds an arrow from an IO predicate if the predicate holds the single list containing the input is returned else the empty list similar to isA",
        "hierarchy": "Control Arrow ArrowIO",
        "module": "Control.Arrow.ArrowIO",
        "name": "isIOA",
        "normalized": "(a-\u003eIO Bool)-\u003eb a a",
        "package": "hxt",
        "partial": "IOA",
        "signature": "(b-\u003eIO Bool)-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eConditionals for List Arrows\n\u003c/p\u003e\u003cp\u003eThis module defines conditional combinators for list arrows.\n\u003c/p\u003e\u003cp\u003eThe empty list as result represents False, none empty lists True.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowIf.html",
        "fct-type": "module",
        "title": "ArrowIf"
      },
      "index": {
        "description": "Conditionals for List Arrows This module defines conditional combinators for list arrows The empty list as result represents False none empty lists True",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "ArrowIf",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow If",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#t:ArrowIf",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for arrows as conditionals.\n\u003c/p\u003e\u003cp\u003eRequires list arrows because False is represented as empty list, True as none empty lists.\n\u003c/p\u003e\u003cp\u003eOnly \u003ccode\u003e\u003ca\u003eifA\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eorElse\u003c/a\u003e\u003c/code\u003e don't have default implementations\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowIf.html#ArrowIf",
        "fct-type": "class",
        "title": "ArrowIf"
      },
      "index": {
        "description": "The interface for arrows as conditionals Requires list arrows because False is represented as empty list True as none empty lists Only ifA and orElse don have default implementations",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "ArrowIf",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow If",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#t:IfThen",
      "description": {
        "fct-descr": "\u003cp\u003ean auxiliary data type for \u003ccode\u003e\u003ca\u003echoiceA\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Control-Arrow-ArrowIf.html#IfThen",
        "fct-type": "data",
        "title": "IfThen"
      },
      "index": {
        "description": "an auxiliary data type for choiceA",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "IfThen",
        "normalized": "",
        "package": "hxt",
        "partial": "If Then",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v::-45--62-",
      "description": {
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a :-\u003e b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#IfThen",
        "fct-type": "function",
        "title": ":-\u003e"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": ":-\u003e",
        "normalized": "a-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:choiceA",
      "description": {
        "fct-descr": "\u003cp\u003egeneralisation of \u003ccode\u003e\u003ca\u003eorElse\u003c/a\u003e\u003c/code\u003e for multi way branches like in case expressions.\n\u003c/p\u003e\u003cp\u003eAn auxiliary data type \u003ccode\u003e\u003ca\u003eIfThen\u003c/a\u003e\u003c/code\u003e with an infix constructor \u003ccode\u003e\u003ca\u003e:-\u003e\u003c/a\u003e\u003c/code\u003e is used for writing multi way branches\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e choiceA [ p1 :-\u003e e1, p2 :-\u003e e2, this :-\u003e default ] \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "[IfThen (a b c) (a b d)] -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowIf.html#choiceA",
        "fct-type": "method",
        "title": "choiceA"
      },
      "index": {
        "description": "generalisation of orElse for multi way branches like in case expressions An auxiliary data type IfThen with an infix constructor is used for writing multi way branches example choiceA p1 e1 p2 e2 this default",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "choiceA",
        "normalized": "[IfThen(a b c)(a b d)]-\u003ea b d",
        "package": "hxt",
        "partial": "",
        "signature": "[IfThen(a b c)(a b d)]-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:containing",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e f `containing` g \u003c/code\u003e : keep only those results from f for which g holds\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e f `containing` g = f \u003e\u003e\u003e g `guards` this \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a c d -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowIf.html#containing",
        "fct-type": "method",
        "title": "containing"
      },
      "index": {
        "description": "containing keep only those results from for which holds definition containing guards this",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "containing",
        "normalized": "a b c-\u003ea c d-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea c d-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:filterA",
      "description": {
        "fct-descr": "\u003cp\u003eshortcut for \u003ccode\u003e f \u003ccode\u003e\u003ca\u003eguards\u003c/a\u003e\u003c/code\u003e this \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#filterA",
        "fct-type": "method",
        "title": "filterA"
      },
      "index": {
        "description": "shortcut for guards this",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "filterA",
        "normalized": "a b c-\u003ea b b",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:guards",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e g `guards` f \u003c/code\u003e : when the predicate g holds, f is applied, else none\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b d -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowIf.html#guards",
        "fct-type": "method",
        "title": "guards"
      },
      "index": {
        "description": "guards when the predicate holds is applied else none",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "guards",
        "normalized": "a b c-\u003ea b d-\u003ea b d",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b d-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:guardsP",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003ewhenP\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e Bool) -\u003e a b d -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowIf.html#guardsP",
        "fct-type": "method",
        "title": "guardsP"
      },
      "index": {
        "description": "like whenP",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "guardsP",
        "normalized": "(a-\u003eBool)-\u003eb a c-\u003eb a c",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003eBool)-\u003ea b d-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:ifA",
      "description": {
        "fct-descr": "\u003cp\u003eif lifted to arrows\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b d -\u003e a b d -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowIf.html#ifA",
        "fct-type": "method",
        "title": "ifA"
      },
      "index": {
        "description": "if lifted to arrows",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "ifA",
        "normalized": "a b c-\u003ea b d-\u003ea b d-\u003ea b d",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b d-\u003ea b d-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:ifP",
      "description": {
        "fct-descr": "\u003cp\u003eshortcut: \u003ccode\u003e ifP p = ifA (isA p) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e Bool) -\u003e a b d -\u003e a b d -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowIf.html#ifP",
        "fct-type": "method",
        "title": "ifP"
      },
      "index": {
        "description": "shortcut ifP ifA isA",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "ifP",
        "normalized": "(a-\u003eBool)-\u003eb a c-\u003eb a c-\u003eb a c",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003eBool)-\u003ea b d-\u003ea b d-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:neg",
      "description": {
        "fct-descr": "\u003cp\u003enegation: \u003ccode\u003e neg f = ifA f none this \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#neg",
        "fct-type": "method",
        "title": "neg"
      },
      "index": {
        "description": "negation neg ifA none this",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "neg",
        "normalized": "a b c-\u003ea b b",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:notContaining",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e f `notContaining` g \u003c/code\u003e : keep only those results from f for which g does not hold\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e f `notContaining` g = f \u003e\u003e\u003e ifA g none this \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a c d -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowIf.html#notContaining",
        "fct-type": "method",
        "title": "notContaining"
      },
      "index": {
        "description": "notContaining keep only those results from for which does not hold definition notContaining ifA none this",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "notContaining",
        "normalized": "a b c-\u003ea c d-\u003ea b c",
        "package": "hxt",
        "partial": "Containing",
        "signature": "a b c-\u003ea c d-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:orElse",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e f `orElse` g \u003c/code\u003e : directional choice: if f succeeds, the result of f is the result, else g is applied\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowIf.html#orElse",
        "fct-type": "method",
        "title": "orElse"
      },
      "index": {
        "description": "orElse directional choice if succeeds the result of is the result else is applied",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "orElse",
        "normalized": "a b c-\u003ea b c-\u003ea b c",
        "package": "hxt",
        "partial": "Else",
        "signature": "a b c-\u003ea b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:partitionA",
      "description": {
        "fct-descr": "\u003cp\u003epartition a list of values into a pair of lists\n\u003c/p\u003e\u003cp\u003eThis is the arrow Version of \u003ccode\u003e\u003ca\u003epartition\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b b -\u003e a [b] ([b], [b])",
        "fct-source": "src/Control-Arrow-ArrowIf.html#partitionA",
        "fct-type": "method",
        "title": "partitionA"
      },
      "index": {
        "description": "partition list of values into pair of lists This is the arrow Version of partition",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "partitionA",
        "normalized": "a b b-\u003ea[b]([b],[b])",
        "package": "hxt",
        "partial": "",
        "signature": "a b b-\u003ea[b]([b],[b])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:spanA",
      "description": {
        "fct-descr": "\u003cp\u003esplit a list value with an arrow and returns a pair of lists.\n This is the arrow version of \u003ccode\u003e\u003ca\u003espan\u003c/a\u003e\u003c/code\u003e. The arrow is deterministic.\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e runLA (spanA (isA (/= '-'))) \"abc-def\" \u003c/code\u003e gives \u003ccode\u003e [(\"abc\",\"-def\")] \u003c/code\u003e as result\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b b -\u003e a [b] ([b], [b])",
        "fct-source": "src/Control-Arrow-ArrowIf.html#spanA",
        "fct-type": "method",
        "title": "spanA"
      },
      "index": {
        "description": "split list value with an arrow and returns pair of lists This is the arrow version of span The arrow is deterministic example runLA spanA isA abc-def gives abc def as result",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "spanA",
        "normalized": "a b b-\u003ea[b]([b],[b])",
        "package": "hxt",
        "partial": "",
        "signature": "a b b-\u003ea[b]([b],[b])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:tagA",
      "description": {
        "fct-descr": "\u003cp\u003etag a value with Left or Right, if arrow has success, input is tagged with Left, else with Right\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b (Either b b)",
        "fct-source": "src/Control-Arrow-ArrowIf.html#tagA",
        "fct-type": "method",
        "title": "tagA"
      },
      "index": {
        "description": "tag value with Left or Right if arrow has success input is tagged with Left else with Right",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "tagA",
        "normalized": "a b c-\u003ea b(Either b b)",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b(Either b b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:when",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e f `when` g \u003c/code\u003e : when the predicate g holds, f is applied, else the identity filter this\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b b -\u003e a b c -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#when",
        "fct-type": "method",
        "title": "when"
      },
      "index": {
        "description": "when when the predicate holds is applied else the identity filter this",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "when",
        "normalized": "a b b-\u003ea b c-\u003ea b b",
        "package": "hxt",
        "partial": "",
        "signature": "a b b-\u003ea b c-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:whenNot",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003e f `whenNot` g \u003c/code\u003e : when the predicate g does not hold, f is applied, else the identity filter this\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b b -\u003e a b c -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#whenNot",
        "fct-type": "method",
        "title": "whenNot"
      },
      "index": {
        "description": "whenNot when the predicate does not hold is applied else the identity filter this",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "whenNot",
        "normalized": "a b b-\u003ea b c-\u003ea b b",
        "package": "hxt",
        "partial": "Not",
        "signature": "a b b-\u003ea b c-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:whenNotP",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003ewhenP\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b b -\u003e (b -\u003e Bool) -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#whenNotP",
        "fct-type": "method",
        "title": "whenNotP"
      },
      "index": {
        "description": "like whenP",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "whenNotP",
        "normalized": "a b b-\u003e(b-\u003eBool)-\u003ea b b",
        "package": "hxt",
        "partial": "Not",
        "signature": "a b b-\u003e(b-\u003eBool)-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowIf.html#v:whenP",
      "description": {
        "fct-descr": "\u003cp\u003eshortcut: \u003ccode\u003e f `whenP` p = f `when` (isA p) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowIf",
        "fct-package": "hxt",
        "fct-signature": "a b b -\u003e (b -\u003e Bool) -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowIf.html#whenP",
        "fct-type": "method",
        "title": "whenP"
      },
      "index": {
        "description": "shortcut whenP when isA",
        "hierarchy": "Control Arrow ArrowIf",
        "module": "Control.Arrow.ArrowIf",
        "name": "whenP",
        "normalized": "a b b-\u003e(b-\u003eBool)-\u003ea b b",
        "package": "hxt",
        "partial": "",
        "signature": "a b b-\u003e(b-\u003eBool)-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe list arrow class\n\u003c/p\u003e\u003cp\u003eThis module defines the interface for list arrows.\n\u003c/p\u003e\u003cp\u003eA list arrow is a function, that gives a list of results\n   for a given argument. A single element result represents a normal function.\n   An empty list oven indicates, the function is undefined for the given argument.\n   The empty list may also represent False, none empty lists True.\n   A list with more than one element gives all results for a nondeterministic function.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowList.html",
        "fct-type": "module",
        "title": "ArrowList"
      },
      "index": {
        "description": "The list arrow class This module defines the interface for list arrows list arrow is function that gives list of results for given argument single element result represents normal function An empty list oven indicates the function is undefined for the given argument The empty list may also represent False none empty lists True list with more than one element gives all results for nondeterministic function",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "ArrowList",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#t:ArrowList",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for list arrows\n\u003c/p\u003e\u003cp\u003eOnly \u003ccode\u003emkA\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eisA\u003c/a\u003e\u003c/code\u003e '(\u003e\u003e.)' don't have default implementations\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowList.html#ArrowList",
        "fct-type": "class",
        "title": "ArrowList"
      },
      "index": {
        "description": "The interface for list arrows Only mkA isA don have default implementations",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "ArrowList",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-36--60-",
      "description": {
        "fct-descr": "\u003cp\u003ecompute the parameter for an arrow with extra parameters from the input\n and apply the arrow for all parameter values to the input\n\u003c/p\u003e\u003cp\u003ea kind of \"function call\" for arrows, useful for joining arrows\n\u003c/p\u003e\u003cpre\u003e infixl 2 ($\u003c)\n\u003c/pre\u003e\u003cp\u003edefinition:\n\u003c/p\u003e\u003cpre\u003e g $\u003c f = applyA (f \u003e\u003e\u003e arr g)\n\u003c/pre\u003e\u003cp\u003eif \u003ccode\u003ef\u003c/code\u003e fails, the whole arrow fails, e.g. \u003ccode\u003e g $\u003c none == none \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eif \u003ccode\u003ef\u003c/code\u003e computes n values and \u003ccode\u003eg\u003c/code\u003e is deterministic, the whole arrow computes n values\n\u003c/p\u003e\u003cp\u003eexamples with simple list arrows with strings\n\u003c/p\u003e\u003cpre\u003e prefixString   :: String -\u003e a String String\n prefixString s =  arr (s++)\n\n runLA ( prefixString $\u003c none           ) \"x\" == []\n runLA ( prefixString $\u003c constA \"y\"     ) \"x\" == [\"yx\"]\n runLA ( prefixString $\u003c this           ) \"x\" == [\"xx\"]\n runLA ( prefixString $\u003c constA \"y\"\n                         \u003c+\u003e constA \"z\" ) \"x\" == [\"yx\",\"zx\"]\n runLA ( prefixString $\u003c constA \"y\"\n                         \u003c+\u003e this\n                         \u003c+\u003e constA \"z\" ) \"x\" == [\"yx\",\"xx\",\"zx\"]\n\u003c/pre\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003eapplyA\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c\u003c\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c$\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(c -\u003e a b d) -\u003e a b c -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowList.html#%24%3C",
        "fct-type": "method",
        "title": "($\u003c)"
      },
      "index": {
        "description": "compute the parameter for an arrow with extra parameters from the input and apply the arrow for all parameter values to the input kind of function call for arrows useful for joining arrows infixl definition applyA arr if fails the whole arrow fails e.g none none if computes values and is deterministic the whole arrow computes values examples with simple list arrows with strings prefixString String String String prefixString arr runLA prefixString none runLA prefixString constA yx runLA prefixString this xx runLA prefixString constA constA yx zx runLA prefixString constA this constA yx xx zx see also applyA",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "($\u003c) $\u003c",
        "normalized": "(a-\u003eb c d)-\u003eb c a-\u003eb c d",
        "package": "hxt",
        "partial": "",
        "signature": "(c-\u003ea b d)-\u003ea b c-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-36--60--36-",
      "description": {
        "fct-descr": "\u003cp\u003ecompute the parameter for an arrow \u003ccode\u003ef\u003c/code\u003e with an extra parameter by an arrow \u003ccode\u003eg\u003c/code\u003e\n and apply all the results from \u003ccode\u003eg\u003c/code\u003e sequentially to the input\n\u003c/p\u003e\u003cpre\u003e infixl 2 ($\u003c$)\n\u003c/pre\u003e\u003cp\u003etypical usage:\n\u003c/p\u003e\u003cpre\u003e g :: a b c\n g = ...\n\n f :: c -\u003e a b b\n f x = ... x ...\n\n f $\u003c$ g\n\u003c/pre\u003e\u003cp\u003e\u003ccode\u003ef\u003c/code\u003e computes the extra parameters for \u003ccode\u003eg\u003c/code\u003e from the input of type \u003ccode\u003eb\u003c/code\u003e and \u003ccode\u003eg\u003c/code\u003e is applied with this\n parameter to the input. This allows programming in a point wise style in \u003ccode\u003eg\u003c/code\u003e, which becomes\n neccessary, when a value is needed more than once.\n\u003c/p\u003e\u003cp\u003ethis combinator is useful, when transforming a single value (document) step by step,\n with \u003ccode\u003eg\u003c/code\u003e for collecting the data for all steps, and \u003ccode\u003ef\u003c/code\u003e for transforming the input step by step\n\u003c/p\u003e\u003cp\u003eif \u003ccode\u003eg\u003c/code\u003e is deterministic (computes exactly one result),\n \u003ccode\u003e g $\u003c$ f == g $\u003c f \u003c/code\u003e holds\n\u003c/p\u003e\u003cp\u003eif \u003ccode\u003eg\u003c/code\u003e fails, \u003ccode\u003e f $\u003c$ g == this \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eif \u003ccode\u003eg\u003c/code\u003e computes more than one result, \u003ccode\u003ef\u003c/code\u003e is applied sequentially to the input for every result from \u003ccode\u003eg\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eexamples with simple list arrows with strings\n\u003c/p\u003e\u003cpre\u003e prefixString   :: String -\u003e a String String\n prefixString s =  arr (s++)\n\n runLA ( prefixString $\u003c$ none                      ) \"x\" == [\"x\"]\n runLA ( prefixString $\u003c$ constA \"y\"                ) \"x\" == [\"yx\"]\n runLA ( prefixString $\u003c$ constA \"y\" \u003c+\u003e constA \"z\" ) \"x\" == [\"zyx\"]\n runLA ( prefixString $\u003c$ constA \"y\" \u003c+\u003e this\n                          \u003c+\u003e constA \"z\"            ) \"x\" == [\"zxyx\"]\n\u003c/pre\u003e\u003cp\u003eexample with two extra parameter\n\u003c/p\u003e\u003cpre\u003e g1 :: a b c1\n g2 :: a b c2\n\n f          :: (c1, c2) -\u003e a b b\n f (x1, x2) =  ... x1 ... x2 ...\n\n f $\u003c$ g1 &&& g2\n\u003c/pre\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003eapplyA\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(c -\u003e a b b) -\u003e a b c -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowList.html#%24%3C%24",
        "fct-type": "method",
        "title": "($\u003c$)"
      },
      "index": {
        "description": "compute the parameter for an arrow with an extra parameter by an arrow and apply all the results from sequentially to the input infixl typical usage computes the extra parameters for from the input of type and is applied with this parameter to the input This allows programming in point wise style in which becomes neccessary when value is needed more than once this combinator is useful when transforming single value document step by step with for collecting the data for all steps and for transforming the input step by step if is deterministic computes exactly one result holds if fails this if computes more than one result is applied sequentially to the input for every result from examples with simple list arrows with strings prefixString String String String prefixString arr runLA prefixString none runLA prefixString constA yx runLA prefixString constA constA zyx runLA prefixString constA this constA zxyx example with two extra parameter g1 c1 g2 c2 c1 c2 x1 x2 x1 x2 g1 g2 see also applyA",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "($\u003c$) $\u003c$",
        "normalized": "(a-\u003eb c c)-\u003eb c a-\u003eb c c",
        "package": "hxt",
        "partial": "",
        "signature": "(c-\u003ea b b)-\u003ea b c-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-36--60--60-",
      "description": {
        "fct-descr": "\u003cp\u003ebinary version of \u003ccode\u003e\u003ca\u003e$\u003c\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eexample with simple list arrows with strings\n\u003c/p\u003e\u003cpre\u003e infixString    :: String -\u003e String -\u003e a String String\n infixString s1 s2\n                = arr (\\ s -\u003e s1 ++ s ++ s2)\n\n runLA ( infixString $\u003c\u003c constA \"y\" &&& constA \"z\" ) \"x\" = [\"yxz\"]\n runLA ( infixString $\u003c\u003c this &&& this             ) \"x\" = [\"xxx\"]\n runLA ( infixString $\u003c\u003c constA \"y\"\n                         &&& (constA \"z\" \u003c+\u003e this) ) \"x\" = [\"yxz\", \"yxx\"]\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(c1 -\u003e c2 -\u003e a b d) -\u003e a b (c1, c2) -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowList.html#%24%3C%3C",
        "fct-type": "method",
        "title": "($\u003c\u003c)"
      },
      "index": {
        "description": "binary version of example with simple list arrows with strings infixString String String String String infixString s1 s2 arr s1 s2 runLA infixString constA constA yxz runLA infixString this this xxx runLA infixString constA constA this yxz yxx",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "($\u003c\u003c) $\u003c\u003c",
        "normalized": "(a-\u003ea-\u003eb c d)-\u003eb c(a,a)-\u003eb c d",
        "package": "hxt",
        "partial": "",
        "signature": "(c-\u003ec-\u003ea b d)-\u003ea b(c,c)-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-36--60--60--60-",
      "description": {
        "fct-descr": "\u003cp\u003eversion of \u003ccode\u003e\u003ca\u003e$\u003c\u003c/a\u003e\u003c/code\u003e for arrows with 3 extra parameters\n\u003c/p\u003e\u003cp\u003etypical usage\n\u003c/p\u003e\u003cpre\u003e f $\u003c\u003c\u003c g1 &&& g2 &&& g3\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(c1 -\u003e c2 -\u003e c3 -\u003e a b d) -\u003e a b (c1, (c2, c3)) -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowList.html#%24%3C%3C%3C",
        "fct-type": "method",
        "title": "($\u003c\u003c\u003c)"
      },
      "index": {
        "description": "version of for arrows with extra parameters typical usage g1 g2 g3",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "($\u003c\u003c\u003c) $\u003c\u003c\u003c",
        "normalized": "(a-\u003ea-\u003ea-\u003eb c d)-\u003eb c(a,(a,a))-\u003eb c d",
        "package": "hxt",
        "partial": "",
        "signature": "(c-\u003ec-\u003ec-\u003ea b d)-\u003ea b(c,(c,c))-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-36--60--60--60--60-",
      "description": {
        "fct-descr": "\u003cp\u003eversion of \u003ccode\u003e\u003ca\u003e$\u003c\u003c/a\u003e\u003c/code\u003e for arrows with 4 extra parameters\n\u003c/p\u003e\u003cp\u003etypical usage\n\u003c/p\u003e\u003cpre\u003e f $\u003c\u003c\u003c\u003c g1 &&& g2 &&& g3 &&& g4\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(c1 -\u003e c2 -\u003e c3 -\u003e c4 -\u003e a b d) -\u003e a b (c1, (c2, (c3, c4))) -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowList.html#%24%3C%3C%3C%3C",
        "fct-type": "method",
        "title": "($\u003c\u003c\u003c\u003c)"
      },
      "index": {
        "description": "version of for arrows with extra parameters typical usage g1 g2 g3 g4",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "($\u003c\u003c\u003c\u003c) $\u003c\u003c\u003c\u003c",
        "normalized": "(a-\u003ea-\u003ea-\u003ea-\u003eb c d)-\u003eb c(a,(a,(a,a)))-\u003eb c d",
        "package": "hxt",
        "partial": "",
        "signature": "(c-\u003ec-\u003ec-\u003ec-\u003ea b d)-\u003ea b(c,(c,(c,c)))-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-62--62-.",
      "description": {
        "fct-descr": "\u003cp\u003ecombinator for converting the result of a list arrow into another list\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e foo \u003e\u003e. reverse \u003c/code\u003e reverses the the result of foo\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e foo \u003e\u003e. take 1 \u003c/code\u003e constructs a deterministic version of foo by deleting all further results\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e ([c] -\u003e [d]) -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowList.html#%3E%3E.",
        "fct-type": "method",
        "title": "(\u003e\u003e.)"
      },
      "index": {
        "description": "combinator for converting the result of list arrow into another list example foo reverse reverses the the result of foo example foo take constructs deterministic version of foo by deleting all further results",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "(\u003e\u003e.) \u003e\u003e.",
        "normalized": "a b c-\u003e([c]-\u003e[d])-\u003ea b d",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003e([c]-\u003e[d])-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:-62-.",
      "description": {
        "fct-descr": "\u003cp\u003ecombinator for converting the result of an arrow into a single element result\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e ([c] -\u003e d) -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowList.html#%3E.",
        "fct-type": "method",
        "title": "(\u003e.)"
      },
      "index": {
        "description": "combinator for converting the result of an arrow into single element result",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "(\u003e.) \u003e.",
        "normalized": "a b c-\u003e([c]-\u003ed)-\u003ea b d",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003e([c]-\u003ed)-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:applyA",
      "description": {
        "fct-descr": "\u003cp\u003ecompute an arrow from the input and apply the arrow to this input\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e (f &&& this) \u003e\u003e\u003e app \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003ein a point free style, there is no way to use an argument in 2 places,\n this is a combinator for simulating this. first the argument is used to compute an arrow,\n then this new arrow is applied to the input\n\u003c/p\u003e\u003cp\u003eapplyA coresponds to: \u003ccode\u003e apply f x = let g = f x in g x \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003e$\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c\u003c\u003c\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c$\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b (a b c) -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#applyA",
        "fct-type": "method",
        "title": "applyA"
      },
      "index": {
        "description": "compute an arrow from the input and apply the arrow to this input definition this app in point free style there is no way to use an argument in places this is combinator for simulating this first the argument is used to compute an arrow then this new arrow is applied to the input applyA coresponds to apply let in see also",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "applyA",
        "normalized": "a b(a b c)-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b(a b c)-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:arr2",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 2 argument arrow from a binary function\n |\n | example: \u003ccode\u003e a1 &&& a2 \u003e\u003e\u003e arr2 f \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b1 -\u003e b2 -\u003e c) -\u003e a (b1, b2) c",
        "fct-source": "src/Control-Arrow-ArrowList.html#arr2",
        "fct-type": "method",
        "title": "arr2"
      },
      "index": {
        "description": "construction of argument arrow from binary function example a1 a2 arr2",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "arr2",
        "normalized": "(a-\u003ea-\u003eb)-\u003ec(a,a)b",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003eb-\u003ec)-\u003ea(b,b)c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:arr2A",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 2 argument arrow from a singe argument arrow\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e a c d) -\u003e a (b, c) d",
        "fct-source": "src/Control-Arrow-ArrowList.html#arr2A",
        "fct-type": "method",
        "title": "arr2A"
      },
      "index": {
        "description": "construction of argument arrow from singe argument arrow",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "arr2A",
        "normalized": "(a-\u003eb c d)-\u003eb(a,c)d",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003ea c d)-\u003ea(b,c)d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:arr2L",
      "description": {
        "fct-descr": "\u003cp\u003econstructor for a list arrow with 2 arguments\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e c -\u003e [d]) -\u003e a (b, c) d",
        "fct-source": "src/Control-Arrow-ArrowList.html#arr2L",
        "fct-type": "method",
        "title": "arr2L"
      },
      "index": {
        "description": "constructor for list arrow with arguments",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "arr2L",
        "normalized": "(a-\u003eb-\u003e[c])-\u003ed(a,b)c",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003ec-\u003e[d])-\u003ea(b,c)d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:arr3",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 3 argument arrow from a 3-ary function\n |\n | example: \u003ccode\u003e a1 &&& a2 &&& a3 \u003e\u003e\u003e arr3 f \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b1 -\u003e b2 -\u003e b3 -\u003e c) -\u003e a (b1, (b2, b3)) c",
        "fct-source": "src/Control-Arrow-ArrowList.html#arr3",
        "fct-type": "method",
        "title": "arr3"
      },
      "index": {
        "description": "construction of argument arrow from ary function example a1 a2 a3 arr3",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "arr3",
        "normalized": "(a-\u003ea-\u003ea-\u003eb)-\u003ec(a,(a,a))b",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003eb-\u003eb-\u003ec)-\u003ea(b,(b,b))c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:arr4",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of a 4 argument arrow from a 4-ary function\n |\n | example: \u003ccode\u003e a1 &&& a2 &&& a3 &&& a4 \u003e\u003e\u003e arr4 f \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b1 -\u003e b2 -\u003e b3 -\u003e b4 -\u003e c) -\u003e a (b1, (b2, (b3, b4))) c",
        "fct-source": "src/Control-Arrow-ArrowList.html#arr4",
        "fct-type": "method",
        "title": "arr4"
      },
      "index": {
        "description": "construction of argument arrow from ary function example a1 a2 a3 a4 arr4",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "arr4",
        "normalized": "(a-\u003ea-\u003ea-\u003ea-\u003eb)-\u003ec(a,(a,(a,a)))b",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003eb-\u003eb-\u003eb-\u003ec)-\u003ea(b,(b,(b,b)))c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:arrL",
      "description": {
        "fct-descr": "\u003cp\u003econstructor for a list arrow from a function with a list as result\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e [c]) -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#arrL",
        "fct-type": "method",
        "title": "arrL"
      },
      "index": {
        "description": "constructor for list arrow from function with list as result",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "arrL",
        "normalized": "(a-\u003e[b])-\u003ec a b",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003e[c])-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:catA",
      "description": {
        "fct-descr": "\u003cp\u003egeneralization of arrow combinator \u003ccode\u003e\u003ca\u003e\u003c+\u003e\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e catA = foldl (\u003c+\u003e) none \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "[a b c] -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#catA",
        "fct-type": "method",
        "title": "catA"
      },
      "index": {
        "description": "generalization of arrow combinator definition catA foldl none",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "catA",
        "normalized": "[a b c]-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "[a b c]-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:constA",
      "description": {
        "fct-descr": "\u003cp\u003econstructor for a const arrow: \u003ccode\u003e constA = arr . const \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#constA",
        "fct-type": "method",
        "title": "constA"
      },
      "index": {
        "description": "constructor for const arrow constA arr const",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "constA",
        "normalized": "a-\u003eb c a",
        "package": "hxt",
        "partial": "",
        "signature": "c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:constL",
      "description": {
        "fct-descr": "\u003cp\u003econstructor for a const arrow: \u003ccode\u003e constL = arrL . const \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "[c] -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#constL",
        "fct-type": "method",
        "title": "constL"
      },
      "index": {
        "description": "constructor for const arrow constL arrL const",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "constL",
        "normalized": "[a]-\u003eb c a",
        "package": "hxt",
        "partial": "",
        "signature": "[c]-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:isA",
      "description": {
        "fct-descr": "\u003cp\u003ebuilds an arrow from a predicate.\n If the predicate holds, the single list containing the input is returned, else the empty list\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e Bool) -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowList.html#isA",
        "fct-type": "method",
        "title": "isA"
      },
      "index": {
        "description": "builds an arrow from predicate If the predicate holds the single list containing the input is returned else the empty list",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "isA",
        "normalized": "(a-\u003eBool)-\u003eb a a",
        "package": "hxt",
        "partial": "",
        "signature": "(b-\u003eBool)-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:listA",
      "description": {
        "fct-descr": "\u003cp\u003ecombinator for converting an arrow into a determinstic version with all results collected in a single element list\n\u003c/p\u003e\u003cpre\u003e listA af = af \u003e\u003e. (:[])\u003c/pre\u003e\u003cp\u003ethis is useful when the list of results computed by an arrow must be manipulated (e.g. sorted)\n\u003c/p\u003e\u003cp\u003eexample for sorting the results of a filter\n\u003c/p\u003e\u003cpre\u003e collectAndSort         :: a b c -\u003e a b c\n\n collectAndSort collect = listA collect \u003e\u003e\u003e arrL sort\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b [c]",
        "fct-source": "src/Control-Arrow-ArrowList.html#listA",
        "fct-type": "method",
        "title": "listA"
      },
      "index": {
        "description": "combinator for converting an arrow into determinstic version with all results collected in single element list listA af af this is useful when the list of results computed by an arrow must be manipulated e.g sorted example for sorting the results of filter collectAndSort collectAndSort collect listA collect arrL sort",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "listA",
        "normalized": "a b c-\u003ea b[c]",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b[c]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:mergeA",
      "description": {
        "fct-descr": "\u003cp\u003emerge the result pairs of an arrow with type \u003ccode\u003ea a1 (b1, b2)\u003c/code\u003e\n by combining the tuple components with the \u003ccode\u003eop\u003c/code\u003e arrow\n\u003c/p\u003e\u003cp\u003eexamples with simple list arrows working on strings and XmlTrees\n\u003c/p\u003e\u003cpre\u003e     a1 :: a String (XmlTree, XmlTree)\n     a1 = selem \"foo\" [this \u003e\u003e\u003e mkText]\n          &&&\n          selem \"bar\" [arr (++\"0\") \u003e\u003e\u003e mkText]\n\n     runLA (a1 \u003e\u003e\u003e mergeA (\u003c+\u003e) \u003e\u003e\u003e xshow this) \"42\" == [\"\u003cfoo\u003e42\u003c/foo\u003e\",\"\u003cbar\u003e420\u003c/bar\u003e\"]\n     runLA (a1 \u003e\u003e\u003e mergeA (+=)  \u003e\u003e\u003e xshow this) \"42\" == [\"\u003cfoo\u003e42\u003cbar\u003e420\u003c/bar\u003e\u003c/foo\u003e\"]\n\u003c/pre\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003eapplyA\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003e$\u003c\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e+=\u003c/code\u003e in class \u003ccode\u003e\u003ca\u003eArrowXml\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "(a (a1, b1) a1 -\u003e a (a1, b1) b1 -\u003e a (a1, b1) c) -\u003e a (a1, b1) c",
        "fct-source": "src/Control-Arrow-ArrowList.html#mergeA",
        "fct-type": "method",
        "title": "mergeA"
      },
      "index": {
        "description": "merge the result pairs of an arrow with type a1 b1 b2 by combining the tuple components with the op arrow examples with simple list arrows working on strings and XmlTrees a1 String XmlTree XmlTree a1 selem foo this mkText selem bar arr mkText runLA a1 mergeA xshow this foo foo bar bar runLA a1 mergeA xshow this foo bar bar foo see also applyA and in class ArrowXml",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "mergeA",
        "normalized": "(a(a,b)a-\u003ea(a,b)b-\u003ea(a,b)c)-\u003ea(a,b)c",
        "package": "hxt",
        "partial": "",
        "signature": "(a(a,b)a-\u003ea(a,b)b-\u003ea(a,b)c)-\u003ea(a,b)c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:none",
      "description": {
        "fct-descr": "\u003cp\u003ethe zero arrow, alias for zeroArrow\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#none",
        "fct-type": "method",
        "title": "none"
      },
      "index": {
        "description": "the zero arrow alias for zeroArrow",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "none",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:perform",
      "description": {
        "fct-descr": "\u003cp\u003euseful only for arrows with side effects: perform applies an arrow to the input\n ignores the result and returns the input\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e ... \u003e\u003e\u003e perform someTraceArrow \u003e\u003e\u003e ... \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowList.html#perform",
        "fct-type": "method",
        "title": "perform"
      },
      "index": {
        "description": "useful only for arrows with side effects perform applies an arrow to the input ignores the result and returns the input example perform someTraceArrow",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "perform",
        "normalized": "a b c-\u003ea b b",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:seqA",
      "description": {
        "fct-descr": "\u003cp\u003egeneralization of arrow combinator \u003ccode\u003e\u003ca\u003e\u003e\u003e\u003e\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e seqA = foldl (\u003e\u003e\u003e) this \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "[a b b] -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowList.html#seqA",
        "fct-type": "method",
        "title": "seqA"
      },
      "index": {
        "description": "generalization of arrow combinator definition seqA foldl this",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "seqA",
        "normalized": "[a b b]-\u003ea b b",
        "package": "hxt",
        "partial": "",
        "signature": "[a b b]-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:single",
      "description": {
        "fct-descr": "\u003cp\u003emakes a list arrow deterministic, the number of results is at most 1\n\u003c/p\u003e\u003cp\u003edefinition\n\u003c/p\u003e\u003cpre\u003e single f = f \u003e\u003e. take 1\n\u003c/pre\u003e\u003cp\u003eexamples with strings:\n\u003c/p\u003e\u003cpre\u003e runLA ( single none ) \"x\" == []\n runLA ( single this ) \"x\" == [\"x\"]\n runLA ( single\n         (constA \"y\"\n          \u003c+\u003e this ) ) \"x\" == [\"y\"]\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#single",
        "fct-type": "method",
        "title": "single"
      },
      "index": {
        "description": "makes list arrow deterministic the number of results is at most definition single take examples with strings runLA single none runLA single this runLA single constA this",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "single",
        "normalized": "a b c-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:this",
      "description": {
        "fct-descr": "\u003cp\u003ethe identity arrow, alias for returnA\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b b",
        "fct-source": "src/Control-Arrow-ArrowList.html#this",
        "fct-type": "method",
        "title": "this"
      },
      "index": {
        "description": "the identity arrow alias for returnA",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "this",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:unlistA",
      "description": {
        "fct-descr": "\u003cp\u003ethe inverse of \u003ccode\u003e\u003ca\u003elistA\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e listA af \u003e\u003e\u003e unlistA = af\u003c/pre\u003e\u003cp\u003eunlistA is defined as \u003ccode\u003e arrL id \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a [b] b",
        "fct-source": "src/Control-Arrow-ArrowList.html#unlistA",
        "fct-type": "method",
        "title": "unlistA"
      },
      "index": {
        "description": "the inverse of listA listA af unlistA af unlistA is defined as arrL id",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "unlistA",
        "normalized": "a[b]b",
        "package": "hxt",
        "partial": "",
        "signature": "a[b]b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowList.html#v:withDefault",
      "description": {
        "fct-descr": "\u003cp\u003econverts an arrow, that may fail, into an arrow that always succeeds\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e withDefault none \"abc\" \u003c/code\u003e is equivalent to \u003ccode\u003e constA \"abc\" \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowList",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowList.html#withDefault",
        "fct-type": "method",
        "title": "withDefault"
      },
      "index": {
        "description": "converts an arrow that may fail into an arrow that always succeeds example withDefault none abc is equivalent to constA abc",
        "hierarchy": "Control Arrow ArrowList",
        "module": "Control.Arrow.ArrowList",
        "name": "withDefault",
        "normalized": "a b c-\u003ec-\u003ea b c",
        "package": "hxt",
        "partial": "Default",
        "signature": "a b c-\u003ec-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eArrows for evaluation of normal form results\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowNF.html",
        "fct-type": "module",
        "title": "ArrowNF"
      },
      "index": {
        "description": "Arrows for evaluation of normal form results",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "ArrowNF",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow NF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#t:ArrowNF",
      "description": {
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowNF.html#ArrowNF",
        "fct-type": "class",
        "title": "ArrowNF"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "ArrowNF",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow NF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#t:ArrowWNF",
      "description": {
        "fct-descr": "\u003cp\u003epartial evaluation of an arrow result using \u003ccode\u003e\u003ca\u003eFlatSeq\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eThere are tow arrows with force the partial evaluation. By convention\n the 2. should be less lazy than the 1.\n\u003c/p\u003e\u003cp\u003eThese arrows are sometimes useful for preventing space leaks, especially when parsing\n complex data structures. In many cases the evaluated AST is more space efficient\n than the unevaluaded with a lot of closures.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowNF.html#ArrowWNF",
        "fct-type": "class",
        "title": "ArrowWNF"
      },
      "index": {
        "description": "partial evaluation of an arrow result using FlatSeq There are tow arrows with force the partial evaluation By convention the should be less lazy than the These arrows are sometimes useful for preventing space leaks especially when parsing complex data structures In many cases the evaluated AST is more space efficient than the unevaluaded with lot of closures",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "ArrowWNF",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow WNF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#v:rnfA",
      "description": {
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowNF.html#rnfA",
        "fct-type": "method",
        "title": "rnfA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "rnfA",
        "normalized": "a b c-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#v:rwnf2A",
      "description": {
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowNF.html#rwnf2A",
        "fct-type": "method",
        "title": "rwnf2A"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "rwnf2A",
        "normalized": "a b c-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#v:rwnfA",
      "description": {
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "a b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowNF.html#rwnfA",
        "fct-type": "method",
        "title": "rwnfA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "rwnfA",
        "normalized": "a b c-\u003ea b c",
        "package": "hxt",
        "partial": "",
        "signature": "a b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNF.html#v:strictA",
      "description": {
        "fct-descr": "\u003cp\u003ecomplete evaluation of an arrow result using \u003ccode\u003e\u003ca\u003eDeepSeq\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003ethis is sometimes useful for preventing space leaks, especially after reading\n and validation of a document, all DTD stuff is not longer in use and can be\n recycled by the GC.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNF",
        "fct-package": "hxt",
        "fct-signature": "a b b",
        "fct-source": "src/Control-Arrow-ArrowNF.html#strictA",
        "fct-type": "function",
        "title": "strictA"
      },
      "index": {
        "description": "complete evaluation of an arrow result using DeepSeq this is sometimes useful for preventing space leaks especially after reading and validation of document all DTD stuff is not longer in use and can be recycled by the GC",
        "hierarchy": "Control Arrow ArrowNF",
        "module": "Control.Arrow.ArrowNF",
        "name": "strictA",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eList arrows for navigatable trees\n\u003c/p\u003e\u003cp\u003eTrees that implement the \u003ca\u003eData.Tree.NavigatableTree.Class\u003c/a\u003e interface, can be processed\n   with these arrows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html",
        "fct-type": "module",
        "title": "ArrowNavigatableTree"
      },
      "index": {
        "description": "List arrows for navigatable trees Trees that implement the Data.Tree.NavigatableTree.Class interface can be processed with these arrows",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "ArrowNavigatableTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Navigatable Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#t:ArrowNavigatableTree",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for navigatable tree arrows\n\u003c/p\u003e\u003cp\u003eall functions have default implementations\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#ArrowNavigatableTree",
        "fct-type": "class",
        "title": "ArrowNavigatableTree"
      },
      "index": {
        "description": "The interface for navigatable tree arrows all functions have default implementations",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "ArrowNavigatableTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Navigatable Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:addNav",
      "description": {
        "fct-descr": "\u003cp\u003eConversion from a tree into a navigatable tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#addNav",
        "fct-type": "function",
        "title": "addNav"
      },
      "index": {
        "description": "Conversion from tree into navigatable tree",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "addNav",
        "normalized": "",
        "package": "hxt",
        "partial": "Nav",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:addToOneSide",
      "description": {
        "fct-descr": "\u003cp\u003eaddToOneSide does the real work for \u003ccode\u003e\u003ca\u003eaddToTheLeft\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eaddToTheRight\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "(Maybe (nt b) -\u003e [t b] -\u003e Maybe (nt b)) -\u003e a (t b) (t b) -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#addToOneSide",
        "fct-type": "function",
        "title": "addToOneSide"
      },
      "index": {
        "description": "addToOneSide does the real work for addToTheLeft and addToTheRight",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "addToOneSide",
        "normalized": "(Maybe(a b)-\u003e[c b]-\u003eMaybe(a b))-\u003ed(c b)(c b)-\u003ed(a b)(a b)",
        "package": "hxt",
        "partial": "To One Side",
        "signature": "(Maybe(nt b)-\u003e[t b]-\u003eMaybe(nt b))-\u003ea(t b)(t b)-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:addToTheLeft",
      "description": {
        "fct-descr": "\u003cp\u003eapply an ordinary arrow to the current subtree of a navigatabe tree and add the result trees in front of the current tree.\n\u003c/p\u003e\u003cp\u003eIf this arrow is applied to the root, it will fail, because we want a tree as result, not a forest.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#addToTheLeft",
        "fct-type": "function",
        "title": "addToTheLeft"
      },
      "index": {
        "description": "apply an ordinary arrow to the current subtree of navigatabe tree and add the result trees in front of the current tree If this arrow is applied to the root it will fail because we want tree as result not forest",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "addToTheLeft",
        "normalized": "a(b c)(b c)-\u003ea(d c)(d c)",
        "package": "hxt",
        "partial": "To The Left",
        "signature": "a(t b)(t b)-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:addToTheRight",
      "description": {
        "fct-descr": "\u003cp\u003eapply an ordinary arrow to the current subtree of a navigatabe tree and add the result trees behind the current tree.\n\u003c/p\u003e\u003cp\u003eIf this arrow is applied to the root, it will fail, because we want a tree as result, not a forest.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#addToTheRight",
        "fct-type": "function",
        "title": "addToTheRight"
      },
      "index": {
        "description": "apply an ordinary arrow to the current subtree of navigatabe tree and add the result trees behind the current tree If this arrow is applied to the root it will fail because we want tree as result not forest",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "addToTheRight",
        "normalized": "a(b c)(b c)-\u003ea(d c)(d c)",
        "package": "hxt",
        "partial": "To The Right",
        "signature": "a(t b)(t b)-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:ancestorAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: ancestor\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#ancestorAxis",
        "fct-type": "function",
        "title": "ancestorAxis"
      },
      "index": {
        "description": "XPath axis ancestor",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "ancestorAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:ancestorOrSelfAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: ancestor or self\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#ancestorOrSelfAxis",
        "fct-type": "function",
        "title": "ancestorOrSelfAxis"
      },
      "index": {
        "description": "XPath axis ancestor or self",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "ancestorOrSelfAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Or Self Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:changeThisTree",
      "description": {
        "fct-descr": "\u003cp\u003eChange the current subtree of a navigatable tree.\n\u003c/p\u003e\u003cp\u003eThe arrow for computing the changes should be deterministic. If it fails\n nothing is changed.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#changeThisTree",
        "fct-type": "function",
        "title": "changeThisTree"
      },
      "index": {
        "description": "Change the current subtree of navigatable tree The arrow for computing the changes should be deterministic If it fails nothing is changed",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "changeThisTree",
        "normalized": "a(b c)(b c)-\u003ea(d c)(d c)",
        "package": "hxt",
        "partial": "This Tree",
        "signature": "a(t b)(t b)-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:childAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: child\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#childAxis",
        "fct-type": "function",
        "title": "childAxis"
      },
      "index": {
        "description": "XPath axis child",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "childAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:descendantAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: descendant\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#descendantAxis",
        "fct-type": "function",
        "title": "descendantAxis"
      },
      "index": {
        "description": "XPath axis descendant",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "descendantAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:descendantOrFollowingAxis",
      "description": {
        "fct-descr": "\u003cp\u003enot an XPath axis but useful: descendant or following\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#descendantOrFollowingAxis",
        "fct-type": "function",
        "title": "descendantOrFollowingAxis"
      },
      "index": {
        "description": "not an XPath axis but useful descendant or following",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "descendantOrFollowingAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Or Following Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:descendantOrSelfAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: descendant or self\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#descendantOrSelfAxis",
        "fct-type": "function",
        "title": "descendantOrSelfAxis"
      },
      "index": {
        "description": "XPath axis descendant or self",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "descendantOrSelfAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Or Self Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:dropFromTheLeft",
      "description": {
        "fct-descr": "\u003cp\u003edrop the direct left sibling tree of the given navigatable tree\n\u003c/p\u003e\u003cp\u003eIf this arrow is applied to the root or a leftmost tree, it will fail, because there is nothing to remove\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#dropFromTheLeft",
        "fct-type": "function",
        "title": "dropFromTheLeft"
      },
      "index": {
        "description": "drop the direct left sibling tree of the given navigatable tree If this arrow is applied to the root or leftmost tree it will fail because there is nothing to remove",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "dropFromTheLeft",
        "normalized": "",
        "package": "hxt",
        "partial": "From The Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:dropFromTheRight",
      "description": {
        "fct-descr": "\u003cp\u003edrop the direct left sibling tree of the given navigatable tree\n\u003c/p\u003e\u003cp\u003eIf this arrow is applied to the root or a rightmost tree, it will fail, because there is nothing to remove\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#dropFromTheRight",
        "fct-type": "function",
        "title": "dropFromTheRight"
      },
      "index": {
        "description": "drop the direct left sibling tree of the given navigatable tree If this arrow is applied to the root or rightmost tree it will fail because there is nothing to remove",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "dropFromTheRight",
        "normalized": "",
        "package": "hxt",
        "partial": "From The Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:filterAxis",
      "description": {
        "fct-descr": "\u003cp\u003eFilter an axis with an ordinary tree predicate\n\u003c/p\u003e\u003cp\u003eExample: In a tree of Ints find all nodes in the subtrees (in preorder) that have label 42\n\u003c/p\u003e\u003cpre\u003e descendantAxis \u003e\u003e\u003e filterAxis (hasNode (== 42))\n\u003c/pre\u003e\u003cp\u003eExample: In an XML Tree find the following nodes of a node with attribute id and value 42\n\u003c/p\u003e\u003cpre\u003e descendantAxis \u003e\u003e\u003e filterAxis (hasAttrValue \"id\" (==\"42\")) \u003e\u003e\u003e followingAxis\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) c -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#filterAxis",
        "fct-type": "function",
        "title": "filterAxis"
      },
      "index": {
        "description": "Filter an axis with an ordinary tree predicate Example In tree of Ints find all nodes in the subtrees in preorder that have label descendantAxis filterAxis hasNode Example In an XML Tree find the following nodes of node with attribute id and value descendantAxis filterAxis hasAttrValue id followingAxis",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "filterAxis",
        "normalized": "a(b c)d-\u003ea(e c)(e c)",
        "package": "hxt",
        "partial": "Axis",
        "signature": "a(t b)c-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:followingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: following\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#followingAxis",
        "fct-type": "function",
        "title": "followingAxis"
      },
      "index": {
        "description": "XPath axis following",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "followingAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:followingSiblingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: following sibling\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#followingSiblingAxis",
        "fct-type": "function",
        "title": "followingSiblingAxis"
      },
      "index": {
        "description": "XPath axis following sibling",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "followingSiblingAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Sibling Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:isAtRoot",
      "description": {
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#isAtRoot",
        "fct-type": "function",
        "title": "isAtRoot"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "isAtRoot",
        "normalized": "",
        "package": "hxt",
        "partial": "At Root",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:moveDown",
      "description": {
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#moveDown",
        "fct-type": "method",
        "title": "moveDown"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "moveDown",
        "normalized": "",
        "package": "hxt",
        "partial": "Down",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:moveLeft",
      "description": {
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#moveLeft",
        "fct-type": "method",
        "title": "moveLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "moveLeft",
        "normalized": "",
        "package": "hxt",
        "partial": "Left",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:moveOn",
      "description": {
        "fct-descr": "\u003cp\u003eMove to the next tree on a given axis. Deterministic arrow\n\u003c/p\u003e\u003cp\u003eExample: Move to the next node in a preorder visit: next child or else next following\n\u003c/p\u003e\u003cpre\u003e moveOn descendantOrFollowingAxis\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#moveOn",
        "fct-type": "function",
        "title": "moveOn"
      },
      "index": {
        "description": "Move to the next tree on given axis Deterministic arrow Example Move to the next node in preorder visit next child or else next following moveOn descendantOrFollowingAxis",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "moveOn",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "On",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:moveRight",
      "description": {
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#moveRight",
        "fct-type": "method",
        "title": "moveRight"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "moveRight",
        "normalized": "",
        "package": "hxt",
        "partial": "Right",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:moveToRoot",
      "description": {
        "fct-descr": "\u003cp\u003emove to the root\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#moveToRoot",
        "fct-type": "function",
        "title": "moveToRoot"
      },
      "index": {
        "description": "move to the root",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "moveToRoot",
        "normalized": "",
        "package": "hxt",
        "partial": "To Root",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:moveUp",
      "description": {
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#moveUp",
        "fct-type": "method",
        "title": "moveUp"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "moveUp",
        "normalized": "",
        "package": "hxt",
        "partial": "Up",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:parentAxis",
      "description": {
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#parentAxis",
        "fct-type": "function",
        "title": "parentAxis"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "parentAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:precedingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: preceding\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#precedingAxis",
        "fct-type": "function",
        "title": "precedingAxis"
      },
      "index": {
        "description": "XPath axis preceding",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "precedingAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:precedingSiblingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: preceeding sibling\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#precedingSiblingAxis",
        "fct-type": "function",
        "title": "precedingSiblingAxis"
      },
      "index": {
        "description": "XPath axis preceeding sibling",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "precedingSiblingAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Sibling Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:remNav",
      "description": {
        "fct-descr": "\u003cp\u003eConversion from a navigatable tree into an ordinary tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (nt b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#remNav",
        "fct-type": "function",
        "title": "remNav"
      },
      "index": {
        "description": "Conversion from navigatable tree into an ordinary tree",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "remNav",
        "normalized": "",
        "package": "hxt",
        "partial": "Nav",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:revDescendantOrSelfAxis",
      "description": {
        "fct-descr": "\u003cp\u003enot an official XPath axis but useful: reverse descendant or self, used in preceding axis\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#revDescendantOrSelfAxis",
        "fct-type": "function",
        "title": "revDescendantOrSelfAxis"
      },
      "index": {
        "description": "not an official XPath axis but useful reverse descendant or self used in preceding axis",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "revDescendantOrSelfAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Descendant Or Self Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:selfAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: self\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#selfAxis",
        "fct-type": "function",
        "title": "selfAxis"
      },
      "index": {
        "description": "XPath axis self",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "selfAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:substThisTree",
      "description": {
        "fct-descr": "\u003cp\u003eSubstitute the current subtree of a navigatable tree by a given tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "t b -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#substThisTree",
        "fct-type": "function",
        "title": "substThisTree"
      },
      "index": {
        "description": "Substitute the current subtree of navigatable tree by given tree",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "substThisTree",
        "normalized": "a b-\u003ec(d b)(d b)",
        "package": "hxt",
        "partial": "This Tree",
        "signature": "t b-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:withNav",
      "description": {
        "fct-descr": "\u003cp\u003eapply an operation using navigation to an ordinary tree\n\u003c/p\u003e\u003cp\u003eThis root and all children may be visited in arbitrary order\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (nt b) (nt c) -\u003e a (t b) (t c)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#withNav",
        "fct-type": "function",
        "title": "withNav"
      },
      "index": {
        "description": "apply an operation using navigation to an ordinary tree This root and all children may be visited in arbitrary order",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "withNav",
        "normalized": "a(b c)(b d)-\u003ea(e c)(e d)",
        "package": "hxt",
        "partial": "Nav",
        "signature": "a(nt b)(nt c)-\u003ea(t b)(t c)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowNavigatableTree.html#v:withoutNav",
      "description": {
        "fct-descr": "\u003cp\u003eapply a simple operation without use of navigation to a navigatable tree\n\u003c/p\u003e\u003cp\u003eThis enables to apply arbitrary tree operations to navigatable trees\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowNavigatableTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (nt b) (nt b)",
        "fct-source": "src/Control-Arrow-ArrowNavigatableTree.html#withoutNav",
        "fct-type": "function",
        "title": "withoutNav"
      },
      "index": {
        "description": "apply simple operation without use of navigation to navigatable tree This enables to apply arbitrary tree operations to navigatable trees",
        "hierarchy": "Control Arrow ArrowNavigatableTree",
        "module": "Control.Arrow.ArrowNavigatableTree",
        "name": "withoutNav",
        "normalized": "a(b c)(b c)-\u003ea(d c)(d c)",
        "package": "hxt",
        "partial": "Nav",
        "signature": "a(t b)(t b)-\u003ea(nt b)(nt b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eArrows for managing an explicit state\n\u003c/p\u003e\u003cp\u003eState arrows work similar to state monads.\n   A state value is threaded through the application of arrows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowState.html",
        "fct-type": "module",
        "title": "ArrowState"
      },
      "index": {
        "description": "Arrows for managing an explicit state State arrows work similar to state monads state value is threaded through the application of arrows",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "ArrowState",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#t:ArrowState",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for accessing and changing the state component.\n\u003c/p\u003e\u003cp\u003eMulti parameter classes and functional dependencies are required.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowState.html#ArrowState",
        "fct-type": "class",
        "title": "ArrowState"
      },
      "index": {
        "description": "The interface for accessing and changing the state component Multi parameter classes and functional dependencies are required",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "ArrowState",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#v:accessState",
      "description": {
        "fct-descr": "\u003cp\u003eaccess the state with a function using the arrow input\n as data for selecting state components.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "(s -\u003e b -\u003e c) -\u003e a b c",
        "fct-source": "src/Control-Arrow-ArrowState.html#accessState",
        "fct-type": "method",
        "title": "accessState"
      },
      "index": {
        "description": "access the state with function using the arrow input as data for selecting state components",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "accessState",
        "normalized": "(a-\u003eb-\u003ec)-\u003ed b c",
        "package": "hxt",
        "partial": "State",
        "signature": "(s-\u003eb-\u003ec)-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#v:changeState",
      "description": {
        "fct-descr": "\u003cp\u003echange the state of a state arrow by applying a function\n for computing a new state from the old and the arrow input.\n Result is the arrow input\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "(s -\u003e b -\u003e s) -\u003e a b b",
        "fct-source": "src/Control-Arrow-ArrowState.html#changeState",
        "fct-type": "method",
        "title": "changeState"
      },
      "index": {
        "description": "change the state of state arrow by applying function for computing new state from the old and the arrow input Result is the arrow input",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "changeState",
        "normalized": "(a-\u003eb-\u003ea)-\u003ec b b",
        "package": "hxt",
        "partial": "State",
        "signature": "(s-\u003eb-\u003es)-\u003ea b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#v:getState",
      "description": {
        "fct-descr": "\u003cp\u003eread the complete state, ignore arrow input\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e getState = accessState (\\ s x -\u003e s) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "a b s",
        "fct-source": "src/Control-Arrow-ArrowState.html#getState",
        "fct-type": "method",
        "title": "getState"
      },
      "index": {
        "description": "read the complete state ignore arrow input definition getState accessState",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "getState",
        "normalized": "",
        "package": "hxt",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#v:nextState",
      "description": {
        "fct-descr": "\u003cp\u003echange state (and ignore input) and return new state\n\u003c/p\u003e\u003cp\u003econvenience function,\n usefull for generating e.g. unique identifiers:\n\u003c/p\u003e\u003cp\u003eexample with SLA state list arrows\n\u003c/p\u003e\u003cpre\u003e newId :: SLA Int b String\n newId = nextState (+1)\n         \u003e\u003e\u003e\n         arr (('#':) . show)\n\n runSLA 0 (newId \u003c+\u003e newId \u003c+\u003e newId) undefined\n   = [\"#1\", \"#2\", \"#3\"]\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "(s -\u003e s) -\u003e a b s",
        "fct-source": "src/Control-Arrow-ArrowState.html#nextState",
        "fct-type": "method",
        "title": "nextState"
      },
      "index": {
        "description": "change state and ignore input and return new state convenience function usefull for generating e.g unique identifiers example with SLA state list arrows newId SLA Int String newId nextState arr show runSLA newId newId newId undefined",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "nextState",
        "normalized": "(a-\u003ea)-\u003eb c a",
        "package": "hxt",
        "partial": "State",
        "signature": "(s-\u003es)-\u003ea b s"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowState.html#v:setState",
      "description": {
        "fct-descr": "\u003cp\u003eoverwrite the old state\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e setState = changeState (\\ s x -\u003e x) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowState",
        "fct-package": "hxt",
        "fct-signature": "a s s",
        "fct-source": "src/Control-Arrow-ArrowState.html#setState",
        "fct-type": "method",
        "title": "setState"
      },
      "index": {
        "description": "overwrite the old state definition setState changeState",
        "hierarchy": "Control Arrow ArrowState",
        "module": "Control.Arrow.ArrowState",
        "name": "setState",
        "normalized": "",
        "package": "hxt",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eList arrows for tree processing.\n\u003c/p\u003e\u003cp\u003eTrees that implement the \u003ca\u003eData.Tree.Class\u003c/a\u003e interface, can be processed\n   with these arrows.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ArrowTree.html",
        "fct-type": "module",
        "title": "ArrowTree"
      },
      "index": {
        "description": "List arrows for tree processing Trees that implement the Data.Tree.Class interface can be processed with these arrows",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "ArrowTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#t:ArrowTree",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for tree arrows\n\u003c/p\u003e\u003cp\u003eall functions have default implementations\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-Arrow-ArrowTree.html#ArrowTree",
        "fct-type": "class",
        "title": "ArrowTree"
      },
      "index": {
        "description": "The interface for tree arrows all functions have default implementations",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "ArrowTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#t:Tree",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for trees\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Tree-Class.html#Tree",
        "fct-type": "class",
        "title": "Tree"
      },
      "index": {
        "description": "The interface for trees",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "Tree",
        "normalized": "",
        "package": "hxt",
        "partial": "Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:-47--47--62-",
      "description": {
        "fct-descr": "\u003cp\u003epronounced \"double slash\", meaning g arbitrarily deep inside f\n\u003c/p\u003e\u003cp\u003edefined as \u003ccode\u003e f //\u003e g = f \u003e\u003e\u003e getChildren \u003e\u003e\u003e deep g \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e hasName \"html\" //\u003e hasName \"table\" \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eThis expression selects\n all top level \"table\" elements within an \"html\" element, an expression.\n Attantion: This does not correspond\n to the XPath selection path \"html//table\". The latter on matches all table elements\n even nested ones, but \u003ccode\u003e//\u003e\u003c/code\u003e gives in many cases the appropriate functionality.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a b (t c) -\u003e a (t c) d -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowTree.html#%2F%2F%3E",
        "fct-type": "method",
        "title": "(//\u003e)"
      },
      "index": {
        "description": "pronounced double slash meaning arbitrarily deep inside defined as getChildren deep example hasName html hasName table This expression selects all top level table elements within an html element an expression Attantion This does not correspond to the XPath selection path html table The latter on matches all table elements even nested ones but gives in many cases the appropriate functionality",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "(//\u003e) //\u003e",
        "normalized": "a b(c d)-\u003ea(c d)e-\u003ea b e",
        "package": "hxt",
        "partial": "",
        "signature": "a b(t c)-\u003ea(t c)d-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:-47--62-",
      "description": {
        "fct-descr": "\u003cp\u003epronounced \"slash\", meaning g inside f\n\u003c/p\u003e\u003cp\u003edefined as \u003ccode\u003e f /\u003e g = f \u003e\u003e\u003e getChildren \u003e\u003e\u003e g \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e hasName \"html\" /\u003e hasName \"body\" /\u003e hasName \"h1\" \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eThis expression selects\n all \"h1\" elements in the \"body\" element of an \"html\" element, an expression, that\n corresponds 1-1 to the XPath selection path \"html/body/h1\"\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a b (t c) -\u003e a (t c) d -\u003e a b d",
        "fct-source": "src/Control-Arrow-ArrowTree.html#%2F%3E",
        "fct-type": "method",
        "title": "(/\u003e)"
      },
      "index": {
        "description": "pronounced slash meaning inside defined as getChildren example hasName html hasName body hasName h1 This expression selects all h1 elements in the body element of an html element an expression that corresponds to the XPath selection path html body h1",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "(/\u003e) /\u003e",
        "normalized": "a b(c d)-\u003ea(c d)e-\u003ea b e",
        "package": "hxt",
        "partial": "",
        "signature": "a b(t c)-\u003ea(t c)d-\u003ea b d"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:-60--47-",
      "description": {
        "fct-descr": "\u003cp\u003epronounced \"outside\" meaning f containing g\n\u003c/p\u003e\u003cp\u003edefined as \u003ccode\u003e f \u003c/ g = f `containing` (getChildren \u003e\u003e\u003e g) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#%3C%2F",
        "fct-type": "method",
        "title": "(\u003c/)"
      },
      "index": {
        "description": "pronounced outside meaning containing defined as containing getChildren",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "(\u003c/) \u003c/",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:changeChildren",
      "description": {
        "fct-descr": "\u003cp\u003eedit the children of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "([t b] -\u003e [t b]) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#changeChildren",
        "fct-type": "method",
        "title": "changeChildren"
      },
      "index": {
        "description": "edit the children of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "changeChildren",
        "normalized": "([a b]-\u003e[a b])-\u003ec(a b)(a b)",
        "package": "hxt",
        "partial": "Children",
        "signature": "([t b]-\u003e[t b])-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:changeNode",
      "description": {
        "fct-descr": "\u003cp\u003eedit the attribute of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#changeNode",
        "fct-type": "method",
        "title": "changeNode"
      },
      "index": {
        "description": "edit the attribute of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "changeNode",
        "normalized": "(a-\u003ea)-\u003eb(c a)(c a)",
        "package": "hxt",
        "partial": "Node",
        "signature": "(b-\u003eb)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:deep",
      "description": {
        "fct-descr": "\u003cp\u003erecursively searches a whole tree for subtrees, for which a predicate holds.\n The search is performed top down. When a tree is found, this becomes an element of the result\n list. The tree found is not further examined for any subtress, for which the predicate also could hold.\n See \u003ccode\u003e\u003ca\u003emulti\u003c/a\u003e\u003c/code\u003e for this kind of search.\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e deep isHtmlTable \u003c/code\u003e selects all top level table elements in a document\n (with an appropriate definition for isHtmlTable) but no tables occuring within a table cell.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) c -\u003e a (t b) c",
        "fct-source": "src/Control-Arrow-ArrowTree.html#deep",
        "fct-type": "method",
        "title": "deep"
      },
      "index": {
        "description": "recursively searches whole tree for subtrees for which predicate holds The search is performed top down When tree is found this becomes an element of the result list The tree found is not further examined for any subtress for which the predicate also could hold See multi for this kind of search example deep isHtmlTable selects all top level table elements in document with an appropriate definition for isHtmlTable but no tables occuring within table cell",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "deep",
        "normalized": "a(b c)d-\u003ea(b c)d",
        "package": "hxt",
        "partial": "",
        "signature": "a(t b)c-\u003ea(t b)c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:deepest",
      "description": {
        "fct-descr": "\u003cp\u003erecursively searches a whole tree for subrees, for which a predicate holds.\n The search is performed bottom up.\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e deepest isHtmlTable \u003c/code\u003e selects all innermost table elements in a document\n but no table elements containing tables. See \u003ccode\u003e\u003ca\u003edeep\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emulti\u003c/a\u003e\u003c/code\u003e for other search strategies.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) c -\u003e a (t b) c",
        "fct-source": "src/Control-Arrow-ArrowTree.html#deepest",
        "fct-type": "method",
        "title": "deepest"
      },
      "index": {
        "description": "recursively searches whole tree for subrees for which predicate holds The search is performed bottom up example deepest isHtmlTable selects all innermost table elements in document but no table elements containing tables See deep and multi for other search strategies",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "deepest",
        "normalized": "a(b c)d-\u003ea(b c)d",
        "package": "hxt",
        "partial": "",
        "signature": "a(t b)c-\u003ea(t b)c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:getChildren",
      "description": {
        "fct-descr": "\u003cp\u003eselect the children of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#getChildren",
        "fct-type": "method",
        "title": "getChildren"
      },
      "index": {
        "description": "select the children of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "getChildren",
        "normalized": "",
        "package": "hxt",
        "partial": "Children",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:getNode",
      "description": {
        "fct-descr": "\u003cp\u003eselect the node info of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) b",
        "fct-source": "src/Control-Arrow-ArrowTree.html#getNode",
        "fct-type": "method",
        "title": "getNode"
      },
      "index": {
        "description": "select the node info of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "getNode",
        "normalized": "",
        "package": "hxt",
        "partial": "Node",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:hasNode",
      "description": {
        "fct-descr": "\u003cp\u003eselect the attribute of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e Bool) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#hasNode",
        "fct-type": "method",
        "title": "hasNode"
      },
      "index": {
        "description": "select the attribute of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "hasNode",
        "normalized": "(a-\u003eBool)-\u003eb(c a)(c a)",
        "package": "hxt",
        "partial": "Node",
        "signature": "(b-\u003eBool)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:insertChildrenAfter",
      "description": {
        "fct-descr": "\u003cp\u003esimilar to \u003ccode\u003e\u003ca\u003einsertChildrenAt\u003c/a\u003e\u003c/code\u003e, but the insertion position is searched with a predicate\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#insertChildrenAfter",
        "fct-type": "method",
        "title": "insertChildrenAfter"
      },
      "index": {
        "description": "similar to insertChildrenAt but the insertion position is searched with predicate",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "insertChildrenAfter",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Children After",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:insertChildrenAt",
      "description": {
        "fct-descr": "\u003cp\u003ecomputes a list of trees by applying an arrow to the input\n and inserts this list in front of index i in the list of children\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e insertChildrenAt 0 (deep isCmt) \u003c/code\u003e selects all subtrees for which isCmt holds\n and copies theses in front of the existing children\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#insertChildrenAt",
        "fct-type": "method",
        "title": "insertChildrenAt"
      },
      "index": {
        "description": "computes list of trees by applying an arrow to the input and inserts this list in front of index in the list of children example insertChildrenAt deep isCmt selects all subtrees for which isCmt holds and copies theses in front of the existing children",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "insertChildrenAt",
        "normalized": "Int-\u003ea(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Children At",
        "signature": "Int-\u003ea(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:insertTreeTemplate",
      "description": {
        "fct-descr": "\u003cp\u003ean arrow for inserting a whole subtree with some holes in it (a template)\n into a document. The holes can be filled with contents from the input.\n\u003c/p\u003e\u003cp\u003eExample\n\u003c/p\u003e\u003cpre\u003e insertTreeTemplateTest :: ArrowXml a =\u003e a b XmlTree\n insertTreeTemplateTest\n     = doc\n       \u003e\u003e\u003e\n       insertTreeTemplate template pattern\n     where\n     doc                                                                -- the input data\n        = constA \"\u003cx\u003e\u003cy\u003eThe Title\u003c/y\u003e\u003cz\u003eThe content\u003c/z\u003e\u003c/x\u003e\"\n          \u003e\u003e\u003e xread\n     template                                                           -- the output template with 2 holes: xxx and yyy\n        = constA \"\u003chtml\u003e\u003chead\u003e\u003ctitle\u003exxx\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eyyy\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"\n          \u003e\u003e\u003e xread\n     pattern\n        = [ hasText (== \"xxx\")                                          -- fill the xxx hole with the input contents from element \"x/y\"\n            :-\u003e ( getChildren \u003e\u003e\u003e hasName \"y\" \u003e\u003e\u003e deep isText )\n\n          , hasText (== \"yyy\")                                          -- fill the yyy hole with the input contents from element \"x/z\"\n            :-\u003e ( getChildren \u003e\u003e\u003e hasName \"z\" \u003e\u003e\u003e getChildren )\n          ]\n\u003c/pre\u003e\u003cp\u003ecomputes the XML tree for the following document\n\u003c/p\u003e\u003cpre\u003e \"\u003chtml\u003e\u003chead\u003e\u003ctitle\u003eThe Title\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eThe content\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"\n\u003c/pre\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e [IfThen (a (t b) c) (a (t b) (t b))] -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#insertTreeTemplate",
        "fct-type": "method",
        "title": "insertTreeTemplate"
      },
      "index": {
        "description": "an arrow for inserting whole subtree with some holes in it template into document The holes can be filled with contents from the input Example insertTreeTemplateTest ArrowXml XmlTree insertTreeTemplateTest doc insertTreeTemplate template pattern where doc the input data constA The Title The content xread template the output template with holes xxx and yyy constA html head title xxx title head body h1 yyy h1 body html xread pattern hasText xxx fill the xxx hole with the input contents from element getChildren hasName deep isText hasText yyy fill the yyy hole with the input contents from element getChildren hasName getChildren computes the XML tree for the following document html head title The Title title head body h1 The content h1 body html",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "insertTreeTemplate",
        "normalized": "a(b c)(b c)-\u003e[IfThen(a(b c)d)(a(b c)(b c))]-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Tree Template",
        "signature": "a(t b)(t b)-\u003e[IfThen(a(t b)c)(a(t b)(t b))]-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:mkLeaf",
      "description": {
        "fct-descr": "\u003cp\u003econstruct a leaf\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "b -\u003e a c (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#mkLeaf",
        "fct-type": "method",
        "title": "mkLeaf"
      },
      "index": {
        "description": "construct leaf",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "mkLeaf",
        "normalized": "a-\u003eb c(d a)",
        "package": "hxt",
        "partial": "Leaf",
        "signature": "b-\u003ea c(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:mkTree",
      "description": {
        "fct-descr": "\u003cp\u003econstruct an inner node\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "b -\u003e [t b] -\u003e a c (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#mkTree",
        "fct-type": "method",
        "title": "mkTree"
      },
      "index": {
        "description": "construct an inner node",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "mkTree",
        "normalized": "a-\u003e[b a]-\u003ec d(b a)",
        "package": "hxt",
        "partial": "Tree",
        "signature": "b-\u003e[t b]-\u003ea c(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:multi",
      "description": {
        "fct-descr": "\u003cp\u003erecursively searches a whole tree for subtrees, for which a predicate holds.\n The search is performed top down. All nodes of the tree are searched, even within the\n subtrees of trees for which the predicate holds.\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e multi isHtmlTable \u003c/code\u003e selects all table elements, even nested ones.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) c -\u003e a (t b) c",
        "fct-source": "src/Control-Arrow-ArrowTree.html#multi",
        "fct-type": "method",
        "title": "multi"
      },
      "index": {
        "description": "recursively searches whole tree for subtrees for which predicate holds The search is performed top down All nodes of the tree are searched even within the subtrees of trees for which the predicate holds example multi isHtmlTable selects all table elements even nested ones",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "multi",
        "normalized": "a(b c)d-\u003ea(b c)d",
        "package": "hxt",
        "partial": "",
        "signature": "a(t b)c-\u003ea(t b)c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:processBottomUp",
      "description": {
        "fct-descr": "\u003cp\u003erecursively transforms a whole tree by applying an arrow to all subtrees,\n this is done bottom up depth first, leaves first, root as last tree\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e processBottomUp (getChildren `when` isHtmlFont) \u003c/code\u003e removes all font tags in a HTML document, even nested ones\n (with an appropriate definition of isHtmlFont)\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#processBottomUp",
        "fct-type": "method",
        "title": "processBottomUp"
      },
      "index": {
        "description": "recursively transforms whole tree by applying an arrow to all subtrees this is done bottom up depth first leaves first root as last tree example processBottomUp getChildren when isHtmlFont removes all font tags in HTML document even nested ones with an appropriate definition of isHtmlFont",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "processBottomUp",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Bottom Up",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:processBottomUpWhenNot",
      "description": {
        "fct-descr": "\u003cp\u003erecursively transforms a whole tree by applying an arrow to all subtrees,\n but transformation stops when a predicte does not hold for a subtree,\n leaves are transformed first\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#processBottomUpWhenNot",
        "fct-type": "method",
        "title": "processBottomUpWhenNot"
      },
      "index": {
        "description": "recursively transforms whole tree by applying an arrow to all subtrees but transformation stops when predicte does not hold for subtree leaves are transformed first",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "processBottomUpWhenNot",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Bottom Up When Not",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:processChildren",
      "description": {
        "fct-descr": "\u003cp\u003eapply an arrow element wise to all children of the root of a tree\n collect these results and substitute the children with this result\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e processChildren isText \u003c/code\u003e deletes all subtrees, for which isText does not hold\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e processChildren (none `when` isCmt) \u003c/code\u003e removes all children, for which isCmt holds\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#processChildren",
        "fct-type": "method",
        "title": "processChildren"
      },
      "index": {
        "description": "apply an arrow element wise to all children of the root of tree collect these results and substitute the children with this result example processChildren isText deletes all subtrees for which isText does not hold example processChildren none when isCmt removes all children for which isCmt holds",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "processChildren",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Children",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:processTopDown",
      "description": {
        "fct-descr": "\u003cp\u003esimilar to \u003ccode\u003e\u003ca\u003eprocessBottomUp\u003c/a\u003e\u003c/code\u003e, but recursively transforms a whole tree by applying an arrow to all subtrees\n with a top down depth first traversal strategie. In many cases \u003ccode\u003e\u003ca\u003eprocessBottomUp\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eprocessTopDown\u003c/a\u003e\u003c/code\u003e\n give same results.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#processTopDown",
        "fct-type": "method",
        "title": "processTopDown"
      },
      "index": {
        "description": "similar to processBottomUp but recursively transforms whole tree by applying an arrow to all subtrees with top down depth first traversal strategie In many cases processBottomUp and processTopDown give same results",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "processTopDown",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Top Down",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:processTopDownUntil",
      "description": {
        "fct-descr": "\u003cp\u003erecursively transforms a whole tree by applying an arrow to all subtrees,\n but transformation stops when a tree is successfully transformed.\n the transformation is done top down\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e processTopDownUntil (isHtmlTable `guards` tranformTable) \u003c/code\u003e\n transforms all top level table elements into something else, but inner tables remain unchanged\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#processTopDownUntil",
        "fct-type": "method",
        "title": "processTopDownUntil"
      },
      "index": {
        "description": "recursively transforms whole tree by applying an arrow to all subtrees but transformation stops when tree is successfully transformed the transformation is done top down example processTopDownUntil isHtmlTable guards tranformTable transforms all top level table elements into something else but inner tables remain unchanged",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "processTopDownUntil",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Top Down Until",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:replaceChildren",
      "description": {
        "fct-descr": "\u003cp\u003esimilar to processChildren, but the new children are computed by processing\n the whole input tree\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003e replaceChildren (deep isText) \u003c/code\u003e selects all subtrees for which isText holds\n and substitutes the children component of the root node with this list\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "a (t b) (t b) -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#replaceChildren",
        "fct-type": "method",
        "title": "replaceChildren"
      },
      "index": {
        "description": "similar to processChildren but the new children are computed by processing the whole input tree example replaceChildren deep isText selects all subtrees for which isText holds and substitutes the children component of the root node with this list",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "replaceChildren",
        "normalized": "a(b c)(b c)-\u003ea(b c)(b c)",
        "package": "hxt",
        "partial": "Children",
        "signature": "a(t b)(t b)-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:setChildren",
      "description": {
        "fct-descr": "\u003cp\u003esubstitute the children of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "[t b] -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#setChildren",
        "fct-type": "method",
        "title": "setChildren"
      },
      "index": {
        "description": "substitute the children of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "setChildren",
        "normalized": "[a b]-\u003ec(a b)(a b)",
        "package": "hxt",
        "partial": "Children",
        "signature": "[t b]-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ArrowTree.html#v:setNode",
      "description": {
        "fct-descr": "\u003cp\u003esubstitute the attribute of the root of a tree\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ArrowTree",
        "fct-package": "hxt",
        "fct-signature": "b -\u003e a (t b) (t b)",
        "fct-source": "src/Control-Arrow-ArrowTree.html#setNode",
        "fct-type": "method",
        "title": "setNode"
      },
      "index": {
        "description": "substitute the attribute of the root of tree",
        "hierarchy": "Control Arrow ArrowTree",
        "module": "Control.Arrow.ArrowTree",
        "name": "setNode",
        "normalized": "a-\u003eb(c a)(c a)",
        "package": "hxt",
        "partial": "Node",
        "signature": "b-\u003ea(t b)(t b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOListArrow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eImplementation of pure list arrows with IO\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.IOListArrow",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-IOListArrow.html",
        "fct-type": "module",
        "title": "IOListArrow"
      },
      "index": {
        "description": "Implementation of pure list arrows with IO",
        "hierarchy": "Control Arrow IOListArrow",
        "module": "Control.Arrow.IOListArrow",
        "name": "IOListArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "IOList Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOListArrow.html#t:IOLA",
      "description": {
        "fct-descr": "\u003cp\u003elist arrow combined with IO monad\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.IOListArrow",
        "fct-package": "hxt",
        "fct-signature": "newtype",
        "fct-source": "src/Control-Arrow-IOListArrow.html#IOLA",
        "fct-type": "newtype",
        "title": "IOLA"
      },
      "index": {
        "description": "list arrow combined with IO monad",
        "hierarchy": "Control Arrow IOListArrow",
        "module": "Control.Arrow.IOListArrow",
        "name": "IOLA",
        "normalized": "",
        "package": "hxt",
        "partial": "IOLA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOListArrow.html#v:IOLA",
      "description": {
        "fct-module": "Control.Arrow.IOListArrow",
        "fct-package": "hxt",
        "fct-signature": "IOLA",
        "fct-source": "src/Control-Arrow-IOListArrow.html#IOLA",
        "fct-type": "function",
        "title": "IOLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow IOListArrow",
        "module": "Control.Arrow.IOListArrow",
        "name": "IOLA",
        "normalized": "",
        "package": "hxt",
        "partial": "IOLA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOListArrow.html#v:runIOLA",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Control.Arrow.IOListArrow",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e IO [b]",
        "fct-source": "src/Control-Arrow-IOListArrow.html#IOLA",
        "fct-type": "function",
        "title": "runIOLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow IOListArrow",
        "module": "Control.Arrow.IOListArrow",
        "name": "runIOLA",
        "normalized": "a-\u003eIO[b]",
        "package": "hxt",
        "partial": "IOLA",
        "signature": "a-\u003eIO[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOStateListArrow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eImplementation of arrows with IO and a state\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.IOStateListArrow",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-IOStateListArrow.html",
        "fct-type": "module",
        "title": "IOStateListArrow"
      },
      "index": {
        "description": "Implementation of arrows with IO and state",
        "hierarchy": "Control Arrow IOStateListArrow",
        "module": "Control.Arrow.IOStateListArrow",
        "name": "IOStateListArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "IOState List Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOStateListArrow.html#t:IOSLA",
      "description": {
        "fct-descr": "\u003cp\u003elist arrow combined with a state and the IO monad\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.IOStateListArrow",
        "fct-package": "hxt",
        "fct-signature": "newtype",
        "fct-source": "src/Control-Arrow-IOStateListArrow.html#IOSLA",
        "fct-type": "newtype",
        "title": "IOSLA"
      },
      "index": {
        "description": "list arrow combined with state and the IO monad",
        "hierarchy": "Control Arrow IOStateListArrow",
        "module": "Control.Arrow.IOStateListArrow",
        "name": "IOSLA",
        "normalized": "",
        "package": "hxt",
        "partial": "IOSLA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOStateListArrow.html#v:IOSLA",
      "description": {
        "fct-module": "Control.Arrow.IOStateListArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSLA",
        "fct-source": "src/Control-Arrow-IOStateListArrow.html#IOSLA",
        "fct-type": "function",
        "title": "IOSLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow IOStateListArrow",
        "module": "Control.Arrow.IOStateListArrow",
        "name": "IOSLA",
        "normalized": "",
        "package": "hxt",
        "partial": "IOSLA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOStateListArrow.html#v:liftSt",
      "description": {
        "fct-descr": "\u003cp\u003elift the state of an IOSLA arrow to a state with an additional component.\n\u003c/p\u003e\u003cp\u003eThis is uesful, when running predefined IO arrows, e.g. for document input,\n in a context with a more complex state component.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.IOStateListArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSLA s1 b c -\u003e IOSLA (s1, s2) b c",
        "fct-source": "src/Control-Arrow-IOStateListArrow.html#liftSt",
        "fct-type": "function",
        "title": "liftSt"
      },
      "index": {
        "description": "lift the state of an IOSLA arrow to state with an additional component This is uesful when running predefined IO arrows e.g for document input in context with more complex state component",
        "hierarchy": "Control Arrow IOStateListArrow",
        "module": "Control.Arrow.IOStateListArrow",
        "name": "liftSt",
        "normalized": "IOSLA a b c-\u003eIOSLA(a,a)b c",
        "package": "hxt",
        "partial": "St",
        "signature": "IOSLA s b c-\u003eIOSLA(s,s)b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOStateListArrow.html#v:runIOSLA",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Control.Arrow.IOStateListArrow",
        "fct-package": "hxt",
        "fct-signature": "s -\u003e a -\u003e IO (s, [b])",
        "fct-source": "src/Control-Arrow-IOStateListArrow.html#IOSLA",
        "fct-type": "function",
        "title": "runIOSLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow IOStateListArrow",
        "module": "Control.Arrow.IOStateListArrow",
        "name": "runIOSLA",
        "normalized": "a-\u003eb-\u003eIO(a,[c])",
        "package": "hxt",
        "partial": "IOSLA",
        "signature": "s-\u003ea-\u003eIO(s,[b])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-IOStateListArrow.html#v:runSt",
      "description": {
        "fct-descr": "\u003cp\u003erun an arrow with augmented state in the context of a simple state arrow.\n An initial value for the new state component is needed.\n\u003c/p\u003e\u003cp\u003eThis is useful, when running an arrow with an extra environment component, e.g.\n for namespace handling in XML.\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.IOStateListArrow",
        "fct-package": "hxt",
        "fct-signature": "s2 -\u003e IOSLA (s1, s2) b c -\u003e IOSLA s1 b c",
        "fct-source": "src/Control-Arrow-IOStateListArrow.html#runSt",
        "fct-type": "function",
        "title": "runSt"
      },
      "index": {
        "description": "run an arrow with augmented state in the context of simple state arrow An initial value for the new state component is needed This is useful when running an arrow with an extra environment component e.g for namespace handling in XML",
        "hierarchy": "Control Arrow IOStateListArrow",
        "module": "Control.Arrow.IOStateListArrow",
        "name": "runSt",
        "normalized": "a-\u003eIOSLA(a,a)b c-\u003eIOSLA a b c",
        "package": "hxt",
        "partial": "St",
        "signature": "s-\u003eIOSLA(s,s)b c-\u003eIOSLA s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ListArrow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eImplementation of pure list arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ListArrow",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ListArrow.html",
        "fct-type": "module",
        "title": "ListArrow"
      },
      "index": {
        "description": "Implementation of pure list arrows",
        "hierarchy": "Control Arrow ListArrow",
        "module": "Control.Arrow.ListArrow",
        "name": "ListArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "List Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ListArrow.html#t:LA",
      "description": {
        "fct-descr": "\u003cp\u003epure list arrow data type\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ListArrow",
        "fct-package": "hxt",
        "fct-signature": "newtype",
        "fct-source": "src/Control-Arrow-ListArrow.html#LA",
        "fct-type": "newtype",
        "title": "LA"
      },
      "index": {
        "description": "pure list arrow data type",
        "hierarchy": "Control Arrow ListArrow",
        "module": "Control.Arrow.ListArrow",
        "name": "LA",
        "normalized": "",
        "package": "hxt",
        "partial": "LA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ListArrow.html#v:LA",
      "description": {
        "fct-module": "Control.Arrow.ListArrow",
        "fct-package": "hxt",
        "fct-signature": "LA",
        "fct-source": "src/Control-Arrow-ListArrow.html#LA",
        "fct-type": "function",
        "title": "LA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ListArrow",
        "module": "Control.Arrow.ListArrow",
        "name": "LA",
        "normalized": "",
        "package": "hxt",
        "partial": "LA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ListArrow.html#v:fromLA",
      "description": {
        "fct-descr": "\u003cp\u003econversion of pure list arrows into other possibly more complex\n list arrows\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.ListArrow",
        "fct-package": "hxt",
        "fct-signature": "LA b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-ListArrow.html#fromLA",
        "fct-type": "function",
        "title": "fromLA"
      },
      "index": {
        "description": "conversion of pure list arrows into other possibly more complex list arrows",
        "hierarchy": "Control Arrow ListArrow",
        "module": "Control.Arrow.ListArrow",
        "name": "fromLA",
        "normalized": "LA a b-\u003ec a b",
        "package": "hxt",
        "partial": "LA",
        "signature": "LA b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ListArrow.html#v:runLA",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Control.Arrow.ListArrow",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e [b]",
        "fct-source": "src/Control-Arrow-ListArrow.html#LA",
        "fct-type": "function",
        "title": "runLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow ListArrow",
        "module": "Control.Arrow.ListArrow",
        "name": "runLA",
        "normalized": "a-\u003e[b]",
        "package": "hxt",
        "partial": "LA",
        "signature": "a-\u003e[b]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-ListArrows.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eModule for importing all list arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.ListArrows",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-ListArrows.html",
        "fct-type": "module",
        "title": "ListArrows"
      },
      "index": {
        "description": "Module for importing all list arrows",
        "hierarchy": "Control Arrow ListArrows",
        "module": "Control.Arrow.ListArrows",
        "name": "ListArrows",
        "normalized": "",
        "package": "hxt",
        "partial": "List Arrows",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-NTreeEdit.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003earrows for efficient editing of rose trees\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.NTreeEdit",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-NTreeEdit.html",
        "fct-type": "module",
        "title": "NTreeEdit"
      },
      "index": {
        "description": "arrows for efficient editing of rose trees",
        "hierarchy": "Control Arrow NTreeEdit",
        "module": "Control.Arrow.NTreeEdit",
        "name": "NTreeEdit",
        "normalized": "",
        "package": "hxt",
        "partial": "NTree Edit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-NTreeEdit.html#v:editNTreeA",
      "description": {
        "fct-descr": "\u003cp\u003eEdit parts of a rose tree\n\u003c/p\u003e\u003cp\u003eThe subtrees to be modified are selected by the first part of the IfThen pairs\n The modification by the second part\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.NTreeEdit",
        "fct-package": "hxt",
        "fct-signature": "[IfThen (LA (NTree b) c) (LA (NTree b) (NTree b))] -\u003e LA (NTree b) (NTree b)",
        "fct-source": "src/Control-Arrow-NTreeEdit.html#editNTreeA",
        "fct-type": "function",
        "title": "editNTreeA"
      },
      "index": {
        "description": "Edit parts of rose tree The subtrees to be modified are selected by the first part of the IfThen pairs The modification by the second part",
        "hierarchy": "Control Arrow NTreeEdit",
        "module": "Control.Arrow.NTreeEdit",
        "name": "editNTreeA",
        "normalized": "[IfThen(LA(NTree a)b)(LA(NTree a)(NTree a))]-\u003eLA(NTree a)(NTree a)",
        "package": "hxt",
        "partial": "NTree",
        "signature": "[IfThen(LA(NTree b)c)(LA(NTree b)(NTree b))]-\u003eLA(NTree b)(NTree b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-NTreeEdit.html#v:fmapNTreeA",
      "description": {
        "fct-module": "Control.Arrow.NTreeEdit",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e Maybe b) -\u003e LA (NTree b) (NTree b)",
        "fct-source": "src/Control-Arrow-NTreeEdit.html#fmapNTreeA",
        "fct-type": "function",
        "title": "fmapNTreeA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow NTreeEdit",
        "module": "Control.Arrow.NTreeEdit",
        "name": "fmapNTreeA",
        "normalized": "(a-\u003eMaybe a)-\u003eLA(NTree a)(NTree a)",
        "package": "hxt",
        "partial": "NTree",
        "signature": "(b-\u003eMaybe b)-\u003eLA(NTree b)(NTree b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-StateListArrow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eImplementation of list arrows with a state\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.Arrow.StateListArrow",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-Arrow-StateListArrow.html",
        "fct-type": "module",
        "title": "StateListArrow"
      },
      "index": {
        "description": "Implementation of list arrows with state",
        "hierarchy": "Control Arrow StateListArrow",
        "module": "Control.Arrow.StateListArrow",
        "name": "StateListArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "State List Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-StateListArrow.html#t:SLA",
      "description": {
        "fct-descr": "\u003cp\u003elist arrow combined with a state\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.StateListArrow",
        "fct-package": "hxt",
        "fct-signature": "newtype",
        "fct-source": "src/Control-Arrow-StateListArrow.html#SLA",
        "fct-type": "newtype",
        "title": "SLA"
      },
      "index": {
        "description": "list arrow combined with state",
        "hierarchy": "Control Arrow StateListArrow",
        "module": "Control.Arrow.StateListArrow",
        "name": "SLA",
        "normalized": "",
        "package": "hxt",
        "partial": "SLA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-StateListArrow.html#v:SLA",
      "description": {
        "fct-module": "Control.Arrow.StateListArrow",
        "fct-package": "hxt",
        "fct-signature": "SLA",
        "fct-source": "src/Control-Arrow-StateListArrow.html#SLA",
        "fct-type": "function",
        "title": "SLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow StateListArrow",
        "module": "Control.Arrow.StateListArrow",
        "name": "SLA",
        "normalized": "",
        "package": "hxt",
        "partial": "SLA",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-StateListArrow.html#v:fromSLA",
      "description": {
        "fct-descr": "\u003cp\u003econversion of state list arrows into arbitray other\n list arrows.\n\u003c/p\u003e\u003cp\u003eallows running a state list arrow within another arrow:\n\u003c/p\u003e\u003cp\u003eexample:\n\u003c/p\u003e\u003cpre\u003e ... \u003e\u003e\u003e fromSLA 0 (... setState ... getState ... ) \u003e\u003e\u003e ...\n\u003c/pre\u003e\u003cp\u003eruns a state arrow with initial state 0 (e..g. an Int) within\n another arrow sequence\n\u003c/p\u003e",
        "fct-module": "Control.Arrow.StateListArrow",
        "fct-package": "hxt",
        "fct-signature": "s -\u003e SLA s b c -\u003e a b c",
        "fct-source": "src/Control-Arrow-StateListArrow.html#fromSLA",
        "fct-type": "function",
        "title": "fromSLA"
      },
      "index": {
        "description": "conversion of state list arrows into arbitray other list arrows allows running state list arrow within another arrow example fromSLA setState getState runs state arrow with initial state e..g an Int within another arrow sequence",
        "hierarchy": "Control Arrow StateListArrow",
        "module": "Control.Arrow.StateListArrow",
        "name": "fromSLA",
        "normalized": "a-\u003eSLA a b c-\u003ed b c",
        "package": "hxt",
        "partial": "SLA",
        "signature": "s-\u003eSLA s b c-\u003ea b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-Arrow-StateListArrow.html#v:runSLA",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Control.Arrow.StateListArrow",
        "fct-package": "hxt",
        "fct-signature": "s -\u003e a -\u003e (s, [b])",
        "fct-source": "src/Control-Arrow-StateListArrow.html#SLA",
        "fct-type": "function",
        "title": "runSLA"
      },
      "index": {
        "description": "",
        "hierarchy": "Control Arrow StateListArrow",
        "module": "Control.Arrow.StateListArrow",
        "name": "runSLA",
        "normalized": "a-\u003eb-\u003e(a,[c])",
        "package": "hxt",
        "partial": "SLA",
        "signature": "s-\u003ea-\u003e(s,[b])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eForce evaluation like deepseq in Control.DeepSeq,\n   but control the depth of evaluation.\n   flatseq may evaluate more than seq but less than deepseq\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Control-FlatSeq.html",
        "fct-type": "module",
        "title": "FlatSeq"
      },
      "index": {
        "description": "Force evaluation like deepseq in Control.DeepSeq but control the depth of evaluation flatseq may evaluate more than seq but less than deepseq",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "FlatSeq",
        "normalized": "",
        "package": "hxt",
        "partial": "Flat Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#t:WNFData",
      "description": {
        "fct-descr": "\u003cp\u003eA class of types that can be partially evaluated, but evaluation can be propagated deeper than WHNF\n\u003c/p\u003e",
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Control-FlatSeq.html#WNFData",
        "fct-type": "class",
        "title": "WNFData"
      },
      "index": {
        "description": "class of types that can be partially evaluated but evaluation can be propagated deeper than WHNF",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "WNFData",
        "normalized": "",
        "package": "hxt",
        "partial": "WNFData",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#v:-36--33--33-",
      "description": {
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e b) -\u003e a -\u003e b",
        "fct-source": "src/Control-FlatSeq.html#%24%21%21",
        "fct-type": "function",
        "title": "($!!)"
      },
      "index": {
        "description": "",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "($!!) $!!",
        "normalized": "(a-\u003eb)-\u003ea-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "(a-\u003eb)-\u003ea-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#v:flatseq",
      "description": {
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e b -\u003e b",
        "fct-source": "src/Control-FlatSeq.html#flatseq",
        "fct-type": "function",
        "title": "flatseq"
      },
      "index": {
        "description": "",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "flatseq",
        "normalized": "a-\u003eb-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003eb-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#v:rlnf",
      "description": {
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e ()) -\u003e [a] -\u003e ()",
        "fct-source": "src/Control-FlatSeq.html#rlnf",
        "fct-type": "function",
        "title": "rlnf"
      },
      "index": {
        "description": "",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "rlnf",
        "normalized": "(a-\u003e())-\u003e[a]-\u003e()",
        "package": "hxt",
        "partial": "",
        "signature": "(a-\u003e())-\u003e[a]-\u003e()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#v:rwnf",
      "description": {
        "fct-descr": "\u003cp\u003eDefault for rwnf is reduction to WHNF\n\u003c/p\u003e",
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e ()",
        "fct-source": "src/Control-FlatSeq.html#rwnf",
        "fct-type": "method",
        "title": "rwnf"
      },
      "index": {
        "description": "Default for rwnf is reduction to WHNF",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "rwnf",
        "normalized": "a-\u003e()",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003e()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Control-FlatSeq.html#v:rwnf2",
      "description": {
        "fct-descr": "\u003cp\u003eDefault for rwnf2 is rwnf\n\u003c/p\u003e",
        "fct-module": "Control.FlatSeq",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e ()",
        "fct-source": "src/Control-FlatSeq.html#rwnf2",
        "fct-type": "method",
        "title": "rwnf2"
      },
      "index": {
        "description": "Default for rwnf2 is rwnf",
        "hierarchy": "Control FlatSeq",
        "module": "Control.FlatSeq",
        "name": "rwnf2",
        "normalized": "a-\u003e()",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003e()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSimple key value assocciation list\n   implemented as unordered list of pairs\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-AssocList.html",
        "fct-type": "module",
        "title": "AssocList"
      },
      "index": {
        "description": "Simple key value assocciation list implemented as unordered list of pairs",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "AssocList",
        "normalized": "",
        "package": "hxt",
        "partial": "Assoc List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#t:AssocList",
      "description": {
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Data-AssocList.html#AssocList",
        "fct-type": "type",
        "title": "AssocList"
      },
      "index": {
        "description": "",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "AssocList",
        "normalized": "",
        "package": "hxt",
        "partial": "Assoc List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:addEntries",
      "description": {
        "fct-descr": "\u003cp\u003eadd a whole list of entries with \u003ccode\u003e\u003ca\u003eaddEntry\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "AssocList k v -\u003e AssocList k v -\u003e AssocList k v",
        "fct-source": "src/Data-AssocList.html#addEntries",
        "fct-type": "function",
        "title": "addEntries"
      },
      "index": {
        "description": "add whole list of entries with addEntry",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "addEntries",
        "normalized": "AssocList a b-\u003eAssocList a b-\u003eAssocList a b",
        "package": "hxt",
        "partial": "Entries",
        "signature": "AssocList k v-\u003eAssocList k v-\u003eAssocList k v"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:addEntry",
      "description": {
        "fct-descr": "\u003cp\u003eadd an entry, remove an existing entry before adding the new one at the top of the list, addEntry is strict\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "k -\u003e v -\u003e AssocList k v -\u003e AssocList k v",
        "fct-source": "src/Data-AssocList.html#addEntry",
        "fct-type": "function",
        "title": "addEntry"
      },
      "index": {
        "description": "add an entry remove an existing entry before adding the new one at the top of the list addEntry is strict",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "addEntry",
        "normalized": "a-\u003eb-\u003eAssocList a b-\u003eAssocList a b",
        "package": "hxt",
        "partial": "Entry",
        "signature": "k-\u003ev-\u003eAssocList k v-\u003eAssocList k v"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:delEntries",
      "description": {
        "fct-descr": "\u003cp\u003edelete a list of entries with \u003ccode\u003e\u003ca\u003edelEntry\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "[k] -\u003e AssocList k v -\u003e AssocList k v",
        "fct-source": "src/Data-AssocList.html#delEntries",
        "fct-type": "function",
        "title": "delEntries"
      },
      "index": {
        "description": "delete list of entries with delEntry",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "delEntries",
        "normalized": "[a]-\u003eAssocList a b-\u003eAssocList a b",
        "package": "hxt",
        "partial": "Entries",
        "signature": "[k]-\u003eAssocList k v-\u003eAssocList k v"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:delEntry",
      "description": {
        "fct-descr": "\u003cp\u003edelete an entry, delEntry is strict\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "k -\u003e AssocList k v -\u003e AssocList k v",
        "fct-source": "src/Data-AssocList.html#delEntry",
        "fct-type": "function",
        "title": "delEntry"
      },
      "index": {
        "description": "delete an entry delEntry is strict",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "delEntry",
        "normalized": "a-\u003eAssocList a b-\u003eAssocList a b",
        "package": "hxt",
        "partial": "Entry",
        "signature": "k-\u003eAssocList k v-\u003eAssocList k v"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:hasEntry",
      "description": {
        "fct-descr": "\u003cp\u003etest for existence of a key\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "k -\u003e AssocList k v -\u003e Bool",
        "fct-source": "src/Data-AssocList.html#hasEntry",
        "fct-type": "function",
        "title": "hasEntry"
      },
      "index": {
        "description": "test for existence of key",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "hasEntry",
        "normalized": "a-\u003eAssocList a b-\u003eBool",
        "package": "hxt",
        "partial": "Entry",
        "signature": "k-\u003eAssocList k v-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:lookup1",
      "description": {
        "fct-descr": "\u003cp\u003elookup with empty list (empty string) as default value\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "k -\u003e AssocList k [e] -\u003e [e]",
        "fct-source": "src/Data-AssocList.html#lookup1",
        "fct-type": "function",
        "title": "lookup1"
      },
      "index": {
        "description": "lookup with empty list empty string as default value",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "lookup1",
        "normalized": "a-\u003eAssocList a[b]-\u003e[b]",
        "package": "hxt",
        "partial": "",
        "signature": "k-\u003eAssocList k[e]-\u003e[e]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-AssocList.html#v:lookupDef",
      "description": {
        "fct-descr": "\u003cp\u003elookup with default value\n\u003c/p\u003e",
        "fct-module": "Data.AssocList",
        "fct-package": "hxt",
        "fct-signature": "v -\u003e k -\u003e AssocList k v -\u003e v",
        "fct-source": "src/Data-AssocList.html#lookupDef",
        "fct-type": "function",
        "title": "lookupDef"
      },
      "index": {
        "description": "lookup with default value",
        "hierarchy": "Data AssocList",
        "module": "Data.AssocList",
        "name": "lookupDef",
        "normalized": "a-\u003eb-\u003eAssocList b a-\u003ea",
        "package": "hxt",
        "partial": "Def",
        "signature": "v-\u003ek-\u003eAssocList k v-\u003ev"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Atom.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUnique Atoms generated from Strings and\n   managed as flyweights\n\u003c/p\u003e\u003cp\u003eData.Atom can be used for caching and storage optimisation\n   of frequently used strings. An \u003ccode\u003eAtom\u003c/code\u003e is constructed from a \u003ccode\u003eString\u003c/code\u003e.\n   For two equal strings the identical atom is returned.\n\u003c/p\u003e\u003cp\u003eThis module can be used for optimizing memory usage when working with\n   strings or names. Many applications use data types like\n   \u003ccode\u003eMap String SomeAttribute\u003c/code\u003e where a rather fixed set of keys is used.\n   Especially XML applications often work with a limited set of element and attribute names.\n   For these applications it becomes more memory efficient when working with types like\n   \u003ccode\u003eMap Atom SomeAttribute\u003c/code\u003e and convert the keys into atoms before operating\n   on such a map.\n\u003c/p\u003e\u003cp\u003eInternally this module manages a map of atoms. The atoms are internally represented\n   by \u003ccode\u003eByteString\u003c/code\u003es. When creating a new atom from a string, the string is first converted\n   into an UTF8 \u003ccode\u003eWord8\u003c/code\u003e sequence, which is packed into a \u003ccode\u003eByteString\u003c/code\u003e. This \u003ccode\u003eByteString\u003c/code\u003e is looked\n   up in the table of atoms. If it is already there, the value in the map is used as atom, else\n   the new \u003ccode\u003eByteString\u003c/code\u003e is inserted into the map.\n\u003c/p\u003e\u003cp\u003eOf course the implementation of this name cache uses \u003ccode\u003eunsavePerformIO\u003c/code\u003e.\n   The global cache is managed by ue of an \u003ccode\u003eIORef\u003c/code\u003e and atomicModifyIORef.\n\u003c/p\u003e\u003cp\u003eThe following laws hold for atoms\n\u003c/p\u003e\u003cpre\u003e\n s  ==       t =\u003e newAtom s  ==       newAtom t\n s `compare` t =\u003e newAtom s `compare` newAtom t\n show . newAtom == id\n\u003c/pre\u003e\u003cp\u003eEquality test for \u003ccode\u003eAtom\u003c/code\u003es runs in \u003cem\u003eO(1)\u003c/em\u003e, it is just a pointer comarison.\n   The \u003ccode\u003eOrd\u003c/code\u003e comparisons have the same runtime like the \u003ccode\u003eByteString\u003c/code\u003e comparisons.\n   Internally there is an UTF8 comparison, but UTF8 encoding preserves the total order.\n\u003c/p\u003e\u003cp\u003eWarning: The internal cache never shrinks during execution. So using it in a\n   undisciplined way can lead to memory leaks.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Atom",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Atom.html",
        "fct-type": "module",
        "title": "Atom"
      },
      "index": {
        "description": "Unique Atoms generated from Strings and managed as flyweights Data.Atom can be used for caching and storage optimisation of frequently used strings An Atom is constructed from String For two equal strings the identical atom is returned This module can be used for optimizing memory usage when working with strings or names Many applications use data types like Map String SomeAttribute where rather fixed set of keys is used Especially XML applications often work with limited set of element and attribute names For these applications it becomes more memory efficient when working with types like Map Atom SomeAttribute and convert the keys into atoms before operating on such map Internally this module manages map of atoms The atoms are internally represented by ByteString When creating new atom from string the string is first converted into an UTF8 Word8 sequence which is packed into ByteString This ByteString is looked up in the table of atoms If it is already there the value in the map is used as atom else the new ByteString is inserted into the map Of course the implementation of this name cache uses unsavePerformIO The global cache is managed by ue of an IORef and atomicModifyIORef The following laws hold for atoms newAtom newAtom compare newAtom compare newAtom show newAtom id Equality test for Atom runs in it is just pointer comarison The Ord comparisons have the same runtime like the ByteString comparisons Internally there is an UTF8 comparison but UTF8 encoding preserves the total order Warning The internal cache never shrinks during execution So using it in undisciplined way can lead to memory leaks",
        "hierarchy": "Data Atom",
        "module": "Data.Atom",
        "name": "Atom",
        "normalized": "",
        "package": "hxt",
        "partial": "Atom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Atom.html#t:Atom",
      "description": {
        "fct-module": "Data.Atom",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Data-Atom.html#Atom",
        "fct-type": "data",
        "title": "Atom"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Atom",
        "module": "Data.Atom",
        "name": "Atom",
        "normalized": "",
        "package": "hxt",
        "partial": "Atom",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Atom.html#v:newAtom",
      "description": {
        "fct-descr": "\u003cp\u003ecreation of an \u003ccode\u003eAtom\u003c/code\u003e from a \u003ccode\u003eString\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.Atom",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Atom",
        "fct-source": "src/Data-Atom.html#newAtom",
        "fct-type": "function",
        "title": "newAtom"
      },
      "index": {
        "description": "creation of an Atom from String",
        "hierarchy": "Data Atom",
        "module": "Data.Atom",
        "name": "newAtom",
        "normalized": "String-\u003eAtom",
        "package": "hxt",
        "partial": "Atom",
        "signature": "String-\u003eAtom"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Atom.html#v:share",
      "description": {
        "fct-descr": "\u003cp\u003eInsert a \u003ccode\u003eString\u003c/code\u003e into the atom cache and convert the atom back into a \u003ccode\u003eString\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003elocically \u003ccode\u003eshare == id\u003c/code\u003e holds, but internally equal strings share the same memory.\n\u003c/p\u003e",
        "fct-module": "Data.Atom",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Data-Atom.html#share",
        "fct-type": "function",
        "title": "share"
      },
      "index": {
        "description": "Insert String into the atom cache and convert the atom back into String locically share id holds but internally equal strings share the same memory",
        "hierarchy": "Data Atom",
        "module": "Data.Atom",
        "name": "share",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Function-Selector.html",
        "fct-type": "module",
        "title": "Selector"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "Selector",
        "normalized": "",
        "package": "hxt",
        "partial": "Selector",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#t:Comp1",
      "description": {
        "fct-descr": "\u003cp\u003eSelectors for pairs and 3-tuples: comp1, comp2, comp3,\n this can be extended to n-tuples\n\u003c/p\u003e",
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Function-Selector.html#Comp1",
        "fct-type": "class",
        "title": "Comp1"
      },
      "index": {
        "description": "Selectors for pairs and tuples comp1 comp2 comp3 this can be extended to n-tuples",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "Comp1",
        "normalized": "",
        "package": "hxt",
        "partial": "Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#t:Comp2",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Function-Selector.html#Comp2",
        "fct-type": "class",
        "title": "Comp2"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "Comp2",
        "normalized": "",
        "package": "hxt",
        "partial": "Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#t:Comp3",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Function-Selector.html#Comp3",
        "fct-type": "class",
        "title": "Comp3"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "Comp3",
        "normalized": "",
        "package": "hxt",
        "partial": "Comp",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#t:Selector",
      "description": {
        "fct-descr": "\u003cp\u003eA Selector is a pair of an access function and a modifying function\n for reading and updating parts of a composite type\n\u003c/p\u003e",
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "data",
        "title": "Selector"
      },
      "index": {
        "description": "Selector is pair of an access function and modifying function for reading and updating parts of composite type",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "Selector",
        "normalized": "",
        "package": "hxt",
        "partial": "Selector",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:.-38--38--38-.",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s a -\u003e Selector s b -\u003e Selector s (a, b)",
        "fct-source": "src/Data-Function-Selector.html#.%26%26%26.",
        "fct-type": "function",
        "title": "(.&&&.)"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "(.&&&.) .&&&.",
        "normalized": "Selector a b-\u003eSelector a c-\u003eSelector a(b,c)",
        "package": "hxt",
        "partial": "",
        "signature": "Selector s a-\u003eSelector s b-\u003eSelector s(a,b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:S",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "S",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "function",
        "title": "S"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "S",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:chgM",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s a -\u003e (a -\u003e m a) -\u003e s -\u003e m s",
        "fct-source": "src/Data-Function-Selector.html#chgM",
        "fct-type": "function",
        "title": "chgM"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "chgM",
        "normalized": "Selector a b-\u003e(b-\u003ec b)-\u003ea-\u003ec a",
        "package": "hxt",
        "partial": "",
        "signature": "Selector s a-\u003e(a-\u003em a)-\u003es-\u003em s"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:chgS",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s a -\u003e (a -\u003e a) -\u003e s -\u003e s",
        "fct-source": "src/Data-Function-Selector.html#chgS",
        "fct-type": "function",
        "title": "chgS"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "chgS",
        "normalized": "Selector a b-\u003e(b-\u003eb)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "",
        "signature": "Selector s a-\u003e(a-\u003ea)-\u003es-\u003es"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:comp1",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s a",
        "fct-source": "src/Data-Function-Selector.html#comp1",
        "fct-type": "method",
        "title": "comp1"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "comp1",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:comp2",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s a",
        "fct-source": "src/Data-Function-Selector.html#comp2",
        "fct-type": "method",
        "title": "comp2"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "comp2",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:comp3",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s a",
        "fct-source": "src/Data-Function-Selector.html#comp3",
        "fct-type": "method",
        "title": "comp3"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "comp3",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:getS",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "s -\u003e a",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "function",
        "title": "getS"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "getS",
        "normalized": "a-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "s-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:idS",
      "description": {
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "Selector s s",
        "fct-source": "src/Data-Function-Selector.html#idS",
        "fct-type": "function",
        "title": "idS"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "idS",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:mkSelector",
      "description": {
        "fct-descr": "\u003cp\u003eAlias for constructor S\n\u003c/p\u003e",
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "(s -\u003e a) -\u003e (a -\u003e s -\u003e s) -\u003e Selector s a",
        "fct-source": "src/Data-Function-Selector.html#mkSelector",
        "fct-type": "function",
        "title": "mkSelector"
      },
      "index": {
        "description": "Alias for constructor",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "mkSelector",
        "normalized": "(a-\u003eb)-\u003e(b-\u003ea-\u003ea)-\u003eSelector a b",
        "package": "hxt",
        "partial": "Selector",
        "signature": "(s-\u003ea)-\u003e(a-\u003es-\u003es)-\u003eSelector s a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Function-Selector.html#v:setS",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Data.Function.Selector",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e s -\u003e s",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "function",
        "title": "setS"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Function Selector",
        "module": "Data.Function.Selector",
        "name": "setS",
        "normalized": "a-\u003eb-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003es-\u003es"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eInterface definition for trees\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Tree-Class.html",
        "fct-type": "module",
        "title": "Class"
      },
      "index": {
        "description": "Interface definition for trees",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "Class",
        "normalized": "",
        "package": "hxt",
        "partial": "Class",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#t:Tree",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for trees\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Tree-Class.html#Tree",
        "fct-type": "class",
        "title": "Tree"
      },
      "index": {
        "description": "The interface for trees",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "Tree",
        "normalized": "",
        "package": "hxt",
        "partial": "Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:cardTree",
      "description": {
        "fct-descr": "\u003cp\u003enumber of nodes in a tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Int",
        "fct-source": "src/Data-Tree-Class.html#cardTree",
        "fct-type": "method",
        "title": "cardTree"
      },
      "index": {
        "description": "number of nodes in tree",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "cardTree",
        "normalized": "a b-\u003eInt",
        "package": "hxt",
        "partial": "Tree",
        "signature": "t a-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:changeChildren",
      "description": {
        "fct-descr": "\u003cp\u003eedit children\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "([t a] -\u003e [t a]) -\u003e t a -\u003e t a",
        "fct-source": "src/Data-Tree-Class.html#changeChildren",
        "fct-type": "method",
        "title": "changeChildren"
      },
      "index": {
        "description": "edit children",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "changeChildren",
        "normalized": "([a b]-\u003e[a b])-\u003ea b-\u003ea b",
        "package": "hxt",
        "partial": "Children",
        "signature": "([t a]-\u003e[t a])-\u003et a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:changeNode",
      "description": {
        "fct-descr": "\u003cp\u003eedit node attribute\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e a) -\u003e t a -\u003e t a",
        "fct-source": "src/Data-Tree-Class.html#changeNode",
        "fct-type": "method",
        "title": "changeNode"
      },
      "index": {
        "description": "edit node attribute",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "changeNode",
        "normalized": "(a-\u003ea)-\u003eb a-\u003eb a",
        "package": "hxt",
        "partial": "Node",
        "signature": "(a-\u003ea)-\u003et a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:depthTree",
      "description": {
        "fct-descr": "\u003cp\u003edepth of a tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Int",
        "fct-source": "src/Data-Tree-Class.html#depthTree",
        "fct-type": "method",
        "title": "depthTree"
      },
      "index": {
        "description": "depth of tree",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "depthTree",
        "normalized": "a b-\u003eInt",
        "package": "hxt",
        "partial": "Tree",
        "signature": "t a-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:foldTree",
      "description": {
        "fct-descr": "\u003cp\u003efold for trees\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e [b] -\u003e b) -\u003e t a -\u003e b",
        "fct-source": "src/Data-Tree-Class.html#foldTree",
        "fct-type": "method",
        "title": "foldTree"
      },
      "index": {
        "description": "fold for trees",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "foldTree",
        "normalized": "(a-\u003e[b]-\u003eb)-\u003ec a-\u003eb",
        "package": "hxt",
        "partial": "Tree",
        "signature": "(a-\u003e[b]-\u003eb)-\u003et a-\u003eb"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:formatNTree-39-",
      "description": {
        "fct-descr": "\u003cp\u003econvert a tree into a pseudo graphical string representation\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e String) -\u003e (String -\u003e String) -\u003e (String -\u003e String) -\u003e t a -\u003e String -\u003e String",
        "fct-source": "src/Data-Tree-Class.html#formatNTree%27",
        "fct-type": "function",
        "title": "formatNTree'"
      },
      "index": {
        "description": "convert tree into pseudo graphical string representation",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "formatNTree'",
        "normalized": "(a-\u003eString)-\u003e(String-\u003eString)-\u003e(String-\u003eString)-\u003eb a-\u003eString-\u003eString",
        "package": "hxt",
        "partial": "NTree'",
        "signature": "(a-\u003eString)-\u003e(String-\u003eString)-\u003e(String-\u003eString)-\u003et a-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:formatTree",
      "description": {
        "fct-descr": "\u003cp\u003eformat tree for readable trace output\n\u003c/p\u003e\u003cp\u003ea \u003cem\u003egraphical\u003c/em\u003e representation of the tree in text format\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e String) -\u003e t a -\u003e String",
        "fct-source": "src/Data-Tree-Class.html#formatTree",
        "fct-type": "method",
        "title": "formatTree"
      },
      "index": {
        "description": "format tree for readable trace output graphical representation of the tree in text format",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "formatTree",
        "normalized": "(a-\u003eString)-\u003eb a-\u003eString",
        "package": "hxt",
        "partial": "Tree",
        "signature": "(a-\u003eString)-\u003et a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:getChildren",
      "description": {
        "fct-descr": "\u003cp\u003eselect children\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-Class.html#getChildren",
        "fct-type": "method",
        "title": "getChildren"
      },
      "index": {
        "description": "select children",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "getChildren",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Children",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:getNode",
      "description": {
        "fct-descr": "\u003cp\u003eselect node attribute\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e a",
        "fct-source": "src/Data-Tree-Class.html#getNode",
        "fct-type": "method",
        "title": "getNode"
      },
      "index": {
        "description": "select node attribute",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "getNode",
        "normalized": "a b-\u003eb",
        "package": "hxt",
        "partial": "Node",
        "signature": "t a-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:isInner",
      "description": {
        "fct-descr": "\u003cp\u003einnner node test: \u003ccode\u003e not . isLeaf \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Bool",
        "fct-source": "src/Data-Tree-Class.html#isInner",
        "fct-type": "method",
        "title": "isInner"
      },
      "index": {
        "description": "innner node test not isLeaf",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "isInner",
        "normalized": "a b-\u003eBool",
        "package": "hxt",
        "partial": "Inner",
        "signature": "t a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:isLeaf",
      "description": {
        "fct-descr": "\u003cp\u003eleaf test: list of children empty?\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Bool",
        "fct-source": "src/Data-Tree-Class.html#isLeaf",
        "fct-type": "method",
        "title": "isLeaf"
      },
      "index": {
        "description": "leaf test list of children empty",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "isLeaf",
        "normalized": "a b-\u003eBool",
        "package": "hxt",
        "partial": "Leaf",
        "signature": "t a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:mkLeaf",
      "description": {
        "fct-descr": "\u003cp\u003eleaf construction: leafs don't have any children\n\u003c/p\u003e\u003cp\u003edefinition: \u003ccode\u003e mkLeaf n = mkTree n [] \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e t a",
        "fct-source": "src/Data-Tree-Class.html#mkLeaf",
        "fct-type": "method",
        "title": "mkLeaf"
      },
      "index": {
        "description": "leaf construction leafs don have any children definition mkLeaf mkTree",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "mkLeaf",
        "normalized": "a-\u003eb a",
        "package": "hxt",
        "partial": "Leaf",
        "signature": "a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:mkTree",
      "description": {
        "fct-descr": "\u003cp\u003etree construction: a new tree is constructed by a node attribute and a list of children\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e [t a] -\u003e t a",
        "fct-source": "src/Data-Tree-Class.html#mkTree",
        "fct-type": "method",
        "title": "mkTree"
      },
      "index": {
        "description": "tree construction new tree is constructed by node attribute and list of children",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "mkTree",
        "normalized": "a-\u003e[b a]-\u003eb a",
        "package": "hxt",
        "partial": "Tree",
        "signature": "a-\u003e[t a]-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:nodesTree",
      "description": {
        "fct-descr": "\u003cp\u003eall nodes of a tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [a]",
        "fct-source": "src/Data-Tree-Class.html#nodesTree",
        "fct-type": "method",
        "title": "nodesTree"
      },
      "index": {
        "description": "all nodes of tree",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "nodesTree",
        "normalized": "a b-\u003e[b]",
        "package": "hxt",
        "partial": "Tree",
        "signature": "t a-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:setChildren",
      "description": {
        "fct-descr": "\u003cp\u003esubstitute children: \u003ccode\u003e setChildren cl = changeChildren (const cl) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "[t a] -\u003e t a -\u003e t a",
        "fct-source": "src/Data-Tree-Class.html#setChildren",
        "fct-type": "method",
        "title": "setChildren"
      },
      "index": {
        "description": "substitute children setChildren cl changeChildren const cl",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "setChildren",
        "normalized": "[a b]-\u003ea b-\u003ea b",
        "package": "hxt",
        "partial": "Children",
        "signature": "[t a]-\u003et a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-Class.html#v:setNode",
      "description": {
        "fct-descr": "\u003cp\u003esubstitute node: \u003ccode\u003e setNode n = changeNode (const n) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Data.Tree.Class",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e t a -\u003e t a",
        "fct-source": "src/Data-Tree-Class.html#setNode",
        "fct-type": "method",
        "title": "setNode"
      },
      "index": {
        "description": "substitute node setNode changeNode const",
        "hierarchy": "Data Tree Class",
        "module": "Data.Tree.Class",
        "name": "setNode",
        "normalized": "a-\u003eb a-\u003eb a",
        "package": "hxt",
        "partial": "Node",
        "signature": "a-\u003et a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Edit.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSpace and time efficient editing of rose trees\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Tree.NTree.Edit",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Tree-NTree-Edit.html",
        "fct-type": "module",
        "title": "Edit"
      },
      "index": {
        "description": "Space and time efficient editing of rose trees",
        "hierarchy": "Data Tree NTree Edit",
        "module": "Data.Tree.NTree.Edit",
        "name": "Edit",
        "normalized": "",
        "package": "hxt",
        "partial": "Edit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Edit.html#v:editNTreeBottomUp",
      "description": {
        "fct-descr": "\u003cp\u003eeditNTreeBottomUp is a space optimized tree edit function\n\u003c/p\u003e\u003cp\u003eThe nodes in a tree are visited bottom up. An edit function is applied to\n all nodes. A Nothing result of the editing function indicates no changes.\n This is used to share the input tree within the resulting tree.\n\u003c/p\u003e\u003cp\u003eThe following law holds:\n\u003c/p\u003e\u003cpre\u003e editNTreeBottomUp (const Nothing) t == [t]\n\u003c/pre\u003e\u003cp\u003eIn this case the resulting tree does not only represent the same value\n but it is the same machine value (relative to some evaluations of closures\n during the tree walk\n\u003c/p\u003e\u003cp\u003eWith a simple fold like editing function the whole tree would be reconstructed\n in memory\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Edit",
        "fct-package": "hxt",
        "fct-signature": "(NTree a -\u003e Maybe [NTree a]) -\u003e NTree a -\u003e [NTree a]",
        "fct-source": "src/Data-Tree-NTree-Edit.html#editNTreeBottomUp",
        "fct-type": "function",
        "title": "editNTreeBottomUp"
      },
      "index": {
        "description": "editNTreeBottomUp is space optimized tree edit function The nodes in tree are visited bottom up An edit function is applied to all nodes Nothing result of the editing function indicates no changes This is used to share the input tree within the resulting tree The following law holds editNTreeBottomUp const Nothing In this case the resulting tree does not only represent the same value but it is the same machine value relative to some evaluations of closures during the tree walk With simple fold like editing function the whole tree would be reconstructed in memory",
        "hierarchy": "Data Tree NTree Edit",
        "module": "Data.Tree.NTree.Edit",
        "name": "editNTreeBottomUp",
        "normalized": "(NTree a-\u003eMaybe[NTree a])-\u003eNTree a-\u003e[NTree a]",
        "package": "hxt",
        "partial": "NTree Bottom Up",
        "signature": "(NTree a-\u003eMaybe[NTree a])-\u003eNTree a-\u003e[NTree a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Edit.html#v:mapNTree-39-",
      "description": {
        "fct-descr": "\u003cp\u003eA space optimized map for NTrees\n\u003c/p\u003e\u003cp\u003eSubtrees, that are not changed are reused in the resulting tree\n See also: editNTreeBottomUp\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Edit",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Maybe a) -\u003e NTree a -\u003e NTree a",
        "fct-source": "src/Data-Tree-NTree-Edit.html#mapNTree%27",
        "fct-type": "function",
        "title": "mapNTree'"
      },
      "index": {
        "description": "space optimized map for NTrees Subtrees that are not changed are reused in the resulting tree See also editNTreeBottomUp",
        "hierarchy": "Data Tree NTree Edit",
        "module": "Data.Tree.NTree.Edit",
        "name": "mapNTree'",
        "normalized": "(a-\u003eMaybe a)-\u003eNTree a-\u003eNTree a",
        "package": "hxt",
        "partial": "NTree'",
        "signature": "(a-\u003eMaybe a)-\u003eNTree a-\u003eNTree a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-TypeDefs.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eInterface definition for trees\n\u003c/p\u003e\u003cp\u003en-ary tree structure (rose trees)\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Tree.NTree.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Tree-NTree-TypeDefs.html",
        "fct-type": "module",
        "title": "TypeDefs"
      },
      "index": {
        "description": "Interface definition for trees n-ary tree structure rose trees",
        "hierarchy": "Data Tree NTree TypeDefs",
        "module": "Data.Tree.NTree.TypeDefs",
        "name": "TypeDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Type Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-TypeDefs.html#t:NTree",
      "description": {
        "fct-descr": "\u003cp\u003en-ary ordered tree (rose trees)\n\u003c/p\u003e\u003cp\u003ea tree consists of a node and a possible empty list of children.\n If the list of children is empty, the node is a leaf, else it's\n an inner node.\n\u003c/p\u003e\u003cp\u003eNTree implements Eq, Ord, Show and Read\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Data-Tree-NTree-TypeDefs.html#NTree",
        "fct-type": "data",
        "title": "NTree"
      },
      "index": {
        "description": "n-ary ordered tree rose trees tree consists of node and possible empty list of children If the list of children is empty the node is leaf else it an inner node NTree implements Eq Ord Show and Read",
        "hierarchy": "Data Tree NTree TypeDefs",
        "module": "Data.Tree.NTree.TypeDefs",
        "name": "NTree",
        "normalized": "",
        "package": "hxt",
        "partial": "NTree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-TypeDefs.html#t:NTrees",
      "description": {
        "fct-descr": "\u003cp\u003eshortcut for a sequence of n-ary trees\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Data-Tree-NTree-TypeDefs.html#NTrees",
        "fct-type": "type",
        "title": "NTrees"
      },
      "index": {
        "description": "shortcut for sequence of n-ary trees",
        "hierarchy": "Data Tree NTree TypeDefs",
        "module": "Data.Tree.NTree.TypeDefs",
        "name": "NTrees",
        "normalized": "",
        "package": "hxt",
        "partial": "NTrees",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-TypeDefs.html#v:NTree",
      "description": {
        "fct-module": "Data.Tree.NTree.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTree a (NTrees a)",
        "fct-source": "src/Data-Tree-NTree-TypeDefs.html#NTree",
        "fct-type": "function",
        "title": "NTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree TypeDefs",
        "module": "Data.Tree.NTree.TypeDefs",
        "name": "NTree",
        "normalized": "",
        "package": "hxt",
        "partial": "NTree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eImplementation of navigateble trees for\n   rose trees. The implementation is done with zippers.\n   A description and introductory tutorial about zippers\n   can be found in \u003ca\u003ehttp://learnyouahaskell.com/zippers\u003c/a\u003e\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html",
        "fct-type": "module",
        "title": "TypeDefs"
      },
      "index": {
        "description": "Implementation of navigateble trees for rose trees The implementation is done with zippers description and introductory tutorial about zippers can be found in http learnyouahaskell.com zippers",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "TypeDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Type Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#t:NTBreadCrumbs",
      "description": {
        "fct-descr": "\u003cp\u003eThe list of unzipped nodes from a current tree back to the root\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTBreadCrumbs",
        "fct-type": "type",
        "title": "NTBreadCrumbs"
      },
      "index": {
        "description": "The list of unzipped nodes from current tree back to the root",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "NTBreadCrumbs",
        "normalized": "",
        "package": "hxt",
        "partial": "NTBread Crumbs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#t:NTCrumb",
      "description": {
        "fct-descr": "\u003cp\u003eOne unzipped step consists of the left siblings, the node info and the right siblings\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTCrumb",
        "fct-type": "data",
        "title": "NTCrumb"
      },
      "index": {
        "description": "One unzipped step consists of the left siblings the node info and the right siblings",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "NTCrumb",
        "normalized": "",
        "package": "hxt",
        "partial": "NTCrumb",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#t:NTZipper",
      "description": {
        "fct-descr": "\u003cp\u003eZipper for rose trees\n\u003c/p\u003e\u003cp\u003eA zipper consist of the current tree and the branches on the way back to the root\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTZipper",
        "fct-type": "data",
        "title": "NTZipper"
      },
      "index": {
        "description": "Zipper for rose trees zipper consist of the current tree and the branches on the way back to the root",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "NTZipper",
        "normalized": "",
        "package": "hxt",
        "partial": "NTZipper",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:NTC",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTC (NTrees a) a (NTrees a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTCrumb",
        "fct-type": "function",
        "title": "NTC"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "NTC",
        "normalized": "",
        "package": "hxt",
        "partial": "NTC",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:NTZ",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZ",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTZipper",
        "fct-type": "function",
        "title": "NTZ"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "NTZ",
        "normalized": "",
        "package": "hxt",
        "partial": "NTZ",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:addToTheLeft",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTree a -\u003e NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#addToTheLeft",
        "fct-type": "function",
        "title": "addToTheLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "addToTheLeft",
        "normalized": "NTree a-\u003eNTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "To The Left",
        "signature": "NTree a-\u003eNTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:addToTheRight",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTree a -\u003e NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#addToTheRight",
        "fct-type": "function",
        "title": "addToTheRight"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "addToTheRight",
        "normalized": "NTree a-\u003eNTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "To The Right",
        "signature": "NTree a-\u003eNTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:context",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTBreadCrumbs a",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTZipper",
        "fct-type": "function",
        "title": "context"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "context",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:down",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#down",
        "fct-type": "function",
        "title": "down"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "down",
        "normalized": "NTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "",
        "signature": "NTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:dropFromTheLeft",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#dropFromTheLeft",
        "fct-type": "function",
        "title": "dropFromTheLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "dropFromTheLeft",
        "normalized": "NTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "From The Left",
        "signature": "NTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:dropFromTheRight",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#dropFromTheRight",
        "fct-type": "function",
        "title": "dropFromTheRight"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "dropFromTheRight",
        "normalized": "NTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "From The Right",
        "signature": "NTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:fromNTZipper",
      "description": {
        "fct-descr": "\u003cp\u003eConversion of a navigatable rose tree into an ordinary rose tree.\n\u003c/p\u003e\u003cp\u003eThe context, the parts for moving up to the root are just removed from the tree.\n So when transforming a navigatable tree by moving around and by changing some nodes,\n one has to navigate back\n to the root, else that parts are removed from the result\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e NTree a",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#fromNTZipper",
        "fct-type": "function",
        "title": "fromNTZipper"
      },
      "index": {
        "description": "Conversion of navigatable rose tree into an ordinary rose tree The context the parts for moving up to the root are just removed from the tree So when transforming navigatable tree by moving around and by changing some nodes one has to navigate back to the root else that parts are removed from the result",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "fromNTZipper",
        "normalized": "NTZipper a-\u003eNTree a",
        "package": "hxt",
        "partial": "NTZipper",
        "signature": "NTZipper a-\u003eNTree a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:isTop",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Bool",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#isTop",
        "fct-type": "function",
        "title": "isTop"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "isTop",
        "normalized": "NTZipper a-\u003eBool",
        "package": "hxt",
        "partial": "Top",
        "signature": "NTZipper a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:ntree",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTree a",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#NTZipper",
        "fct-type": "function",
        "title": "ntree"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "ntree",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:toNTZipper",
      "description": {
        "fct-descr": "\u003cp\u003eConversion of a rose tree into a navigatable rose tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTree a -\u003e NTZipper a",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#toNTZipper",
        "fct-type": "function",
        "title": "toNTZipper"
      },
      "index": {
        "description": "Conversion of rose tree into navigatable rose tree",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "toNTZipper",
        "normalized": "NTree a-\u003eNTZipper a",
        "package": "hxt",
        "partial": "NTZipper",
        "signature": "NTree a-\u003eNTZipper a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:toTheLeft",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#toTheLeft",
        "fct-type": "function",
        "title": "toTheLeft"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "toTheLeft",
        "normalized": "NTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "The Left",
        "signature": "NTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:toTheRight",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#toTheRight",
        "fct-type": "function",
        "title": "toTheRight"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "toTheRight",
        "normalized": "NTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "The Right",
        "signature": "NTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:up",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTZipper a -\u003e Maybe (NTZipper a)",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#up",
        "fct-type": "function",
        "title": "up"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "up",
        "normalized": "NTZipper a-\u003eMaybe(NTZipper a)",
        "package": "hxt",
        "partial": "",
        "signature": "NTZipper a-\u003eMaybe(NTZipper a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NTree-Zipper-TypeDefs.html#v:up1",
      "description": {
        "fct-module": "Data.Tree.NTree.Zipper.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NTree a -\u003e NTCrumb a -\u003e NTree a",
        "fct-source": "src/Data-Tree-NTree-Zipper-TypeDefs.html#up1",
        "fct-type": "function",
        "title": "up1"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NTree Zipper TypeDefs",
        "module": "Data.Tree.NTree.Zipper.TypeDefs",
        "name": "up1",
        "normalized": "NTree a-\u003eNTCrumb a-\u003eNTree a",
        "package": "hxt",
        "partial": "",
        "signature": "NTree a-\u003eNTCrumb a-\u003eNTree a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eInterface definition for navigatable trees.\n   Navigatable trees need to have operations to move up, down, left and right.\n   With these elementary operations, most of the XPath axises can be defined.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html",
        "fct-type": "module",
        "title": "Class"
      },
      "index": {
        "description": "Interface definition for navigatable trees Navigatable trees need to have operations to move up down left and right With these elementary operations most of the XPath axises can be defined",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "Class",
        "normalized": "",
        "package": "hxt",
        "partial": "Class",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#t:NavigatableTree",
      "description": {
        "fct-descr": "\u003cp\u003eThe interface for navigatable trees\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#NavigatableTree",
        "fct-type": "class",
        "title": "NavigatableTree"
      },
      "index": {
        "description": "The interface for navigatable trees",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "NavigatableTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Navigatable Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#t:NavigatableTreeModify",
      "description": {
        "fct-descr": "\u003cp\u003eEdit operation on navigatable trees\n\u003c/p\u003e\u003cp\u003eThere is only a single navigatable tree implementation for a given tree allowed\n (see the functional dependencies)\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#NavigatableTreeModify",
        "fct-type": "class",
        "title": "NavigatableTreeModify"
      },
      "index": {
        "description": "Edit operation on navigatable trees There is only single navigatable tree implementation for given tree allowed see the functional dependencies",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "NavigatableTreeModify",
        "normalized": "",
        "package": "hxt",
        "partial": "Navigatable Tree Modify",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#t:NavigatableTreeToTree",
      "description": {
        "fct-descr": "\u003cp\u003eConversion between trees and navigatable trees,\n\u003c/p\u003e\u003cp\u003eThere is only a single navigatable tree implementation for a given tree allowed\n (see the functional dependencies)\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#NavigatableTreeToTree",
        "fct-type": "class",
        "title": "NavigatableTreeToTree"
      },
      "index": {
        "description": "Conversion between trees and navigatable trees There is only single navigatable tree implementation for given tree allowed see the functional dependencies",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "NavigatableTreeToTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Navigatable Tree To Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:addTreeLeft",
      "description": {
        "fct-descr": "\u003cp\u003eadd an ordinary tree in front of the given navigatable tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e nt a -\u003e Maybe (nt a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#addTreeLeft",
        "fct-type": "method",
        "title": "addTreeLeft"
      },
      "index": {
        "description": "add an ordinary tree in front of the given navigatable tree",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "addTreeLeft",
        "normalized": "a b-\u003ec b-\u003eMaybe(c b)",
        "package": "hxt",
        "partial": "Tree Left",
        "signature": "t a-\u003ent a-\u003eMaybe(nt a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:addTreeRight",
      "description": {
        "fct-descr": "\u003cp\u003eadd an ordinary tree behind of the given navigatable tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e nt a -\u003e Maybe (nt a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#addTreeRight",
        "fct-type": "method",
        "title": "addTreeRight"
      },
      "index": {
        "description": "add an ordinary tree behind of the given navigatable tree",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "addTreeRight",
        "normalized": "a b-\u003ec b-\u003eMaybe(c b)",
        "package": "hxt",
        "partial": "Tree Right",
        "signature": "t a-\u003ent a-\u003eMaybe(nt a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:dropTreeLeft",
      "description": {
        "fct-descr": "\u003cp\u003edrop the direct left sibling tree of the given navigatable tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "nt a -\u003e Maybe (nt a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#dropTreeLeft",
        "fct-type": "method",
        "title": "dropTreeLeft"
      },
      "index": {
        "description": "drop the direct left sibling tree of the given navigatable tree",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "dropTreeLeft",
        "normalized": "a b-\u003eMaybe(a b)",
        "package": "hxt",
        "partial": "Tree Left",
        "signature": "nt a-\u003eMaybe(nt a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:dropTreeRight",
      "description": {
        "fct-descr": "\u003cp\u003edrop the direct right sibling tree of the given navigatable tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "nt a -\u003e Maybe (nt a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#dropTreeRight",
        "fct-type": "method",
        "title": "dropTreeRight"
      },
      "index": {
        "description": "drop the direct right sibling tree of the given navigatable tree",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "dropTreeRight",
        "normalized": "a b-\u003eMaybe(a b)",
        "package": "hxt",
        "partial": "Tree Right",
        "signature": "nt a-\u003eMaybe(nt a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:fromTree",
      "description": {
        "fct-descr": "\u003cp\u003econstruct a navigatable tree\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e nt a",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#fromTree",
        "fct-type": "method",
        "title": "fromTree"
      },
      "index": {
        "description": "construct navigatable tree",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "fromTree",
        "normalized": "a b-\u003ec b",
        "package": "hxt",
        "partial": "Tree",
        "signature": "t a-\u003ent a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:mvDown",
      "description": {
        "fct-descr": "\u003cp\u003edescend one step to the leftmost child\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Maybe (t a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#mvDown",
        "fct-type": "method",
        "title": "mvDown"
      },
      "index": {
        "description": "descend one step to the leftmost child",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "mvDown",
        "normalized": "a b-\u003eMaybe(a b)",
        "package": "hxt",
        "partial": "Down",
        "signature": "t a-\u003eMaybe(t a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:mvLeft",
      "description": {
        "fct-descr": "\u003cp\u003emove to the left neighbour\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Maybe (t a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#mvLeft",
        "fct-type": "method",
        "title": "mvLeft"
      },
      "index": {
        "description": "move to the left neighbour",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "mvLeft",
        "normalized": "a b-\u003eMaybe(a b)",
        "package": "hxt",
        "partial": "Left",
        "signature": "t a-\u003eMaybe(t a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:mvRight",
      "description": {
        "fct-descr": "\u003cp\u003emove to the right neighbour\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Maybe (t a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#mvRight",
        "fct-type": "method",
        "title": "mvRight"
      },
      "index": {
        "description": "move to the right neighbour",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "mvRight",
        "normalized": "a b-\u003eMaybe(a b)",
        "package": "hxt",
        "partial": "Right",
        "signature": "t a-\u003eMaybe(t a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:mvUp",
      "description": {
        "fct-descr": "\u003cp\u003emove one step towards the root\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Maybe (t a)",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#mvUp",
        "fct-type": "method",
        "title": "mvUp"
      },
      "index": {
        "description": "move one step towards the root",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "mvUp",
        "normalized": "a b-\u003eMaybe(a b)",
        "package": "hxt",
        "partial": "Up",
        "signature": "t a-\u003eMaybe(t a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:substThisTree",
      "description": {
        "fct-descr": "\u003cp\u003echange the tree but remain the navigation\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e nt a -\u003e nt a",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#substThisTree",
        "fct-type": "method",
        "title": "substThisTree"
      },
      "index": {
        "description": "change the tree but remain the navigation",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "substThisTree",
        "normalized": "a b-\u003ec b-\u003ec b",
        "package": "hxt",
        "partial": "This Tree",
        "signature": "t a-\u003ent a-\u003ent a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-Class.html#v:toTree",
      "description": {
        "fct-descr": "\u003cp\u003eremove navigation\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.Class",
        "fct-package": "hxt",
        "fct-signature": "nt a -\u003e t a",
        "fct-source": "src/Data-Tree-NavigatableTree-Class.html#toTree",
        "fct-type": "method",
        "title": "toTree"
      },
      "index": {
        "description": "remove navigation",
        "hierarchy": "Data Tree NavigatableTree Class",
        "module": "Data.Tree.NavigatableTree.Class",
        "name": "toTree",
        "normalized": "a b-\u003ec b",
        "package": "hxt",
        "partial": "Tree",
        "signature": "nt a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eNavigatable trees need to have operations to move up, down, left and right.\n   With these elementary operations, the XPath axises can be defined.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html",
        "fct-type": "module",
        "title": "XPathAxis"
      },
      "index": {
        "description": "Navigatable trees need to have operations to move up down left and right With these elementary operations the XPath axises can be defined",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "XPathAxis",
        "normalized": "",
        "package": "hxt",
        "partial": "XPath Axis",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:ancestorAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: ancestor\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#ancestorAxis",
        "fct-type": "function",
        "title": "ancestorAxis"
      },
      "index": {
        "description": "XPath axis ancestor",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "ancestorAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:ancestorOrSelfAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: ancestor or self\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#ancestorOrSelfAxis",
        "fct-type": "function",
        "title": "ancestorOrSelfAxis"
      },
      "index": {
        "description": "XPath axis ancestor or self",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "ancestorOrSelfAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Or Self Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:childAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: child\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#childAxis",
        "fct-type": "function",
        "title": "childAxis"
      },
      "index": {
        "description": "XPath axis child",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "childAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:descendantAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: descendant\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#descendantAxis",
        "fct-type": "function",
        "title": "descendantAxis"
      },
      "index": {
        "description": "XPath axis descendant",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "descendantAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:descendantOrSelfAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: descendant or self\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#descendantOrSelfAxis",
        "fct-type": "function",
        "title": "descendantOrSelfAxis"
      },
      "index": {
        "description": "XPath axis descendant or self",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "descendantOrSelfAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Or Self Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:followingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: following\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#followingAxis",
        "fct-type": "function",
        "title": "followingAxis"
      },
      "index": {
        "description": "XPath axis following",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "followingAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:followingSiblingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: following sibling\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#followingSiblingAxis",
        "fct-type": "function",
        "title": "followingSiblingAxis"
      },
      "index": {
        "description": "XPath axis following sibling",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "followingSiblingAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Sibling Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:isAtRoot",
      "description": {
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e Bool",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#isAtRoot",
        "fct-type": "function",
        "title": "isAtRoot"
      },
      "index": {
        "description": "",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "isAtRoot",
        "normalized": "a b-\u003eBool",
        "package": "hxt",
        "partial": "At Root",
        "signature": "t a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:maybePlus",
      "description": {
        "fct-descr": "\u003cp\u003ecollect all trees by moving into one direction, starting tree is not included\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Maybe a) -\u003e a -\u003e [a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#maybePlus",
        "fct-type": "function",
        "title": "maybePlus"
      },
      "index": {
        "description": "collect all trees by moving into one direction starting tree is not included",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "maybePlus",
        "normalized": "(a-\u003eMaybe a)-\u003ea-\u003e[a]",
        "package": "hxt",
        "partial": "Plus",
        "signature": "(a-\u003eMaybe a)-\u003ea-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:maybeStar",
      "description": {
        "fct-descr": "\u003cp\u003ecollect all trees by moving into one direction, starting tree is included\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Maybe a) -\u003e a -\u003e [a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#maybeStar",
        "fct-type": "function",
        "title": "maybeStar"
      },
      "index": {
        "description": "collect all trees by moving into one direction starting tree is included",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "maybeStar",
        "normalized": "(a-\u003eMaybe a)-\u003ea-\u003e[a]",
        "package": "hxt",
        "partial": "Star",
        "signature": "(a-\u003eMaybe a)-\u003ea-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:mvToRoot",
      "description": {
        "fct-descr": "\u003cp\u003emove to the root\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e t a",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#mvToRoot",
        "fct-type": "function",
        "title": "mvToRoot"
      },
      "index": {
        "description": "move to the root",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "mvToRoot",
        "normalized": "a b-\u003ea b",
        "package": "hxt",
        "partial": "To Root",
        "signature": "t a-\u003et a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:parentAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: parent\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#parentAxis",
        "fct-type": "function",
        "title": "parentAxis"
      },
      "index": {
        "description": "XPath axis parent",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "parentAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:precedingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: preceding\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#precedingAxis",
        "fct-type": "function",
        "title": "precedingAxis"
      },
      "index": {
        "description": "XPath axis preceding",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "precedingAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:precedingSiblingAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: preceeding sibling\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#precedingSiblingAxis",
        "fct-type": "function",
        "title": "precedingSiblingAxis"
      },
      "index": {
        "description": "XPath axis preceeding sibling",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "precedingSiblingAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Sibling Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:revDescendantOrSelfAxis",
      "description": {
        "fct-descr": "\u003cp\u003enot an official XPath axis but useful: reverse descendant or self, used in preceding axis\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#revDescendantOrSelfAxis",
        "fct-type": "function",
        "title": "revDescendantOrSelfAxis"
      },
      "index": {
        "description": "not an official XPath axis but useful reverse descendant or self used in preceding axis",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "revDescendantOrSelfAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Descendant Or Self Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Data-Tree-NavigatableTree-XPathAxis.html#v:selfAxis",
      "description": {
        "fct-descr": "\u003cp\u003eXPath axis: self\n\u003c/p\u003e",
        "fct-module": "Data.Tree.NavigatableTree.XPathAxis",
        "fct-package": "hxt",
        "fct-signature": "t a -\u003e [t a]",
        "fct-source": "src/Data-Tree-NavigatableTree-XPathAxis.html#selfAxis",
        "fct-type": "function",
        "title": "selfAxis"
      },
      "index": {
        "description": "XPath axis self",
        "hierarchy": "Data Tree NavigatableTree XPathAxis",
        "module": "Data.Tree.NavigatableTree.XPathAxis",
        "name": "selfAxis",
        "normalized": "a b-\u003e[a b]",
        "package": "hxt",
        "partial": "Axis",
        "signature": "t a-\u003e[t a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Binary.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDe-/Serialisation arrows for XmlTrees and other arbitrary values with a Binary instance\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Binary",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Binary.html",
        "fct-type": "module",
        "title": "Binary"
      },
      "index": {
        "description": "De Serialisation arrows for XmlTrees and other arbitrary values with Binary instance",
        "hierarchy": "Text XML HXT Arrow Binary",
        "module": "Text.XML.HXT.Arrow.Binary",
        "name": "Binary",
        "normalized": "",
        "package": "hxt",
        "partial": "Binary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Binary.html#v:readBinaryValue",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Binary",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b a",
        "fct-source": "src/Text-XML-HXT-Arrow-Binary.html#readBinaryValue",
        "fct-type": "function",
        "title": "readBinaryValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Binary",
        "module": "Text.XML.HXT.Arrow.Binary",
        "name": "readBinaryValue",
        "normalized": "String-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Binary Value",
        "signature": "String-\u003eIOStateArrow s b a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Binary.html#v:writeBinaryValue",
      "description": {
        "fct-descr": "\u003cp\u003eSerialize a value, optionally compress it, and write it to a file.\n In case of an error, the error message is issued and the arrow fails\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Binary",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s a ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Binary.html#writeBinaryValue",
        "fct-type": "function",
        "title": "writeBinaryValue"
      },
      "index": {
        "description": "Serialize value optionally compress it and write it to file In case of an error the error message is issued and the arrow fails",
        "hierarchy": "Text XML HXT Arrow Binary",
        "module": "Text.XML.HXT.Arrow.Binary",
        "name": "writeBinaryValue",
        "normalized": "String-\u003eIOStateArrow a b()",
        "package": "hxt",
        "partial": "Binary Value",
        "signature": "String-\u003eIOStateArrow s a()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DTDProcessing.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDTD processing function for\n   including external parts of a DTD\n   parameter entity substitution and general entity substitution\n\u003c/p\u003e\u003cp\u003eImplemtation completely done with arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DTDProcessing",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-DTDProcessing.html",
        "fct-type": "module",
        "title": "DTDProcessing"
      },
      "index": {
        "description": "DTD processing function for including external parts of DTD parameter entity substitution and general entity substitution Implemtation completely done with arrows",
        "hierarchy": "Text XML HXT Arrow DTDProcessing",
        "module": "Text.XML.HXT.Arrow.DTDProcessing",
        "name": "DTDProcessing",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDProcessing",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DTDProcessing.html#v:processDTD",
      "description": {
        "fct-descr": "\u003cp\u003ea filter for DTD processing\n\u003c/p\u003e\u003cp\u003einclusion of external parts of DTD,\n parameter entity substitution\n conditional section evaluation\n\u003c/p\u003e\u003cp\u003einput tree must represent a complete document including root node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DTDProcessing",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DTDProcessing.html#processDTD",
        "fct-type": "function",
        "title": "processDTD"
      },
      "index": {
        "description": "filter for DTD processing inclusion of external parts of DTD parameter entity substitution conditional section evaluation input tree must represent complete document including root node",
        "hierarchy": "Text XML HXT Arrow DTDProcessing",
        "module": "Text.XML.HXT.Arrow.DTDProcessing",
        "name": "processDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eState arrows for document input\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html",
        "fct-type": "module",
        "title": "DocumentInput"
      },
      "index": {
        "description": "State arrows for document input",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "DocumentInput",
        "normalized": "",
        "package": "hxt",
        "partial": "Document Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#v:addInputError",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html#addInputError",
        "fct-type": "function",
        "title": "addInputError"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "addInputError",
        "normalized": "Attributes-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Input Error",
        "signature": "Attributes-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#v:decodeDocument",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html#decodeDocument",
        "fct-type": "function",
        "title": "decodeDocument"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "decodeDocument",
        "normalized": "",
        "package": "hxt",
        "partial": "Document",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#v:getEncoding",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html#getEncoding",
        "fct-type": "function",
        "title": "getEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "getEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#v:getTextEncoding",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html#getTextEncoding",
        "fct-type": "function",
        "title": "getTextEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "getTextEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Text Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#v:getXmlContents",
      "description": {
        "fct-descr": "\u003cp\u003eRead the content of a document.\n\u003c/p\u003e\u003cp\u003eThis routine is usually called from \u003ccode\u003e\u003ca\u003egetDocumentContents\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eThe input must be a root node (constructed with \u003ccode\u003e\u003ca\u003eroot\u003c/a\u003e\u003c/code\u003e), usually without children.\n   The attribute list contains all input parameters, e.g. URI or source file name, encoding preferences, ...\n   If the source name is empty, the input is read from standard input.\n\u003c/p\u003e\u003cp\u003eThe source is transformed into an absolute URI. If the source is a relative URI, or a file name,\n   it is expanded into an absolut URI with respect to the current base URI.\n   The default base URI is of protocol \"file\" and points to the current working directory.\n\u003c/p\u003e\u003cp\u003eThe currently supported protocols are \"http\", \"file\", \"stdin\" and \"string\".\n\u003c/p\u003e\u003cp\u003eThe latter two are internal protocols. An uri of the form \"stdin:\" stands for the content of\n   the standard input stream.\n\u003c/p\u003e\u003cp\u003e\"string:some text\" means, that \"some text\" is taken as input.\n   This internal protocol is used for reading from normal \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e values.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html#getXmlContents",
        "fct-type": "function",
        "title": "getXmlContents"
      },
      "index": {
        "description": "Read the content of document This routine is usually called from getDocumentContents The input must be root node constructed with root usually without children The attribute list contains all input parameters e.g URI or source file name encoding preferences If the source name is empty the input is read from standard input The source is transformed into an absolute URI If the source is relative URI or file name it is expanded into an absolut URI with respect to the current base URI The default base URI is of protocol file and points to the current working directory The currently supported protocols are http file stdin and string The latter two are internal protocols An uri of the form stdin stands for the content of the standard input stream string some text means that some text is taken as input This internal protocol is used for reading from normal String values",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "getXmlContents",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentInput.html#v:getXmlEntityContents",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentInput",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentInput.html#getXmlEntityContents",
        "fct-type": "function",
        "title": "getXmlEntityContents"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentInput",
        "module": "Text.XML.HXT.Arrow.DocumentInput",
        "name": "getXmlEntityContents",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Entity Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentOutput.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eState arrows for document output\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DocumentOutput",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentOutput.html",
        "fct-type": "module",
        "title": "DocumentOutput"
      },
      "index": {
        "description": "State arrows for document output",
        "hierarchy": "Text XML HXT Arrow DocumentOutput",
        "module": "Text.XML.HXT.Arrow.DocumentOutput",
        "name": "DocumentOutput",
        "normalized": "",
        "package": "hxt",
        "partial": "Document Output",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentOutput.html#v:encodeDocument",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentOutput",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e Bool -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentOutput.html#encodeDocument",
        "fct-type": "function",
        "title": "encodeDocument"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentOutput",
        "module": "Text.XML.HXT.Arrow.DocumentOutput",
        "name": "encodeDocument",
        "normalized": "Bool-\u003eBool-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document",
        "signature": "Bool-\u003eBool-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentOutput.html#v:encodeDocument-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.DocumentOutput",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e Bool -\u003e String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentOutput.html#encodeDocument%27",
        "fct-type": "function",
        "title": "encodeDocument'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow DocumentOutput",
        "module": "Text.XML.HXT.Arrow.DocumentOutput",
        "name": "encodeDocument'",
        "normalized": "Bool-\u003eBool-\u003eString-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document'",
        "signature": "Bool-\u003eBool-\u003eString-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentOutput.html#v:putXmlDocument",
      "description": {
        "fct-descr": "\u003cp\u003eWrite the contents of a document tree into an output stream (file or stdout).\n\u003c/p\u003e\u003cp\u003eIf textMode is set, writing is done with Haskell string output, else (default)\n writing is done with lazy ByteString output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DocumentOutput",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentOutput.html#putXmlDocument",
        "fct-type": "function",
        "title": "putXmlDocument"
      },
      "index": {
        "description": "Write the contents of document tree into an output stream file or stdout If textMode is set writing is done with Haskell string output else default writing is done with lazy ByteString output",
        "hierarchy": "Text XML HXT Arrow DocumentOutput",
        "module": "Text.XML.HXT.Arrow.DocumentOutput",
        "name": "putXmlDocument",
        "normalized": "Bool-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Document",
        "signature": "Bool-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentOutput.html#v:putXmlSource",
      "description": {
        "fct-descr": "\u003cp\u003ewrite a document with indentaion and line numers\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DocumentOutput",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentOutput.html#putXmlSource",
        "fct-type": "function",
        "title": "putXmlSource"
      },
      "index": {
        "description": "write document with indentaion and line numers",
        "hierarchy": "Text XML HXT Arrow DocumentOutput",
        "module": "Text.XML.HXT.Arrow.DocumentOutput",
        "name": "putXmlSource",
        "normalized": "String-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Source",
        "signature": "String-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-DocumentOutput.html#v:putXmlTree",
      "description": {
        "fct-descr": "\u003cp\u003ewrite the tree representation of a document to a file\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.DocumentOutput",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-DocumentOutput.html#putXmlTree",
        "fct-type": "function",
        "title": "putXmlTree"
      },
      "index": {
        "description": "write the tree representation of document to file",
        "hierarchy": "Text XML HXT Arrow DocumentOutput",
        "module": "Text.XML.HXT.Arrow.DocumentOutput",
        "name": "putXmlTree",
        "normalized": "String-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Tree",
        "signature": "String-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ecommon edit arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html",
        "fct-type": "module",
        "title": "Edit"
      },
      "index": {
        "description": "common edit arrows",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "Edit",
        "normalized": "",
        "package": "hxt",
        "partial": "Edit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addDefaultDTDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addDefaultDTDecl",
        "fct-type": "function",
        "title": "addDefaultDTDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addDefaultDTDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Default DTDecl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addDoctypeDecl",
      "description": {
        "fct-descr": "\u003cp\u003eadd a doctype declaration to a document\n\u003c/p\u003e\u003cp\u003eThe arguments are the root element name, the PUBLIC id and the SYSTEM id\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addDoctypeDecl",
        "fct-type": "function",
        "title": "addDoctypeDecl"
      },
      "index": {
        "description": "add doctype declaration to document The arguments are the root element name the PUBLIC id and the SYSTEM id",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addDoctypeDecl",
        "normalized": "String-\u003eString-\u003eString-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Doctype Decl",
        "signature": "String-\u003eString-\u003eString-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addHeadlineToXmlDoc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addHeadlineToXmlDoc",
        "fct-type": "function",
        "title": "addHeadlineToXmlDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addHeadlineToXmlDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Headline To Xml Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addXHtmlDoctypeFrameset",
      "description": {
        "fct-descr": "\u003cp\u003eadd an XHTML frameset doctype declaration to a document\n\u003c/p\u003e\u003cp\u003eadd an XHTML strict doctype declaration to a document\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addXHtmlDoctypeFrameset",
        "fct-type": "function",
        "title": "addXHtmlDoctypeFrameset"
      },
      "index": {
        "description": "add an XHTML frameset doctype declaration to document add an XHTML strict doctype declaration to document",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addXHtmlDoctypeFrameset",
        "normalized": "",
        "package": "hxt",
        "partial": "XHtml Doctype Frameset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addXHtmlDoctypeStrict",
      "description": {
        "fct-descr": "\u003cp\u003eadd an XHTML strict doctype declaration to a document\n\u003c/p\u003e\u003cp\u003eadd an XHTML strict doctype declaration to a document\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addXHtmlDoctypeStrict",
        "fct-type": "function",
        "title": "addXHtmlDoctypeStrict"
      },
      "index": {
        "description": "add an XHTML strict doctype declaration to document add an XHTML strict doctype declaration to document",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addXHtmlDoctypeStrict",
        "normalized": "",
        "package": "hxt",
        "partial": "XHtml Doctype Strict",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addXHtmlDoctypeTransitional",
      "description": {
        "fct-descr": "\u003cp\u003eadd an XHTML transitional doctype declaration to a document\n\u003c/p\u003e\u003cp\u003eadd an XHTML strict doctype declaration to a document\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addXHtmlDoctypeTransitional",
        "fct-type": "function",
        "title": "addXHtmlDoctypeTransitional"
      },
      "index": {
        "description": "add an XHTML transitional doctype declaration to document add an XHTML strict doctype declaration to document",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addXHtmlDoctypeTransitional",
        "normalized": "",
        "package": "hxt",
        "partial": "XHtml Doctype Transitional",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addXmlPi",
      "description": {
        "fct-descr": "\u003cp\u003eadd an \u003c?xml version=\"1.0\"?\u003e processing instruction\n if it's not already there\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addXmlPi",
        "fct-type": "function",
        "title": "addXmlPi"
      },
      "index": {
        "description": "add an xml version processing instruction if it not already there",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addXmlPi",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:addXmlPiEncoding",
      "description": {
        "fct-descr": "\u003cp\u003eadd an encoding spec to the \u003c?xml version=\"1.0\"?\u003e processing instruction\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#addXmlPiEncoding",
        "fct-type": "function",
        "title": "addXmlPiEncoding"
      },
      "index": {
        "description": "add an encoding spec to the xml version processing instruction",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "addXmlPiEncoding",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Pi Encoding",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:canonicalizeAllNodes",
      "description": {
        "fct-descr": "\u003cp\u003eApplies some \u003ca\u003eCanonical XML\u003c/a\u003e rules to a document tree.\n\u003c/p\u003e\u003cp\u003eThe rule differ slightly for canonical XML and XPath in handling of comments\n\u003c/p\u003e\u003cp\u003eNote: This is not the whole canonicalization as it is specified by the W3C\n Recommendation. Adding attribute defaults or sorting attributes in lexicographic\n order is done by the \u003ccode\u003etransform\u003c/code\u003e function of module \u003ccode\u003eText.XML.HXT.Validator.Validation\u003c/code\u003e.\n Replacing entities or line feed normalization is done by the parser.\n\u003c/p\u003e\u003cp\u003eRules: remove DTD parts, processing instructions, comments and substitute char refs in attribute\n values and text\n\u003c/p\u003e\u003cp\u003eNot implemented yet:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Whitespace within start and end tags is normalized\n\u003c/li\u003e\u003cli\u003e Special characters in attribute values and character content are replaced by character references\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#canonicalizeAllNodes",
        "fct-type": "function",
        "title": "canonicalizeAllNodes"
      },
      "index": {
        "description": "Applies some Canonical XML rules to document tree The rule differ slightly for canonical XML and XPath in handling of comments Note This is not the whole canonicalization as it is specified by the W3C Recommendation Adding attribute defaults or sorting attributes in lexicographic order is done by the transform function of module Text.XML.HXT.Validator.Validation Replacing entities or line feed normalization is done by the parser Rules remove DTD parts processing instructions comments and substitute char refs in attribute values and text Not implemented yet Whitespace within start and end tags is normalized Special characters in attribute values and character content are replaced by character references",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "canonicalizeAllNodes",
        "normalized": "",
        "package": "hxt",
        "partial": "All Nodes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:canonicalizeContents",
      "description": {
        "fct-descr": "\u003cp\u003eCanonicalize the contents of a document\n\u003c/p\u003e\u003cp\u003esubstitutes all char refs in text and attribute values,\n removes CDATA section and combines all sequences of resulting text\n nodes into a single text node\n\u003c/p\u003e\u003cp\u003esee \u003ccode\u003e\u003ca\u003ecanonicalizeAllNodes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#canonicalizeContents",
        "fct-type": "function",
        "title": "canonicalizeContents"
      },
      "index": {
        "description": "Canonicalize the contents of document substitutes all char refs in text and attribute values removes CDATA section and combines all sequences of resulting text nodes into single text node see canonicalizeAllNodes",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "canonicalizeContents",
        "normalized": "",
        "package": "hxt",
        "partial": "Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:canonicalizeForXPath",
      "description": {
        "fct-descr": "\u003cp\u003eCanonicalize a tree for XPath\n Like \u003ccode\u003e\u003ca\u003ecanonicalizeAllNodes\u003c/a\u003e\u003c/code\u003e but comment nodes are not removed\n\u003c/p\u003e\u003cp\u003esee \u003ccode\u003e\u003ca\u003ecanonicalizeAllNodes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#canonicalizeForXPath",
        "fct-type": "function",
        "title": "canonicalizeForXPath"
      },
      "index": {
        "description": "Canonicalize tree for XPath Like canonicalizeAllNodes but comment nodes are not removed see canonicalizeAllNodes",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "canonicalizeForXPath",
        "normalized": "",
        "package": "hxt",
        "partial": "For XPath",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:collapseAllXText",
      "description": {
        "fct-descr": "\u003cp\u003eApplies collapseXText recursively.\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003ecollapseXText\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#collapseAllXText",
        "fct-type": "function",
        "title": "collapseAllXText"
      },
      "index": {
        "description": "Applies collapseXText recursively see also collapseXText",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "collapseAllXText",
        "normalized": "",
        "package": "hxt",
        "partial": "All XText",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:collapseXText",
      "description": {
        "fct-descr": "\u003cp\u003eCollects sequences of text nodes in the list of children of a node into one single text node.\n This is useful, e.g. after char and entity reference substitution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#collapseXText",
        "fct-type": "function",
        "title": "collapseXText"
      },
      "index": {
        "description": "Collects sequences of text nodes in the list of children of node into one single text node This is useful e.g after char and entity reference substitution",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "collapseXText",
        "normalized": "",
        "package": "hxt",
        "partial": "XText",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:escapeHtmlRefs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "(Char -\u003e String -\u003e String, Char -\u003e String -\u003e String)",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#escapeHtmlRefs",
        "fct-type": "function",
        "title": "escapeHtmlRefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "escapeHtmlRefs",
        "normalized": "(Char-\u003eString-\u003eString,Char-\u003eString-\u003eString)",
        "package": "hxt",
        "partial": "Html Refs",
        "signature": "(Char-\u003eString-\u003eString,Char-\u003eString-\u003eString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:escapeXmlRefs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "(Char -\u003e String -\u003e String, Char -\u003e String -\u003e String)",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#escapeXmlRefs",
        "fct-type": "function",
        "title": "escapeXmlRefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "escapeXmlRefs",
        "normalized": "(Char-\u003eString-\u003eString,Char-\u003eString-\u003eString)",
        "package": "hxt",
        "partial": "Xml Refs",
        "signature": "(Char-\u003eString-\u003eString,Char-\u003eString-\u003eString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:hasXmlPi",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#hasXmlPi",
        "fct-type": "function",
        "title": "hasXmlPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "hasXmlPi",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:haskellRepOfXmlDoc",
      "description": {
        "fct-descr": "\u003cp\u003econvert a document into a Haskell representation (with show).\n\u003c/p\u003e\u003cp\u003eUseful for debugging and trace output.\n see also : \u003ccode\u003e\u003ca\u003etreeRepOfXmlDoc\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enumberLinesInXmlDoc\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#haskellRepOfXmlDoc",
        "fct-type": "function",
        "title": "haskellRepOfXmlDoc"
      },
      "index": {
        "description": "convert document into Haskell representation with show Useful for debugging and trace output see also treeRepOfXmlDoc numberLinesInXmlDoc",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "haskellRepOfXmlDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Rep Of Xml Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:indentDoc",
      "description": {
        "fct-descr": "\u003cp\u003efilter for indenting a document tree for pretty printing.\n\u003c/p\u003e\u003cp\u003ethe tree is traversed for inserting whitespace for tag indentation.\n\u003c/p\u003e\u003cp\u003ewhitespace is only inserted or changed at places, where it isn't significant,\n is's not inserted between tags and text containing non whitespace chars.\n\u003c/p\u003e\u003cp\u003ewhitespace is only inserted or changed at places, where it's not significant.\n preserving whitespace may be controlled in a document tree\n by a tag attribute \u003ccode\u003exml:space\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eallowed values for this attribute are \u003ccode\u003edefault | preserve\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003einput is a complete document tree or a document fragment\n result is the semantically equivalent formatted tree.\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003eremoveDocWhiteSpace\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#indentDoc",
        "fct-type": "function",
        "title": "indentDoc"
      },
      "index": {
        "description": "filter for indenting document tree for pretty printing the tree is traversed for inserting whitespace for tag indentation whitespace is only inserted or changed at places where it isn significant is not inserted between tags and text containing non whitespace chars whitespace is only inserted or changed at places where it not significant preserving whitespace may be controlled in document tree by tag attribute xml space allowed values for this attribute are default preserve input is complete document tree or document fragment result is the semantically equivalent formatted tree see also removeDocWhiteSpace",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "indentDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:numberLinesInXmlDoc",
      "description": {
        "fct-descr": "\u003cp\u003econvert a document into a text and add line numbers to the text representation.\n\u003c/p\u003e\u003cp\u003eResult is a root node with a single text node as child.\n Useful for debugging and trace output.\n see also : \u003ccode\u003e\u003ca\u003ehaskellRepOfXmlDoc\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003etreeRepOfXmlDoc\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#numberLinesInXmlDoc",
        "fct-type": "function",
        "title": "numberLinesInXmlDoc"
      },
      "index": {
        "description": "convert document into text and add line numbers to the text representation Result is root node with single text node as child Useful for debugging and trace output see also haskellRepOfXmlDoc treeRepOfXmlDoc",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "numberLinesInXmlDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Lines In Xml Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:preventEmptyElements",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e Bool -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#preventEmptyElements",
        "fct-type": "function",
        "title": "preventEmptyElements"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "preventEmptyElements",
        "normalized": "[String]-\u003eBool-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Empty Elements",
        "signature": "[String]-\u003eBool-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:rememberDTDAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#rememberDTDAttrl",
        "fct-type": "function",
        "title": "rememberDTDAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "rememberDTDAttrl",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDAttrl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:removeAllComment",
      "description": {
        "fct-descr": "\u003cp\u003eremove all comments in a tree recursively\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#removeAllComment",
        "fct-type": "function",
        "title": "removeAllComment"
      },
      "index": {
        "description": "remove all comments in tree recursively",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "removeAllComment",
        "normalized": "",
        "package": "hxt",
        "partial": "All Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:removeAllWhiteSpace",
      "description": {
        "fct-descr": "\u003cp\u003esimple recursive filter for removing all whitespace.\n\u003c/p\u003e\u003cp\u003eremoves all text nodes in a tree that consist only of whitespace.\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003eremoveWhiteSpace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eremoveDocWhiteSpace\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#removeAllWhiteSpace",
        "fct-type": "function",
        "title": "removeAllWhiteSpace"
      },
      "index": {
        "description": "simple recursive filter for removing all whitespace removes all text nodes in tree that consist only of whitespace see also removeWhiteSpace removeDocWhiteSpace",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "removeAllWhiteSpace",
        "normalized": "",
        "package": "hxt",
        "partial": "All White Space",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:removeComment",
      "description": {
        "fct-descr": "\u003cp\u003eremove a Comment node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#removeComment",
        "fct-type": "function",
        "title": "removeComment"
      },
      "index": {
        "description": "remove Comment node",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "removeComment",
        "normalized": "",
        "package": "hxt",
        "partial": "Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:removeDocWhiteSpace",
      "description": {
        "fct-descr": "\u003cp\u003efilter for removing all not significant whitespace.\n\u003c/p\u003e\u003cp\u003ethe tree traversed for removing whitespace between elements,\n that was inserted for indentation and readability.\n whitespace is only removed at places, where it's not significat\n preserving whitespace may be controlled in a document tree\n by a tag attribute \u003ccode\u003exml:space\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eallowed values for this attribute are \u003ccode\u003edefault | preserve\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003einput is root node of the document to be cleaned up,\n output the semantically equivalent simplified tree\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003eindentDoc\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eremoveAllWhiteSpace\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#removeDocWhiteSpace",
        "fct-type": "function",
        "title": "removeDocWhiteSpace"
      },
      "index": {
        "description": "filter for removing all not significant whitespace the tree traversed for removing whitespace between elements that was inserted for indentation and readability whitespace is only removed at places where it not significat preserving whitespace may be controlled in document tree by tag attribute xml space allowed values for this attribute are default preserve input is root node of the document to be cleaned up output the semantically equivalent simplified tree see also indentDoc removeAllWhiteSpace",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "removeDocWhiteSpace",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc White Space",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:removeWhiteSpace",
      "description": {
        "fct-descr": "\u003cp\u003esimple filter for removing whitespace.\n\u003c/p\u003e\u003cp\u003eno check on sigificant whitespace, e.g. in HTML \u003cpre\u003e-elements, is done.\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003eremoveAllWhiteSpace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eremoveDocWhiteSpace\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#removeWhiteSpace",
        "fct-type": "function",
        "title": "removeWhiteSpace"
      },
      "index": {
        "description": "simple filter for removing whitespace no check on sigificant whitespace e.g in HTML pre elements is done see also removeAllWhiteSpace removeDocWhiteSpace",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "removeWhiteSpace",
        "normalized": "",
        "package": "hxt",
        "partial": "White Space",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:substAllXHTMLEntityRefs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#substAllXHTMLEntityRefs",
        "fct-type": "function",
        "title": "substAllXHTMLEntityRefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "substAllXHTMLEntityRefs",
        "normalized": "",
        "package": "hxt",
        "partial": "All XHTMLEntity Refs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:substXHTMLEntityRef",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#substXHTMLEntityRef",
        "fct-type": "function",
        "title": "substXHTMLEntityRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "substXHTMLEntityRef",
        "normalized": "",
        "package": "hxt",
        "partial": "XHTMLEntity Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:transfAllCdata",
      "description": {
        "fct-descr": "\u003cp\u003econverts CDATA sections in whole document tree into normal text nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#transfAllCdata",
        "fct-type": "function",
        "title": "transfAllCdata"
      },
      "index": {
        "description": "converts CDATA sections in whole document tree into normal text nodes",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "transfAllCdata",
        "normalized": "",
        "package": "hxt",
        "partial": "All Cdata",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:transfAllCharRef",
      "description": {
        "fct-descr": "\u003cp\u003erecursively converts all character references to normal text\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#transfAllCharRef",
        "fct-type": "function",
        "title": "transfAllCharRef"
      },
      "index": {
        "description": "recursively converts all character references to normal text",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "transfAllCharRef",
        "normalized": "",
        "package": "hxt",
        "partial": "All Char Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:transfCdata",
      "description": {
        "fct-descr": "\u003cp\u003econverts a CDATA section into normal text nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#transfCdata",
        "fct-type": "function",
        "title": "transfCdata"
      },
      "index": {
        "description": "converts CDATA section into normal text nodes",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "transfCdata",
        "normalized": "",
        "package": "hxt",
        "partial": "Cdata",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:transfCharRef",
      "description": {
        "fct-descr": "\u003cp\u003econverts a character reference to normal text\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#transfCharRef",
        "fct-type": "function",
        "title": "transfCharRef"
      },
      "index": {
        "description": "converts character reference to normal text",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "transfCharRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:treeRepOfXmlDoc",
      "description": {
        "fct-descr": "\u003cp\u003econvert a document into a text representation in tree form.\n\u003c/p\u003e\u003cp\u003eUseful for debugging and trace output.\n see also : \u003ccode\u003e\u003ca\u003ehaskellRepOfXmlDoc\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003enumberLinesInXmlDoc\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#treeRepOfXmlDoc",
        "fct-type": "function",
        "title": "treeRepOfXmlDoc"
      },
      "index": {
        "description": "convert document into text representation in tree form Useful for debugging and trace output see also haskellRepOfXmlDoc numberLinesInXmlDoc",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "treeRepOfXmlDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Rep Of Xml Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Edit.html#v:xshowEscapeXml",
      "description": {
        "fct-descr": "\u003cp\u003eapply an arrow to the input and convert the resulting XML trees into an XML escaped string\n\u003c/p\u003e\u003cp\u003eThis is a save variant for converting a tree into an XML string representation\n that is parsable with \u003ccode\u003e\u003ca\u003eReadDocument\u003c/a\u003e\u003c/code\u003e.\n It is implemented with \u003ccode\u003e\u003ca\u003exshow\u003c/a\u003e\u003c/code\u003e,\n but xshow does no XML escaping. The XML escaping is done with\n \u003ccode\u003e\u003ca\u003eescapeXmlDoc\u003c/a\u003e\u003c/code\u003e before xshow is applied.\n\u003c/p\u003e\u003cp\u003eSo the following law holds\n\u003c/p\u003e\u003cpre\u003e xshowEscapeXml f \u003e\u003e\u003e xread == f\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Edit",
        "fct-package": "hxt",
        "fct-signature": "a n XmlTree -\u003e a n String",
        "fct-source": "src/Text-XML-HXT-Arrow-Edit.html#xshowEscapeXml",
        "fct-type": "function",
        "title": "xshowEscapeXml"
      },
      "index": {
        "description": "apply an arrow to the input and convert the resulting XML trees into an XML escaped string This is save variant for converting tree into an XML string representation that is parsable with ReadDocument It is implemented with xshow but xshow does no XML escaping The XML escaping is done with escapeXmlDoc before xshow is applied So the following law holds xshowEscapeXml xread",
        "hierarchy": "Text XML HXT Arrow Edit",
        "module": "Text.XML.HXT.Arrow.Edit",
        "name": "xshowEscapeXml",
        "normalized": "a b XmlTree-\u003ea b String",
        "package": "hxt",
        "partial": "Escape Xml",
        "signature": "a n XmlTree-\u003ea n String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-GeneralEntitySubstitution.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003egeneral entity substitution\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.GeneralEntitySubstitution",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-GeneralEntitySubstitution.html",
        "fct-type": "module",
        "title": "GeneralEntitySubstitution"
      },
      "index": {
        "description": "general entity substitution",
        "hierarchy": "Text XML HXT Arrow GeneralEntitySubstitution",
        "module": "Text.XML.HXT.Arrow.GeneralEntitySubstitution",
        "name": "GeneralEntitySubstitution",
        "normalized": "",
        "package": "hxt",
        "partial": "General Entity Substitution",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-GeneralEntitySubstitution.html#v:processGeneralEntities",
      "description": {
        "fct-descr": "\u003cp\u003esubstitution of general entities\n\u003c/p\u003e\u003cp\u003einput: a complete document tree including root node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.GeneralEntitySubstitution",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-GeneralEntitySubstitution.html#processGeneralEntities",
        "fct-type": "function",
        "title": "processGeneralEntities"
      },
      "index": {
        "description": "substitution of general entities input complete document tree including root node",
        "hierarchy": "Text XML HXT Arrow GeneralEntitySubstitution",
        "module": "Text.XML.HXT.Arrow.GeneralEntitySubstitution",
        "name": "processGeneralEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "General Entities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003enamespace specific arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html",
        "fct-type": "module",
        "title": "Namespace"
      },
      "index": {
        "description": "namespace specific arrows",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "Namespace",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:attachNsEnv",
      "description": {
        "fct-descr": "\u003cp\u003eattach all valid namespace declarations to the attribute list of element nodes.\n\u003c/p\u003e\u003cp\u003eThis arrow is useful for document processing, that requires access to all namespace\n declarations at any element node, but which cannot be done with a simple \u003ccode\u003e\u003ca\u003eprocessWithNsEnv\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "NsEnv -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#attachNsEnv",
        "fct-type": "function",
        "title": "attachNsEnv"
      },
      "index": {
        "description": "attach all valid namespace declarations to the attribute list of element nodes This arrow is useful for document processing that requires access to all namespace declarations at any element node but which cannot be done with simple processWithNsEnv",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "attachNsEnv",
        "normalized": "NsEnv-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Ns Env",
        "signature": "NsEnv-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:cleanupNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003edoes the real work for namespace cleanup.\n\u003c/p\u003e\u003cp\u003eThe parameter is used for collecting namespace uris and prefixes from the input tree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree (String, String) -\u003e LA XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#cleanupNamespaces",
        "fct-type": "function",
        "title": "cleanupNamespaces"
      },
      "index": {
        "description": "does the real work for namespace cleanup The parameter is used for collecting namespace uris and prefixes from the input tree",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "cleanupNamespaces",
        "normalized": "LA XmlTree(String,String)-\u003eLA XmlTree XmlTree",
        "package": "hxt",
        "partial": "Namespaces",
        "signature": "LA XmlTree(String,String)-\u003eLA XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:collectNamespaceDecl",
      "description": {
        "fct-descr": "\u003cp\u003ecollect all namespace declarations contained in a document\n\u003c/p\u003e\u003cp\u003eapply \u003ccode\u003e\u003ca\u003egetNamespaceDecl\u003c/a\u003e\u003c/code\u003e to a whole XmlTree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree (String, String)",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#collectNamespaceDecl",
        "fct-type": "function",
        "title": "collectNamespaceDecl"
      },
      "index": {
        "description": "collect all namespace declarations contained in document apply getNamespaceDecl to whole XmlTree",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "collectNamespaceDecl",
        "normalized": "LA XmlTree(String,String)",
        "package": "hxt",
        "partial": "Namespace Decl",
        "signature": "LA XmlTree(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:collectPrefixUriPairs",
      "description": {
        "fct-descr": "\u003cp\u003ecollect all (namePrefix, namespaceUri) pairs from a tree\n\u003c/p\u003e\u003cp\u003eall qualified names are inspected, whether a namespace uri is defined,\n for these uris the prefix and uri is returned. This arrow is useful for\n namespace cleanup, e.g. for documents generated with XSLT. It can be used\n together with \u003ccode\u003e\u003ca\u003ecollectNamespaceDecl\u003c/a\u003e\u003c/code\u003e to \u003ccode\u003e\u003ca\u003ecleanupNamespaces\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree (String, String)",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#collectPrefixUriPairs",
        "fct-type": "function",
        "title": "collectPrefixUriPairs"
      },
      "index": {
        "description": "collect all namePrefix namespaceUri pairs from tree all qualified names are inspected whether namespace uri is defined for these uris the prefix and uri is returned This arrow is useful for namespace cleanup e.g for documents generated with XSLT It can be used together with collectNamespaceDecl to cleanupNamespaces",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "collectPrefixUriPairs",
        "normalized": "LA XmlTree(String,String)",
        "package": "hxt",
        "partial": "Prefix Uri Pairs",
        "signature": "LA XmlTree(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:getNamespaceDecl",
      "description": {
        "fct-descr": "\u003cp\u003eget the namespace prefix and the namespace URI out of\n an attribute tree with a namespace declaration (see \u003ccode\u003e\u003ca\u003eisNamespaceDeclAttr\u003c/a\u003e\u003c/code\u003e)\n for all other nodes this arrow fails\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree (String, String)",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#getNamespaceDecl",
        "fct-type": "function",
        "title": "getNamespaceDecl"
      },
      "index": {
        "description": "get the namespace prefix and the namespace URI out of an attribute tree with namespace declaration see isNamespaceDeclAttr for all other nodes this arrow fails",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "getNamespaceDecl",
        "normalized": "a XmlTree(String,String)",
        "package": "hxt",
        "partial": "Namespace Decl",
        "signature": "a XmlTree(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:isNamespaceDeclAttr",
      "description": {
        "fct-descr": "\u003cp\u003etest whether an attribute node contains an XML Namespace declaration\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#isNamespaceDeclAttr",
        "fct-type": "function",
        "title": "isNamespaceDeclAttr"
      },
      "index": {
        "description": "test whether an attribute node contains an XML Namespace declaration",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "isNamespaceDeclAttr",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace Decl Attr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:processWithNsEnv",
      "description": {
        "fct-descr": "\u003cp\u003eprocess a document tree with an arrow, containing always the\n valid namespace environment as extra parameter.\n\u003c/p\u003e\u003cp\u003eThe namespace environment is implemented as a \u003ccode\u003e\u003ca\u003eAssocList\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "(NsEnv -\u003e a XmlTree XmlTree) -\u003e NsEnv -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#processWithNsEnv",
        "fct-type": "function",
        "title": "processWithNsEnv"
      },
      "index": {
        "description": "process document tree with an arrow containing always the valid namespace environment as extra parameter The namespace environment is implemented as AssocList",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "processWithNsEnv",
        "normalized": "(NsEnv-\u003ea XmlTree XmlTree)-\u003eNsEnv-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "With Ns Env",
        "signature": "(NsEnv-\u003ea XmlTree XmlTree)-\u003eNsEnv-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:processWithNsEnvWithoutAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eprocess all element nodes of a document tree with an arrow, containing always the\n valid namespace environment as extra parameter. Attribute lists are not processed.\n\u003c/p\u003e\u003cp\u003eSee also: \u003ccode\u003e\u003ca\u003eprocessWithNsEnv\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "(NsEnv -\u003e a XmlTree XmlTree) -\u003e NsEnv -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#processWithNsEnvWithoutAttrl",
        "fct-type": "function",
        "title": "processWithNsEnvWithoutAttrl"
      },
      "index": {
        "description": "process all element nodes of document tree with an arrow containing always the valid namespace environment as extra parameter Attribute lists are not processed See also processWithNsEnv",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "processWithNsEnvWithoutAttrl",
        "normalized": "(NsEnv-\u003ea XmlTree XmlTree)-\u003eNsEnv-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "With Ns Env Without Attrl",
        "signature": "(NsEnv-\u003ea XmlTree XmlTree)-\u003eNsEnv-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:propagateNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003epropagate all namespace declarations \"xmlns:ns=...\" to all element and attribute nodes of a document.\n\u003c/p\u003e\u003cp\u003eThis arrow does not check for illegal use of namespaces.\n The real work is done by \u003ccode\u003epropagateNamespaceEnv\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eThe arrow may be applied repeatedly if neccessary.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#propagateNamespaces",
        "fct-type": "function",
        "title": "propagateNamespaces"
      },
      "index": {
        "description": "propagate all namespace declarations xmlns ns to all element and attribute nodes of document This arrow does not check for illegal use of namespaces The real work is done by propagateNamespaceEnv The arrow may be applied repeatedly if neccessary",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "propagateNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:uniqueNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003egenerate unique namespaces and add all namespace declarations to all top nodes containing a namespace declaration\n Usually the top node containing namespace declarations is the root node, but this isn't mandatory.\n\u003c/p\u003e\u003cp\u003eCalls \u003ccode\u003e\u003ca\u003ecleanupNamespaces\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003e\u003ca\u003ecollectNamespaceDecl\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#uniqueNamespaces",
        "fct-type": "function",
        "title": "uniqueNamespaces"
      },
      "index": {
        "description": "generate unique namespaces and add all namespace declarations to all top nodes containing namespace declaration Usually the top node containing namespace declarations is the root node but this isn mandatory Calls cleanupNamespaces with collectNamespaceDecl",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "uniqueNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:uniqueNamespacesFromDeclAndQNames",
      "description": {
        "fct-descr": "\u003cp\u003egenerate unique namespaces and add all namespace declarations for all prefix-uri pairs in all qualified names\n\u003c/p\u003e\u003cp\u003euseful for cleanup of namespaces in generated documents.\n Calls \u003ccode\u003e\u003ca\u003ecleanupNamespaces\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003e collectNamespaceDecl \u003c+\u003e collectPrefixUriPairs \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#uniqueNamespacesFromDeclAndQNames",
        "fct-type": "function",
        "title": "uniqueNamespacesFromDeclAndQNames"
      },
      "index": {
        "description": "generate unique namespaces and add all namespace declarations for all prefix-uri pairs in all qualified names useful for cleanup of namespaces in generated documents Calls cleanupNamespaces with collectNamespaceDecl collectPrefixUriPairs",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "uniqueNamespacesFromDeclAndQNames",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespaces From Decl And QNames",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Namespace.html#v:validateNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003evalidate the namespace constraints in a whole tree.\n\u003c/p\u003e\u003cp\u003eResult is the list of errors concerning namespaces.\n Predicates \u003ccode\u003e\u003ca\u003eisWellformedQName\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eisWellformedQualifiedName\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eisDeclaredNamespace\u003c/a\u003e\u003c/code\u003e\n and \u003ccode\u003e\u003ca\u003eisWellformedNSDecl\u003c/a\u003e\u003c/code\u003e are applied to the appropriate elements and attributes.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Namespace",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Namespace.html#validateNamespaces",
        "fct-type": "function",
        "title": "validateNamespaces"
      },
      "index": {
        "description": "validate the namespace constraints in whole tree Result is the list of errors concerning namespaces Predicates isWellformedQName isWellformedQualifiedName isDeclaredNamespace and isWellformedNSDecl are applied to the appropriate elements and attributes",
        "hierarchy": "Text XML HXT Arrow Namespace",
        "module": "Text.XML.HXT.Arrow.Namespace",
        "name": "validateNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003einterface to the HXT XML and DTD parsers\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html",
        "fct-type": "module",
        "title": "ParserInterface"
      },
      "index": {
        "description": "interface to the HXT XML and DTD parsers",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "ParserInterface",
        "normalized": "",
        "package": "hxt",
        "partial": "Parser Interface",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:hread",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#hread",
        "fct-type": "function",
        "title": "hread"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "hread",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:hreadDoc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#hreadDoc",
        "fct-type": "function",
        "title": "hreadDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "hreadDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseHtmlDoc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a (String, String) XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseHtmlDoc",
        "fct-type": "function",
        "title": "parseHtmlDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseHtmlDoc",
        "normalized": "a(String,String)XmlTree",
        "package": "hxt",
        "partial": "Html Doc",
        "signature": "a(String,String)XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlDTDEntityValue",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlDTDEntityValue",
        "fct-type": "function",
        "title": "parseXmlDTDEntityValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlDTDEntityValue",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml DTDEntity Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlDTDPart",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a (String, XmlTree) XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlDTDPart",
        "fct-type": "function",
        "title": "parseXmlDTDPart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlDTDPart",
        "normalized": "a(String,XmlTree)XmlTree",
        "package": "hxt",
        "partial": "Xml DTDPart",
        "signature": "a(String,XmlTree)XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlDTDdecl",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlDTDdecl",
        "fct-type": "function",
        "title": "parseXmlDTDdecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlDTDdecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml DTDdecl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlDTDdeclPart",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlDTDdeclPart",
        "fct-type": "function",
        "title": "parseXmlDTDdeclPart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlDTDdeclPart",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml DTDdecl Part",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlDoc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a (String, String) XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlDoc",
        "fct-type": "function",
        "title": "parseXmlDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlDoc",
        "normalized": "a(String,String)XmlTree",
        "package": "hxt",
        "partial": "Xml Doc",
        "signature": "a(String,String)XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlDocEncodingSpec",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlDocEncodingSpec",
        "fct-type": "function",
        "title": "parseXmlDocEncodingSpec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlDocEncodingSpec",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Doc Encoding Spec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlEntityEncodingSpec",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlEntityEncodingSpec",
        "fct-type": "function",
        "title": "parseXmlEntityEncodingSpec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlEntityEncodingSpec",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Entity Encoding Spec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlEntityValueAsAttrValue",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlEntityValueAsAttrValue",
        "fct-type": "function",
        "title": "parseXmlEntityValueAsAttrValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlEntityValueAsAttrValue",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Entity Value As Attr Value",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:parseXmlEntityValueAsContent",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#parseXmlEntityValueAsContent",
        "fct-type": "function",
        "title": "parseXmlEntityValueAsContent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "parseXmlEntityValueAsContent",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Entity Value As Content",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:removeEncodingSpec",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#removeEncodingSpec",
        "fct-type": "function",
        "title": "removeEncodingSpec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "removeEncodingSpec",
        "normalized": "",
        "package": "hxt",
        "partial": "Encoding Spec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:xreadCont",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#xreadCont",
        "fct-type": "function",
        "title": "xreadCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "xreadCont",
        "normalized": "",
        "package": "hxt",
        "partial": "Cont",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ParserInterface.html#v:xreadDoc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ParserInterface",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ParserInterface.html#xreadDoc",
        "fct-type": "function",
        "title": "xreadDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ParserInterface",
        "module": "Text.XML.HXT.Arrow.ParserInterface",
        "name": "xreadDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVersion    : $Id$\n\u003c/p\u003e\u003cp\u003eFunctions for converting a pickler schema\ninto a DTD\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html",
        "fct-type": "module",
        "title": "DTD"
      },
      "index": {
        "description": "Version Id Functions for converting pickler schema into DTD",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "DTD",
        "normalized": "",
        "package": "hxt",
        "partial": "DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#t:DTDdescr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#DTDdescr",
        "fct-type": "data",
        "title": "DTDdescr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "DTDdescr",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDdescr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:DTDdescr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "DTDdescr Name Schemas [(Name, Schemas)]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#DTDdescr",
        "fct-type": "function",
        "title": "DTDdescr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "DTDdescr",
        "normalized": "DTDdescr Name Schemas[(Name,Schemas)]",
        "package": "hxt",
        "partial": "DTDdescr",
        "signature": "DTDdescr Name Schemas[(Name,Schemas)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:attrDec",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e [(Name, Schemas)]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#attrDec",
        "fct-type": "function",
        "title": "attrDec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "attrDec",
        "normalized": "Schema-\u003e[(Name,Schemas)]",
        "package": "hxt",
        "partial": "Dec",
        "signature": "Schema-\u003e[(Name,Schemas)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:checkAM",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Name -\u003e Schema -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#checkAM",
        "fct-type": "function",
        "title": "checkAM"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "checkAM",
        "normalized": "Name-\u003eSchema-\u003eXmlTrees",
        "package": "hxt",
        "partial": "AM",
        "signature": "Name-\u003eSchema-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:checkAMC",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Name -\u003e Name -\u003e Schema -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#checkAMC",
        "fct-type": "function",
        "title": "checkAMC"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "checkAMC",
        "normalized": "Name-\u003eName-\u003eSchema-\u003eXmlTrees",
        "package": "hxt",
        "partial": "AMC",
        "signature": "Name-\u003eName-\u003eSchema-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:checkAttrModell",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Name -\u003e Schemas -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#checkAttrModell",
        "fct-type": "function",
        "title": "checkAttrModell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "checkAttrModell",
        "normalized": "Name-\u003eSchemas-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Attr Modell",
        "signature": "Name-\u003eSchemas-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:checkContentModell",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Name -\u003e Schema -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#checkContentModell",
        "fct-type": "function",
        "title": "checkContentModell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "checkContentModell",
        "normalized": "Name-\u003eSchema-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Content Modell",
        "signature": "Name-\u003eSchema-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:checkErr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#checkErr",
        "fct-type": "function",
        "title": "checkErr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "checkErr",
        "normalized": "Bool-\u003eString-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Err",
        "signature": "Bool-\u003eString-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:dtdDescr",
      "description": {
        "fct-descr": "\u003cp\u003econvert a pickler schema into a DTD descr\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e DTDdescr",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#dtdDescr",
        "fct-type": "function",
        "title": "dtdDescr"
      },
      "index": {
        "description": "convert pickler schema into DTD descr",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "dtdDescr",
        "normalized": "Schema-\u003eDTDdescr",
        "package": "hxt",
        "partial": "Descr",
        "signature": "Schema-\u003eDTDdescr"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:dtdDescrToXml",
      "description": {
        "fct-descr": "\u003cp\u003econvert a DTD descr into XmlTrees\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "DTDdescr -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#dtdDescrToXml",
        "fct-type": "function",
        "title": "dtdDescrToXml"
      },
      "index": {
        "description": "convert DTD descr into XmlTrees",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "dtdDescrToXml",
        "normalized": "DTDdescr-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Descr To Xml",
        "signature": "DTDdescr-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:elemName",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Maybe Name",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#elemName",
        "fct-type": "function",
        "title": "elemName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "elemName",
        "normalized": "Schema-\u003eMaybe Name",
        "package": "hxt",
        "partial": "Name",
        "signature": "Schema-\u003eMaybe Name"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:elemNames",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schemas -\u003e [Name]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#elemNames",
        "fct-type": "function",
        "title": "elemNames"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "elemNames",
        "normalized": "Schemas-\u003e[Name]",
        "package": "hxt",
        "partial": "Names",
        "signature": "Schemas-\u003e[Name]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:elemRefs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schemas -\u003e Schemas",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#elemRefs",
        "fct-type": "function",
        "title": "elemRefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "elemRefs",
        "normalized": "Schemas-\u003eSchemas",
        "package": "hxt",
        "partial": "Refs",
        "signature": "Schemas-\u003eSchemas"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:elementDeclarations",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schemas",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#elementDeclarations",
        "fct-type": "function",
        "title": "elementDeclarations"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "elementDeclarations",
        "normalized": "Schema-\u003eSchemas",
        "package": "hxt",
        "partial": "Declarations",
        "signature": "Schema-\u003eSchemas"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:elementDecs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schemas -\u003e Schemas -\u003e Schemas",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#elementDecs",
        "fct-type": "function",
        "title": "elementDecs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "elementDecs",
        "normalized": "Schemas-\u003eSchemas-\u003eSchemas",
        "package": "hxt",
        "partial": "Decs",
        "signature": "Schemas-\u003eSchemas-\u003eSchemas"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:foundErr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#foundErr",
        "fct-type": "function",
        "title": "foundErr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "foundErr",
        "normalized": "String-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Err",
        "signature": "String-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:remAttrDec",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#remAttrDec",
        "fct-type": "function",
        "title": "remAttrDec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "remAttrDec",
        "normalized": "Schema-\u003eSchema",
        "package": "hxt",
        "partial": "Attr Dec",
        "signature": "Schema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:scAttrToXml",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e (Attributes, XmlTrees)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#scAttrToXml",
        "fct-type": "function",
        "title": "scAttrToXml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "scAttrToXml",
        "normalized": "Schema-\u003e(Attributes,XmlTrees)",
        "package": "hxt",
        "partial": "Attr To Xml",
        "signature": "Schema-\u003e(Attributes,XmlTrees)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:scCont",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e Schema -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#scCont",
        "fct-type": "function",
        "title": "scCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "scCont",
        "normalized": "Attributes-\u003eSchema-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Cont",
        "signature": "Attributes-\u003eSchema-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:scContToXml",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e (Attributes, XmlTrees)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#scContToXml",
        "fct-type": "function",
        "title": "scContToXml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "scContToXml",
        "normalized": "Schema-\u003e(Attributes,XmlTrees)",
        "package": "hxt",
        "partial": "Cont To Xml",
        "signature": "Schema-\u003e(Attributes,XmlTrees)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:scConts",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e Schemas -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#scConts",
        "fct-type": "function",
        "title": "scConts"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "scConts",
        "normalized": "Attributes-\u003eSchemas-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Conts",
        "signature": "Attributes-\u003eSchemas-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-DTD.html#v:scWrap",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-DTD.html#scWrap",
        "fct-type": "function",
        "title": "scWrap"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle DTD",
        "module": "Text.XML.HXT.Arrow.Pickle.DTD",
        "name": "scWrap",
        "normalized": "Schema-\u003eSchema",
        "package": "hxt",
        "partial": "Wrap",
        "signature": "Schema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVersion    : $Id$\n\u003c/p\u003e\u003cp\u003eDatatypes and functions for building a content model\nfor XML picklers. A schema is part of every pickler\nand can be used to derive a corrensponding DTD (or Relax NG schema).\nThis schema further enables checking the picklers.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html",
        "fct-type": "module",
        "title": "Schema"
      },
      "index": {
        "description": "Version Id Datatypes and functions for building content model for XML picklers schema is part of every pickler and can be used to derive corrensponding DTD or Relax NG schema This schema further enables checking the picklers",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Schema",
        "normalized": "",
        "package": "hxt",
        "partial": "Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#t:DataTypeDescr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#DataTypeDescr",
        "fct-type": "data",
        "title": "DataTypeDescr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "DataTypeDescr",
        "normalized": "",
        "package": "hxt",
        "partial": "Data Type Descr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#t:Name",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Name",
        "fct-type": "type",
        "title": "Name"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Name",
        "normalized": "",
        "package": "hxt",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#t:Schema",
      "description": {
        "fct-descr": "\u003cp\u003eThe datatype for modelling the structure of an\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "data",
        "title": "Schema"
      },
      "index": {
        "description": "The datatype for modelling the structure of an",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Schema",
        "normalized": "",
        "package": "hxt",
        "partial": "Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#t:Schemas",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schemas",
        "fct-type": "type",
        "title": "Schemas"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Schemas",
        "normalized": "",
        "package": "hxt",
        "partial": "Schemas",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:Alt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Alt",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "Alt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Alt",
        "normalized": "",
        "package": "hxt",
        "partial": "Alt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:Any",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Any",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "Any"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Any",
        "normalized": "",
        "package": "hxt",
        "partial": "Any",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:Attribute",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Attribute",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "Attribute"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Attribute",
        "normalized": "",
        "package": "hxt",
        "partial": "Attribute",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:CharData",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "CharData",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "CharData"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "CharData",
        "normalized": "",
        "package": "hxt",
        "partial": "Char Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:DTDescr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "DTDescr",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#DataTypeDescr",
        "fct-type": "function",
        "title": "DTDescr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "DTDescr",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDescr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:ElemRef",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "ElemRef",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "ElemRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "ElemRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Elem Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:Element",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Element",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "Element"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Element",
        "normalized": "",
        "package": "hxt",
        "partial": "Element",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:Rep",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Rep",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "Rep"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Rep",
        "normalized": "",
        "package": "hxt",
        "partial": "Rep",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:Seq",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Seq",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "Seq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "Seq",
        "normalized": "",
        "package": "hxt",
        "partial": "Seq",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:dtLib",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#DataTypeDescr",
        "fct-type": "function",
        "title": "dtLib"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "dtLib",
        "normalized": "",
        "package": "hxt",
        "partial": "Lib",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:dtName",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#DataTypeDescr",
        "fct-type": "function",
        "title": "dtName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "dtName",
        "normalized": "",
        "package": "hxt",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:dtParams",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#DataTypeDescr",
        "fct-type": "function",
        "title": "dtParams"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "dtParams",
        "normalized": "",
        "package": "hxt",
        "partial": "Params",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScAttr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScAttr",
        "fct-type": "function",
        "title": "isScAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScAttr",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Attr",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScCharData",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScCharData",
        "fct-type": "function",
        "title": "isScCharData"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScCharData",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Char Data",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScElem",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScElem",
        "fct-type": "function",
        "title": "isScElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScElem",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Elem",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScElemRef",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScElemRef",
        "fct-type": "function",
        "title": "isScElemRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScElemRef",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Elem Ref",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScEnum",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScEnum",
        "fct-type": "function",
        "title": "isScEnum"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScEnum",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Enum",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScFixed",
      "description": {
        "fct-descr": "\u003cp\u003etest: is type a fixed value attribute type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScFixed",
        "fct-type": "function",
        "title": "isScFixed"
      },
      "index": {
        "description": "test is type fixed value attribute type",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScFixed",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Fixed",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScList",
        "fct-type": "function",
        "title": "isScList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScList",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc List",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScOpt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScOpt",
        "fct-type": "function",
        "title": "isScOpt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScOpt",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Opt",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScSARE",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScSARE",
        "fct-type": "function",
        "title": "isScSARE"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScSARE",
        "normalized": "Schema-\u003eBool",
        "package": "hxt",
        "partial": "Sc SARE",
        "signature": "Schema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:isScXsd",
      "description": {
        "fct-descr": "\u003cp\u003etest: is schema a simple XML Schema datatype\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e Bool) -\u003e Schema -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#isScXsd",
        "fct-type": "function",
        "title": "isScXsd"
      },
      "index": {
        "description": "test is schema simple XML Schema datatype",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "isScXsd",
        "normalized": "(String-\u003eBool)-\u003eSchema-\u003eBool",
        "package": "hxt",
        "partial": "Sc Xsd",
        "signature": "(String-\u003eBool)-\u003eSchema-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scAlt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scAlt",
        "fct-type": "function",
        "title": "scAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scAlt",
        "normalized": "Schema-\u003eSchema-\u003eSchema",
        "package": "hxt",
        "partial": "Alt",
        "signature": "Schema-\u003eSchema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scAlts",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "[Schema] -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scAlts",
        "fct-type": "function",
        "title": "scAlts"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scAlts",
        "normalized": "[Schema]-\u003eSchema",
        "package": "hxt",
        "partial": "Alts",
        "signature": "[Schema]-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scAttr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scAttr",
        "fct-type": "function",
        "title": "scAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scAttr",
        "normalized": "String-\u003eSchema-\u003eSchema",
        "package": "hxt",
        "partial": "Attr",
        "signature": "String-\u003eSchema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scDT",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e Attributes -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scDT",
        "fct-type": "function",
        "title": "scDT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scDT",
        "normalized": "String-\u003eString-\u003eAttributes-\u003eSchema",
        "package": "hxt",
        "partial": "DT",
        "signature": "String-\u003eString-\u003eAttributes-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scDTxsd",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Attributes -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scDTxsd",
        "fct-type": "function",
        "title": "scDTxsd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scDTxsd",
        "normalized": "String-\u003eAttributes-\u003eSchema",
        "package": "hxt",
        "partial": "DTxsd",
        "signature": "String-\u003eAttributes-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scElem",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scElem",
        "fct-type": "function",
        "title": "scElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scElem",
        "normalized": "String-\u003eSchema-\u003eSchema",
        "package": "hxt",
        "partial": "Elem",
        "signature": "String-\u003eSchema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scEmpty",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scEmpty",
        "fct-type": "function",
        "title": "scEmpty"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scEmpty",
        "normalized": "",
        "package": "hxt",
        "partial": "Empty",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scEnum",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scEnum",
        "fct-type": "function",
        "title": "scEnum"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scEnum",
        "normalized": "[String]-\u003eSchema",
        "package": "hxt",
        "partial": "Enum",
        "signature": "[String]-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scFixed",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scFixed",
        "fct-type": "function",
        "title": "scFixed"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scFixed",
        "normalized": "String-\u003eSchema",
        "package": "hxt",
        "partial": "Fixed",
        "signature": "String-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scList",
        "fct-type": "function",
        "title": "scList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scList",
        "normalized": "Schema-\u003eSchema",
        "package": "hxt",
        "partial": "List",
        "signature": "Schema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scList1",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scList1",
        "fct-type": "function",
        "title": "scList1"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scList1",
        "normalized": "Schema-\u003eSchema",
        "package": "hxt",
        "partial": "List",
        "signature": "Schema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scNmtoken",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scNmtoken",
        "fct-type": "function",
        "title": "scNmtoken"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scNmtoken",
        "normalized": "",
        "package": "hxt",
        "partial": "Nmtoken",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scNmtokens",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scNmtokens",
        "fct-type": "function",
        "title": "scNmtokens"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scNmtokens",
        "normalized": "",
        "package": "hxt",
        "partial": "Nmtokens",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scNull",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scNull",
        "fct-type": "function",
        "title": "scNull"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scNull",
        "normalized": "",
        "package": "hxt",
        "partial": "Null",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scOpt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scOpt",
        "fct-type": "function",
        "title": "scOpt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scOpt",
        "normalized": "Schema-\u003eSchema",
        "package": "hxt",
        "partial": "Opt",
        "signature": "Schema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scOption",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scOption",
        "fct-type": "function",
        "title": "scOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scOption",
        "normalized": "Schema-\u003eSchema",
        "package": "hxt",
        "partial": "Option",
        "signature": "Schema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scRep",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e Int -\u003e Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scRep",
        "fct-type": "function",
        "title": "scRep"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scRep",
        "normalized": "Int-\u003eInt-\u003eSchema-\u003eSchema",
        "package": "hxt",
        "partial": "Rep",
        "signature": "Int-\u003eInt-\u003eSchema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scSeq",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e Schema -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scSeq",
        "fct-type": "function",
        "title": "scSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scSeq",
        "normalized": "Schema-\u003eSchema-\u003eSchema",
        "package": "hxt",
        "partial": "Seq",
        "signature": "Schema-\u003eSchema-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scSeqs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "[Schema] -\u003e Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scSeqs",
        "fct-type": "function",
        "title": "scSeqs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scSeqs",
        "normalized": "[Schema]-\u003eSchema",
        "package": "hxt",
        "partial": "Seqs",
        "signature": "[Schema]-\u003eSchema"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scString",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scString",
        "fct-type": "function",
        "title": "scString"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scString",
        "normalized": "",
        "package": "hxt",
        "partial": "String",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:scString1",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#scString1",
        "fct-type": "function",
        "title": "scString1"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "scString1",
        "normalized": "",
        "package": "hxt",
        "partial": "String",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:sc_1",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "sc_1"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "sc_1",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:sc_dt",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "DataTypeDescr",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "sc_dt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "sc_dt",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:sc_l",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "[Schema]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "sc_l"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "sc_l",
        "normalized": "[Schema]",
        "package": "hxt",
        "partial": "",
        "signature": "[Schema]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:sc_lb",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "sc_lb"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "sc_lb",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:sc_n",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Name",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "sc_n"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "sc_n",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:sc_ub",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "function",
        "title": "sc_ub"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "sc_ub",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Schema.html#v:xsdParam",
      "description": {
        "fct-descr": "\u003cp\u003eaccess an attribute of a descr of an atomic type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Schema -\u003e String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#xsdParam",
        "fct-type": "function",
        "title": "xsdParam"
      },
      "index": {
        "description": "access an attribute of descr of an atomic type",
        "hierarchy": "Text XML HXT Arrow Pickle Schema",
        "module": "Text.XML.HXT.Arrow.Pickle.Schema",
        "name": "xsdParam",
        "normalized": "String-\u003eSchema-\u003eString",
        "package": "hxt",
        "partial": "Param",
        "signature": "String-\u003eSchema-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePickler functions for converting between user defined data types\n   and XmlTree data. Usefull for persistent storage and retreival\n   of arbitray data as XML documents.\n\u003c/p\u003e\u003cp\u003eThis module is an adaptation of the pickler combinators\n   developed by Andrew Kennedy\n   ( http://research.microsoft.com/~akenn/fun/picklercombinators.pdf ).\n\u003c/p\u003e\u003cp\u003eThe difference to Kennedys approach is that the target is not\n   a list of Chars but a list of XmlTrees. The basic picklers will\n   convert data into XML text nodes. New are the picklers for\n   creating elements and attributes.\n\u003c/p\u003e\u003cp\u003eOne extension was neccessary: The unpickling may fail.\n\u003c/p\u003e\u003cp\u003eOld: Therefore the unpickler has a Maybe result type.\n   Failure is used to unpickle optional elements\n   (Maybe data) and lists of arbitray length.\n\u003c/p\u003e\u003cp\u003eSince hxt-9.2.0: The unpicklers are implemented as\n   a parser monad with an Either err val result type.\n   This enables appropriate error messages , when unpickling\n   XML stuff, that is not generated with the picklers and which contains\n   some elements and/or attributes that are not handled when unpickling.\n\u003c/p\u003e\u003cp\u003eThere is an example program demonstrating the use\n   of the picklers for a none trivial data structure.\n   (see \"examples/arrows/pickle\" directory in the hxt distribution)\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html",
        "fct-type": "module",
        "title": "Xml"
      },
      "index": {
        "description": "Pickler functions for converting between user defined data types and XmlTree data Usefull for persistent storage and retreival of arbitray data as XML documents This module is an adaptation of the pickler combinators developed by Andrew Kennedy http research.microsoft.com akenn fun picklercombinators.pdf The difference to Kennedys approach is that the target is not list of Chars but list of XmlTrees The basic picklers will convert data into XML text nodes New are the picklers for creating elements and attributes One extension was neccessary The unpickling may fail Old Therefore the unpickler has Maybe result type Failure is used to unpickle optional elements Maybe data and lists of arbitray length Since hxt-9.2.0 The unpicklers are implemented as parser monad with an Either err val result type This enables appropriate error messages when unpickling XML stuff that is not generated with the picklers and which contains some elements and or attributes that are not handled when unpickling There is an example program demonstrating the use of the picklers for none trivial data structure see examples arrows pickle directory in the hxt distribution",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "Xml",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:PU",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "data",
        "title": "PU"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "PU",
        "normalized": "",
        "package": "hxt",
        "partial": "PU",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:Pickler",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#Pickler",
        "fct-type": "type",
        "title": "Pickler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "Pickler",
        "normalized": "",
        "package": "hxt",
        "partial": "Pickler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:St",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "data",
        "title": "St"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "St",
        "normalized": "",
        "package": "hxt",
        "partial": "St",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:UnpickleErr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#UnpickleErr",
        "fct-type": "type",
        "title": "UnpickleErr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "UnpickleErr",
        "normalized": "",
        "package": "hxt",
        "partial": "Unpickle Err",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:UnpickleVal",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#UnpickleVal",
        "fct-type": "type",
        "title": "UnpickleVal"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "UnpickleVal",
        "normalized": "",
        "package": "hxt",
        "partial": "Unpickle Val",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:Unpickler",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "newtype",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#Unpickler",
        "fct-type": "newtype",
        "title": "Unpickler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "Unpickler",
        "normalized": "",
        "package": "hxt",
        "partial": "Unpickler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#t:XmlPickler",
      "description": {
        "fct-descr": "\u003cp\u003eThe class for overloading \u003ccode\u003e\u003ca\u003expickle\u003c/a\u003e\u003c/code\u003e, the default pickler\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#XmlPickler",
        "fct-type": "class",
        "title": "XmlPickler"
      },
      "index": {
        "description": "The class for overloading xpickle the default pickler",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "XmlPickler",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pickler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:PU",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "PU"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "PU",
        "normalized": "",
        "package": "hxt",
        "partial": "PU",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:St",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "St",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "function",
        "title": "St"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "St",
        "normalized": "",
        "package": "hxt",
        "partial": "St",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:UP",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "UP",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#Unpickler",
        "fct-type": "function",
        "title": "UP"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "UP",
        "normalized": "",
        "package": "hxt",
        "partial": "UP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:appPickle",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Pickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "appPickle"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "appPickle",
        "normalized": "",
        "package": "hxt",
        "partial": "Pickle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:appUnPickle",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Unpickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "appUnPickle"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "appUnPickle",
        "normalized": "",
        "package": "hxt",
        "partial": "Un Pickle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:attributes",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "[XmlTree]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "function",
        "title": "attributes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "attributes",
        "normalized": "[XmlTree]",
        "package": "hxt",
        "partial": "",
        "signature": "[XmlTree]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:contents",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "[XmlTree]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "function",
        "title": "contents"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "contents",
        "normalized": "[XmlTree]",
        "package": "hxt",
        "partial": "",
        "signature": "[XmlTree]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:emptySt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "St",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#emptySt",
        "fct-type": "function",
        "title": "emptySt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "emptySt",
        "normalized": "",
        "package": "hxt",
        "partial": "St",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:findElem",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Bool) -\u003e [a] -\u003e Maybe (a, [a])",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#findElem",
        "fct-type": "function",
        "title": "findElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "findElem",
        "normalized": "(a-\u003eBool)-\u003e[a]-\u003eMaybe(a,[a])",
        "package": "hxt",
        "partial": "Elem",
        "signature": "(a-\u003eBool)-\u003e[a]-\u003eMaybe(a,[a])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:formatSt",
      "description": {
        "fct-descr": "\u003cp\u003eFormat the context of an error message.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "St -\u003e String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#formatSt",
        "fct-type": "function",
        "title": "formatSt"
      },
      "index": {
        "description": "Format the context of an error message",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "formatSt",
        "normalized": "St-\u003eString",
        "package": "hxt",
        "partial": "St",
        "signature": "St-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:getAtt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e Unpickler XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#getAtt",
        "fct-type": "function",
        "title": "getAtt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "getAtt",
        "normalized": "QName-\u003eUnpickler XmlTree",
        "package": "hxt",
        "partial": "Att",
        "signature": "QName-\u003eUnpickler XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:getCont",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Unpickler XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#getCont",
        "fct-type": "function",
        "title": "getCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "getCont",
        "normalized": "",
        "package": "hxt",
        "partial": "Cont",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:getNSAtt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Unpickler ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#getNSAtt",
        "fct-type": "function",
        "title": "getNSAtt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "getNSAtt",
        "normalized": "String-\u003eUnpickler()",
        "package": "hxt",
        "partial": "NSAtt",
        "signature": "String-\u003eUnpickler()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:liftMaybe",
      "description": {
        "fct-descr": "\u003cp\u003eLift a Maybe value into the Unpickler monad.\n\u003c/p\u003e\u003cp\u003eThe 1. arg is the attached error message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Maybe a -\u003e Unpickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#liftMaybe",
        "fct-type": "function",
        "title": "liftMaybe"
      },
      "index": {
        "description": "Lift Maybe value into the Unpickler monad The arg is the attached error message",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "liftMaybe",
        "normalized": "String-\u003eMaybe a-\u003eUnpickler a",
        "package": "hxt",
        "partial": "Maybe",
        "signature": "String-\u003eMaybe a-\u003eUnpickler a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:liftUnpickleVal",
      "description": {
        "fct-descr": "\u003cp\u003eLift an Either value into the Unpickler monad\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "UnpickleVal a -\u003e Unpickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#liftUnpickleVal",
        "fct-type": "function",
        "title": "liftUnpickleVal"
      },
      "index": {
        "description": "Lift an Either value into the Unpickler monad",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "liftUnpickleVal",
        "normalized": "UnpickleVal a-\u003eUnpickler a",
        "package": "hxt",
        "partial": "Unpickle Val",
        "signature": "UnpickleVal a-\u003eUnpickler a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:mchoice",
      "description": {
        "fct-descr": "\u003cp\u003eChoice combinator for unpickling\n\u003c/p\u003e\u003cp\u003efirst 2 arguments are applied sequentially, but if the 1. one fails the\n 3. arg is applied\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Unpickler a -\u003e (a -\u003e Unpickler b) -\u003e Unpickler b -\u003e Unpickler b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#mchoice",
        "fct-type": "function",
        "title": "mchoice"
      },
      "index": {
        "description": "Choice combinator for unpickling first arguments are applied sequentially but if the one fails the arg is applied",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "mchoice",
        "normalized": "Unpickler a-\u003e(a-\u003eUnpickler b)-\u003eUnpickler b-\u003eUnpickler b",
        "package": "hxt",
        "partial": "",
        "signature": "Unpickler a-\u003e(a-\u003eUnpickler b)-\u003eUnpickler b-\u003eUnpickler b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:nesting",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "function",
        "title": "nesting"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "nesting",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:pelem",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "function",
        "title": "pelem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "pelem",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:pickleDoc",
      "description": {
        "fct-descr": "\u003cp\u003econversion of an arbitrary value into an XML document tree.\n\u003c/p\u003e\u003cp\u003eThe pickler, first parameter, controls the conversion process.\n Result is a complete document tree including a root node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e a -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#pickleDoc",
        "fct-type": "function",
        "title": "pickleDoc"
      },
      "index": {
        "description": "conversion of an arbitrary value into an XML document tree The pickler first parameter controls the conversion process Result is complete document tree including root node",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "pickleDoc",
        "normalized": "PU a-\u003ea-\u003eXmlTree",
        "package": "hxt",
        "partial": "Doc",
        "signature": "PU a-\u003ea-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:pname",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "QName",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#St",
        "fct-type": "function",
        "title": "pname"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "pname",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:putAtt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e [XmlTree] -\u003e St -\u003e St",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#putAtt",
        "fct-type": "function",
        "title": "putAtt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "putAtt",
        "normalized": "QName-\u003e[XmlTree]-\u003eSt-\u003eSt",
        "package": "hxt",
        "partial": "Att",
        "signature": "QName-\u003e[XmlTree]-\u003eSt-\u003eSt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:putCont",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e St -\u003e St",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#putCont",
        "fct-type": "function",
        "title": "putCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "putCont",
        "normalized": "XmlTree-\u003eSt-\u003eSt",
        "package": "hxt",
        "partial": "Cont",
        "signature": "XmlTree-\u003eSt-\u003eSt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:runUP",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "St -\u003e (UnpickleVal a, St)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#Unpickler",
        "fct-type": "function",
        "title": "runUP"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "runUP",
        "normalized": "St-\u003e(UnpickleVal a,St)",
        "package": "hxt",
        "partial": "UP",
        "signature": "St-\u003e(UnpickleVal a,St)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:showPickled",
      "description": {
        "fct-descr": "\u003cp\u003ePickles a value, then writes the document to a string.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e a -\u003e String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#showPickled",
        "fct-type": "function",
        "title": "showPickled"
      },
      "index": {
        "description": "Pickles value then writes the document to string",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "showPickled",
        "normalized": "SysConfigList-\u003ea-\u003eString",
        "package": "hxt",
        "partial": "Pickled",
        "signature": "SysConfigList-\u003ea-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:theSchema",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "theSchema"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "theSchema",
        "normalized": "",
        "package": "hxt",
        "partial": "Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:throwMsg",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Unpickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#throwMsg",
        "fct-type": "function",
        "title": "throwMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "throwMsg",
        "normalized": "String-\u003eUnpickler a",
        "package": "hxt",
        "partial": "Msg",
        "signature": "String-\u003eUnpickler a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:unpickleDoc",
      "description": {
        "fct-descr": "\u003cp\u003eConversion of an XML document tree into an arbitrary data type\n\u003c/p\u003e\u003cp\u003eThe inverse of \u003ccode\u003e\u003ca\u003epickleDoc\u003c/a\u003e\u003c/code\u003e.\n This law should hold for all picklers: \u003ccode\u003e unpickle px . pickle px $ v == Just v \u003c/code\u003e.\n Not every possible combination of picklers does make sense.\n For reconverting a value from an XML tree, is becomes neccessary,\n to introduce \"enough\" markup for unpickling the value\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e XmlTree -\u003e Maybe a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#unpickleDoc",
        "fct-type": "function",
        "title": "unpickleDoc"
      },
      "index": {
        "description": "Conversion of an XML document tree into an arbitrary data type The inverse of pickleDoc This law should hold for all picklers unpickle px pickle px Just Not every possible combination of picklers does make sense For reconverting value from an XML tree is becomes neccessary to introduce enough markup for unpickling the value",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "unpickleDoc",
        "normalized": "PU a-\u003eXmlTree-\u003eMaybe a",
        "package": "hxt",
        "partial": "Doc",
        "signature": "PU a-\u003eXmlTree-\u003eMaybe a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:unpickleDoc-39-",
      "description": {
        "fct-descr": "\u003cp\u003eLike unpickleDoc but with a (sometimes) useful error message, when unpickling failed.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e XmlTree -\u003e Either String a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#unpickleDoc%27",
        "fct-type": "function",
        "title": "unpickleDoc'"
      },
      "index": {
        "description": "Like unpickleDoc but with sometimes useful error message when unpickling failed",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "unpickleDoc'",
        "normalized": "PU a-\u003eXmlTree-\u003eEither String a",
        "package": "hxt",
        "partial": "Doc'",
        "signature": "PU a-\u003eXmlTree-\u003eEither String a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:unpickleElem-39-",
      "description": {
        "fct-descr": "\u003cp\u003eThe main entry for unpickling, called by unpickleDoc\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e Int -\u003e XmlTree -\u003e UnpickleVal a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#unpickleElem%27",
        "fct-type": "function",
        "title": "unpickleElem'"
      },
      "index": {
        "description": "The main entry for unpickling called by unpickleDoc",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "unpickleElem'",
        "normalized": "PU a-\u003eInt-\u003eXmlTree-\u003eUnpickleVal a",
        "package": "hxt",
        "partial": "Elem'",
        "signature": "PU a-\u003eInt-\u003eXmlTree-\u003eUnpickleVal a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp10Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU (a, b, c, d, e, f, g, h, i, j)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp10Tuple",
        "fct-type": "function",
        "title": "xp10Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp10Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU(a,b,c,d,e,f,g,h,i,j)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU(a,b,c,d,e,f,g,h,i,j)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp11Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU (a, b, c, d, e, f, g, h, i, j, k)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp11Tuple",
        "fct-type": "function",
        "title": "xp11Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp11Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU(a,b,c,d,e,f,g,h,i,j,k)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU(a,b,c,d,e,f,g,h,i,j,k)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp12Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp12Tuple",
        "fct-type": "function",
        "title": "xp12Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp12Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp13Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp13Tuple",
        "fct-type": "function",
        "title": "xp13Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp13Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp14Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp14Tuple",
        "fct-type": "function",
        "title": "xp14Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp14Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp15Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp15Tuple",
        "fct-type": "function",
        "title": "xp15Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp15Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp16Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp16Tuple",
        "fct-type": "function",
        "title": "xp16Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp16Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp17Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp17Tuple",
        "fct-type": "function",
        "title": "xp17Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp17Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp18Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp18Tuple",
        "fct-type": "function",
        "title": "xp18Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp18Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp19Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp19Tuple",
        "fct-type": "function",
        "title": "xp19Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp19Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp20Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp20Tuple",
        "fct-type": "function",
        "title": "xp20Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp20Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp21Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp21Tuple",
        "fct-type": "function",
        "title": "xp21Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp21Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp22Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU v -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp22Tuple",
        "fct-type": "function",
        "title": "xp22Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp22Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp23Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU v -\u003e PU w -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp23Tuple",
        "fct-type": "function",
        "title": "xp23Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp23Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp24Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eHopefully no one needs a xp25Tuple\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU v -\u003e PU w -\u003e PU x -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp24Tuple",
        "fct-type": "function",
        "title": "xp24Tuple"
      },
      "index": {
        "description": "Hopefully no one needs xp25Tuple",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp24Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU x-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU x-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp4Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 4-tuples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU (a, b, c, d)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp4Tuple",
        "fct-type": "function",
        "title": "xp4Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp4Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU(a,b,c,d)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU(a,b,c,d)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp5Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 5-tuples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU (a, b, c, d, e)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp5Tuple",
        "fct-type": "function",
        "title": "xp5Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp5Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU(a,b,c,d,e)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU(a,b,c,d,e)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp6Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 6-tuples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU (a, b, c, d, e, f)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp6Tuple",
        "fct-type": "function",
        "title": "xp6Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp6Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU(a,b,c,d,e,f)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU(a,b,c,d,e,f)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp7Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 7-tuples\n\u003c/p\u003e\u003cp\u003eThanks to Tony Morris for doing xp7Tuple, ..., xp24Tuple.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU (a, b, c, d, e, f, g)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp7Tuple",
        "fct-type": "function",
        "title": "xp7Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples Thanks to Tony Morris for doing xp7Tuple xp24Tuple",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp7Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU(a,b,c,d,e,f,g)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU(a,b,c,d,e,f,g)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp8Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU (a, b, c, d, e, f, g, h)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp8Tuple",
        "fct-type": "function",
        "title": "xp8Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp8Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU(a,b,c,d,e,f,g,h)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU(a,b,c,d,e,f,g,h)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xp9Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU (a, b, c, d, e, f, g, h, i)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp9Tuple",
        "fct-type": "function",
        "title": "xp9Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xp9Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU(a,b,c,d,e,f,g,h,i)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU(a,b,c,d,e,f,g,h,i)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAddFixedAttr",
      "description": {
        "fct-descr": "\u003cp\u003eAdd/Check an attribute with a fixed value.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAddFixedAttr",
        "fct-type": "function",
        "title": "xpAddFixedAttr"
      },
      "index": {
        "description": "Add Check an attribute with fixed value",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAddFixedAttr",
        "normalized": "String-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Add Fixed Attr",
        "signature": "String-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAddNSDecl",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a namespace declaration.\n\u003c/p\u003e\u003cp\u003eWhen generating XML the namespace decl is added,\n when reading a document, the unpickler checks\n whether there is a namespace declaration for the given\n namespace URI (2. arg)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAddNSDecl",
        "fct-type": "function",
        "title": "xpAddNSDecl"
      },
      "index": {
        "description": "Add namespace declaration When generating XML the namespace decl is added when reading document the unpickler checks whether there is namespace declaration for the given namespace URI arg",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAddNSDecl",
        "normalized": "String-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Add NSDecl",
        "signature": "String-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAlt",
      "description": {
        "fct-descr": "\u003cp\u003ePickler for sum data types.\n\u003c/p\u003e\u003cp\u003eEvery constructor is mapped to an index into the list of picklers.\n The index is used only during pickling, not during unpickling, there the 1. match is taken\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Int) -\u003e [PU a] -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAlt",
        "fct-type": "function",
        "title": "xpAlt"
      },
      "index": {
        "description": "Pickler for sum data types Every constructor is mapped to an index into the list of picklers The index is used only during pickling not during unpickling there the match is taken",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAlt",
        "normalized": "(a-\u003eInt)-\u003e[PU a]-\u003ePU a",
        "package": "hxt",
        "partial": "Alt",
        "signature": "(a-\u003eInt)-\u003e[PU a]-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAttr",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpAttrQN\n\u003c/p\u003e\u003cpre\u003e xpAttr n = xpAttrQN (mkName n)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttr",
        "fct-type": "function",
        "title": "xpAttr"
      },
      "index": {
        "description": "convenient Pickler for xpAttrQN xpAttr xpAttrQN mkName",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAttr",
        "normalized": "String-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Attr",
        "signature": "String-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAttrFixed",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrFixed",
        "fct-type": "function",
        "title": "xpAttrFixed"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAttrFixed",
        "normalized": "String-\u003eString-\u003ePU()",
        "package": "hxt",
        "partial": "Attr Fixed",
        "signature": "String-\u003eString-\u003ePU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAttrImplied",
      "description": {
        "fct-descr": "\u003cp\u003eAdd an optional attribute for an optional value (Maybe a).\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a -\u003e PU (Maybe a)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrImplied",
        "fct-type": "function",
        "title": "xpAttrImplied"
      },
      "index": {
        "description": "Add an optional attribute for an optional value Maybe",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAttrImplied",
        "normalized": "String-\u003ePU a-\u003ePU(Maybe a)",
        "package": "hxt",
        "partial": "Attr Implied",
        "signature": "String-\u003ePU a-\u003ePU(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAttrNS",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpAttrQN\n\u003c/p\u003e\u003cpre\u003e xpAttr ns px lp = xpAttrQN (mkQName px lp ns)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrNS",
        "fct-type": "function",
        "title": "xpAttrNS"
      },
      "index": {
        "description": "convenient Pickler for xpAttrQN xpAttr ns px lp xpAttrQN mkQName px lp ns",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAttrNS",
        "normalized": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Attr NS",
        "signature": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAttrNSDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrNSDecl",
        "fct-type": "function",
        "title": "xpAttrNSDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAttrNSDecl",
        "normalized": "String-\u003eString-\u003ePU()",
        "package": "hxt",
        "partial": "Attr NSDecl",
        "signature": "String-\u003eString-\u003ePU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpAttrQN",
      "description": {
        "fct-descr": "\u003cp\u003ePickler for storing/retreiving data into/from an attribute value\n\u003c/p\u003e\u003cp\u003eThe attribute is inserted in the surrounding element constructed by the \u003ccode\u003e\u003ca\u003expElem\u003c/a\u003e\u003c/code\u003e pickler\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrQN",
        "fct-type": "function",
        "title": "xpAttrQN"
      },
      "index": {
        "description": "Pickler for storing retreiving data into from an attribute value The attribute is inserted in the surrounding element constructed by the xpElem pickler",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpAttrQN",
        "normalized": "QName-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Attr QN",
        "signature": "QName-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpCheckEmpty",
      "description": {
        "fct-descr": "\u003cp\u003eComposition of xpCheckEmptyContents and xpCheckAttributes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpCheckEmpty",
        "fct-type": "function",
        "title": "xpCheckEmpty"
      },
      "index": {
        "description": "Composition of xpCheckEmptyContents and xpCheckAttributes",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpCheckEmpty",
        "normalized": "PU a-\u003ePU a",
        "package": "hxt",
        "partial": "Check Empty",
        "signature": "PU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpCheckEmptyAttributes",
      "description": {
        "fct-descr": "\u003cp\u003eLike xpCheckEmptyContents, but checks the attribute list\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpCheckEmptyAttributes",
        "fct-type": "function",
        "title": "xpCheckEmptyAttributes"
      },
      "index": {
        "description": "Like xpCheckEmptyContents but checks the attribute list",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpCheckEmptyAttributes",
        "normalized": "PU a-\u003ePU a",
        "package": "hxt",
        "partial": "Check Empty Attributes",
        "signature": "PU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpCheckEmptyContents",
      "description": {
        "fct-descr": "\u003cp\u003eCheck EOF pickler.\n\u003c/p\u003e\u003cp\u003eWhen pickling, this behaves like the unit pickler.\n The unpickler fails, when there is some unprocessed XML contents left.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpCheckEmptyContents",
        "fct-type": "function",
        "title": "xpCheckEmptyContents"
      },
      "index": {
        "description": "Check EOF pickler When pickling this behaves like the unit pickler The unpickler fails when there is some unprocessed XML contents left",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpCheckEmptyContents",
        "normalized": "PU a-\u003ePU a",
        "package": "hxt",
        "partial": "Check Empty Contents",
        "signature": "PU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpChoice",
      "description": {
        "fct-descr": "\u003cp\u003ecombine tow picklers with a choice\n\u003c/p\u003e\u003cp\u003eRun two picklers in sequence like with xpSeq.\n When during unpickling the first one fails,\n an alternative pickler (first argument) is applied.\n This pickler is only used as combinator for unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e PU a -\u003e (a -\u003e PU b) -\u003e Unpickler b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpChoice",
        "fct-type": "function",
        "title": "xpChoice"
      },
      "index": {
        "description": "combine tow picklers with choice Run two picklers in sequence like with xpSeq When during unpickling the first one fails an alternative pickler first argument is applied This pickler is only used as combinator for unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpChoice",
        "normalized": "PU a-\u003ePU b-\u003e(b-\u003ePU a)-\u003eUnpickler a",
        "package": "hxt",
        "partial": "Choice",
        "signature": "PU b-\u003ePU a-\u003e(a-\u003ePU b)-\u003eUnpickler b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpDefault",
      "description": {
        "fct-descr": "\u003cp\u003eOptional conversion with default value\n\u003c/p\u003e\u003cp\u003eThe default value is not encoded in the XML document,\n during unpickling the default value is inserted if the pickler fails\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpDefault",
        "fct-type": "function",
        "title": "xpDefault"
      },
      "index": {
        "description": "Optional conversion with default value The default value is not encoded in the XML document during unpickling the default value is inserted if the pickler fails",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpDefault",
        "normalized": "a-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Default",
        "signature": "a-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpElem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpElemQN\n\u003c/p\u003e\u003cpre\u003e xpElem n = xpElemQN (mkName n)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElem",
        "fct-type": "function",
        "title": "xpElem"
      },
      "index": {
        "description": "convenient Pickler for xpElemQN xpElem xpElemQN mkName",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpElem",
        "normalized": "String-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem",
        "signature": "String-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpElemNS",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpElemQN\n   for pickling elements with respect to namespaces\n\u003c/p\u003e\u003cpre\u003e xpElemNS ns px lp = xpElemQN (mkQName px lp ns)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElemNS",
        "fct-type": "function",
        "title": "xpElemNS"
      },
      "index": {
        "description": "convenient Pickler for xpElemQN for pickling elements with respect to namespaces xpElemNS ns px lp xpElemQN mkQName px lp ns",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpElemNS",
        "normalized": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem NS",
        "signature": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpElemQN",
      "description": {
        "fct-descr": "\u003cp\u003ePickler for wrapping/unwrapping data into an XML element\n\u003c/p\u003e\u003cp\u003eExtra parameter is the element name given as a QName. THE pickler for constructing\n nested structures\n\u003c/p\u003e\u003cp\u003eExample:\n\u003c/p\u003e\u003cpre\u003e xpElemQN (mkName \"number\") $ xpickle\n\u003c/pre\u003e\u003cp\u003ewill map an (42::Int) onto\n\u003c/p\u003e\u003cpre\u003e \u003cnumber\u003e42\u003c/number\u003e\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElemQN",
        "fct-type": "function",
        "title": "xpElemQN"
      },
      "index": {
        "description": "Pickler for wrapping unwrapping data into an XML element Extra parameter is the element name given as QName THE pickler for constructing nested structures Example xpElemQN mkName number xpickle will map an Int onto number number",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpElemQN",
        "normalized": "QName-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem QN",
        "signature": "QName-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpElemWithAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003ePickler for wrapping/unwrapping data into an XML element with an attribute with given value\n\u003c/p\u003e\u003cp\u003eTo make XML structures flexible but limit the number of different elements, it's sometimes\n useful to use a kind of generic element with a key value structure\n\u003c/p\u003e\u003cp\u003eExample:\n\u003c/p\u003e\u003cpre\u003e \u003cattr name=\"key1\"\u003evalue1\u003c/attr\u003e\n \u003cattr name=\"key2\"\u003evalue2\u003c/attr\u003e\n \u003cattr name=\"key3\"\u003evalue3\u003c/attr\u003e\n\u003c/pre\u003e\u003cp\u003ethe Haskell datatype may look like this\n\u003c/p\u003e\u003cpre\u003e type T = T { key1 :: Int ; key2 :: String ; key3 :: Double }\n\u003c/pre\u003e\u003cp\u003eThen the picker for that type looks like this\n\u003c/p\u003e\u003cpre\u003e xpT :: PU T\n xpT = xpWrap ( uncurry3 T, \\ t -\u003e (key1 t, key2 t, key3 t) ) $\n       xpTriple (xpElemWithAttrValue \"attr\" \"name\" \"key1\" $ xpickle)\n                (xpElemWithAttrValue \"attr\" \"name\" \"key2\" $ xpText0)\n                (xpElemWithAttrValue \"attr\" \"name\" \"key3\" $ xpickle)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElemWithAttrValue",
        "fct-type": "function",
        "title": "xpElemWithAttrValue"
      },
      "index": {
        "description": "Pickler for wrapping unwrapping data into an XML element with an attribute with given value To make XML structures flexible but limit the number of different elements it sometimes useful to use kind of generic element with key value structure Example attr name key1 value1 attr attr name key2 value2 attr attr name key3 value3 attr the Haskell datatype may look like this type key1 Int key2 String key3 Double Then the picker for that type looks like this xpT PU xpT xpWrap uncurry3 key1 key2 key3 xpTriple xpElemWithAttrValue attr name key1 xpickle xpElemWithAttrValue attr name key2 xpText0 xpElemWithAttrValue attr name key3 xpickle",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpElemWithAttrValue",
        "normalized": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem With Attr Value",
        "signature": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpFilterAttr",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003expFilterCont\u003c/a\u003e\u003c/code\u003e but for the  attribute list of the element currently processed.\n\u003c/p\u003e\u003cp\u003eMaybe useful to ignore some stuff in the input, e.g. class attributes, or to do some cleanup before unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpFilterAttr",
        "fct-type": "function",
        "title": "xpFilterAttr"
      },
      "index": {
        "description": "Same as xpFilterCont but for the attribute list of the element currently processed Maybe useful to ignore some stuff in the input e.g class attributes or to do some cleanup before unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpFilterAttr",
        "normalized": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Filter Attr",
        "signature": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpFilterCont",
      "description": {
        "fct-descr": "\u003cp\u003eWhen unpickling, filter the contents of the element currently processed,\n before applying the pickler argument\n\u003c/p\u003e\u003cp\u003eMaybe useful to ignore some stuff in the input, or to do some cleanup before unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpFilterCont",
        "fct-type": "function",
        "title": "xpFilterCont"
      },
      "index": {
        "description": "When unpickling filter the contents of the element currently processed before applying the pickler argument Maybe useful to ignore some stuff in the input or to do some cleanup before unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpFilterCont",
        "normalized": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Filter Cont",
        "signature": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpIgnoreAttr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpIgnoreAttr",
        "fct-type": "function",
        "title": "xpIgnoreAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpIgnoreAttr",
        "normalized": "LA XmlTree XmlTree-\u003ePU()",
        "package": "hxt",
        "partial": "Ignore Attr",
        "signature": "LA XmlTree XmlTree-\u003ePU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpIgnoreCont",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpIgnoreCont",
        "fct-type": "function",
        "title": "xpIgnoreCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpIgnoreCont",
        "normalized": "LA XmlTree XmlTree-\u003ePU()",
        "package": "hxt",
        "partial": "Ignore Cont",
        "signature": "LA XmlTree XmlTree-\u003ePU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpIgnoreInput",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(([XmlTree] -\u003e [XmlTree]) -\u003e St -\u003e St) -\u003e LA XmlTree XmlTree -\u003e PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpIgnoreInput",
        "fct-type": "function",
        "title": "xpIgnoreInput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpIgnoreInput",
        "normalized": "(([XmlTree]-\u003e[XmlTree])-\u003eSt-\u003eSt)-\u003eLA XmlTree XmlTree-\u003ePU()",
        "package": "hxt",
        "partial": "Ignore Input",
        "signature": "(([XmlTree]-\u003e[XmlTree])-\u003eSt-\u003eSt)-\u003eLA XmlTree XmlTree-\u003ePU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpInt",
      "description": {
        "fct-descr": "\u003cp\u003ePickle an Int\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU Int",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpInt",
        "fct-type": "function",
        "title": "xpInt"
      },
      "index": {
        "description": "Pickle an Int",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpInt",
        "normalized": "",
        "package": "hxt",
        "partial": "Int",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpLift",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpLift",
        "fct-type": "function",
        "title": "xpLift"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpLift",
        "normalized": "a-\u003ePU a",
        "package": "hxt",
        "partial": "Lift",
        "signature": "a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpLiftEither",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Either String a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpLiftEither",
        "fct-type": "function",
        "title": "xpLiftEither"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpLiftEither",
        "normalized": "Either String a-\u003ePU a",
        "package": "hxt",
        "partial": "Lift Either",
        "signature": "Either String a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpLiftMaybe",
      "description": {
        "fct-descr": "\u003cp\u003eLift a Maybe value to a pickler.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eNothing\u003c/code\u003e is mapped to the zero pickler, \u003ccode\u003eJust x\u003c/code\u003e is pickled with \u003ccode\u003expLift x\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Maybe a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpLiftMaybe",
        "fct-type": "function",
        "title": "xpLiftMaybe"
      },
      "index": {
        "description": "Lift Maybe value to pickler Nothing is mapped to the zero pickler Just is pickled with xpLift",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpLiftMaybe",
        "normalized": "Maybe a-\u003ePU a",
        "package": "hxt",
        "partial": "Lift Maybe",
        "signature": "Maybe a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpList",
      "description": {
        "fct-descr": "\u003cp\u003eEncoding of list values by pickling all list elements sequentially.\n\u003c/p\u003e\u003cp\u003eUnpickler relies on failure for detecting the end of the list.\n The standard pickler for lists. Can also be used in combination with \u003ccode\u003e\u003ca\u003expWrap\u003c/a\u003e\u003c/code\u003e\n for constructing set and map picklers\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU [a]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpList",
        "fct-type": "function",
        "title": "xpList"
      },
      "index": {
        "description": "Encoding of list values by pickling all list elements sequentially Unpickler relies on failure for detecting the end of the list The standard pickler for lists Can also be used in combination with xpWrap for constructing set and map picklers",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpList",
        "normalized": "PU a-\u003ePU[a]",
        "package": "hxt",
        "partial": "List",
        "signature": "PU a-\u003ePU[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpList1",
      "description": {
        "fct-descr": "\u003cp\u003eEncoding of a none empty list of values\n\u003c/p\u003e\u003cp\u003eAttention: when calling this pickler with an empty list,\n an internal error \"head of empty list is raised\".\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU [a]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpList1",
        "fct-type": "function",
        "title": "xpList1"
      },
      "index": {
        "description": "Encoding of none empty list of values Attention when calling this pickler with an empty list an internal error head of empty list is raised",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpList1",
        "normalized": "PU a-\u003ePU[a]",
        "package": "hxt",
        "partial": "List",
        "signature": "PU a-\u003ePU[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpMap",
      "description": {
        "fct-descr": "\u003cp\u003eStandard pickler for maps\n\u003c/p\u003e\u003cp\u003eThis pickler converts a map into a list of pairs.\n All key value pairs are mapped to an element with name (1.arg),\n the key is encoded as an attribute named by the 2. argument,\n the 3. arg is the pickler for the keys, the last one for the values\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU k -\u003e PU v -\u003e PU (Map k v)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpMap",
        "fct-type": "function",
        "title": "xpMap"
      },
      "index": {
        "description": "Standard pickler for maps This pickler converts map into list of pairs All key value pairs are mapped to an element with name arg the key is encoded as an attribute named by the argument the arg is the pickler for the keys the last one for the values",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpMap",
        "normalized": "String-\u003eString-\u003ePU a-\u003ePU b-\u003ePU(Map a b)",
        "package": "hxt",
        "partial": "Map",
        "signature": "String-\u003eString-\u003ePU k-\u003ePU v-\u003ePU(Map k v)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpOption",
      "description": {
        "fct-descr": "\u003cp\u003eEncoding of optional data by ignoring the Nothing case during pickling\n and relying on failure during unpickling to recompute the Nothing case\n\u003c/p\u003e\u003cp\u003eThe default pickler for Maybe types\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU (Maybe a)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpOption",
        "fct-type": "function",
        "title": "xpOption"
      },
      "index": {
        "description": "Encoding of optional data by ignoring the Nothing case during pickling and relying on failure during unpickling to recompute the Nothing case The default pickler for Maybe types",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpOption",
        "normalized": "PU a-\u003ePU(Maybe a)",
        "package": "hxt",
        "partial": "Option",
        "signature": "PU a-\u003ePU(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpPair",
      "description": {
        "fct-descr": "\u003cp\u003epickle a pair of values sequentially\n\u003c/p\u003e\u003cp\u003eUsed for pairs or together with wrap for pickling\n algebraic data types with two components\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU (a, b)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpPair",
        "fct-type": "function",
        "title": "xpPair"
      },
      "index": {
        "description": "pickle pair of values sequentially Used for pairs or together with wrap for pickling algebraic data types with two components",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpPair",
        "normalized": "PU a-\u003ePU b-\u003ePU(a,b)",
        "package": "hxt",
        "partial": "Pair",
        "signature": "PU a-\u003ePU b-\u003ePU(a,b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpPrim",
      "description": {
        "fct-descr": "\u003cp\u003ePickle an arbitrary value by applyling show during pickling\n and read during unpickling.\n\u003c/p\u003e\u003cp\u003eReal pickling is then done with \u003ccode\u003e\u003ca\u003expText\u003c/a\u003e\u003c/code\u003e.\n One of the most often used pimitive picklers. Applicable for all\n types which are instances of \u003ccode\u003eRead\u003c/code\u003e and \u003ccode\u003eShow\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpPrim",
        "fct-type": "function",
        "title": "xpPrim"
      },
      "index": {
        "description": "Pickle an arbitrary value by applyling show during pickling and read during unpickling Real pickling is then done with xpText One of the most often used pimitive picklers Applicable for all types which are instances of Read and Show",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpPrim",
        "normalized": "",
        "package": "hxt",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpSeq",
      "description": {
        "fct-descr": "\u003cp\u003eCombine two picklers sequentially.\n\u003c/p\u003e\u003cp\u003eIf the first fails during\n unpickling, the whole unpickler fails\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e a) -\u003e PU a -\u003e (a -\u003e PU b) -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpSeq",
        "fct-type": "function",
        "title": "xpSeq"
      },
      "index": {
        "description": "Combine two picklers sequentially If the first fails during unpickling the whole unpickler fails",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpSeq",
        "normalized": "(a-\u003eb)-\u003ePU b-\u003e(b-\u003ePU a)-\u003ePU a",
        "package": "hxt",
        "partial": "Seq",
        "signature": "(b-\u003ea)-\u003ePU a-\u003e(a-\u003ePU b)-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpSeq-39-",
      "description": {
        "fct-descr": "\u003cp\u003eFirst apply a fixed pickler/unpickler, then a 2. one\n\u003c/p\u003e\u003cp\u003eIf the first fails during unpickling, the whole pickler fails.\n This can be used to check some properties of the input, e.g. whether\n a given fixed attribute or a namespace declaration exists (\u003ccode\u003e\u003ca\u003expAddFixedAttr\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003expAddNSDecl\u003c/a\u003e\u003c/code\u003e)\n or to filter the input, e.g. to ignore some elements or attributes (\u003ccode\u003e\u003ca\u003expFilterCont\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003expFilterAttr\u003c/a\u003e\u003c/code\u003e).\n\u003c/p\u003e\u003cp\u003eWhen pickling, this can be used to insert some fixed XML pieces, e.g. namespace declarations,\n class attributes or other stuff.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU () -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpSeq%27",
        "fct-type": "function",
        "title": "xpSeq'"
      },
      "index": {
        "description": "First apply fixed pickler unpickler then one If the first fails during unpickling the whole pickler fails This can be used to check some properties of the input e.g whether given fixed attribute or namespace declaration exists xpAddFixedAttr xpAddNSDecl or to filter the input e.g to ignore some elements or attributes xpFilterCont xpFilterAttr When pickling this can be used to insert some fixed XML pieces e.g namespace declarations class attributes or other stuff",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpSeq'",
        "normalized": "PU()-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Seq'",
        "signature": "PU()-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpText",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a string into an XML text node\n\u003c/p\u003e\u003cp\u003eOne of the most often used primitive picklers. Attention:\n For pickling empty strings use \u003ccode\u003e\u003ca\u003expText0\u003c/a\u003e\u003c/code\u003e. If the text has a more\n specific datatype than xsd:string, use \u003ccode\u003e\u003ca\u003expTextDT\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpText",
        "fct-type": "function",
        "title": "xpText"
      },
      "index": {
        "description": "Pickle string into an XML text node One of the most often used primitive picklers Attention For pickling empty strings use xpText0 If the text has more specific datatype than xsd string use xpTextDT",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpText",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpText0",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a possibly empty string into an XML node.\n\u003c/p\u003e\u003cp\u003eMust be used in all places, where empty strings are legal values.\n If the content of an element can be an empty string, this string disapears\n during storing the DOM into a document and reparse the document.\n So the empty text node becomes nothing, and the pickler must deliver an empty string,\n if there is no text node in the document.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpText0",
        "fct-type": "function",
        "title": "xpText0"
      },
      "index": {
        "description": "Pickle possibly empty string into an XML node Must be used in all places where empty strings are legal values If the content of an element can be an empty string this string disapears during storing the DOM into document and reparse the document So the empty text node becomes nothing and the pickler must deliver an empty string if there is no text node in the document",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpText0",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpText0DT",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a possibly empty string with a datatype description into an XML node.\n\u003c/p\u003e\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expText0\u003c/a\u003e\u003c/code\u003e but with extra Parameter for datatype description as in \u003ccode\u003e\u003ca\u003expTextDT\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpText0DT",
        "fct-type": "function",
        "title": "xpText0DT"
      },
      "index": {
        "description": "Pickle possibly empty string with datatype description into an XML node Like xpText0 but with extra Parameter for datatype description as in xpTextDT",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpText0DT",
        "normalized": "Schema-\u003ePU String",
        "package": "hxt",
        "partial": "Text DT",
        "signature": "Schema-\u003ePU String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpTextAttr",
      "description": {
        "fct-descr": "\u003cp\u003eA text attribute.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTextAttr",
        "fct-type": "function",
        "title": "xpTextAttr"
      },
      "index": {
        "description": "text attribute",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpTextAttr",
        "normalized": "String-\u003ePU String",
        "package": "hxt",
        "partial": "Text Attr",
        "signature": "String-\u003ePU String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpTextDT",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a string into an XML text node\n\u003c/p\u003e\u003cp\u003eText pickler with a description of the structure of the text\n by a schema. A schema for a data type can be defined by \u003ccode\u003e\u003ca\u003escDT\u003c/a\u003e\u003c/code\u003e.\n In \u003ccode\u003e\u003ca\u003eSchema\u003c/a\u003e\u003c/code\u003e there are some more functions for creating\n simple datatype descriptions.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTextDT",
        "fct-type": "function",
        "title": "xpTextDT"
      },
      "index": {
        "description": "Pickle string into an XML text node Text pickler with description of the structure of the text by schema schema for data type can be defined by scDT In Schema there are some more functions for creating simple datatype descriptions",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpTextDT",
        "normalized": "Schema-\u003ePU String",
        "package": "hxt",
        "partial": "Text DT",
        "signature": "Schema-\u003ePU String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpTree",
      "description": {
        "fct-descr": "\u003cp\u003ePickle an XmlTree by just adding it\n\u003c/p\u003e\u003cp\u003eUsefull for components of type XmlTree in other data structures\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTree",
        "fct-type": "function",
        "title": "xpTree"
      },
      "index": {
        "description": "Pickle an XmlTree by just adding it Usefull for components of type XmlTree in other data structures",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpTrees",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a whole list of XmlTrees by just adding the list, unpickle is done by taking all element contents.\n\u003c/p\u003e\u003cp\u003eThis pickler should always be combined with \u003ccode\u003e\u003ca\u003expElem\u003c/a\u003e\u003c/code\u003e for taking the whole contents of an element.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU [XmlTree]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTrees",
        "fct-type": "function",
        "title": "xpTrees"
      },
      "index": {
        "description": "Pickle whole list of XmlTrees by just adding the list unpickle is done by taking all element contents This pickler should always be combined with xpElem for taking the whole contents of an element",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpTrees",
        "normalized": "PU[XmlTree]",
        "package": "hxt",
        "partial": "Trees",
        "signature": "PU[XmlTree]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpTriple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e but for triples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU (a, b, c)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTriple",
        "fct-type": "function",
        "title": "xpTriple"
      },
      "index": {
        "description": "Like xpPair but for triples",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpTriple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU(a,b,c)",
        "package": "hxt",
        "partial": "Triple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU(a,b,c)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpUnit",
      "description": {
        "fct-descr": "\u003cp\u003eunit pickler\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpUnit",
        "fct-type": "function",
        "title": "xpUnit"
      },
      "index": {
        "description": "unit pickler",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpUnit",
        "normalized": "PU()",
        "package": "hxt",
        "partial": "Unit",
        "signature": "PU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpWrap",
      "description": {
        "fct-descr": "\u003cp\u003emap value into another domain and apply pickler there\n\u003c/p\u003e\u003cp\u003eOne of the most often used picklers.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e b, b -\u003e a) -\u003e PU a -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpWrap",
        "fct-type": "function",
        "title": "xpWrap"
      },
      "index": {
        "description": "map value into another domain and apply pickler there One of the most often used picklers",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpWrap",
        "normalized": "(a-\u003eb,b-\u003ea)-\u003ePU a-\u003ePU b",
        "package": "hxt",
        "partial": "Wrap",
        "signature": "(a-\u003eb,b-\u003ea)-\u003ePU a-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpWrapEither",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003expWrap\u003c/a\u003e\u003c/code\u003e, but if the inverse mapping is undefined, the unpickler fails\n\u003c/p\u003e\u003cp\u003eMap a value into another domain. If the inverse mapping is\n undefined, the unpickler fails with an error message in the Left component\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Either String b, b -\u003e a) -\u003e PU a -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpWrapEither",
        "fct-type": "function",
        "title": "xpWrapEither"
      },
      "index": {
        "description": "like xpWrap but if the inverse mapping is undefined the unpickler fails Map value into another domain If the inverse mapping is undefined the unpickler fails with an error message in the Left component",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpWrapEither",
        "normalized": "(a-\u003eEither String b,b-\u003ea)-\u003ePU a-\u003ePU b",
        "package": "hxt",
        "partial": "Wrap Either",
        "signature": "(a-\u003eEither String b,b-\u003ea)-\u003ePU a-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpWrapMaybe",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003expWrap\u003c/a\u003e\u003c/code\u003e, but if the inverse mapping is undefined, the unpickler fails\n\u003c/p\u003e\u003cp\u003eMap a value into another domain. If the inverse mapping is\n undefined (Nothing), the unpickler fails\n\u003c/p\u003e\u003cp\u003eDeprecated: Use xpWrapEither, this gives better error messages\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Maybe b, b -\u003e a) -\u003e PU a -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpWrapMaybe",
        "fct-type": "function",
        "title": "xpWrapMaybe"
      },
      "index": {
        "description": "like xpWrap but if the inverse mapping is undefined the unpickler fails Map value into another domain If the inverse mapping is undefined Nothing the unpickler fails Deprecated Use xpWrapEither this gives better error messages",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpWrapMaybe",
        "normalized": "(a-\u003eMaybe b,b-\u003ea)-\u003ePU a-\u003ePU b",
        "package": "hxt",
        "partial": "Wrap Maybe",
        "signature": "(a-\u003eMaybe b,b-\u003ea)-\u003ePU a-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpXmlText",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a string representing XML contents by inserting the tree representation into the XML document.\n\u003c/p\u003e\u003cp\u003eUnpickling is done by converting the contents with\n \u003ccode\u003e\u003ca\u003exshowEscapeXml\u003c/a\u003e\u003c/code\u003e into a string,\n this function will escape all XML special chars, such that pickling the value back becomes save.\n Pickling is done with \u003ccode\u003e\u003ca\u003exread\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpXmlText",
        "fct-type": "function",
        "title": "xpXmlText"
      },
      "index": {
        "description": "Pickle string representing XML contents by inserting the tree representation into the XML document Unpickling is done by converting the contents with xshowEscapeXml into string this function will escape all XML special chars such that pickling the value back becomes save Pickling is done with xread",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpXmlText",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpZero",
      "description": {
        "fct-descr": "\u003cp\u003eThe zero pickler\n\u003c/p\u003e\u003cp\u003eEncodes nothing, fails always during unpickling\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpZero",
        "fct-type": "function",
        "title": "xpZero"
      },
      "index": {
        "description": "The zero pickler Encodes nothing fails always during unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpZero",
        "normalized": "String-\u003ePU a",
        "package": "hxt",
        "partial": "Zero",
        "signature": "String-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle-Xml.html#v:xpickle",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "fct-package": "hxt",
        "fct-signature": "PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpickle",
        "fct-type": "method",
        "title": "xpickle"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle Xml",
        "module": "Text.XML.HXT.Arrow.Pickle.Xml",
        "name": "xpickle",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePickler functions for converting between user defined data types\nand XmlTree data. Usefull for persistent storage and retreival\nof arbitray data as XML documents\n\u003c/p\u003e\u003cp\u003eThis module is an adaptation of the pickler combinators\ndeveloped by Andrew Kennedy\n( http://research.microsoft.com/~akenn/fun/picklercombinators.pdf )\n\u003c/p\u003e\u003cp\u003eThe difference to Kennedys approach is that the target is not\na list of Chars but a list of XmlTrees. The basic picklers will\nconvert data into XML text nodes. New are the picklers for\ncreating elements and attributes.\n\u003c/p\u003e\u003cp\u003eOne extension was neccessary: The unpickling may fail.\nTherefore the unpickler has a Maybe result type.\nFailure is used to unpickle optional elements\n(Maybe data) and lists of arbitray length\n\u003c/p\u003e\u003cp\u003eThere is an example program demonstrating the use\nof the picklers for a none trivial data structure.\n(see \"examples/arrows/pickle\" directory)\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html",
        "fct-type": "module",
        "title": "Pickle"
      },
      "index": {
        "description": "Pickler functions for converting between user defined data types and XmlTree data Usefull for persistent storage and retreival of arbitray data as XML documents This module is an adaptation of the pickler combinators developed by Andrew Kennedy http research.microsoft.com akenn fun picklercombinators.pdf The difference to Kennedys approach is that the target is not list of Chars but list of XmlTrees The basic picklers will convert data into XML text nodes New are the picklers for creating elements and attributes One extension was neccessary The unpickling may fail Therefore the unpickler has Maybe result type Failure is used to unpickle optional elements Maybe data and lists of arbitray length There is an example program demonstrating the use of the picklers for none trivial data structure see examples arrows pickle directory",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "Pickle",
        "normalized": "",
        "package": "hxt",
        "partial": "Pickle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#t:DataTypeDescr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#DataTypeDescr",
        "fct-type": "data",
        "title": "DataTypeDescr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "DataTypeDescr",
        "normalized": "",
        "package": "hxt",
        "partial": "Data Type Descr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#t:PU",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "data",
        "title": "PU"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "PU",
        "normalized": "",
        "package": "hxt",
        "partial": "PU",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#t:Schema",
      "description": {
        "fct-descr": "\u003cp\u003eThe datatype for modelling the structure of an\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schema",
        "fct-type": "data",
        "title": "Schema"
      },
      "index": {
        "description": "The datatype for modelling the structure of an",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "Schema",
        "normalized": "",
        "package": "hxt",
        "partial": "Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#t:Schemas",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Schema.html#Schemas",
        "fct-type": "type",
        "title": "Schemas"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "Schemas",
        "normalized": "",
        "package": "hxt",
        "partial": "Schemas",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#t:XmlPickler",
      "description": {
        "fct-descr": "\u003cp\u003eThe class for overloading \u003ccode\u003e\u003ca\u003expickle\u003c/a\u003e\u003c/code\u003e, the default pickler\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#XmlPickler",
        "fct-type": "class",
        "title": "XmlPickler"
      },
      "index": {
        "description": "The class for overloading xpickle the default pickler",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "XmlPickler",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pickler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:PU",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "PU"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "PU",
        "normalized": "",
        "package": "hxt",
        "partial": "PU",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:a_addDTD",
      "description": {
        "fct-descr": "\u003cp\u003eOption for generating and adding DTD when document is pickled\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#a_addDTD",
        "fct-type": "function",
        "title": "a_addDTD"
      },
      "index": {
        "description": "Option for generating and adding DTD when document is pickled",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "a_addDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:appPickle",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Pickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "appPickle"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "appPickle",
        "normalized": "",
        "package": "hxt",
        "partial": "Pickle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:appUnPickle",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Unpickler a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "appUnPickle"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "appUnPickle",
        "normalized": "",
        "package": "hxt",
        "partial": "Un Pickle",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:checkPickler",
      "description": {
        "fct-descr": "\u003cp\u003eAn arrow for checking picklers\n\u003c/p\u003e\u003cp\u003eA value is transformed into an XML document by a given pickler,\n the associated DTD is extracted from the pickler and checked,\n the document including the DTD is tranlated into a string,\n this string is read and validated against the included DTD,\n and unpickled.\n The last step is the equality with the input.\n\u003c/p\u003e\u003cp\u003eIf the check succeeds, the arrow works like this, else it fails.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e IOStateArrow s a a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#checkPickler",
        "fct-type": "function",
        "title": "checkPickler"
      },
      "index": {
        "description": "An arrow for checking picklers value is transformed into an XML document by given pickler the associated DTD is extracted from the pickler and checked the document including the DTD is tranlated into string this string is read and validated against the included DTD and unpickled The last step is the equality with the input If the check succeeds the arrow works like this else it fails",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "checkPickler",
        "normalized": "PU a-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "Pickler",
        "signature": "PU a-\u003eIOStateArrow s a a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:pickleDoc",
      "description": {
        "fct-descr": "\u003cp\u003econversion of an arbitrary value into an XML document tree.\n\u003c/p\u003e\u003cp\u003eThe pickler, first parameter, controls the conversion process.\n Result is a complete document tree including a root node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e a -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#pickleDoc",
        "fct-type": "function",
        "title": "pickleDoc"
      },
      "index": {
        "description": "conversion of an arbitrary value into an XML document tree The pickler first parameter controls the conversion process Result is complete document tree including root node",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "pickleDoc",
        "normalized": "PU a-\u003ea-\u003eXmlTree",
        "package": "hxt",
        "partial": "Doc",
        "signature": "PU a-\u003ea-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:showPickled",
      "description": {
        "fct-descr": "\u003cp\u003ePickles a value, then writes the document to a string.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e a -\u003e String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#showPickled",
        "fct-type": "function",
        "title": "showPickled"
      },
      "index": {
        "description": "Pickles value then writes the document to string",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "showPickled",
        "normalized": "SysConfigList-\u003ea-\u003eString",
        "package": "hxt",
        "partial": "Pickled",
        "signature": "SysConfigList-\u003ea-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:thePicklerDTD",
      "description": {
        "fct-descr": "\u003cp\u003eCompute the associated DTD of a pickler\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#thePicklerDTD",
        "fct-type": "function",
        "title": "thePicklerDTD"
      },
      "index": {
        "description": "Compute the associated DTD of pickler",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "thePicklerDTD",
        "normalized": "PU a-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Pickler DTD",
        "signature": "PU b-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:theSchema",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Schema",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#PU",
        "fct-type": "function",
        "title": "theSchema"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "theSchema",
        "normalized": "",
        "package": "hxt",
        "partial": "Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:unpickleDoc",
      "description": {
        "fct-descr": "\u003cp\u003eConversion of an XML document tree into an arbitrary data type\n\u003c/p\u003e\u003cp\u003eThe inverse of \u003ccode\u003e\u003ca\u003epickleDoc\u003c/a\u003e\u003c/code\u003e.\n This law should hold for all picklers: \u003ccode\u003e unpickle px . pickle px $ v == Just v \u003c/code\u003e.\n Not every possible combination of picklers does make sense.\n For reconverting a value from an XML tree, is becomes neccessary,\n to introduce \"enough\" markup for unpickling the value\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e XmlTree -\u003e Maybe a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#unpickleDoc",
        "fct-type": "function",
        "title": "unpickleDoc"
      },
      "index": {
        "description": "Conversion of an XML document tree into an arbitrary data type The inverse of pickleDoc This law should hold for all picklers unpickle px pickle px Just Not every possible combination of picklers does make sense For reconverting value from an XML tree is becomes neccessary to introduce enough markup for unpickling the value",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "unpickleDoc",
        "normalized": "PU a-\u003eXmlTree-\u003eMaybe a",
        "package": "hxt",
        "partial": "Doc",
        "signature": "PU a-\u003eXmlTree-\u003eMaybe a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:unpickleDoc-39-",
      "description": {
        "fct-descr": "\u003cp\u003eLike unpickleDoc but with a (sometimes) useful error message, when unpickling failed.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e XmlTree -\u003e Either String a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#unpickleDoc%27",
        "fct-type": "function",
        "title": "unpickleDoc'"
      },
      "index": {
        "description": "Like unpickleDoc but with sometimes useful error message when unpickling failed",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "unpickleDoc'",
        "normalized": "PU a-\u003eXmlTree-\u003eEither String a",
        "package": "hxt",
        "partial": "Doc'",
        "signature": "PU a-\u003eXmlTree-\u003eEither String a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp10Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU (a, b, c, d, e, f, g, h, i, j)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp10Tuple",
        "fct-type": "function",
        "title": "xp10Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp10Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU(a,b,c,d,e,f,g,h,i,j)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU(a,b,c,d,e,f,g,h,i,j)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp11Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU (a, b, c, d, e, f, g, h, i, j, k)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp11Tuple",
        "fct-type": "function",
        "title": "xp11Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp11Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU(a,b,c,d,e,f,g,h,i,j,k)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU(a,b,c,d,e,f,g,h,i,j,k)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp12Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp12Tuple",
        "fct-type": "function",
        "title": "xp12Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp12Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp13Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp13Tuple",
        "fct-type": "function",
        "title": "xp13Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp13Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp14Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp14Tuple",
        "fct-type": "function",
        "title": "xp14Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp14Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp15Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp15Tuple",
        "fct-type": "function",
        "title": "xp15Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp15Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp16Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp16Tuple",
        "fct-type": "function",
        "title": "xp16Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp16Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp17Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp17Tuple",
        "fct-type": "function",
        "title": "xp17Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp17Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp18Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp18Tuple",
        "fct-type": "function",
        "title": "xp18Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp18Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp19Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp19Tuple",
        "fct-type": "function",
        "title": "xp19Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp19Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp20Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp20Tuple",
        "fct-type": "function",
        "title": "xp20Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp20Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp21Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp21Tuple",
        "fct-type": "function",
        "title": "xp21Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp21Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp22Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU v -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp22Tuple",
        "fct-type": "function",
        "title": "xp22Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp22Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp23Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU v -\u003e PU w -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp23Tuple",
        "fct-type": "function",
        "title": "xp23Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp23Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp24Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eHopefully no one needs a xp25Tuple\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU j -\u003e PU k -\u003e PU l -\u003e PU m -\u003e PU n -\u003e PU o -\u003e PU p -\u003e PU q -\u003e PU r -\u003e PU s -\u003e PU t -\u003e PU u -\u003e PU v -\u003e PU w -\u003e PU x -\u003e PU (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp24Tuple",
        "fct-type": "function",
        "title": "xp24Tuple"
      },
      "index": {
        "description": "Hopefully no one needs xp25Tuple",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp24Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU x-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU j-\u003ePU k-\u003ePU l-\u003ePU m-\u003ePU n-\u003ePU o-\u003ePU p-\u003ePU q-\u003ePU r-\u003ePU s-\u003ePU t-\u003ePU u-\u003ePU v-\u003ePU w-\u003ePU x-\u003ePU(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp4Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 4-tuples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU (a, b, c, d)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp4Tuple",
        "fct-type": "function",
        "title": "xp4Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp4Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU(a,b,c,d)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU(a,b,c,d)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp5Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 5-tuples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU (a, b, c, d, e)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp5Tuple",
        "fct-type": "function",
        "title": "xp5Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp5Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU(a,b,c,d,e)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU(a,b,c,d,e)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp6Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 6-tuples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU (a, b, c, d, e, f)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp6Tuple",
        "fct-type": "function",
        "title": "xp6Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp6Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU(a,b,c,d,e,f)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU(a,b,c,d,e,f)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp7Tuple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003expTriple\u003c/a\u003e\u003c/code\u003e but for 7-tuples\n\u003c/p\u003e\u003cp\u003eThanks to Tony Morris for doing xp7Tuple, ..., xp24Tuple.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU (a, b, c, d, e, f, g)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp7Tuple",
        "fct-type": "function",
        "title": "xp7Tuple"
      },
      "index": {
        "description": "Like xpPair and xpTriple but for tuples Thanks to Tony Morris for doing xp7Tuple xp24Tuple",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp7Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU(a,b,c,d,e,f,g)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU(a,b,c,d,e,f,g)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp8Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU (a, b, c, d, e, f, g, h)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp8Tuple",
        "fct-type": "function",
        "title": "xp8Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp8Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU(a,b,c,d,e,f,g,h)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU(a,b,c,d,e,f,g,h)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xp9Tuple",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU d -\u003e PU e -\u003e PU f -\u003e PU g -\u003e PU h -\u003e PU i -\u003e PU (a, b, c, d, e, f, g, h, i)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xp9Tuple",
        "fct-type": "function",
        "title": "xp9Tuple"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xp9Tuple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU(a,b,c,d,e,f,g,h,i)",
        "package": "hxt",
        "partial": "Tuple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU d-\u003ePU e-\u003ePU f-\u003ePU g-\u003ePU h-\u003ePU i-\u003ePU(a,b,c,d,e,f,g,h,i)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAddFixedAttr",
      "description": {
        "fct-descr": "\u003cp\u003eAdd/Check an attribute with a fixed value.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAddFixedAttr",
        "fct-type": "function",
        "title": "xpAddFixedAttr"
      },
      "index": {
        "description": "Add Check an attribute with fixed value",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAddFixedAttr",
        "normalized": "String-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Add Fixed Attr",
        "signature": "String-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAddNSDecl",
      "description": {
        "fct-descr": "\u003cp\u003eAdd a namespace declaration.\n\u003c/p\u003e\u003cp\u003eWhen generating XML the namespace decl is added,\n when reading a document, the unpickler checks\n whether there is a namespace declaration for the given\n namespace URI (2. arg)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAddNSDecl",
        "fct-type": "function",
        "title": "xpAddNSDecl"
      },
      "index": {
        "description": "Add namespace declaration When generating XML the namespace decl is added when reading document the unpickler checks whether there is namespace declaration for the given namespace URI arg",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAddNSDecl",
        "normalized": "String-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Add NSDecl",
        "signature": "String-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAlt",
      "description": {
        "fct-descr": "\u003cp\u003ePickler for sum data types.\n\u003c/p\u003e\u003cp\u003eEvery constructor is mapped to an index into the list of picklers.\n The index is used only during pickling, not during unpickling, there the 1. match is taken\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Int) -\u003e [PU a] -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAlt",
        "fct-type": "function",
        "title": "xpAlt"
      },
      "index": {
        "description": "Pickler for sum data types Every constructor is mapped to an index into the list of picklers The index is used only during pickling not during unpickling there the match is taken",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAlt",
        "normalized": "(a-\u003eInt)-\u003e[PU a]-\u003ePU a",
        "package": "hxt",
        "partial": "Alt",
        "signature": "(a-\u003eInt)-\u003e[PU a]-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAttr",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpAttrQN\n\u003c/p\u003e\u003cpre\u003e xpAttr n = xpAttrQN (mkName n)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttr",
        "fct-type": "function",
        "title": "xpAttr"
      },
      "index": {
        "description": "convenient Pickler for xpAttrQN xpAttr xpAttrQN mkName",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAttr",
        "normalized": "String-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Attr",
        "signature": "String-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAttrFixed",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrFixed",
        "fct-type": "function",
        "title": "xpAttrFixed"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAttrFixed",
        "normalized": "String-\u003eString-\u003ePU()",
        "package": "hxt",
        "partial": "Attr Fixed",
        "signature": "String-\u003eString-\u003ePU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAttrImplied",
      "description": {
        "fct-descr": "\u003cp\u003eAdd an optional attribute for an optional value (Maybe a).\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a -\u003e PU (Maybe a)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrImplied",
        "fct-type": "function",
        "title": "xpAttrImplied"
      },
      "index": {
        "description": "Add an optional attribute for an optional value Maybe",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAttrImplied",
        "normalized": "String-\u003ePU a-\u003ePU(Maybe a)",
        "package": "hxt",
        "partial": "Attr Implied",
        "signature": "String-\u003ePU a-\u003ePU(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpAttrNS",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpAttrQN\n\u003c/p\u003e\u003cpre\u003e xpAttr ns px lp = xpAttrQN (mkQName px lp ns)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpAttrNS",
        "fct-type": "function",
        "title": "xpAttrNS"
      },
      "index": {
        "description": "convenient Pickler for xpAttrQN xpAttr ns px lp xpAttrQN mkQName px lp ns",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpAttrNS",
        "normalized": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Attr NS",
        "signature": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpCheckEmpty",
      "description": {
        "fct-descr": "\u003cp\u003eComposition of xpCheckEmptyContents and xpCheckAttributes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpCheckEmpty",
        "fct-type": "function",
        "title": "xpCheckEmpty"
      },
      "index": {
        "description": "Composition of xpCheckEmptyContents and xpCheckAttributes",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpCheckEmpty",
        "normalized": "PU a-\u003ePU a",
        "package": "hxt",
        "partial": "Check Empty",
        "signature": "PU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpCheckEmptyAttributes",
      "description": {
        "fct-descr": "\u003cp\u003eLike xpCheckEmptyContents, but checks the attribute list\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpCheckEmptyAttributes",
        "fct-type": "function",
        "title": "xpCheckEmptyAttributes"
      },
      "index": {
        "description": "Like xpCheckEmptyContents but checks the attribute list",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpCheckEmptyAttributes",
        "normalized": "PU a-\u003ePU a",
        "package": "hxt",
        "partial": "Check Empty Attributes",
        "signature": "PU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpCheckEmptyContents",
      "description": {
        "fct-descr": "\u003cp\u003eCheck EOF pickler.\n\u003c/p\u003e\u003cp\u003eWhen pickling, this behaves like the unit pickler.\n The unpickler fails, when there is some unprocessed XML contents left.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpCheckEmptyContents",
        "fct-type": "function",
        "title": "xpCheckEmptyContents"
      },
      "index": {
        "description": "Check EOF pickler When pickling this behaves like the unit pickler The unpickler fails when there is some unprocessed XML contents left",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpCheckEmptyContents",
        "normalized": "PU a-\u003ePU a",
        "package": "hxt",
        "partial": "Check Empty Contents",
        "signature": "PU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpChoice",
      "description": {
        "fct-descr": "\u003cp\u003ecombine tow picklers with a choice\n\u003c/p\u003e\u003cp\u003eRun two picklers in sequence like with xpSeq.\n When during unpickling the first one fails,\n an alternative pickler (first argument) is applied.\n This pickler is only used as combinator for unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e PU a -\u003e (a -\u003e PU b) -\u003e Unpickler b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpChoice",
        "fct-type": "function",
        "title": "xpChoice"
      },
      "index": {
        "description": "combine tow picklers with choice Run two picklers in sequence like with xpSeq When during unpickling the first one fails an alternative pickler first argument is applied This pickler is only used as combinator for unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpChoice",
        "normalized": "PU a-\u003ePU b-\u003e(b-\u003ePU a)-\u003eUnpickler a",
        "package": "hxt",
        "partial": "Choice",
        "signature": "PU b-\u003ePU a-\u003e(a-\u003ePU b)-\u003eUnpickler b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpDefault",
      "description": {
        "fct-descr": "\u003cp\u003eOptional conversion with default value\n\u003c/p\u003e\u003cp\u003eThe default value is not encoded in the XML document,\n during unpickling the default value is inserted if the pickler fails\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpDefault",
        "fct-type": "function",
        "title": "xpDefault"
      },
      "index": {
        "description": "Optional conversion with default value The default value is not encoded in the XML document during unpickling the default value is inserted if the pickler fails",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpDefault",
        "normalized": "a-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Default",
        "signature": "a-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpElem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpElemQN\n\u003c/p\u003e\u003cpre\u003e xpElem n = xpElemQN (mkName n)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElem",
        "fct-type": "function",
        "title": "xpElem"
      },
      "index": {
        "description": "convenient Pickler for xpElemQN xpElem xpElemQN mkName",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpElem",
        "normalized": "String-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem",
        "signature": "String-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpElemNS",
      "description": {
        "fct-descr": "\u003cp\u003econvenient Pickler for xpElemQN\n   for pickling elements with respect to namespaces\n\u003c/p\u003e\u003cpre\u003e xpElemNS ns px lp = xpElemQN (mkQName px lp ns)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElemNS",
        "fct-type": "function",
        "title": "xpElemNS"
      },
      "index": {
        "description": "convenient Pickler for xpElemQN for pickling elements with respect to namespaces xpElemNS ns px lp xpElemQN mkQName px lp ns",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpElemNS",
        "normalized": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem NS",
        "signature": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpElemWithAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003ePickler for wrapping/unwrapping data into an XML element with an attribute with given value\n\u003c/p\u003e\u003cp\u003eTo make XML structures flexible but limit the number of different elements, it's sometimes\n useful to use a kind of generic element with a key value structure\n\u003c/p\u003e\u003cp\u003eExample:\n\u003c/p\u003e\u003cpre\u003e \u003cattr name=\"key1\"\u003evalue1\u003c/attr\u003e\n \u003cattr name=\"key2\"\u003evalue2\u003c/attr\u003e\n \u003cattr name=\"key3\"\u003evalue3\u003c/attr\u003e\n\u003c/pre\u003e\u003cp\u003ethe Haskell datatype may look like this\n\u003c/p\u003e\u003cpre\u003e type T = T { key1 :: Int ; key2 :: String ; key3 :: Double }\n\u003c/pre\u003e\u003cp\u003eThen the picker for that type looks like this\n\u003c/p\u003e\u003cpre\u003e xpT :: PU T\n xpT = xpWrap ( uncurry3 T, \\ t -\u003e (key1 t, key2 t, key3 t) ) $\n       xpTriple (xpElemWithAttrValue \"attr\" \"name\" \"key1\" $ xpickle)\n                (xpElemWithAttrValue \"attr\" \"name\" \"key2\" $ xpText0)\n                (xpElemWithAttrValue \"attr\" \"name\" \"key3\" $ xpickle)\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpElemWithAttrValue",
        "fct-type": "function",
        "title": "xpElemWithAttrValue"
      },
      "index": {
        "description": "Pickler for wrapping unwrapping data into an XML element with an attribute with given value To make XML structures flexible but limit the number of different elements it sometimes useful to use kind of generic element with key value structure Example attr name key1 value1 attr attr name key2 value2 attr attr name key3 value3 attr the Haskell datatype may look like this type key1 Int key2 String key3 Double Then the picker for that type looks like this xpT PU xpT xpWrap uncurry3 key1 key2 key3 xpTriple xpElemWithAttrValue attr name key1 xpickle xpElemWithAttrValue attr name key2 xpText0 xpElemWithAttrValue attr name key3 xpickle",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpElemWithAttrValue",
        "normalized": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Elem With Attr Value",
        "signature": "String-\u003eString-\u003eString-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpFilterAttr",
      "description": {
        "fct-descr": "\u003cp\u003eSame as \u003ccode\u003e\u003ca\u003expFilterCont\u003c/a\u003e\u003c/code\u003e but for the  attribute list of the element currently processed.\n\u003c/p\u003e\u003cp\u003eMaybe useful to ignore some stuff in the input, e.g. class attributes, or to do some cleanup before unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpFilterAttr",
        "fct-type": "function",
        "title": "xpFilterAttr"
      },
      "index": {
        "description": "Same as xpFilterCont but for the attribute list of the element currently processed Maybe useful to ignore some stuff in the input e.g class attributes or to do some cleanup before unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpFilterAttr",
        "normalized": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Filter Attr",
        "signature": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpFilterCont",
      "description": {
        "fct-descr": "\u003cp\u003eWhen unpickling, filter the contents of the element currently processed,\n before applying the pickler argument\n\u003c/p\u003e\u003cp\u003eMaybe useful to ignore some stuff in the input, or to do some cleanup before unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpFilterCont",
        "fct-type": "function",
        "title": "xpFilterCont"
      },
      "index": {
        "description": "When unpickling filter the contents of the element currently processed before applying the pickler argument Maybe useful to ignore some stuff in the input or to do some cleanup before unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpFilterCont",
        "normalized": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Filter Cont",
        "signature": "LA XmlTree XmlTree-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpInt",
      "description": {
        "fct-descr": "\u003cp\u003ePickle an Int\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU Int",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpInt",
        "fct-type": "function",
        "title": "xpInt"
      },
      "index": {
        "description": "Pickle an Int",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpInt",
        "normalized": "",
        "package": "hxt",
        "partial": "Int",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpLift",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpLift",
        "fct-type": "function",
        "title": "xpLift"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpLift",
        "normalized": "a-\u003ePU a",
        "package": "hxt",
        "partial": "Lift",
        "signature": "a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpLiftEither",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Either String a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpLiftEither",
        "fct-type": "function",
        "title": "xpLiftEither"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpLiftEither",
        "normalized": "Either String a-\u003ePU a",
        "package": "hxt",
        "partial": "Lift Either",
        "signature": "Either String a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpLiftMaybe",
      "description": {
        "fct-descr": "\u003cp\u003eLift a Maybe value to a pickler.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003eNothing\u003c/code\u003e is mapped to the zero pickler, \u003ccode\u003eJust x\u003c/code\u003e is pickled with \u003ccode\u003expLift x\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Maybe a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpLiftMaybe",
        "fct-type": "function",
        "title": "xpLiftMaybe"
      },
      "index": {
        "description": "Lift Maybe value to pickler Nothing is mapped to the zero pickler Just is pickled with xpLift",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpLiftMaybe",
        "normalized": "Maybe a-\u003ePU a",
        "package": "hxt",
        "partial": "Lift Maybe",
        "signature": "Maybe a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpList",
      "description": {
        "fct-descr": "\u003cp\u003eEncoding of list values by pickling all list elements sequentially.\n\u003c/p\u003e\u003cp\u003eUnpickler relies on failure for detecting the end of the list.\n The standard pickler for lists. Can also be used in combination with \u003ccode\u003e\u003ca\u003expWrap\u003c/a\u003e\u003c/code\u003e\n for constructing set and map picklers\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU [a]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpList",
        "fct-type": "function",
        "title": "xpList"
      },
      "index": {
        "description": "Encoding of list values by pickling all list elements sequentially Unpickler relies on failure for detecting the end of the list The standard pickler for lists Can also be used in combination with xpWrap for constructing set and map picklers",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpList",
        "normalized": "PU a-\u003ePU[a]",
        "package": "hxt",
        "partial": "List",
        "signature": "PU a-\u003ePU[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpList1",
      "description": {
        "fct-descr": "\u003cp\u003eEncoding of a none empty list of values\n\u003c/p\u003e\u003cp\u003eAttention: when calling this pickler with an empty list,\n an internal error \"head of empty list is raised\".\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU [a]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpList1",
        "fct-type": "function",
        "title": "xpList1"
      },
      "index": {
        "description": "Encoding of none empty list of values Attention when calling this pickler with an empty list an internal error head of empty list is raised",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpList1",
        "normalized": "PU a-\u003ePU[a]",
        "package": "hxt",
        "partial": "List",
        "signature": "PU a-\u003ePU[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpMap",
      "description": {
        "fct-descr": "\u003cp\u003eStandard pickler for maps\n\u003c/p\u003e\u003cp\u003eThis pickler converts a map into a list of pairs.\n All key value pairs are mapped to an element with name (1.arg),\n the key is encoded as an attribute named by the 2. argument,\n the 3. arg is the pickler for the keys, the last one for the values\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e PU k -\u003e PU v -\u003e PU (Map k v)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpMap",
        "fct-type": "function",
        "title": "xpMap"
      },
      "index": {
        "description": "Standard pickler for maps This pickler converts map into list of pairs All key value pairs are mapped to an element with name arg the key is encoded as an attribute named by the argument the arg is the pickler for the keys the last one for the values",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpMap",
        "normalized": "String-\u003eString-\u003ePU a-\u003ePU b-\u003ePU(Map a b)",
        "package": "hxt",
        "partial": "Map",
        "signature": "String-\u003eString-\u003ePU k-\u003ePU v-\u003ePU(Map k v)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpOption",
      "description": {
        "fct-descr": "\u003cp\u003eEncoding of optional data by ignoring the Nothing case during pickling\n and relying on failure during unpickling to recompute the Nothing case\n\u003c/p\u003e\u003cp\u003eThe default pickler for Maybe types\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU (Maybe a)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpOption",
        "fct-type": "function",
        "title": "xpOption"
      },
      "index": {
        "description": "Encoding of optional data by ignoring the Nothing case during pickling and relying on failure during unpickling to recompute the Nothing case The default pickler for Maybe types",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpOption",
        "normalized": "PU a-\u003ePU(Maybe a)",
        "package": "hxt",
        "partial": "Option",
        "signature": "PU a-\u003ePU(Maybe a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpPair",
      "description": {
        "fct-descr": "\u003cp\u003epickle a pair of values sequentially\n\u003c/p\u003e\u003cp\u003eUsed for pairs or together with wrap for pickling\n algebraic data types with two components\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU (a, b)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpPair",
        "fct-type": "function",
        "title": "xpPair"
      },
      "index": {
        "description": "pickle pair of values sequentially Used for pairs or together with wrap for pickling algebraic data types with two components",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpPair",
        "normalized": "PU a-\u003ePU b-\u003ePU(a,b)",
        "package": "hxt",
        "partial": "Pair",
        "signature": "PU a-\u003ePU b-\u003ePU(a,b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpPrim",
      "description": {
        "fct-descr": "\u003cp\u003ePickle an arbitrary value by applyling show during pickling\n and read during unpickling.\n\u003c/p\u003e\u003cp\u003eReal pickling is then done with \u003ccode\u003e\u003ca\u003expText\u003c/a\u003e\u003c/code\u003e.\n One of the most often used pimitive picklers. Applicable for all\n types which are instances of \u003ccode\u003eRead\u003c/code\u003e and \u003ccode\u003eShow\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpPrim",
        "fct-type": "function",
        "title": "xpPrim"
      },
      "index": {
        "description": "Pickle an arbitrary value by applyling show during pickling and read during unpickling Real pickling is then done with xpText One of the most often used pimitive picklers Applicable for all types which are instances of Read and Show",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpPrim",
        "normalized": "",
        "package": "hxt",
        "partial": "Prim",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpSeq",
      "description": {
        "fct-descr": "\u003cp\u003eCombine two picklers sequentially.\n\u003c/p\u003e\u003cp\u003eIf the first fails during\n unpickling, the whole unpickler fails\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e a) -\u003e PU a -\u003e (a -\u003e PU b) -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpSeq",
        "fct-type": "function",
        "title": "xpSeq"
      },
      "index": {
        "description": "Combine two picklers sequentially If the first fails during unpickling the whole unpickler fails",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpSeq",
        "normalized": "(a-\u003eb)-\u003ePU b-\u003e(b-\u003ePU a)-\u003ePU a",
        "package": "hxt",
        "partial": "Seq",
        "signature": "(b-\u003ea)-\u003ePU a-\u003e(a-\u003ePU b)-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpSeq-39-",
      "description": {
        "fct-descr": "\u003cp\u003eFirst apply a fixed pickler/unpickler, then a 2. one\n\u003c/p\u003e\u003cp\u003eIf the first fails during unpickling, the whole pickler fails.\n This can be used to check some properties of the input, e.g. whether\n a given fixed attribute or a namespace declaration exists (\u003ccode\u003e\u003ca\u003expAddFixedAttr\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003expAddNSDecl\u003c/a\u003e\u003c/code\u003e)\n or to filter the input, e.g. to ignore some elements or attributes (\u003ccode\u003e\u003ca\u003expFilterCont\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003expFilterAttr\u003c/a\u003e\u003c/code\u003e).\n\u003c/p\u003e\u003cp\u003eWhen pickling, this can be used to insert some fixed XML pieces, e.g. namespace declarations,\n class attributes or other stuff.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU () -\u003e PU a -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpSeq%27",
        "fct-type": "function",
        "title": "xpSeq'"
      },
      "index": {
        "description": "First apply fixed pickler unpickler then one If the first fails during unpickling the whole pickler fails This can be used to check some properties of the input e.g whether given fixed attribute or namespace declaration exists xpAddFixedAttr xpAddNSDecl or to filter the input e.g to ignore some elements or attributes xpFilterCont xpFilterAttr When pickling this can be used to insert some fixed XML pieces e.g namespace declarations class attributes or other stuff",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpSeq'",
        "normalized": "PU()-\u003ePU a-\u003ePU a",
        "package": "hxt",
        "partial": "Seq'",
        "signature": "PU()-\u003ePU a-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpText",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a string into an XML text node\n\u003c/p\u003e\u003cp\u003eOne of the most often used primitive picklers. Attention:\n For pickling empty strings use \u003ccode\u003e\u003ca\u003expText0\u003c/a\u003e\u003c/code\u003e. If the text has a more\n specific datatype than xsd:string, use \u003ccode\u003e\u003ca\u003expTextDT\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpText",
        "fct-type": "function",
        "title": "xpText"
      },
      "index": {
        "description": "Pickle string into an XML text node One of the most often used primitive picklers Attention For pickling empty strings use xpText0 If the text has more specific datatype than xsd string use xpTextDT",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpText",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpText0",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a possibly empty string into an XML node.\n\u003c/p\u003e\u003cp\u003eMust be used in all places, where empty strings are legal values.\n If the content of an element can be an empty string, this string disapears\n during storing the DOM into a document and reparse the document.\n So the empty text node becomes nothing, and the pickler must deliver an empty string,\n if there is no text node in the document.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpText0",
        "fct-type": "function",
        "title": "xpText0"
      },
      "index": {
        "description": "Pickle possibly empty string into an XML node Must be used in all places where empty strings are legal values If the content of an element can be an empty string this string disapears during storing the DOM into document and reparse the document So the empty text node becomes nothing and the pickler must deliver an empty string if there is no text node in the document",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpText0",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpText0DT",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a possibly empty string with a datatype description into an XML node.\n\u003c/p\u003e\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expText0\u003c/a\u003e\u003c/code\u003e but with extra Parameter for datatype description as in \u003ccode\u003e\u003ca\u003expTextDT\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpText0DT",
        "fct-type": "function",
        "title": "xpText0DT"
      },
      "index": {
        "description": "Pickle possibly empty string with datatype description into an XML node Like xpText0 but with extra Parameter for datatype description as in xpTextDT",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpText0DT",
        "normalized": "Schema-\u003ePU String",
        "package": "hxt",
        "partial": "Text DT",
        "signature": "Schema-\u003ePU String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpTextAttr",
      "description": {
        "fct-descr": "\u003cp\u003eA text attribute.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTextAttr",
        "fct-type": "function",
        "title": "xpTextAttr"
      },
      "index": {
        "description": "text attribute",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpTextAttr",
        "normalized": "String-\u003ePU String",
        "package": "hxt",
        "partial": "Text Attr",
        "signature": "String-\u003ePU String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpTextDT",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a string into an XML text node\n\u003c/p\u003e\u003cp\u003eText pickler with a description of the structure of the text\n by a schema. A schema for a data type can be defined by \u003ccode\u003e\u003ca\u003escDT\u003c/a\u003e\u003c/code\u003e.\n In \u003ccode\u003e\u003ca\u003eSchema\u003c/a\u003e\u003c/code\u003e there are some more functions for creating\n simple datatype descriptions.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "Schema -\u003e PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTextDT",
        "fct-type": "function",
        "title": "xpTextDT"
      },
      "index": {
        "description": "Pickle string into an XML text node Text pickler with description of the structure of the text by schema schema for data type can be defined by scDT In Schema there are some more functions for creating simple datatype descriptions",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpTextDT",
        "normalized": "Schema-\u003ePU String",
        "package": "hxt",
        "partial": "Text DT",
        "signature": "Schema-\u003ePU String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpTree",
      "description": {
        "fct-descr": "\u003cp\u003ePickle an XmlTree by just adding it\n\u003c/p\u003e\u003cp\u003eUsefull for components of type XmlTree in other data structures\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTree",
        "fct-type": "function",
        "title": "xpTree"
      },
      "index": {
        "description": "Pickle an XmlTree by just adding it Usefull for components of type XmlTree in other data structures",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpTrees",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a whole list of XmlTrees by just adding the list, unpickle is done by taking all element contents.\n\u003c/p\u003e\u003cp\u003eThis pickler should always be combined with \u003ccode\u003e\u003ca\u003expElem\u003c/a\u003e\u003c/code\u003e for taking the whole contents of an element.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU [XmlTree]",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTrees",
        "fct-type": "function",
        "title": "xpTrees"
      },
      "index": {
        "description": "Pickle whole list of XmlTrees by just adding the list unpickle is done by taking all element contents This pickler should always be combined with xpElem for taking the whole contents of an element",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpTrees",
        "normalized": "PU[XmlTree]",
        "package": "hxt",
        "partial": "Trees",
        "signature": "PU[XmlTree]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpTriple",
      "description": {
        "fct-descr": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003expPair\u003c/a\u003e\u003c/code\u003e but for triples\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e PU b -\u003e PU c -\u003e PU (a, b, c)",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpTriple",
        "fct-type": "function",
        "title": "xpTriple"
      },
      "index": {
        "description": "Like xpPair but for triples",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpTriple",
        "normalized": "PU a-\u003ePU b-\u003ePU c-\u003ePU(a,b,c)",
        "package": "hxt",
        "partial": "Triple",
        "signature": "PU a-\u003ePU b-\u003ePU c-\u003ePU(a,b,c)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpUnit",
      "description": {
        "fct-descr": "\u003cp\u003eunit pickler\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU ()",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpUnit",
        "fct-type": "function",
        "title": "xpUnit"
      },
      "index": {
        "description": "unit pickler",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpUnit",
        "normalized": "PU()",
        "package": "hxt",
        "partial": "Unit",
        "signature": "PU()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpWrap",
      "description": {
        "fct-descr": "\u003cp\u003emap value into another domain and apply pickler there\n\u003c/p\u003e\u003cp\u003eOne of the most often used picklers.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e b, b -\u003e a) -\u003e PU a -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpWrap",
        "fct-type": "function",
        "title": "xpWrap"
      },
      "index": {
        "description": "map value into another domain and apply pickler there One of the most often used picklers",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpWrap",
        "normalized": "(a-\u003eb,b-\u003ea)-\u003ePU a-\u003ePU b",
        "package": "hxt",
        "partial": "Wrap",
        "signature": "(a-\u003eb,b-\u003ea)-\u003ePU a-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpWrapEither",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003expWrap\u003c/a\u003e\u003c/code\u003e, but if the inverse mapping is undefined, the unpickler fails\n\u003c/p\u003e\u003cp\u003eMap a value into another domain. If the inverse mapping is\n undefined, the unpickler fails with an error message in the Left component\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Either String b, b -\u003e a) -\u003e PU a -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpWrapEither",
        "fct-type": "function",
        "title": "xpWrapEither"
      },
      "index": {
        "description": "like xpWrap but if the inverse mapping is undefined the unpickler fails Map value into another domain If the inverse mapping is undefined the unpickler fails with an error message in the Left component",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpWrapEither",
        "normalized": "(a-\u003eEither String b,b-\u003ea)-\u003ePU a-\u003ePU b",
        "package": "hxt",
        "partial": "Wrap Either",
        "signature": "(a-\u003eEither String b,b-\u003ea)-\u003ePU a-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpWrapMaybe",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003expWrap\u003c/a\u003e\u003c/code\u003e, but if the inverse mapping is undefined, the unpickler fails\n\u003c/p\u003e\u003cp\u003eMap a value into another domain. If the inverse mapping is\n undefined (Nothing), the unpickler fails\n\u003c/p\u003e\u003cp\u003eDeprecated: Use xpWrapEither, this gives better error messages\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e Maybe b, b -\u003e a) -\u003e PU a -\u003e PU b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpWrapMaybe",
        "fct-type": "function",
        "title": "xpWrapMaybe"
      },
      "index": {
        "description": "like xpWrap but if the inverse mapping is undefined the unpickler fails Map value into another domain If the inverse mapping is undefined Nothing the unpickler fails Deprecated Use xpWrapEither this gives better error messages",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpWrapMaybe",
        "normalized": "(a-\u003eMaybe b,b-\u003ea)-\u003ePU a-\u003ePU b",
        "package": "hxt",
        "partial": "Wrap Maybe",
        "signature": "(a-\u003eMaybe b,b-\u003ea)-\u003ePU a-\u003ePU b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpXmlText",
      "description": {
        "fct-descr": "\u003cp\u003ePickle a string representing XML contents by inserting the tree representation into the XML document.\n\u003c/p\u003e\u003cp\u003eUnpickling is done by converting the contents with\n \u003ccode\u003e\u003ca\u003exshowEscapeXml\u003c/a\u003e\u003c/code\u003e into a string,\n this function will escape all XML special chars, such that pickling the value back becomes save.\n Pickling is done with \u003ccode\u003e\u003ca\u003exread\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU String",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpXmlText",
        "fct-type": "function",
        "title": "xpXmlText"
      },
      "index": {
        "description": "Pickle string representing XML contents by inserting the tree representation into the XML document Unpickling is done by converting the contents with xshowEscapeXml into string this function will escape all XML special chars such that pickling the value back becomes save Pickling is done with xread",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpXmlText",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpZero",
      "description": {
        "fct-descr": "\u003cp\u003eThe zero pickler\n\u003c/p\u003e\u003cp\u003eEncodes nothing, fails always during unpickling\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpZero",
        "fct-type": "function",
        "title": "xpZero"
      },
      "index": {
        "description": "The zero pickler Encodes nothing fails always during unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpZero",
        "normalized": "String-\u003ePU a",
        "package": "hxt",
        "partial": "Zero",
        "signature": "String-\u003ePU a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpickle",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle-Xml.html#xpickle",
        "fct-type": "method",
        "title": "xpickle"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpickle",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpickleDTD",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow for generating the DTD out of a pickler\n\u003c/p\u003e\u003cp\u003eA DTD is generated from a pickler and check for consistency.\n Errors concerning the DTD are issued.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#xpickleDTD",
        "fct-type": "function",
        "title": "xpickleDTD"
      },
      "index": {
        "description": "The arrow for generating the DTD out of pickler DTD is generated from pickler and check for consistency Errors concerning the DTD are issued",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpickleDTD",
        "normalized": "PU a-\u003eIOStateArrow b a XmlTree",
        "package": "hxt",
        "partial": "DTD",
        "signature": "PU b-\u003eIOStateArrow s b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpickleDocument",
      "description": {
        "fct-descr": "\u003cp\u003estore an arbitray value in a persistent XML document\n\u003c/p\u003e\u003cp\u003eThe pickler converts a value into an XML tree, this is written out with\n \u003ccode\u003e\u003ca\u003ewriteDocument\u003c/a\u003e\u003c/code\u003e. The option list is passed to \u003ccode\u003e\u003ca\u003ewriteDocument\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eAn option evaluated by this arrow is \u003ccode\u003e\u003ca\u003ea_addDTD\u003c/a\u003e\u003c/code\u003e.\n If \u003ccode\u003e\u003ca\u003ea_addDTD\u003c/a\u003e\u003c/code\u003e is set (\u003ccode\u003e\u003ca\u003ev_1\u003c/a\u003e\u003c/code\u003e), the pickler DTD is added as an inline DTD into the document.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e SysConfigList -\u003e String -\u003e IOStateArrow s a XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#xpickleDocument",
        "fct-type": "function",
        "title": "xpickleDocument"
      },
      "index": {
        "description": "store an arbitray value in persistent XML document The pickler converts value into an XML tree this is written out with writeDocument The option list is passed to writeDocument An option evaluated by this arrow is addDTD If addDTD is set the pickler DTD is added as an inline DTD into the document",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpickleDocument",
        "normalized": "PU a-\u003eSysConfigList-\u003eString-\u003eIOStateArrow b a XmlTree",
        "package": "hxt",
        "partial": "Document",
        "signature": "PU a-\u003eSysConfigList-\u003eString-\u003eIOStateArrow s a XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpickleVal",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow version of the pickler function\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e a b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#xpickleVal",
        "fct-type": "function",
        "title": "xpickleVal"
      },
      "index": {
        "description": "The arrow version of the pickler function",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpickleVal",
        "normalized": "PU a-\u003eb a XmlTree",
        "package": "hxt",
        "partial": "Val",
        "signature": "PU b-\u003ea b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xpickleWriteDTD",
      "description": {
        "fct-descr": "\u003cp\u003eWrite out the DTD generated out of a pickler. Calls \u003ccode\u003expicklerDTD\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e SysConfigList -\u003e String -\u003e IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#xpickleWriteDTD",
        "fct-type": "function",
        "title": "xpickleWriteDTD"
      },
      "index": {
        "description": "Write out the DTD generated out of pickler Calls xpicklerDTD",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xpickleWriteDTD",
        "normalized": "PU a-\u003eSysConfigList-\u003eString-\u003eIOStateArrow b a XmlTree",
        "package": "hxt",
        "partial": "Write DTD",
        "signature": "PU b-\u003eSysConfigList-\u003eString-\u003eIOStateArrow s b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xunpickleDocument",
      "description": {
        "fct-descr": "\u003cp\u003eread an arbitray value from an XML document\n\u003c/p\u003e\u003cp\u003eThe document is read with \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e. Options are passed\n to \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e. The conversion from XmlTree is done with the\n pickler.\n\u003c/p\u003e\u003cp\u003e\u003ccode\u003e xpickleDocument xp al dest \u003e\u003e\u003e xunpickleDocument xp al' dest \u003c/code\u003e is the identity arrow\n when applied with the appropriate options. When during pickling indentation is switched on,\n the whitespace must be removed during unpickling.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU a -\u003e SysConfigList -\u003e String -\u003e IOStateArrow s b a",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#xunpickleDocument",
        "fct-type": "function",
        "title": "xunpickleDocument"
      },
      "index": {
        "description": "read an arbitray value from an XML document The document is read with readDocument Options are passed to readDocument The conversion from XmlTree is done with the pickler xpickleDocument xp al dest xunpickleDocument xp al dest is the identity arrow when applied with the appropriate options When during pickling indentation is switched on the whitespace must be removed during unpickling",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xunpickleDocument",
        "normalized": "PU a-\u003eSysConfigList-\u003eString-\u003eIOStateArrow b c a",
        "package": "hxt",
        "partial": "Document",
        "signature": "PU a-\u003eSysConfigList-\u003eString-\u003eIOStateArrow s b a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-Pickle.html#v:xunpickleVal",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow version of the unpickler function\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.Pickle",
        "fct-package": "hxt",
        "fct-signature": "PU b -\u003e IOStateArrow s XmlTree b",
        "fct-source": "src/Text-XML-HXT-Arrow-Pickle.html#xunpickleVal",
        "fct-type": "function",
        "title": "xunpickleVal"
      },
      "index": {
        "description": "The arrow version of the unpickler function",
        "hierarchy": "Text XML HXT Arrow Pickle",
        "module": "Text.XML.HXT.Arrow.Pickle",
        "name": "xunpickleVal",
        "normalized": "PU a-\u003eIOStateArrow b XmlTree a",
        "package": "hxt",
        "partial": "Val",
        "signature": "PU b-\u003eIOStateArrow s XmlTree b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCompound arrows for reading, parsing, validating and writing XML documents\n\u003c/p\u003e\u003cp\u003eAll arrows use IO and a global state for options, errorhandling, ...\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html",
        "fct-type": "module",
        "title": "ProcessDocument"
      },
      "index": {
        "description": "Compound arrows for reading parsing validating and writing XML documents All arrows use IO and global state for options errorhandling",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "ProcessDocument",
        "normalized": "",
        "package": "hxt",
        "partial": "Process Document",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:andValidateNamespaces",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#andValidateNamespaces",
        "fct-type": "function",
        "title": "andValidateNamespaces"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "andValidateNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "Validate Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:getDocumentContents",
      "description": {
        "fct-descr": "\u003cp\u003ecreates a new document root, adds all options\n   as attributes to the document root and calls \u003ccode\u003e\u003ca\u003egetXmlContents\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eIf the document name is the empty string, the document will be read\n   from standard input.\n\u003c/p\u003e\u003cp\u003eFor supported protocols see \u003ccode\u003e\u003ca\u003egetXmlContents\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#getDocumentContents",
        "fct-type": "function",
        "title": "getDocumentContents"
      },
      "index": {
        "description": "creates new document root adds all options as attributes to the document root and calls getXmlContents If the document name is the empty string the document will be read from standard input For supported protocols see getXmlContents",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "getDocumentContents",
        "normalized": "String-\u003eIOStateArrow a b XmlTree",
        "package": "hxt",
        "partial": "Document Contents",
        "signature": "String-\u003eIOStateArrow s b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:parseHtmlDocument",
      "description": {
        "fct-descr": "\u003cp\u003eHTML parser\n\u003c/p\u003e\u003cp\u003eInput tree must be a root tree with a text tree as child containing the document to be parsed.\nThe parser tries to parse everything as HTML, if the HTML document is not wellformed XML or if\nerrors occur, warnings are generated. The warnings can be issued, or suppressed.\n\u003c/p\u003e\u003cp\u003eExample: \u003ccode\u003e parseHtmlDocument True \u003c/code\u003e : parse document and issue warnings\n\u003c/p\u003e\u003cp\u003eThis parser is useful for applications like web crawlers, where the pages may contain\narbitray errors, but the application is only interested in parts of the document, e.g. the plain text.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#parseHtmlDocument",
        "fct-type": "function",
        "title": "parseHtmlDocument"
      },
      "index": {
        "description": "HTML parser Input tree must be root tree with text tree as child containing the document to be parsed The parser tries to parse everything as HTML if the HTML document is not wellformed XML or if errors occur warnings are generated The warnings can be issued or suppressed Example parseHtmlDocument True parse document and issue warnings This parser is useful for applications like web crawlers where the pages may contain arbitray errors but the application is only interested in parts of the document e.g the plain text",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "parseHtmlDocument",
        "normalized": "",
        "package": "hxt",
        "partial": "Html Document",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:parseXmlDocument",
      "description": {
        "fct-descr": "\u003cp\u003eXML parser\n\u003c/p\u003e\u003cp\u003eInput tree must be a root tree with a text tree as child containing the document to be parsed.\nThe parser generates from the input string a tree of a wellformed XML document,\nprocesses the DTD (parameter substitution, conditional DTD parts, ...) and\nsubstitutes all general entity references. Next step is character reference substitution.\nLast step is the document validation.\nValidation can be controlled by an extra parameter.\n\u003c/p\u003e\u003cp\u003eExample:\n\u003c/p\u003e\u003cpre\u003e parseXmlDocument True    -- parse and validate document\n\n parseXmlDocument False   -- only parse document, don't validate\n\u003c/pre\u003e\u003cp\u003eThis parser is useful for applications processing correct XML documents.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e Bool -\u003e Bool -\u003e Bool -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#parseXmlDocument",
        "fct-type": "function",
        "title": "parseXmlDocument"
      },
      "index": {
        "description": "XML parser Input tree must be root tree with text tree as child containing the document to be parsed The parser generates from the input string tree of wellformed XML document processes the DTD parameter substitution conditional DTD parts and substitutes all general entity references Next step is character reference substitution Last step is the document validation Validation can be controlled by an extra parameter Example parseXmlDocument True parse and validate document parseXmlDocument False only parse document don validate This parser is useful for applications processing correct XML documents",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "parseXmlDocument",
        "normalized": "Bool-\u003eBool-\u003eBool-\u003eBool-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Xml Document",
        "signature": "Bool-\u003eBool-\u003eBool-\u003eBool-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:parseXmlDocumentWithExpat",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#parseXmlDocumentWithExpat",
        "fct-type": "function",
        "title": "parseXmlDocumentWithExpat"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "parseXmlDocumentWithExpat",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Document With Expat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:propagateAndValidateNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003eNamespace propagation\n\u003c/p\u003e\u003cp\u003eInput must be a complete document tree. The namespace declarations\nare evaluated and all element and attribute names are processed by\nsplitting the name into prefix, local part and namespace URI.\n\u003c/p\u003e\u003cp\u003eNaames are checked with respect to the XML namespace definition\n\u003c/p\u003e\u003cp\u003eIf no error was found, result is the unchanged input tree,\nelse the error status is set in the list of attributes\nof the root node \"/\" and the document content is removed from the tree.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#propagateAndValidateNamespaces",
        "fct-type": "function",
        "title": "propagateAndValidateNamespaces"
      },
      "index": {
        "description": "Namespace propagation Input must be complete document tree The namespace declarations are evaluated and all element and attribute names are processed by splitting the name into prefix local part and namespace URI Naames are checked with respect to the XML namespace definition If no error was found result is the unchanged input tree else the error status is set in the list of attributes of the root node and the document content is removed from the tree",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "propagateAndValidateNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "And Validate Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ProcessDocument.html#v:validateDocument",
      "description": {
        "fct-descr": "\u003cp\u003eDocument validation\n\u003c/p\u003e\u003cp\u003eInput must be a complete document tree. The document\nis validated with respect to the DTD spec.\nOnly useful for XML documents containing a DTD.\n\u003c/p\u003e\u003cp\u003eIf the document is valid, it is transformed with respect to the DTD,\nnormalization of attribute values, adding default values, sorting attributes by name,...\n\u003c/p\u003e\u003cp\u003eIf no error was found, result is the normalized tree,\nelse the error status is set in the list of attributes\nof the root node \"/\" and the document content is removed from the tree.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ProcessDocument",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ProcessDocument.html#validateDocument",
        "fct-type": "function",
        "title": "validateDocument"
      },
      "index": {
        "description": "Document validation Input must be complete document tree The document is validated with respect to the DTD spec Only useful for XML documents containing DTD If the document is valid it is transformed with respect to the DTD normalization of attribute values adding default values sorting attributes by name If no error was found result is the normalized tree else the error status is set in the list of attributes of the root node and the document content is removed from the tree",
        "hierarchy": "Text XML HXT Arrow ProcessDocument",
        "module": "Text.XML.HXT.Arrow.ProcessDocument",
        "name": "validateDocument",
        "normalized": "",
        "package": "hxt",
        "partial": "Document",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCompound arrows for reading an XML/HTML document or an XML/HTML string\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html",
        "fct-type": "module",
        "title": "ReadDocument"
      },
      "index": {
        "description": "Compound arrows for reading an XML HTML document or an XML HTML string",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "ReadDocument",
        "normalized": "",
        "package": "hxt",
        "partial": "Read Document",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:hread",
      "description": {
        "fct-descr": "\u003cp\u003eparse a string as HTML content, substitute all HTML entity refs and canonicalize tree.\n (substitute char refs, ...). Errors are ignored.\n\u003c/p\u003e\u003cp\u003eThis arrow delegates all work to the parseHtmlContent parser in module HtmlParser.\n\u003c/p\u003e\u003cp\u003eThis is a simpler version of \u003ccode\u003e\u003ca\u003ereadFromString\u003c/a\u003e\u003c/code\u003e without any options,\n but it does not run in the IO monad.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#hread",
        "fct-type": "function",
        "title": "hread"
      },
      "index": {
        "description": "parse string as HTML content substitute all HTML entity refs and canonicalize tree substitute char refs Errors are ignored This arrow delegates all work to the parseHtmlContent parser in module HtmlParser This is simpler version of readFromString without any options but it does not run in the IO monad",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "hread",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:hreadDoc",
      "description": {
        "fct-descr": "\u003cp\u003elike hread, but accepts a whole document, not a HTML content\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#hreadDoc",
        "fct-type": "function",
        "title": "hreadDoc"
      },
      "index": {
        "description": "like hread but accepts whole document not HTML content",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "hreadDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:readDocument",
      "description": {
        "fct-descr": "\u003cp\u003ethe main document input filter\n\u003c/p\u003e\u003cp\u003ethis filter can be configured by a list of configuration options,\na value of type \u003ccode\u003e\u003ca\u003eSysConfig\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003efor all available options see module \u003ccode\u003e\u003ca\u003eSystemConfig\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003ewithValidate yes/no\u003c/code\u003e :\n  switch on/off DTD validation. Only for XML parsed documents, not for HTML parsing.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithSubstDTDEntities yes/no\u003c/code\u003e :\n  switch on/off entity substitution for general entities defined in DTD validation.\n  Default is \u003ccode\u003eyes\u003c/code\u003e.\n  Switching this option and the validation off can lead to faster parsing, in that case\n  reading the DTD documents is not longer necessary.\n  Only used with XML parsed documents, not with HTML parsing.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithSubstHTMLEntities yes/no\u003c/code\u003e :\n  switch on/off entity substitution for general entities defined in HTML validation.\n  Default is \u003ccode\u003eno\u003c/code\u003e.\n  Switching this option on and the validation and substDTDEntities off can lead to faster parsing,\n  in that case\n  reading the DTD documents is not longer necessary, HTML general entities are still substituted.\n  Only used with XML parsed documents, not with HTML parsing.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithParseHTML yes/no\u003c/code\u003e :\n  switch on HTML parsing.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithParseByMimeType yes/no\u003c/code\u003e :\n  select XML/HTML parser by document mime type.\n  text/xml and text/xhtml are parsed as XML, text/html as HTML.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithCheckNamespaces yes/no\u003c/code\u003e :\n  Switch on/off namespace propagation and checking\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithInputEncoding \u003cencoding-spec\u003e\u003c/code\u003e :\n  Set default encoding.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithTagSoup\u003c/code\u003e :\n  use light weight and lazy parser based on tagsoup lib.\n  This is only available when package hxt-tagsoup is installed and\n  the source contains an \u003ccode\u003eimport Text.XML.HXT.TagSoup\u003c/code\u003e.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithRelaxNG \u003cschema.rng\u003e\u003c/code\u003e :\n  validate document with Relax NG, the parameter is for the schema URI.\n  This implies using XML parser, no validation against DTD, and canonicalisation.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithCurl [\u003ccurl-option\u003e...]\u003c/code\u003e :\n  Use the libCurl binding for HTTP access.\n  This is only available when package hxt-curl is installed and\n  the source contains an \u003ccode\u003eimport Text.XML.HXT.Curl\u003c/code\u003e.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithHTTP [\u003chttp-option\u003e...]\u003c/code\u003e :\n  Use the Haskell HTTP package for HTTP access.\n  This is only available when package hxt-http is installed and\n  the source contains an \u003ccode\u003eimport Text.XML.HXT.HTTP\u003c/code\u003e.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eexamples:\n\u003c/p\u003e\u003cpre\u003e readDocument [] \"test.xml\"\n\u003c/pre\u003e\u003cp\u003ereads and validates a document \"test.xml\", no namespace propagation, only canonicalization is performed\n\u003c/p\u003e\u003cpre\u003e ...\n import Text.XML.HXT.Curl\n ...\n\n readDocument [ withValidate        no\n              , withInputEncoding   isoLatin1\n              , withParseByMimeType yes\n              , withCurl []\n              ] \"http://localhost/test.php\"\n\u003c/pre\u003e\u003cp\u003ereads document \"test.php\", parses it as HTML or XML depending on the mimetype given from the server, but without validation, default encoding \u003ccode\u003e\u003ca\u003eisoLatin1\u003c/a\u003e\u003c/code\u003e.\nHTTP access is done via libCurl.\n\u003c/p\u003e\u003cpre\u003e readDocument [ withParseHTML       yes\n              , withInputEncoding   isoLatin1\n              ] \"\"\n\u003c/pre\u003e\u003cp\u003ereads a HTML document from standard input, no validation is done when parsing HTML, default encoding is \u003ccode\u003e\u003ca\u003eisoLatin1\u003c/a\u003e\u003c/code\u003e,\n\u003c/p\u003e\u003cpre\u003e readDocument [ withInputEncoding  isoLatin1\n              , withValidate       no\n              , withMimeTypeFile   \"/etc/mime.types\"\n              , withStrictInput    yes\n              ] \"test.svg\"\n\u003c/pre\u003e\u003cp\u003ereads an SVG document from \"test.svg\", sets the mime type by looking in the system mimetype config file,\ndefault encoding is \u003ccode\u003e\u003ca\u003eisoLatin1\u003c/a\u003e\u003c/code\u003e,\n\u003c/p\u003e\u003cpre\u003e ...\n import Text.XML.HXT.Curl\n import Text.XML.HXT.TagSoup\n ...\n\n readDocument [ withParseHTML      yes\n              , withTagSoup\n              , withProxy          \"www-cache:3128\"\n              , withCurl           []\n              , withWarnings       no\n              ] \"http://www.haskell.org/\"\n\u003c/pre\u003e\u003cp\u003ereads Haskell homepage with HTML parser, ignoring any warnings\n(at the time of writing, there were some HTML errors),\nwith http access via libCurl interface\nand proxy \"www-cache\" at port 3128,\nparsing is done with tagsoup HTML parser.\nThis requires packages \"hxt-curl\" and \"hxt-tagsoup\" to be installed\n\u003c/p\u003e\u003cpre\u003e readDocument [ withValidate          yes\n              , withCheckNamespaces   yes\n              , withRemoveWS          yes\n              , withTrace             2\n              , withHTTP              []\n              ] \"http://www.w3c.org/\"\n\u003c/pre\u003e\u003cp\u003eread w3c home page (xhtml), validate and check namespaces, remove whitespace between tags,\ntrace activities with level 2.\nHTTP access is done with Haskell HTTP package\n\u003c/p\u003e\u003cpre\u003e readDocument [ withValidate          no\n              , withSubstDTDEntities  no\n              ...\n              ] \"http://www.w3c.org/\"\n\u003c/pre\u003e\u003cp\u003eread w3c home page (xhtml), but without accessing the DTD given in that document.\nOnly the predefined XML general entity refs are substituted.\n\u003c/p\u003e\u003cpre\u003e readDocument [ withValidate          no\n              , withSubstDTDEntities  no\n              , withSubstHTMLEntities yes\n              ...\n              ] \"http://www.w3c.org/\"\n\u003c/pre\u003e\u003cp\u003esame as above, but with substituion of all general entity refs defined in XHTML.\n\u003c/p\u003e\u003cp\u003efor minimal complete examples see \u003ccode\u003e\u003ca\u003ewriteDocument\u003c/a\u003e\u003c/code\u003e\nand \u003ccode\u003e\u003ca\u003erunX\u003c/a\u003e\u003c/code\u003e, the main starting point for running an XML arrow.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e String -\u003e IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#readDocument",
        "fct-type": "function",
        "title": "readDocument"
      },
      "index": {
        "description": "the main document input filter this filter can be configured by list of configuration options value of type SysConfig for all available options see module SystemConfig withValidate yes no switch on off DTD validation Only for XML parsed documents not for HTML parsing withSubstDTDEntities yes no switch on off entity substitution for general entities defined in DTD validation Default is yes Switching this option and the validation off can lead to faster parsing in that case reading the DTD documents is not longer necessary Only used with XML parsed documents not with HTML parsing withSubstHTMLEntities yes no switch on off entity substitution for general entities defined in HTML validation Default is no Switching this option on and the validation and substDTDEntities off can lead to faster parsing in that case reading the DTD documents is not longer necessary HTML general entities are still substituted Only used with XML parsed documents not with HTML parsing withParseHTML yes no switch on HTML parsing withParseByMimeType yes no select XML HTML parser by document mime type text xml and text xhtml are parsed as XML text html as HTML withCheckNamespaces yes no Switch on off namespace propagation and checking withInputEncoding encoding-spec Set default encoding withTagSoup use light weight and lazy parser based on tagsoup lib This is only available when package hxt-tagsoup is installed and the source contains an import Text.XML.HXT.TagSoup withRelaxNG schema.rng validate document with Relax NG the parameter is for the schema URI This implies using XML parser no validation against DTD and canonicalisation withCurl curl-option Use the libCurl binding for HTTP access This is only available when package hxt-curl is installed and the source contains an import Text.XML.HXT.Curl withHTTP http-option Use the Haskell HTTP package for HTTP access This is only available when package hxt-http is installed and the source contains an import Text.XML.HXT.HTTP examples readDocument test.xml reads and validates document test.xml no namespace propagation only canonicalization is performed import Text.XML.HXT.Curl readDocument withValidate no withInputEncoding isoLatin1 withParseByMimeType yes withCurl http localhost test.php reads document test.php parses it as HTML or XML depending on the mimetype given from the server but without validation default encoding isoLatin1 HTTP access is done via libCurl readDocument withParseHTML yes withInputEncoding isoLatin1 reads HTML document from standard input no validation is done when parsing HTML default encoding is isoLatin1 readDocument withInputEncoding isoLatin1 withValidate no withMimeTypeFile etc mime.types withStrictInput yes test.svg reads an SVG document from test.svg sets the mime type by looking in the system mimetype config file default encoding is isoLatin1 import Text.XML.HXT.Curl import Text.XML.HXT.TagSoup readDocument withParseHTML yes withTagSoup withProxy www-cache withCurl withWarnings no http www.haskell.org reads Haskell homepage with HTML parser ignoring any warnings at the time of writing there were some HTML errors with http access via libCurl interface and proxy www-cache at port parsing is done with tagsoup HTML parser This requires packages hxt-curl and hxt-tagsoup to be installed readDocument withValidate yes withCheckNamespaces yes withRemoveWS yes withTrace withHTTP http www.w3c.org read w3c home page xhtml validate and check namespaces remove whitespace between tags trace activities with level HTTP access is done with Haskell HTTP package readDocument withValidate no withSubstDTDEntities no http www.w3c.org read w3c home page xhtml but without accessing the DTD given in that document Only the predefined XML general entity refs are substituted readDocument withValidate no withSubstDTDEntities no withSubstHTMLEntities yes http www.w3c.org same as above but with substituion of all general entity refs defined in XHTML for minimal complete examples see writeDocument and runX the main starting point for running an XML arrow",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "readDocument",
        "normalized": "SysConfigList-\u003eString-\u003eIOStateArrow a b XmlTree",
        "package": "hxt",
        "partial": "Document",
        "signature": "SysConfigList-\u003eString-\u003eIOStateArrow s b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:readFromDocument",
      "description": {
        "fct-descr": "\u003cp\u003ethe arrow version of \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e, the arrow input is the source URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e IOStateArrow s String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#readFromDocument",
        "fct-type": "function",
        "title": "readFromDocument"
      },
      "index": {
        "description": "the arrow version of readDocument the arrow input is the source URI",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "readFromDocument",
        "normalized": "SysConfigList-\u003eIOStateArrow a String XmlTree",
        "package": "hxt",
        "partial": "From Document",
        "signature": "SysConfigList-\u003eIOStateArrow s String XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:readFromString",
      "description": {
        "fct-descr": "\u003cp\u003ethe arrow version of \u003ccode\u003e\u003ca\u003ereadString\u003c/a\u003e\u003c/code\u003e, the arrow input is the source URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e IOStateArrow s String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#readFromString",
        "fct-type": "function",
        "title": "readFromString"
      },
      "index": {
        "description": "the arrow version of readString the arrow input is the source URI",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "readFromString",
        "normalized": "SysConfigList-\u003eIOStateArrow a String XmlTree",
        "package": "hxt",
        "partial": "From String",
        "signature": "SysConfigList-\u003eIOStateArrow s String XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:readString",
      "description": {
        "fct-descr": "\u003cp\u003eread a document that is stored in a normal Haskell String\n\u003c/p\u003e\u003cp\u003ethe same function as readDocument, but the parameter forms the input.\n All options available for \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e are applicable for readString,\n except input encoding options.\n\u003c/p\u003e\u003cp\u003eEncoding: No decoding is done, the String argument is taken as Unicode string\n All decoding must be done before calling readString, even if the\n XML document contains an encoding spec.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e String -\u003e IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#readString",
        "fct-type": "function",
        "title": "readString"
      },
      "index": {
        "description": "read document that is stored in normal Haskell String the same function as readDocument but the parameter forms the input All options available for readDocument are applicable for readString except input encoding options Encoding No decoding is done the String argument is taken as Unicode string All decoding must be done before calling readString even if the XML document contains an encoding spec",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "readString",
        "normalized": "SysConfigList-\u003eString-\u003eIOStateArrow a b XmlTree",
        "package": "hxt",
        "partial": "String",
        "signature": "SysConfigList-\u003eString-\u003eIOStateArrow s b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:xread",
      "description": {
        "fct-descr": "\u003cp\u003eparse a string as XML CONTENT, (no xml decl or doctype decls are allowed),\n substitute all predefined XML entity refs and canonicalize tree\n This xread arrow delegates all work to the xread parser function in module XmlParsec\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#xread",
        "fct-type": "function",
        "title": "xread"
      },
      "index": {
        "description": "parse string as XML CONTENT no xml decl or doctype decls are allowed substitute all predefined XML entity refs and canonicalize tree This xread arrow delegates all work to the xread parser function in module XmlParsec",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "xread",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-ReadDocument.html#v:xreadDoc",
      "description": {
        "fct-descr": "\u003cp\u003ea more general version of xread which\n parses a whole document including a prolog\n (xml decl, doctype decl) and processing\n instructions. Doctype decls remain uninterpreted,\n but are in the list of results trees.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.ReadDocument",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-ReadDocument.html#xreadDoc",
        "fct-type": "function",
        "title": "xreadDoc"
      },
      "index": {
        "description": "more general version of xread which parses whole document including prolog xml decl doctype decl and processing instructions Doctype decls remain uninterpreted but are in the list of results trees",
        "hierarchy": "Text XML HXT Arrow ReadDocument",
        "module": "Text.XML.HXT.Arrow.ReadDocument",
        "name": "xreadDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-WriteDocument.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCompound arrow for writing XML documents\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.WriteDocument",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-WriteDocument.html",
        "fct-type": "module",
        "title": "WriteDocument"
      },
      "index": {
        "description": "Compound arrow for writing XML documents",
        "hierarchy": "Text XML HXT Arrow WriteDocument",
        "module": "Text.XML.HXT.Arrow.WriteDocument",
        "name": "WriteDocument",
        "normalized": "",
        "package": "hxt",
        "partial": "Write Document",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-WriteDocument.html#v:prepareContents",
      "description": {
        "fct-descr": "\u003cp\u003eindent and format output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.WriteDocument",
        "fct-package": "hxt",
        "fct-signature": "XIOSysState -\u003e (Bool -\u003e Bool -\u003e String -\u003e a XmlTree XmlTree) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-WriteDocument.html#prepareContents",
        "fct-type": "function",
        "title": "prepareContents"
      },
      "index": {
        "description": "indent and format output",
        "hierarchy": "Text XML HXT Arrow WriteDocument",
        "module": "Text.XML.HXT.Arrow.WriteDocument",
        "name": "prepareContents",
        "normalized": "XIOSysState-\u003e(Bool-\u003eBool-\u003eString-\u003ea XmlTree XmlTree)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Contents",
        "signature": "XIOSysState-\u003e(Bool-\u003eBool-\u003eString-\u003ea XmlTree XmlTree)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-WriteDocument.html#v:writeDocument",
      "description": {
        "fct-descr": "\u003cp\u003ethe main filter for writing documents\n\u003c/p\u003e\u003cp\u003ethis filter can be configured by an option list like \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eusage: \u003ccode\u003e writeDocument optionList destination \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eif \u003ccode\u003e destination \u003c/code\u003e is the empty string or \"-\", stdout is used as output device\n\u003c/p\u003e\u003cp\u003efor available options see \u003ccode\u003e\u003ca\u003eSystemConfig\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e \u003ccode\u003ewithOutputXML\u003c/code\u003e :\n (default) issue XML: quote special XML chars \u003e,\u003c,\",',& where neccessary\n                   add XML processing instruction\n                   and encode document with respect to output encoding,\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithOutputHTML\u003c/code\u003e :\n issue HTML: translate all special XML chars and all HTML chars with a corresponding entity reference\n into entity references. Do not generate empty elements, e.g. \u003ccode\u003e\u003ca\u003e.../\u003c/a\u003e\u003c/code\u003e for HTML elements, that are allowed\n to contain a none empty body. Result is for the example is \u003ccode\u003e\u003ca\u003e...\u003c/a\u003e\u003ca\u003e/script\u003c/a\u003e\u003c/code\u003e.\n The short form introduces trouble in various browsers.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithOutputXHTML\u003c/code\u003e :\n same as \u003ccode\u003ewithOutputHTML\u003c/code\u003e, but all none ASCII chars are substituted by char references.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithOutputPLAIN\u003c/code\u003e :\n Do not substitute any chars. This is useful when generating something else than XML/HTML, e.g. Haskell source code.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithXmlPi yes/no\u003c/code\u003e :\n Add a \u003ccode\u003e\u003ca\u003eversion=... encoding=... ?\u003c/a\u003e\u003c/code\u003e processing instruction to the beginning of the document.\n Default is yes.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithAddDefaultDTD\u003c/code\u003e :\n  if the document to be written was build by reading another document containing a Document Type Declaration,\n  this DTD is inserted into the output document (default: no insert)\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithShowTree yes/no\u003c/code\u003e :\n  show DOM tree representation of document (for debugging)\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003ewithShowHaskell yes/no\u003c/code\u003e :\n  show Haskell representaion of document (for debugging)\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003ea minimal main program for copying a document\n has the following structure:\n\u003c/p\u003e\u003cpre\u003e module Main\n where\n\n import Text.XML.HXT.Core\n\n main        :: IO ()\n main\n     = do\n       runX ( readDocument  [] \"hello.xml\"\n              \u003e\u003e\u003e\n              writeDocument [] \"bye.xml\"\n            )\n       return ()\n\u003c/pre\u003e\u003cp\u003ean example for copying a document from the web to standard output with global trace level 1, input trace level 2,\noutput encoding isoLatin1,\nand evaluation of\nerror code is:\n\u003c/p\u003e\u003cpre\u003e module Main\n where\n\n import Text.XML.HXT.Core\n import Text.XML.HXT.Curl\n -- or\n -- import Text.XML.HXT.HTTP\n import System.Exit\n\n main        :: IO ()\n main\n     = do\n       [rc] \u003c- runX\n               ( configSysVars [ withTrace 1          -- set the defaults for all read-,\n                               , withCurl []          -- write- and other operations\n                                 -- or withHTTP []\n                               ]\n                 \u003e\u003e\u003e\n                 readDocument  [ withTrace     2      -- use these additional\n                               , withParseHTML yes    -- options only for this read\n                               ]\n                               \"http://www.haskell.org/\"\n                 \u003e\u003e\u003e\n                 writeDocument [ withOutputEncoding isoLatin1\n                               ]\n                               \"\"                     -- output to stdout\n                 \u003e\u003e\u003e\n                 getErrStatus\n               )\n       exitWith ( if rc \u003e= c_err\n                  then ExitFailure 1\n                  else ExitSuccess\n                )\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.WriteDocument",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-WriteDocument.html#writeDocument",
        "fct-type": "function",
        "title": "writeDocument"
      },
      "index": {
        "description": "the main filter for writing documents this filter can be configured by an option list like readDocument usage writeDocument optionList destination if destination is the empty string or stdout is used as output device for available options see SystemConfig withOutputXML default issue XML quote special XML chars where neccessary add XML processing instruction and encode document with respect to output encoding withOutputHTML issue HTML translate all special XML chars and all HTML chars with corresponding entity reference into entity references Do not generate empty elements e.g for HTML elements that are allowed to contain none empty body Result is for the example is script The short form introduces trouble in various browsers withOutputXHTML same as withOutputHTML but all none ASCII chars are substituted by char references withOutputPLAIN Do not substitute any chars This is useful when generating something else than XML HTML e.g Haskell source code withXmlPi yes no Add version encoding processing instruction to the beginning of the document Default is yes withAddDefaultDTD if the document to be written was build by reading another document containing Document Type Declaration this DTD is inserted into the output document default no insert withShowTree yes no show DOM tree representation of document for debugging withShowHaskell yes no show Haskell representaion of document for debugging minimal main program for copying document has the following structure module Main where import Text.XML.HXT.Core main IO main do runX readDocument hello.xml writeDocument bye.xml return an example for copying document from the web to standard output with global trace level input trace level output encoding isoLatin1 and evaluation of error code is module Main where import Text.XML.HXT.Core import Text.XML.HXT.Curl or import Text.XML.HXT.HTTP import System.Exit main IO main do rc runX configSysVars withTrace set the defaults for all read withCurl write and other operations or withHTTP readDocument withTrace use these additional withParseHTML yes options only for this read http www.haskell.org writeDocument withOutputEncoding isoLatin1 output to stdout getErrStatus exitWith if rc err then ExitFailure else ExitSuccess",
        "hierarchy": "Text XML HXT Arrow WriteDocument",
        "module": "Text.XML.HXT.Arrow.WriteDocument",
        "name": "writeDocument",
        "normalized": "SysConfigList-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document",
        "signature": "SysConfigList-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-WriteDocument.html#v:writeDocument-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.WriteDocument",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-WriteDocument.html#writeDocument%27",
        "fct-type": "function",
        "title": "writeDocument'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow WriteDocument",
        "module": "Text.XML.HXT.Arrow.WriteDocument",
        "name": "writeDocument'",
        "normalized": "Bool-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document'",
        "signature": "Bool-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-WriteDocument.html#v:writeDocumentToString",
      "description": {
        "fct-descr": "\u003cp\u003eConvert a document into a string. Formating is done the same way\n and with the same options as in \u003ccode\u003e\u003ca\u003ewriteDocument\u003c/a\u003e\u003c/code\u003e. Default output encoding is\n no encoding, that means the result is a normal unicode encode haskell string.\n The default may be overwritten with the \u003ccode\u003e\u003ca\u003ewithOutputEncoding\u003c/a\u003e\u003c/code\u003e option.\n The XML PI can be suppressed by the \u003ccode\u003e\u003ca\u003ea_no_xml_pi\u003c/a\u003e\u003c/code\u003e option.\n\u003c/p\u003e\u003cp\u003eThis arrow fails, when the encoding scheme is not supported.\n The arrow is pure, it does not run in the IO monad.\n The XML PI is suppressed, if not explicitly turned on with an\n option \u003ccode\u003e (a_no_xml_pi, v_0) \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.WriteDocument",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-WriteDocument.html#writeDocumentToString",
        "fct-type": "function",
        "title": "writeDocumentToString"
      },
      "index": {
        "description": "Convert document into string Formating is done the same way and with the same options as in writeDocument Default output encoding is no encoding that means the result is normal unicode encode haskell string The default may be overwritten with the withOutputEncoding option The XML PI can be suppressed by the no xml pi option This arrow fails when the encoding scheme is not supported The arrow is pure it does not run in the IO monad The XML PI is suppressed if not explicitly turned on with an option no xml pi",
        "hierarchy": "Text XML HXT Arrow WriteDocument",
        "module": "Text.XML.HXT.Arrow.WriteDocument",
        "name": "writeDocumentToString",
        "normalized": "SysConfigList-\u003ea XmlTree String",
        "package": "hxt",
        "partial": "Document To String",
        "signature": "SysConfigList-\u003ea XmlTree String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eBasic arrows for processing XML documents\n\u003c/p\u003e\u003cp\u003eAll arrows use IO and a global state for options, errorhandling, ...\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html",
        "fct-type": "module",
        "title": "XmlArrow"
      },
      "index": {
        "description": "Basic arrows for processing XML documents All arrows use IO and global state for options errorhandling",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "XmlArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#t:ArrowDTD",
      "description": {
        "fct-descr": "\u003cp\u003eDocument Type Definition arrows\n\u003c/p\u003e\u003cp\u003eThese are separated, because they are not needed for document processing,\nonly when processing the DTD, e.g. for generating access funtions for the toolbox\nfrom a DTD (se example DTDtoHaskell in the examples directory)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#ArrowDTD",
        "fct-type": "class",
        "title": "ArrowDTD"
      },
      "index": {
        "description": "Document Type Definition arrows These are separated because they are not needed for document processing only when processing the DTD e.g for generating access funtions for the toolbox from DTD se example DTDtoHaskell in the examples directory",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "ArrowDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#t:ArrowXml",
      "description": {
        "fct-descr": "\u003cp\u003eArrows for processing \u003ccode\u003e\u003ca\u003eXmlTree\u003c/a\u003e\u003c/code\u003es\n\u003c/p\u003e\u003cp\u003eThese arrows can be grouped into predicates, selectors, constructors, and transformers.\n\u003c/p\u003e\u003cp\u003eAll predicates (tests) act like \u003ccode\u003e\u003ca\u003enone\u003c/a\u003e\u003c/code\u003e for failure and \u003ccode\u003e\u003ca\u003ethis\u003c/a\u003e\u003c/code\u003e for success.\nA logical and can be formed by \u003ccode\u003e a1 \u003e\u003e\u003e a2 \u003c/code\u003e, a locical or by \u003ccode\u003e a1 \u003c+\u003e a2 \u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eSelector arrows will fail, when applied to wrong input, e.g. selecting the text of a node with \u003ccode\u003e\u003ca\u003egetText\u003c/a\u003e\u003c/code\u003e\nwill fail when applied to a none text node.\n\u003c/p\u003e\u003cp\u003eEdit arrows will remain the input unchanged, when applied to wrong argument, e.g. editing the content of a text node\nwith \u003ccode\u003e\u003ca\u003echangeText\u003c/a\u003e\u003c/code\u003e applied to an element node will return the unchanged element node.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#ArrowXml",
        "fct-type": "class",
        "title": "ArrowXml"
      },
      "index": {
        "description": "Arrows for processing XmlTree These arrows can be grouped into predicates selectors constructors and transformers All predicates tests act like none for failure and this for success logical and can be formed by a1 a2 locical or by a1 a2 Selector arrows will fail when applied to wrong input e.g selecting the text of node with getText will fail when applied to none text node Edit arrows will remain the input unchanged when applied to wrong argument e.g editing the content of text node with changeText applied to an element node will return the unchanged element node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "ArrowXml",
        "normalized": "",
        "package": "hxt",
        "partial": "Arrow Xml",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:-43--61-",
      "description": {
        "fct-descr": "\u003cp\u003econvenient op for adding attributes or children to a node\n\u003c/p\u003e\u003cp\u003eusage: \u003ccode\u003e tf += cf \u003c/code\u003e\n\u003c/p\u003e\u003cp\u003ethe \u003ccode\u003etf\u003c/code\u003e arrow computes an element node, and all trees computed by \u003ccode\u003ecf\u003c/code\u003e are\n added to this node, if a tree is an attribute, it is inserted in the attribute list\n else it is appended to the content list.\n\u003c/p\u003e\u003cp\u003eattention: do not build long content list this way because \u003ccode\u003e\u003ca\u003e+=\u003c/a\u003e\u003c/code\u003e is implemented by ++\n\u003c/p\u003e\u003cp\u003eexamples:\n\u003c/p\u003e\u003cpre\u003e eelem \"a\"\n   += sattr \"href\" \"page.html\"\n   += sattr \"name\" \"here\"\n   += txt \"look here\"\n\u003c/pre\u003e\u003cp\u003eis the same as\n\u003c/p\u003e\u003cpre\u003e mkelem [ sattr \"href\" \"page.html\"\n        , sattr \"name\" \"here\"\n        ]\n        [ txt \"look here\" ]\n\u003c/pre\u003e\u003cp\u003eand results in the XML fragment: \u003ca href=\"page.html\" name=\"here\"\u003elook here\u003c/a\u003e\n\u003c/p\u003e\u003cp\u003eadvantage of the \u003ccode\u003e\u003ca\u003e+=\u003c/a\u003e\u003c/code\u003e operator is, that attributes and content can be added\n any time step by step.\n if \u003ccode\u003etf\u003c/code\u003e computes a whole list of trees, e.g. a list of \"td\" or \"tr\" elements,\n the attributes or content is added to all trees. useful for adding \"class\" or \"style\" attributes\n to table elements.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a b XmlTree -\u003e a b XmlTree -\u003e a b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#%2B%3D",
        "fct-type": "method",
        "title": "(+=)"
      },
      "index": {
        "description": "convenient op for adding attributes or children to node usage tf cf the tf arrow computes an element node and all trees computed by cf are added to this node if tree is an attribute it is inserted in the attribute list else it is appended to the content list attention do not build long content list this way because is implemented by examples eelem sattr href page.html sattr name here txt look here is the same as mkelem sattr href page.html sattr name here txt look here and results in the XML fragment href page.html name here look here advantage of the operator is that attributes and content can be added any time step by step if tf computes whole list of trees e.g list of td or tr elements the attributes or content is added to all trees useful for adding class or style attributes to table elements",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "(+=) +=",
        "normalized": "a b XmlTree-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "a b XmlTree-\u003ea b XmlTree-\u003ea b XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:addAttr",
      "description": {
        "fct-descr": "\u003cp\u003eadd (or replace) an attribute\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#addAttr",
        "fct-type": "method",
        "title": "addAttr"
      },
      "index": {
        "description": "add or replace an attribute",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "addAttr",
        "normalized": "String-\u003eString-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr",
        "signature": "String-\u003eString-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:addAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eadd a list of attributes to an element\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#addAttrl",
        "fct-type": "method",
        "title": "addAttrl"
      },
      "index": {
        "description": "add list of attributes to an element",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "addAttrl",
        "normalized": "a XmlTree XmlTree-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "a XmlTree XmlTree-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:aelem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient arrow for element constrution with attributes but without content, simple variant of \u003ccode\u003e\u003ca\u003emkelem\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emkElement\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e [a n XmlTree] -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#aelem",
        "fct-type": "method",
        "title": "aelem"
      },
      "index": {
        "description": "convenient arrow for element constrution with attributes but without content simple variant of mkelem and mkElement",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "aelem",
        "normalized": "String-\u003e[a b XmlTree]-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003e[a n XmlTree]-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:attr",
      "description": {
        "fct-descr": "\u003cp\u003econvenient arrow for attribute constrution, simple variant of \u003ccode\u003e\u003ca\u003emkAttr\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#attr",
        "fct-type": "method",
        "title": "attr"
      },
      "index": {
        "description": "convenient arrow for attribute constrution simple variant of mkAttr",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "attr",
        "normalized": "String-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:blb",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for blob nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Blob -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#blb",
        "fct-type": "method",
        "title": "blb"
      },
      "index": {
        "description": "constant arrow for blob nodes",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "blb",
        "normalized": "Blob-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "Blob-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeAttrName",
      "description": {
        "fct-descr": "\u003cp\u003eedit an attribute name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeAttrName",
        "fct-type": "method",
        "title": "changeAttrName"
      },
      "index": {
        "description": "edit an attribute name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeAttrName",
        "normalized": "(QName-\u003eQName)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr Name",
        "signature": "(QName-\u003eQName)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003eedit an attribute value\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeAttrValue",
        "fct-type": "method",
        "title": "changeAttrValue"
      },
      "index": {
        "description": "edit an attribute value",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeAttrValue",
        "normalized": "(String-\u003eString)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr Value",
        "signature": "(String-\u003eString)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eedit an attribute list of an element node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(XmlTrees -\u003e XmlTrees -\u003e XmlTrees) -\u003e a XmlTree XmlTree -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeAttrl",
        "fct-type": "method",
        "title": "changeAttrl"
      },
      "index": {
        "description": "edit an attribute list of an element node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeAttrl",
        "normalized": "(XmlTrees-\u003eXmlTrees-\u003eXmlTrees)-\u003ea XmlTree XmlTree-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "(XmlTrees-\u003eXmlTrees-\u003eXmlTrees)-\u003ea XmlTree XmlTree-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeBlob",
      "description": {
        "fct-descr": "\u003cp\u003eedit the blob of a blob node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(Blob -\u003e Blob) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeBlob",
        "fct-type": "method",
        "title": "changeBlob"
      },
      "index": {
        "description": "edit the blob of blob node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeBlob",
        "normalized": "(Blob-\u003eBlob)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Blob",
        "signature": "(Blob-\u003eBlob)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeCmt",
      "description": {
        "fct-descr": "\u003cp\u003eedit the comment string of a comment node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeCmt",
        "fct-type": "method",
        "title": "changeCmt"
      },
      "index": {
        "description": "edit the comment string of comment node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeCmt",
        "normalized": "(String-\u003eString)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Cmt",
        "signature": "(String-\u003eString)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeElemName",
      "description": {
        "fct-descr": "\u003cp\u003eedit an element name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeElemName",
        "fct-type": "method",
        "title": "changeElemName"
      },
      "index": {
        "description": "edit an element name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeElemName",
        "normalized": "(QName-\u003eQName)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Elem Name",
        "signature": "(QName-\u003eQName)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changePiName",
      "description": {
        "fct-descr": "\u003cp\u003eedit a pi name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changePiName",
        "fct-type": "method",
        "title": "changePiName"
      },
      "index": {
        "description": "edit pi name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changePiName",
        "normalized": "(QName-\u003eQName)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Pi Name",
        "signature": "(QName-\u003eQName)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeQName",
      "description": {
        "fct-descr": "\u003cp\u003eedit an element-, attribute- or pi- name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeQName",
        "fct-type": "method",
        "title": "changeQName"
      },
      "index": {
        "description": "edit an element attribute or pi name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeQName",
        "normalized": "(QName-\u003eQName)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "QName",
        "signature": "(QName-\u003eQName)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:changeText",
      "description": {
        "fct-descr": "\u003cp\u003eedit the string of a text node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#changeText",
        "fct-type": "method",
        "title": "changeText"
      },
      "index": {
        "description": "edit the string of text node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "changeText",
        "normalized": "(String-\u003eString)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Text",
        "signature": "(String-\u003eString)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:charRef",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for char reference nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#charRef",
        "fct-type": "method",
        "title": "charRef"
      },
      "index": {
        "description": "constant arrow for char reference nodes",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "charRef",
        "normalized": "Int-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "Ref",
        "signature": "Int-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:cmt",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for comment\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#cmt",
        "fct-type": "method",
        "title": "cmt"
      },
      "index": {
        "description": "constant arrow for comment",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "cmt",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:eelem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient arrow for constrution of empty elements without attributes, simple variant of \u003ccode\u003e\u003ca\u003emkelem\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emkElement\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#eelem",
        "fct-type": "method",
        "title": "eelem"
      },
      "index": {
        "description": "convenient arrow for constrution of empty elements without attributes simple variant of mkelem and mkElement",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "eelem",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:entityRef",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for entity reference nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#entityRef",
        "fct-type": "method",
        "title": "entityRef"
      },
      "index": {
        "description": "constant arrow for entity reference nodes",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "entityRef",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "Ref",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:err",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#err",
        "fct-type": "method",
        "title": "err"
      },
      "index": {
        "description": "constant arrow for errors",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "err",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:fatal",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for fatal errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#fatal",
        "fct-type": "method",
        "title": "fatal"
      },
      "index": {
        "description": "constant arrow for fatal errors",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "fatal",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getAttrName",
      "description": {
        "fct-descr": "\u003cp\u003eselect the name of an attribute\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree QName",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getAttrName",
        "fct-type": "method",
        "title": "getAttrName"
      },
      "index": {
        "description": "select the name of an attribute",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getAttrName",
        "normalized": "",
        "package": "hxt",
        "partial": "Attr Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003eselect the value of an attribute of an element node,\n always succeeds with empty string as default value \"\"\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getAttrValue",
        "fct-type": "method",
        "title": "getAttrValue"
      },
      "index": {
        "description": "select the value of an attribute of an element node always succeeds with empty string as default value",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getAttrValue",
        "normalized": "String-\u003ea XmlTree String",
        "package": "hxt",
        "partial": "Attr Value",
        "signature": "String-\u003ea XmlTree String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getAttrValue0",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003egetAttrValue\u003c/a\u003e\u003c/code\u003e, but fails if the attribute does not exist\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getAttrValue0",
        "fct-type": "method",
        "title": "getAttrValue0"
      },
      "index": {
        "description": "like getAttrValue but fails if the attribute does not exist",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getAttrValue0",
        "normalized": "String-\u003ea XmlTree String",
        "package": "hxt",
        "partial": "Attr Value",
        "signature": "String-\u003ea XmlTree String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eselect the attribute list of an element node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getAttrl",
        "fct-type": "method",
        "title": "getAttrl"
      },
      "index": {
        "description": "select the attribute list of an element node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getAttrl",
        "normalized": "",
        "package": "hxt",
        "partial": "Attrl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getCdata",
      "description": {
        "fct-descr": "\u003cp\u003eselect the content of a CDATA node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getCdata",
        "fct-type": "method",
        "title": "getCdata"
      },
      "index": {
        "description": "select the content of CDATA node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getCdata",
        "normalized": "",
        "package": "hxt",
        "partial": "Cdata",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getCharRef",
      "description": {
        "fct-descr": "\u003cp\u003eselect the value of a char reference\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getCharRef",
        "fct-type": "method",
        "title": "getCharRef"
      },
      "index": {
        "description": "select the value of char reference",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getCharRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getCmt",
      "description": {
        "fct-descr": "\u003cp\u003eselect the comment of a comment node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getCmt",
        "fct-type": "method",
        "title": "getCmt"
      },
      "index": {
        "description": "select the comment of comment node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getCmt",
        "normalized": "",
        "package": "hxt",
        "partial": "Cmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getDTDAttrValue",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getDTDAttrValue",
        "fct-type": "method",
        "title": "getDTDAttrValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getDTDAttrValue",
        "normalized": "String-\u003ea XmlTree String",
        "package": "hxt",
        "partial": "DTDAttr Value",
        "signature": "String-\u003ea XmlTree String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getDTDAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eselect the DTD attributes of a DTD node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getDTDAttrl",
        "fct-type": "method",
        "title": "getDTDAttrl"
      },
      "index": {
        "description": "select the DTD attributes of DTD node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getDTDAttrl",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDAttrl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getDTDPart",
      "description": {
        "fct-descr": "\u003cp\u003eselect the DTD type of a DTD node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree DTDElem",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getDTDPart",
        "fct-type": "method",
        "title": "getDTDPart"
      },
      "index": {
        "description": "select the DTD type of DTD node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getDTDPart",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDPart",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getElemName",
      "description": {
        "fct-descr": "\u003cp\u003eselect the name of an element node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree QName",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getElemName",
        "fct-type": "method",
        "title": "getElemName"
      },
      "index": {
        "description": "select the name of an element node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getElemName",
        "normalized": "",
        "package": "hxt",
        "partial": "Elem Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getEntityRef",
      "description": {
        "fct-descr": "\u003cp\u003eselect the name of a entity reference node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getEntityRef",
        "fct-type": "method",
        "title": "getEntityRef"
      },
      "index": {
        "description": "select the name of entity reference node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getEntityRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Entity Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getErrorLevel",
      "description": {
        "fct-descr": "\u003cp\u003eselect the error level (c_warn, c_err, c_fatal) from an error node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getErrorLevel",
        "fct-type": "method",
        "title": "getErrorLevel"
      },
      "index": {
        "description": "select the error level warn err fatal from an error node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getErrorLevel",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Level",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getErrorMsg",
      "description": {
        "fct-descr": "\u003cp\u003eselect the error message from an error node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getErrorMsg",
        "fct-type": "method",
        "title": "getErrorMsg"
      },
      "index": {
        "description": "select the error message from an error node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getErrorMsg",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getLocalPart",
      "description": {
        "fct-descr": "\u003cp\u003eselect the local part\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getLocalPart",
        "fct-type": "method",
        "title": "getLocalPart"
      },
      "index": {
        "description": "select the local part",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getLocalPart",
        "normalized": "",
        "package": "hxt",
        "partial": "Local Part",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getName",
      "description": {
        "fct-descr": "\u003cp\u003eselect the prefix:localPart or localPart from an element, attribute or pi\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getName",
        "fct-type": "method",
        "title": "getName"
      },
      "index": {
        "description": "select the prefix localPart or localPart from an element attribute or pi",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getName",
        "normalized": "",
        "package": "hxt",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getNamePrefix",
      "description": {
        "fct-descr": "\u003cp\u003eselect the name prefix\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getNamePrefix",
        "fct-type": "method",
        "title": "getNamePrefix"
      },
      "index": {
        "description": "select the name prefix",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getNamePrefix",
        "normalized": "",
        "package": "hxt",
        "partial": "Name Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getNamespaceUri",
      "description": {
        "fct-descr": "\u003cp\u003eselect the namespace URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getNamespaceUri",
        "fct-type": "method",
        "title": "getNamespaceUri"
      },
      "index": {
        "description": "select the namespace URI",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getNamespaceUri",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace Uri",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getPiContent",
      "description": {
        "fct-descr": "\u003cp\u003eselect the content of a processing instruction\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getPiContent",
        "fct-type": "method",
        "title": "getPiContent"
      },
      "index": {
        "description": "select the content of processing instruction",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getPiContent",
        "normalized": "",
        "package": "hxt",
        "partial": "Pi Content",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getPiName",
      "description": {
        "fct-descr": "\u003cp\u003eselect the name of a processing instruction\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree QName",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getPiName",
        "fct-type": "method",
        "title": "getPiName"
      },
      "index": {
        "description": "select the name of processing instruction",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getPiName",
        "normalized": "",
        "package": "hxt",
        "partial": "Pi Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getQAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003egetAttrValue\u003c/a\u003e\u003c/code\u003e, but select the value of an attribute given by a qualified name,\n always succeeds with empty string as default value \"\"\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getQAttrValue",
        "fct-type": "method",
        "title": "getQAttrValue"
      },
      "index": {
        "description": "like getAttrValue but select the value of an attribute given by qualified name always succeeds with empty string as default value",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getQAttrValue",
        "normalized": "QName-\u003ea XmlTree String",
        "package": "hxt",
        "partial": "QAttr Value",
        "signature": "QName-\u003ea XmlTree String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getQAttrValue0",
      "description": {
        "fct-descr": "\u003cp\u003elike \u003ccode\u003e\u003ca\u003egetQAttrValue\u003c/a\u003e\u003c/code\u003e, but fails if attribute does not exist\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getQAttrValue0",
        "fct-type": "method",
        "title": "getQAttrValue0"
      },
      "index": {
        "description": "like getQAttrValue but fails if attribute does not exist",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getQAttrValue0",
        "normalized": "QName-\u003ea XmlTree String",
        "package": "hxt",
        "partial": "QAttr Value",
        "signature": "QName-\u003ea XmlTree String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getQName",
      "description": {
        "fct-descr": "\u003cp\u003eselect the qualified name from an element, attribute or pi\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree QName",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getQName",
        "fct-type": "method",
        "title": "getQName"
      },
      "index": {
        "description": "select the qualified name from an element attribute or pi",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getQName",
        "normalized": "",
        "package": "hxt",
        "partial": "QName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getText",
      "description": {
        "fct-descr": "\u003cp\u003eselect the text of a text node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getText",
        "fct-type": "method",
        "title": "getText"
      },
      "index": {
        "description": "select the text of text node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getText",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getUniversalName",
      "description": {
        "fct-descr": "\u003cp\u003eselect the univeral name ({namespace URI} ++ localPart)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getUniversalName",
        "fct-type": "method",
        "title": "getUniversalName"
      },
      "index": {
        "description": "select the univeral name namespace URI localPart",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getUniversalName",
        "normalized": "",
        "package": "hxt",
        "partial": "Universal Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:getUniversalUri",
      "description": {
        "fct-descr": "\u003cp\u003eselect the univeral name (namespace URI ++ localPart)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#getUniversalUri",
        "fct-type": "method",
        "title": "getUniversalUri"
      },
      "index": {
        "description": "select the univeral name namespace URI localPart",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "getUniversalUri",
        "normalized": "",
        "package": "hxt",
        "partial": "Universal Uri",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasAttr",
      "description": {
        "fct-descr": "\u003cp\u003etest whether an element node has an attribute node with a specific name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasAttr",
        "fct-type": "method",
        "title": "hasAttr"
      },
      "index": {
        "description": "test whether an element node has an attribute node with specific name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasAttr",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003etest whether an element node has an attribute with a specific value\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e (String -\u003e Bool) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasAttrValue",
        "fct-type": "method",
        "title": "hasAttrValue"
      },
      "index": {
        "description": "test whether an element node has an attribute with specific value",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasAttrValue",
        "normalized": "String-\u003e(String-\u003eBool)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr Value",
        "signature": "String-\u003e(String-\u003eBool)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasDTDAttr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasDTDAttr",
        "fct-type": "method",
        "title": "hasDTDAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasDTDAttr",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "DTDAttr",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasLocalPart",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a node has a specific name as local part,\n useful only after namespace propagation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasLocalPart",
        "fct-type": "method",
        "title": "hasLocalPart"
      },
      "index": {
        "description": "test whether node has specific name as local part useful only after namespace propagation",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasLocalPart",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Local Part",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasName",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a node has a specific name (prefix:localPart ore localPart),\n generally useful, even without namespace handling\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasName",
        "fct-type": "method",
        "title": "hasName"
      },
      "index": {
        "description": "test whether node has specific name prefix localPart ore localPart generally useful even without namespace handling",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasName",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Name",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasNamePrefix",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a node has a specific name prefix,\n useful only after namespace propagation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasNamePrefix",
        "fct-type": "method",
        "title": "hasNamePrefix"
      },
      "index": {
        "description": "test whether node has specific name prefix useful only after namespace propagation",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasNamePrefix",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Name Prefix",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasNameWith",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a node (element, attribute, pi) has a name with a special property\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e Bool) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasNameWith",
        "fct-type": "method",
        "title": "hasNameWith"
      },
      "index": {
        "description": "test whether node element attribute pi has name with special property",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasNameWith",
        "normalized": "(QName-\u003eBool)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Name With",
        "signature": "(QName-\u003eBool)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasNamespaceUri",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a node has a specific namespace URI\n useful only after namespace propagation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasNamespaceUri",
        "fct-type": "method",
        "title": "hasNamespaceUri"
      },
      "index": {
        "description": "test whether node has specific namespace URI useful only after namespace propagation",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasNamespaceUri",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Namespace Uri",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasQAttr",
      "description": {
        "fct-descr": "\u003cp\u003etest whether an element node has an attribute node with a specific qualified name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasQAttr",
        "fct-type": "method",
        "title": "hasQAttr"
      },
      "index": {
        "description": "test whether an element node has an attribute node with specific qualified name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasQAttr",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "QAttr",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasQAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003etest whether an element node has an attribute with a qualified name and a specific value\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e (String -\u003e Bool) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasQAttrValue",
        "fct-type": "method",
        "title": "hasQAttrValue"
      },
      "index": {
        "description": "test whether an element node has an attribute with qualified name and specific value",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasQAttrValue",
        "normalized": "QName-\u003e(String-\u003eBool)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "QAttr Value",
        "signature": "QName-\u003e(String-\u003eBool)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasQName",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a node (element, attribute, pi) has a specific qualified name\n useful only after namespace propagation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasQName",
        "fct-type": "method",
        "title": "hasQName"
      },
      "index": {
        "description": "test whether node element attribute pi has specific qualified name useful only after namespace propagation",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasQName",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "QName",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:hasText",
      "description": {
        "fct-descr": "\u003cp\u003etest for text nodes with text, for which a predicate holds\n\u003c/p\u003e\u003cp\u003eexample: \u003ccode\u003ehasText (all (`elem` \" \\t\\n\"))\u003c/code\u003e check for text nodes with only whitespace content\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e Bool) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#hasText",
        "fct-type": "method",
        "title": "hasText"
      },
      "index": {
        "description": "test for text nodes with text for which predicate holds example hasText all elem check for text nodes with only whitespace content",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "hasText",
        "normalized": "(String-\u003eBool)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Text",
        "signature": "(String-\u003eBool)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isAttr",
      "description": {
        "fct-descr": "\u003cp\u003etest for attribute tree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isAttr",
        "fct-type": "method",
        "title": "isAttr"
      },
      "index": {
        "description": "test for attribute tree",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isAttr",
        "normalized": "",
        "package": "hxt",
        "partial": "Attr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isBlob",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isBlob",
        "fct-type": "method",
        "title": "isBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isBlob",
        "normalized": "",
        "package": "hxt",
        "partial": "Blob",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isCdata",
      "description": {
        "fct-descr": "\u003cp\u003etest for CDATA section, used during parsing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isCdata",
        "fct-type": "method",
        "title": "isCdata"
      },
      "index": {
        "description": "test for CDATA section used during parsing",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isCdata",
        "normalized": "",
        "package": "hxt",
        "partial": "Cdata",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isCharRef",
      "description": {
        "fct-descr": "\u003cp\u003etest for char reference, used during parsing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isCharRef",
        "fct-type": "method",
        "title": "isCharRef"
      },
      "index": {
        "description": "test for char reference used during parsing",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isCharRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isCmt",
      "description": {
        "fct-descr": "\u003cp\u003etest for comment\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isCmt",
        "fct-type": "method",
        "title": "isCmt"
      },
      "index": {
        "description": "test for comment",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isCmt",
        "normalized": "",
        "package": "hxt",
        "partial": "Cmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTD",
      "description": {
        "fct-descr": "\u003cp\u003etest for DTD part, used during parsing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTD",
        "fct-type": "method",
        "title": "isDTD"
      },
      "index": {
        "description": "test for DTD part used during parsing",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDAttlist",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDAttlist",
        "fct-type": "method",
        "title": "isDTDAttlist"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDAttlist",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDAttlist",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDCondSect",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDCondSect",
        "fct-type": "method",
        "title": "isDTDCondSect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDCondSect",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDCond Sect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDContent",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDContent",
        "fct-type": "method",
        "title": "isDTDContent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDContent",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDContent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDDoctype",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDDoctype",
        "fct-type": "method",
        "title": "isDTDDoctype"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDDoctype",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDDoctype",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDElement",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDElement",
        "fct-type": "method",
        "title": "isDTDElement"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDElement",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDElement",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDEntity",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDEntity",
        "fct-type": "method",
        "title": "isDTDEntity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDEntity",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDEntity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDName",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDName",
        "fct-type": "method",
        "title": "isDTDName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDName",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDNotation",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDNotation",
        "fct-type": "method",
        "title": "isDTDNotation"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDNotation",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDNotation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDPERef",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDPERef",
        "fct-type": "method",
        "title": "isDTDPERef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDPERef",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDPERef",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isDTDPEntity",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isDTDPEntity",
        "fct-type": "method",
        "title": "isDTDPEntity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isDTDPEntity",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDPEntity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isElem",
      "description": {
        "fct-descr": "\u003cp\u003etest for element\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isElem",
        "fct-type": "method",
        "title": "isElem"
      },
      "index": {
        "description": "test for element",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isElem",
        "normalized": "",
        "package": "hxt",
        "partial": "Elem",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isEntityRef",
      "description": {
        "fct-descr": "\u003cp\u003etest for entity reference, used during parsing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isEntityRef",
        "fct-type": "method",
        "title": "isEntityRef"
      },
      "index": {
        "description": "test for entity reference used during parsing",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isEntityRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Entity Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isError",
      "description": {
        "fct-descr": "\u003cp\u003etest for error message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isError",
        "fct-type": "method",
        "title": "isError"
      },
      "index": {
        "description": "test for error message",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isError",
        "normalized": "",
        "package": "hxt",
        "partial": "Error",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isPi",
      "description": {
        "fct-descr": "\u003cp\u003etest for processing instruction\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isPi",
        "fct-type": "method",
        "title": "isPi"
      },
      "index": {
        "description": "test for processing instruction",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isPi",
        "normalized": "",
        "package": "hxt",
        "partial": "Pi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isRoot",
      "description": {
        "fct-descr": "\u003cp\u003etest for root node (element with name \"/\")\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isRoot",
        "fct-type": "method",
        "title": "isRoot"
      },
      "index": {
        "description": "test for root node element with name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isRoot",
        "normalized": "",
        "package": "hxt",
        "partial": "Root",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isText",
      "description": {
        "fct-descr": "\u003cp\u003etest for text nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isText",
        "fct-type": "method",
        "title": "isText"
      },
      "index": {
        "description": "test for text nodes",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isText",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isWhiteSpace",
      "description": {
        "fct-descr": "\u003cp\u003etest for text nodes with only white space\n\u003c/p\u003e\u003cp\u003eimplemented with \u003ccode\u003ehasTest\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isWhiteSpace",
        "fct-type": "method",
        "title": "isWhiteSpace"
      },
      "index": {
        "description": "test for text nodes with only white space implemented with hasTest",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isWhiteSpace",
        "normalized": "",
        "package": "hxt",
        "partial": "White Space",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:isXmlPi",
      "description": {
        "fct-descr": "\u003cp\u003etest for processing instruction \u003c?xml ...\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#isXmlPi",
        "fct-type": "method",
        "title": "isXmlPi"
      },
      "index": {
        "description": "test for processing instruction xml",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "isXmlPi",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkAttr",
      "description": {
        "fct-descr": "\u003cp\u003eattribute node construction:\n | the attribute value is computed by applying an arrow to the input\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkAttr",
        "fct-type": "method",
        "title": "mkAttr"
      },
      "index": {
        "description": "attribute node construction the attribute value is computed by applying an arrow to the input",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkAttr",
        "normalized": "QName-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "Attr",
        "signature": "QName-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkBlob",
      "description": {
        "fct-descr": "\u003cp\u003eblob node construction arrow\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a Blob XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkBlob",
        "fct-type": "method",
        "title": "mkBlob"
      },
      "index": {
        "description": "blob node construction arrow",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkBlob",
        "normalized": "",
        "package": "hxt",
        "partial": "Blob",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkCdata",
      "description": {
        "fct-descr": "\u003cp\u003eCDATA construction, useful for document output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkCdata",
        "fct-type": "method",
        "title": "mkCdata"
      },
      "index": {
        "description": "CDATA construction useful for document output",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkCdata",
        "normalized": "",
        "package": "hxt",
        "partial": "Cdata",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkCharRef",
      "description": {
        "fct-descr": "\u003cp\u003echar reference construction arrow, useful for document output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a Int XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkCharRef",
        "fct-type": "method",
        "title": "mkCharRef"
      },
      "index": {
        "description": "char reference construction arrow useful for document output",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkCharRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkCmt",
      "description": {
        "fct-descr": "\u003cp\u003ecomment node construction, useful for document output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkCmt",
        "fct-type": "method",
        "title": "mkCmt"
      },
      "index": {
        "description": "comment node construction useful for document output",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkCmt",
        "normalized": "",
        "package": "hxt",
        "partial": "Cmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkDTDDoctype",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkDTDDoctype",
        "fct-type": "method",
        "title": "mkDTDDoctype"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkDTDDoctype",
        "normalized": "Attributes-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "DTDDoctype",
        "signature": "Attributes-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkDTDElem",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "DTDElem -\u003e Attributes -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkDTDElem",
        "fct-type": "method",
        "title": "mkDTDElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkDTDElem",
        "normalized": "DTDElem-\u003eAttributes-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "DTDElem",
        "signature": "DTDElem-\u003eAttributes-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkDTDElement",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkDTDElement",
        "fct-type": "method",
        "title": "mkDTDElement"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkDTDElement",
        "normalized": "Attributes-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "DTDElement",
        "signature": "Attributes-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkDTDEntity",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkDTDEntity",
        "fct-type": "method",
        "title": "mkDTDEntity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkDTDEntity",
        "normalized": "Attributes-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "DTDEntity",
        "signature": "Attributes-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkDTDPEntity",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkDTDPEntity",
        "fct-type": "method",
        "title": "mkDTDPEntity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkDTDPEntity",
        "normalized": "Attributes-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "DTDPEntity",
        "signature": "Attributes-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkElement",
      "description": {
        "fct-descr": "\u003cp\u003eelement construction:\n | the attributes and the content of the element are computed by applying arrows\n to the input\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a n XmlTree -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkElement",
        "fct-type": "method",
        "title": "mkElement"
      },
      "index": {
        "description": "element construction the attributes and the content of the element are computed by applying arrows to the input",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkElement",
        "normalized": "QName-\u003ea b XmlTree-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "Element",
        "signature": "QName-\u003ea n XmlTree-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkEntityRef",
      "description": {
        "fct-descr": "\u003cp\u003eentity reference construction arrow, useful for document output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkEntityRef",
        "fct-type": "method",
        "title": "mkEntityRef"
      },
      "index": {
        "description": "entity reference construction arrow useful for document output",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkEntityRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Entity Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkError",
      "description": {
        "fct-descr": "\u003cp\u003eerror node construction, useful only internally\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkError",
        "fct-type": "method",
        "title": "mkError"
      },
      "index": {
        "description": "error node construction useful only internally",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkError",
        "normalized": "Int-\u003ea String XmlTree",
        "package": "hxt",
        "partial": "Error",
        "signature": "Int-\u003ea String XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkPi",
      "description": {
        "fct-descr": "\u003cp\u003eprocessing instruction construction:\n | the content of the processing instruction is computed by applying an arrow to the input\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkPi",
        "fct-type": "method",
        "title": "mkPi"
      },
      "index": {
        "description": "processing instruction construction the content of the processing instruction is computed by applying an arrow to the input",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkPi",
        "normalized": "QName-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "Pi",
        "signature": "QName-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkText",
      "description": {
        "fct-descr": "\u003cp\u003etext node construction arrow\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a String XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkText",
        "fct-type": "method",
        "title": "mkText"
      },
      "index": {
        "description": "text node construction arrow",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkText",
        "normalized": "",
        "package": "hxt",
        "partial": "Text",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkelem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient arrow for element construction with strings instead of qualified names as element names, see also \u003ccode\u003e\u003ca\u003emkElement\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emkelem\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e [a n XmlTree] -\u003e [a n XmlTree] -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkelem",
        "fct-type": "method",
        "title": "mkelem"
      },
      "index": {
        "description": "convenient arrow for element construction with strings instead of qualified names as element names see also mkElement and mkelem",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkelem",
        "normalized": "String-\u003e[a b XmlTree]-\u003e[a b XmlTree]-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003e[a n XmlTree]-\u003e[a n XmlTree]-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:mkqelem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient arrow for element construction, more comfortable variant of \u003ccode\u003e\u003ca\u003emkElement\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eexample for simplifying \u003ccode\u003e\u003ca\u003emkElement\u003c/a\u003e\u003c/code\u003e :\n\u003c/p\u003e\u003cpre\u003e mkElement qn (a1 \u003c+\u003e ... \u003c+\u003e ai) (c1 \u003c+\u003e ... \u003c+\u003e cj)\n\u003c/pre\u003e\u003cp\u003eequals\n\u003c/p\u003e\u003cpre\u003e mkqelem qn [a1,...,ai] [c1,...,cj]\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e [a n XmlTree] -\u003e [a n XmlTree] -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#mkqelem",
        "fct-type": "method",
        "title": "mkqelem"
      },
      "index": {
        "description": "convenient arrow for element construction more comfortable variant of mkElement example for simplifying mkElement mkElement qn a1 ai c1 cj equals mkqelem qn a1 ai c1 cj",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "mkqelem",
        "normalized": "QName-\u003e[a b XmlTree]-\u003e[a b XmlTree]-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "QName-\u003e[a n XmlTree]-\u003e[a n XmlTree]-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:processAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eprocess the attributes of an element node with an arrow\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#processAttrl",
        "fct-type": "method",
        "title": "processAttrl"
      },
      "index": {
        "description": "process the attributes of an element node with an arrow",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "processAttrl",
        "normalized": "a XmlTree XmlTree-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "a XmlTree XmlTree-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:processTopDownWithAttrl",
      "description": {
        "fct-descr": "\u003cp\u003eprocess a whole tree inclusive attribute list of element nodes\n see also: \u003ccode\u003e\u003ca\u003eprocessTopDown\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#processTopDownWithAttrl",
        "fct-type": "method",
        "title": "processTopDownWithAttrl"
      },
      "index": {
        "description": "process whole tree inclusive attribute list of element nodes see also processTopDown",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "processTopDownWithAttrl",
        "normalized": "a XmlTree XmlTree-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Top Down With Attrl",
        "signature": "a XmlTree XmlTree-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:qattr",
      "description": {
        "fct-descr": "\u003cp\u003ealias for \u003ccode\u003e\u003ca\u003emkAttr\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a n XmlTree -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#qattr",
        "fct-type": "method",
        "title": "qattr"
      },
      "index": {
        "description": "alias for mkAttr",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "qattr",
        "normalized": "QName-\u003ea b XmlTree-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "QName-\u003ea n XmlTree-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:removeAttr",
      "description": {
        "fct-descr": "\u003cp\u003eremove an attribute\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#removeAttr",
        "fct-type": "method",
        "title": "removeAttr"
      },
      "index": {
        "description": "remove an attribute",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "removeAttr",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:removeQAttr",
      "description": {
        "fct-descr": "\u003cp\u003eremove an attribute with a qualified name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#removeQAttr",
        "fct-type": "method",
        "title": "removeQAttr"
      },
      "index": {
        "description": "remove an attribute with qualified name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "removeQAttr",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "QAttr",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:root",
      "description": {
        "fct-descr": "\u003cp\u003econstruction of an element node with name \"/\" for document roots\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "[a n XmlTree] -\u003e [a n XmlTree] -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#root",
        "fct-type": "method",
        "title": "root"
      },
      "index": {
        "description": "construction of an element node with name for document roots",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "root",
        "normalized": "[a b XmlTree]-\u003e[a b XmlTree]-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "[a n XmlTree]-\u003e[a n XmlTree]-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:sattr",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for attribute nodes, attribute name and value are\n | given by parameters, see \u003ccode\u003e\u003ca\u003emkAttr\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#sattr",
        "fct-type": "method",
        "title": "sattr"
      },
      "index": {
        "description": "constant arrow for attribute nodes attribute name and value are given by parameters see mkAttr",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "sattr",
        "normalized": "String-\u003eString-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eString-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:selem",
      "description": {
        "fct-descr": "\u003cp\u003econvenient arrow for simple element constrution without attributes, simple variant of \u003ccode\u003e\u003ca\u003emkelem\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emkElement\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e [a n XmlTree] -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#selem",
        "fct-type": "method",
        "title": "selem"
      },
      "index": {
        "description": "convenient arrow for simple element constrution without attributes simple variant of mkelem and mkElement",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "selem",
        "normalized": "String-\u003e[a b XmlTree]-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003e[a n XmlTree]-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:setAttrName",
      "description": {
        "fct-descr": "\u003cp\u003ereplace an attribute name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#setAttrName",
        "fct-type": "method",
        "title": "setAttrName"
      },
      "index": {
        "description": "replace an attribute name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "setAttrName",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attr Name",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:setAttrl",
      "description": {
        "fct-descr": "\u003cp\u003ereplace an atribute list of an element node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#setAttrl",
        "fct-type": "method",
        "title": "setAttrl"
      },
      "index": {
        "description": "replace an atribute list of an element node",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "setAttrl",
        "normalized": "a XmlTree XmlTree-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "a XmlTree XmlTree-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:setDTDAttrValue",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#setDTDAttrValue",
        "fct-type": "method",
        "title": "setDTDAttrValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "setDTDAttrValue",
        "normalized": "String-\u003eString-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "DTDAttr Value",
        "signature": "String-\u003eString-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:setElemName",
      "description": {
        "fct-descr": "\u003cp\u003ereplace an element name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#setElemName",
        "fct-type": "method",
        "title": "setElemName"
      },
      "index": {
        "description": "replace an element name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "setElemName",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Elem Name",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:setPiName",
      "description": {
        "fct-descr": "\u003cp\u003ereplace an element name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#setPiName",
        "fct-type": "method",
        "title": "setPiName"
      },
      "index": {
        "description": "replace an element name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "setPiName",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Pi Name",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:setQName",
      "description": {
        "fct-descr": "\u003cp\u003ereplace an element, attribute or pi name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#setQName",
        "fct-type": "method",
        "title": "setQName"
      },
      "index": {
        "description": "replace an element attribute or pi name",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "setQName",
        "normalized": "QName-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "QName",
        "signature": "QName-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:spi",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for simple processing instructions, see \u003ccode\u003e\u003ca\u003emkPi\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#spi",
        "fct-type": "method",
        "title": "spi"
      },
      "index": {
        "description": "constant arrow for simple processing instructions see mkPi",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "spi",
        "normalized": "String-\u003eString-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eString-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:sqattr",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for attribute nodes, attribute name is a qualified name and value is a text,\n | see also \u003ccode\u003e\u003ca\u003emkAttr\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eqattr\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eattr\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#sqattr",
        "fct-type": "method",
        "title": "sqattr"
      },
      "index": {
        "description": "constant arrow for attribute nodes attribute name is qualified name and value is text see also mkAttr qattr attr",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "sqattr",
        "normalized": "QName-\u003eString-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "QName-\u003eString-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:txt",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for text nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#txt",
        "fct-type": "method",
        "title": "txt"
      },
      "index": {
        "description": "constant arrow for text nodes",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "txt",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:warn",
      "description": {
        "fct-descr": "\u003cp\u003econstant arrow for warning\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a n XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#warn",
        "fct-type": "method",
        "title": "warn"
      },
      "index": {
        "description": "constant arrow for warning",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "warn",
        "normalized": "String-\u003ea b XmlTree",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003ea n XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:xshow",
      "description": {
        "fct-descr": "\u003cp\u003eapply an arrow to the input and convert the resulting XML trees into a string representation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a n XmlTree -\u003e a n String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#xshow",
        "fct-type": "method",
        "title": "xshow"
      },
      "index": {
        "description": "apply an arrow to the input and convert the resulting XML trees into string representation",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "xshow",
        "normalized": "a b XmlTree-\u003ea b String",
        "package": "hxt",
        "partial": "",
        "signature": "a n XmlTree-\u003ea n String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlArrow.html#v:xshowBlob",
      "description": {
        "fct-descr": "\u003cp\u003eapply an arrow to the input and convert the resulting XML trees into a string representation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlArrow",
        "fct-package": "hxt",
        "fct-signature": "a n XmlTree -\u003e a n Blob",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlArrow.html#xshowBlob",
        "fct-type": "method",
        "title": "xshowBlob"
      },
      "index": {
        "description": "apply an arrow to the input and convert the resulting XML trees into string representation",
        "hierarchy": "Text XML HXT Arrow XmlArrow",
        "module": "Text.XML.HXT.Arrow.XmlArrow",
        "name": "xshowBlob",
        "normalized": "a b XmlTree-\u003ea b Blob",
        "package": "hxt",
        "partial": "Blob",
        "signature": "a n XmlTree-\u003ea n Blob"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003esystem configuration and common options options\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html",
        "fct-type": "module",
        "title": "XmlOptions"
      },
      "index": {
        "description": "system configuration and common options options",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "XmlOptions",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_accept_mimetypes",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_accept_mimetypes",
        "fct-type": "function",
        "title": "a_accept_mimetypes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_accept_mimetypes",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_add_default_dtd",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_add_default_dtd",
        "fct-type": "function",
        "title": "a_add_default_dtd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_add_default_dtd",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_canonicalize",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_canonicalize",
        "fct-type": "function",
        "title": "a_canonicalize"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_canonicalize",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_check_namespaces",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_check_namespaces",
        "fct-type": "function",
        "title": "a_check_namespaces"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_check_namespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_collect_errors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_collect_errors",
        "fct-type": "function",
        "title": "a_collect_errors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_collect_errors",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_default_baseuri",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_default_baseuri",
        "fct-type": "function",
        "title": "a_default_baseuri"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_default_baseuri",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_canonicalize",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_canonicalize",
        "fct-type": "function",
        "title": "a_do_not_canonicalize"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_canonicalize",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_check_namespaces",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_check_namespaces",
        "fct-type": "function",
        "title": "a_do_not_check_namespaces"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_check_namespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_issue_errors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_issue_errors",
        "fct-type": "function",
        "title": "a_do_not_issue_errors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_issue_errors",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_issue_warnings",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_issue_warnings",
        "fct-type": "function",
        "title": "a_do_not_issue_warnings"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_issue_warnings",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_preserve_comment",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_preserve_comment",
        "fct-type": "function",
        "title": "a_do_not_preserve_comment"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_preserve_comment",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_remove_whitespace",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_remove_whitespace",
        "fct-type": "function",
        "title": "a_do_not_remove_whitespace"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_remove_whitespace",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_subst_dtd_entities",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_subst_dtd_entities",
        "fct-type": "function",
        "title": "a_do_not_subst_dtd_entities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_subst_dtd_entities",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_subst_html_entities",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_subst_html_entities",
        "fct-type": "function",
        "title": "a_do_not_subst_html_entities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_subst_html_entities",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_do_not_validate",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_do_not_validate",
        "fct-type": "function",
        "title": "a_do_not_validate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_do_not_validate",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_error",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_error",
        "fct-type": "function",
        "title": "a_error"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_error",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_error_log",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_error_log",
        "fct-type": "function",
        "title": "a_error_log"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_error_log",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_help",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_help",
        "fct-type": "function",
        "title": "a_help"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_help",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_if_modified_since",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_if_modified_since",
        "fct-type": "function",
        "title": "a_if_modified_since"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_if_modified_since",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_if_unmodified_since",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_if_unmodified_since",
        "fct-type": "function",
        "title": "a_if_unmodified_since"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_if_unmodified_since",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_ignore_encoding_errors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_ignore_encoding_errors",
        "fct-type": "function",
        "title": "a_ignore_encoding_errors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_ignore_encoding_errors",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_ignore_none_xml_contents",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_ignore_none_xml_contents",
        "fct-type": "function",
        "title": "a_ignore_none_xml_contents"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_ignore_none_xml_contents",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_indent",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_indent",
        "fct-type": "function",
        "title": "a_indent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_indent",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_issue_errors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_issue_errors",
        "fct-type": "function",
        "title": "a_issue_errors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_issue_errors",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_issue_warnings",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_issue_warnings",
        "fct-type": "function",
        "title": "a_issue_warnings"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_issue_warnings",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_mime_types",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_mime_types",
        "fct-type": "function",
        "title": "a_mime_types"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_mime_types",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_no_empty_elem_for",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_no_empty_elem_for",
        "fct-type": "function",
        "title": "a_no_empty_elem_for"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_no_empty_elem_for",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_no_empty_elements",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_no_empty_elements",
        "fct-type": "function",
        "title": "a_no_empty_elements"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_no_empty_elements",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_no_redirect",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_no_redirect",
        "fct-type": "function",
        "title": "a_no_redirect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_no_redirect",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_no_xml_pi",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_no_xml_pi",
        "fct-type": "function",
        "title": "a_no_xml_pi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_no_xml_pi",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_output_file",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_output_file",
        "fct-type": "function",
        "title": "a_output_file"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_output_file",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_output_html",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_output_html",
        "fct-type": "function",
        "title": "a_output_html"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_output_html",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_output_plain",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_output_plain",
        "fct-type": "function",
        "title": "a_output_plain"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_output_plain",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_output_xhtml",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_output_xhtml",
        "fct-type": "function",
        "title": "a_output_xhtml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_output_xhtml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_output_xml",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_output_xml",
        "fct-type": "function",
        "title": "a_output_xml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_output_xml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_parse_by_mimetype",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_parse_by_mimetype",
        "fct-type": "function",
        "title": "a_parse_by_mimetype"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_parse_by_mimetype",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_parse_html",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_parse_html",
        "fct-type": "function",
        "title": "a_parse_html"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_parse_html",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_parse_xml",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_parse_xml",
        "fct-type": "function",
        "title": "a_parse_xml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_parse_xml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_preserve_comment",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_preserve_comment",
        "fct-type": "function",
        "title": "a_preserve_comment"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_preserve_comment",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_proxy",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_proxy",
        "fct-type": "function",
        "title": "a_proxy"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_proxy",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_redirect",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_redirect",
        "fct-type": "function",
        "title": "a_redirect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_redirect",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_remove_whitespace",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_remove_whitespace",
        "fct-type": "function",
        "title": "a_remove_whitespace"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_remove_whitespace",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_show_haskell",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_show_haskell",
        "fct-type": "function",
        "title": "a_show_haskell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_show_haskell",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_show_tree",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_show_tree",
        "fct-type": "function",
        "title": "a_show_tree"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_show_tree",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_strict_input",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_strict_input",
        "fct-type": "function",
        "title": "a_strict_input"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_strict_input",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_subst_dtd_entities",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_subst_dtd_entities",
        "fct-type": "function",
        "title": "a_subst_dtd_entities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_subst_dtd_entities",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_subst_html_entities",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_subst_html_entities",
        "fct-type": "function",
        "title": "a_subst_html_entities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_subst_html_entities",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_text_mode",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_text_mode",
        "fct-type": "function",
        "title": "a_text_mode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_text_mode",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_trace",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_trace",
        "fct-type": "function",
        "title": "a_trace"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_trace",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_validate",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_validate",
        "fct-type": "function",
        "title": "a_validate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_validate",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:a_verbose",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#a_verbose",
        "fct-type": "function",
        "title": "a_verbose"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "a_verbose",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:generalOptions",
      "description": {
        "fct-descr": "\u003cp\u003ecommonly useful options\n\u003c/p\u003e\u003cp\u003edefines options: \u003ccode\u003e\u003ca\u003ea_verbose\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_help\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[OptDescr SysConfig]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#generalOptions",
        "fct-type": "function",
        "title": "generalOptions"
      },
      "index": {
        "description": "commonly useful options defines options verbose help",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "generalOptions",
        "normalized": "[OptDescr SysConfig]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[OptDescr SysConfig]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:inputOptions",
      "description": {
        "fct-descr": "\u003cp\u003ecommonly useful options for XML input\n\u003c/p\u003e\u003cp\u003ecan be used for option definition with haskell getopt\n\u003c/p\u003e\u003cp\u003edefines options: \u003ccode\u003e\u003ca\u003ea_trace\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_proxy\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003ea_use_curl\u003c/code\u003e, \u003ccode\u003ea_do_not_use_curl\u003c/code\u003e, \u003ccode\u003ea_options_curl\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_encoding\u003c/a\u003e\u003c/code\u003e,\n \u003ccode\u003e\u003ca\u003ea_issue_errors\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_do_not_issue_errors\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_parse_html\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_parse_by_mimetype\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_issue_warnings\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_do_not_issue_warnings\u003c/a\u003e\u003c/code\u003e,\n \u003ccode\u003e\u003ca\u003ea_parse_xml\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_validate\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_do_not_validate\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_canonicalize\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_do_not_canonicalize\u003c/a\u003e\u003c/code\u003e,\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[OptDescr SysConfig]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#inputOptions",
        "fct-type": "function",
        "title": "inputOptions"
      },
      "index": {
        "description": "commonly useful options for XML input can be used for option definition with haskell getopt defines options trace proxy use curl do not use curl options curl encoding issue errors do not issue errors parse html parse by mimetype issue warnings do not issue warnings parse xml validate do not validate canonicalize do not canonicalize",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "inputOptions",
        "normalized": "[OptDescr SysConfig]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[OptDescr SysConfig]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:outputOptions",
      "description": {
        "fct-descr": "\u003cp\u003ecommonly useful options for XML output\n\u003c/p\u003e\u003cp\u003edefines options: \u003ccode\u003e\u003ca\u003ea_indent\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_output_encoding\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003ea_output_html\u003c/a\u003e\u003c/code\u003e and others\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[OptDescr SysConfig]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#outputOptions",
        "fct-type": "function",
        "title": "outputOptions"
      },
      "index": {
        "description": "commonly useful options for XML output defines options indent output encoding output html and others",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "outputOptions",
        "normalized": "[OptDescr SysConfig]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[OptDescr SysConfig]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:removeOptions",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e [OptDescr a] -\u003e [OptDescr a]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#removeOptions",
        "fct-type": "function",
        "title": "removeOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "removeOptions",
        "normalized": "[String]-\u003e[OptDescr a]-\u003e[OptDescr a]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[String]-\u003e[OptDescr a]-\u003e[OptDescr a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:selectOptions",
      "description": {
        "fct-descr": "\u003cp\u003eselect options from a predefined list of option desciptions\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e [OptDescr a] -\u003e [OptDescr a]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#selectOptions",
        "fct-type": "function",
        "title": "selectOptions"
      },
      "index": {
        "description": "select options from predefined list of option desciptions",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "selectOptions",
        "normalized": "[String]-\u003e[OptDescr a]-\u003e[OptDescr a]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[String]-\u003e[OptDescr a]-\u003e[OptDescr a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:showOptions",
      "description": {
        "fct-descr": "\u003cp\u003edebug output options\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[OptDescr SysConfig]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#showOptions",
        "fct-type": "function",
        "title": "showOptions"
      },
      "index": {
        "description": "debug output options",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "showOptions",
        "normalized": "[OptDescr SysConfig]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[OptDescr SysConfig]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlOptions.html#v:versionOptions",
      "description": {
        "fct-descr": "\u003cp\u003edefines \u003ccode\u003e\u003ca\u003ea_version\u003c/a\u003e\u003c/code\u003e option\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlOptions",
        "fct-package": "hxt",
        "fct-signature": "[OptDescr SysConfig]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlOptions.html#versionOptions",
        "fct-type": "function",
        "title": "versionOptions"
      },
      "index": {
        "description": "defines version option",
        "hierarchy": "Text XML HXT Arrow XmlOptions",
        "module": "Text.XML.HXT.Arrow.XmlOptions",
        "name": "versionOptions",
        "normalized": "[OptDescr SysConfig]",
        "package": "hxt",
        "partial": "Options",
        "signature": "[OptDescr SysConfig]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eRegular Expression Matcher working on lists of XmlTrees\n\u003c/p\u003e\u003cp\u003eIt's intended to import this module with an explicit\n   import declaration for not spoiling the namespace\n   with these somewhat special arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html",
        "fct-type": "module",
        "title": "XmlRegex"
      },
      "index": {
        "description": "Regular Expression Matcher working on lists of XmlTrees It intended to import this module with an explicit import declaration for not spoiling the namespace with these somewhat special arrows",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "XmlRegex",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Regex",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#t:XmlRegex",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#XmlRegex",
        "fct-type": "data",
        "title": "XmlRegex"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "XmlRegex",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Regex",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:delta",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlTree -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#delta",
        "fct-type": "function",
        "title": "delta"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "delta",
        "normalized": "XmlRegex-\u003eXmlTree-\u003eXmlRegex",
        "package": "hxt",
        "partial": "",
        "signature": "XmlRegex-\u003eXmlTree-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:matchRegexA",
      "description": {
        "fct-descr": "\u003cp\u003echeck whether a sequence of XmlTrees match an Xml regular expression\n\u003c/p\u003e\u003cp\u003eThe arrow for \u003ccode\u003e\u003ca\u003ematchXmlRegex\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eThe expession is build up from simple arrows acting as predicate (\u003ccode\u003e\u003ca\u003emkPrimA\u003c/a\u003e\u003c/code\u003e) for\n an XmlTree and of the usual cobinators for sequence (\u003ccode\u003e\u003ca\u003emkSeq\u003c/a\u003e\u003c/code\u003e), repetition\n (\u003ccode\u003e\u003ca\u003emkStar\u003c/a\u003e\u003c/code\u003e, mkRep', \u003ccode\u003e\u003ca\u003emkRng\u003c/a\u003e\u003c/code\u003e) and choice (\u003ccode\u003e\u003ca\u003emkAlt\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003emkOpt\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e LA XmlTree XmlTree -\u003e LA XmlTree XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#matchRegexA",
        "fct-type": "function",
        "title": "matchRegexA"
      },
      "index": {
        "description": "check whether sequence of XmlTrees match an Xml regular expression The arrow for matchXmlRegex The expession is build up from simple arrows acting as predicate mkPrimA for an XmlTree and of the usual cobinators for sequence mkSeq repetition mkStar mkRep mkRng and choice mkAlt mkOpt",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "matchRegexA",
        "normalized": "XmlRegex-\u003eLA XmlTree XmlTree-\u003eLA XmlTree XmlTrees",
        "package": "hxt",
        "partial": "Regex",
        "signature": "XmlRegex-\u003eLA XmlTree XmlTree-\u003eLA XmlTree XmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:matchXmlRegex",
      "description": {
        "fct-descr": "\u003cp\u003ematch a sequence of XML trees with a regular expression over trees\n\u003c/p\u003e\u003cp\u003eIf the input matches, the result is Nothing, else Just an error message is returned\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlTrees -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#matchXmlRegex",
        "fct-type": "function",
        "title": "matchXmlRegex"
      },
      "index": {
        "description": "match sequence of XML trees with regular expression over trees If the input matches the result is Nothing else Just an error message is returned",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "matchXmlRegex",
        "normalized": "XmlRegex-\u003eXmlTrees-\u003eMaybe String",
        "package": "hxt",
        "partial": "Xml Regex",
        "signature": "XmlRegex-\u003eXmlTrees-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkAlt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkAlt",
        "fct-type": "function",
        "title": "mkAlt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkAlt",
        "normalized": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Alt",
        "signature": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkAlts",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "[XmlRegex] -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkAlts",
        "fct-type": "function",
        "title": "mkAlts"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkAlts",
        "normalized": "[XmlRegex]-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Alts",
        "signature": "[XmlRegex]-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkDot",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkDot",
        "fct-type": "function",
        "title": "mkDot"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkDot",
        "normalized": "",
        "package": "hxt",
        "partial": "Dot",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkMerge",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkMerge",
        "fct-type": "function",
        "title": "mkMerge"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkMerge",
        "normalized": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Merge",
        "signature": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkOpt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkOpt",
        "fct-type": "function",
        "title": "mkOpt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkOpt",
        "normalized": "XmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Opt",
        "signature": "XmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkPerm",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkPerm",
        "fct-type": "function",
        "title": "mkPerm"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkPerm",
        "normalized": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Perm",
        "signature": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkPerms",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "[XmlRegex] -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkPerms",
        "fct-type": "function",
        "title": "mkPerms"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkPerms",
        "normalized": "[XmlRegex]-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Perms",
        "signature": "[XmlRegex]-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkPrim",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "(XmlTree -\u003e Bool) -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkPrim",
        "fct-type": "function",
        "title": "mkPrim"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkPrim",
        "normalized": "(XmlTree-\u003eBool)-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Prim",
        "signature": "(XmlTree-\u003eBool)-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkPrim-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "(XmlTree -\u003e Bool) -\u003e String -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkPrim%27",
        "fct-type": "function",
        "title": "mkPrim'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkPrim'",
        "normalized": "(XmlTree-\u003eBool)-\u003eString-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Prim'",
        "signature": "(XmlTree-\u003eBool)-\u003eString-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkPrimA",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "LA XmlTree XmlTree -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkPrimA",
        "fct-type": "function",
        "title": "mkPrimA"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkPrimA",
        "normalized": "LA XmlTree XmlTree-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Prim",
        "signature": "LA XmlTree XmlTree-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkRep",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkRep",
        "fct-type": "function",
        "title": "mkRep"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkRep",
        "normalized": "Int-\u003eXmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Rep",
        "signature": "Int-\u003eXmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkRng",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e Int -\u003e XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkRng",
        "fct-type": "function",
        "title": "mkRng"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkRng",
        "normalized": "Int-\u003eInt-\u003eXmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Rng",
        "signature": "Int-\u003eInt-\u003eXmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkSeq",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkSeq",
        "fct-type": "function",
        "title": "mkSeq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkSeq",
        "normalized": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Seq",
        "signature": "XmlRegex-\u003eXmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkSeqs",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "[XmlRegex] -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkSeqs",
        "fct-type": "function",
        "title": "mkSeqs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkSeqs",
        "normalized": "[XmlRegex]-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Seqs",
        "signature": "[XmlRegex]-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkStar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkStar",
        "fct-type": "function",
        "title": "mkStar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkStar",
        "normalized": "XmlRegex-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Star",
        "signature": "XmlRegex-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkUnit",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkUnit",
        "fct-type": "function",
        "title": "mkUnit"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkUnit",
        "normalized": "",
        "package": "hxt",
        "partial": "Unit",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:mkZero",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlRegex",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#mkZero",
        "fct-type": "function",
        "title": "mkZero"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "mkZero",
        "normalized": "String-\u003eXmlRegex",
        "package": "hxt",
        "partial": "Zero",
        "signature": "String-\u003eXmlRegex"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:nullable",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#nullable",
        "fct-type": "function",
        "title": "nullable"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "nullable",
        "normalized": "XmlRegex-\u003eBool",
        "package": "hxt",
        "partial": "",
        "signature": "XmlRegex-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:scanRegexA",
      "description": {
        "fct-descr": "\u003cp\u003escan the input sequence with a regex and give the result as a list of lists of trees back\n the regex must at least match one input tree, so the empty sequence should not match the regex\n\u003c/p\u003e\u003cp\u003eThe arrow for \u003ccode\u003e\u003ca\u003escanXmlRegex\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e LA XmlTree XmlTree -\u003e LA XmlTree XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#scanRegexA",
        "fct-type": "function",
        "title": "scanRegexA"
      },
      "index": {
        "description": "scan the input sequence with regex and give the result as list of lists of trees back the regex must at least match one input tree so the empty sequence should not match the regex The arrow for scanXmlRegex",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "scanRegexA",
        "normalized": "XmlRegex-\u003eLA XmlTree XmlTree-\u003eLA XmlTree XmlTrees",
        "package": "hxt",
        "partial": "Regex",
        "signature": "XmlRegex-\u003eLA XmlTree XmlTree-\u003eLA XmlTree XmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:scanXmlRegex",
      "description": {
        "fct-descr": "\u003cp\u003escan a sequence of XML trees and split it into parts matching the given regex\n\u003c/p\u003e\u003cp\u003eIf the parts cannot be split because of a missing match, or because of the\n empty sequence as match, Nothing is returned\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlTrees -\u003e Maybe [XmlTrees]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#scanXmlRegex",
        "fct-type": "function",
        "title": "scanXmlRegex"
      },
      "index": {
        "description": "scan sequence of XML trees and split it into parts matching the given regex If the parts cannot be split because of missing match or because of the empty sequence as match Nothing is returned",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "scanXmlRegex",
        "normalized": "XmlRegex-\u003eXmlTrees-\u003eMaybe[XmlTrees]",
        "package": "hxt",
        "partial": "Xml Regex",
        "signature": "XmlRegex-\u003eXmlTrees-\u003eMaybe[XmlTrees]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:splitRegexA",
      "description": {
        "fct-descr": "\u003cp\u003esplit the sequence of trees computed by the filter a into\n\u003c/p\u003e\u003cp\u003eThe arrow for \u003ccode\u003e\u003ca\u003esplitXmlRegex\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003ea first part matching the regex and a rest,\n if a prefix of the input sequence does not match the regex, the arrow fails\n else the pair containing the result lists is returned\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e LA XmlTree XmlTree -\u003e LA XmlTree (XmlTrees, XmlTrees)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#splitRegexA",
        "fct-type": "function",
        "title": "splitRegexA"
      },
      "index": {
        "description": "split the sequence of trees computed by the filter into The arrow for splitXmlRegex first part matching the regex and rest if prefix of the input sequence does not match the regex the arrow fails else the pair containing the result lists is returned",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "splitRegexA",
        "normalized": "XmlRegex-\u003eLA XmlTree XmlTree-\u003eLA XmlTree(XmlTrees,XmlTrees)",
        "package": "hxt",
        "partial": "Regex",
        "signature": "XmlRegex-\u003eLA XmlTree XmlTree-\u003eLA XmlTree(XmlTrees,XmlTrees)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlRegex.html#v:splitXmlRegex",
      "description": {
        "fct-descr": "\u003cp\u003esplit a sequence of XML trees into a pair of a a matching prefix and a rest\n\u003c/p\u003e\u003cp\u003eIf there is no matching prefix, Nothing is returned\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlRegex",
        "fct-package": "hxt",
        "fct-signature": "XmlRegex -\u003e XmlTrees -\u003e Maybe (XmlTrees, XmlTrees)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlRegex.html#splitXmlRegex",
        "fct-type": "function",
        "title": "splitXmlRegex"
      },
      "index": {
        "description": "split sequence of XML trees into pair of matching prefix and rest If there is no matching prefix Nothing is returned",
        "hierarchy": "Text XML HXT Arrow XmlRegex",
        "module": "Text.XML.HXT.Arrow.XmlRegex",
        "name": "splitXmlRegex",
        "normalized": "XmlRegex-\u003eXmlTrees-\u003eMaybe(XmlTrees,XmlTrees)",
        "package": "hxt",
        "partial": "Xml Regex",
        "signature": "XmlRegex-\u003eXmlTrees-\u003eMaybe(XmlTrees,XmlTrees)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ethe basic state arrows for XML processing\n\u003c/p\u003e\u003cp\u003eA state is needed for global processing options,\n   like encoding options, document base URI, trace levels\n   and error message handling\n\u003c/p\u003e\u003cp\u003eThe state is separated into a user defined state\n   and a system state. The system state contains variables\n   for error message handling, for tracing, for the document base\n   for accessing XML documents with relative references, e.g. DTDs,\n   and a global key value store. This assoc list has strings as keys\n   and lists of XmlTrees as values. It is used to store arbitrary\n   XML and text values, e.g. user defined global options.\n\u003c/p\u003e\u003cp\u003eThe user defined part of the store is in the default case empty, defined as ().\n   It can be extended with an arbitray data type\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html",
        "fct-type": "module",
        "title": "ErrorHandling"
      },
      "index": {
        "description": "the basic state arrows for XML processing state is needed for global processing options like encoding options document base URI trace levels and error message handling The state is separated into user defined state and system state The system state contains variables for error message handling for tracing for the document base for accessing XML documents with relative references e.g DTDs and global key value store This assoc list has strings as keys and lists of XmlTrees as values It is used to store arbitrary XML and text values e.g user defined global options The user defined part of the store is in the default case empty defined as It can be extended with an arbitray data type",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "ErrorHandling",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Handling",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:addToErrorMsgList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#addToErrorMsgList",
        "fct-type": "function",
        "title": "addToErrorMsgList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "addToErrorMsgList",
        "normalized": "",
        "package": "hxt",
        "partial": "To Error Msg List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:changeErrorStatus",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "(Int -\u003e Int -\u003e Int) -\u003e IOStateArrow s Int Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#changeErrorStatus",
        "fct-type": "function",
        "title": "changeErrorStatus"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "changeErrorStatus",
        "normalized": "(Int-\u003eInt-\u003eInt)-\u003eIOStateArrow a Int Int",
        "package": "hxt",
        "partial": "Error Status",
        "signature": "(Int-\u003eInt-\u003eInt)-\u003eIOStateArrow s Int Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:clearErrStatus",
      "description": {
        "fct-descr": "\u003cp\u003ereset global error variable\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#clearErrStatus",
        "fct-type": "function",
        "title": "clearErrStatus"
      },
      "index": {
        "description": "reset global error variable",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "clearErrStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:documentStatusOk",
      "description": {
        "fct-descr": "\u003cp\u003echeck whether tree is a document root and the status attribute has a value less than \u003ccode\u003e\u003ca\u003ec_err\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#documentStatusOk",
        "fct-type": "function",
        "title": "documentStatusOk"
      },
      "index": {
        "description": "check whether tree is document root and the status attribute has value less than err",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "documentStatusOk",
        "normalized": "",
        "package": "hxt",
        "partial": "Status Ok",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:errorMsgCollect",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for collecting errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgCollect",
        "fct-type": "function",
        "title": "errorMsgCollect"
      },
      "index": {
        "description": "error message handler for collecting errors",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "errorMsgCollect",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Collect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:errorMsgIgnore",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for ignoring errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgIgnore",
        "fct-type": "function",
        "title": "errorMsgIgnore"
      },
      "index": {
        "description": "error message handler for ignoring errors",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "errorMsgIgnore",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Ignore",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:errorMsgStderr",
      "description": {
        "fct-descr": "\u003cp\u003ethe default error message handler: error output to stderr\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgStderr",
        "fct-type": "function",
        "title": "errorMsgStderr"
      },
      "index": {
        "description": "the default error message handler error output to stderr",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "errorMsgStderr",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Stderr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:errorMsgStderrAndCollect",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for output to stderr and collecting\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgStderrAndCollect",
        "fct-type": "function",
        "title": "errorMsgStderrAndCollect"
      },
      "index": {
        "description": "error message handler for output to stderr and collecting",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "errorMsgStderrAndCollect",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Stderr And Collect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:errorOutputToStderr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorOutputToStderr",
        "fct-type": "function",
        "title": "errorOutputToStderr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "errorOutputToStderr",
        "normalized": "String-\u003eIO()",
        "package": "hxt",
        "partial": "Output To Stderr",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:filterErrorMsg",
      "description": {
        "fct-descr": "\u003cp\u003efilter error messages from input trees and issue errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#filterErrorMsg",
        "fct-type": "function",
        "title": "filterErrorMsg"
      },
      "index": {
        "description": "filter error messages from input trees and issue errors",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "filterErrorMsg",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:getErrStatus",
      "description": {
        "fct-descr": "\u003cp\u003eread current global error status\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#getErrStatus",
        "fct-type": "function",
        "title": "getErrStatus"
      },
      "index": {
        "description": "read current global error status",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "getErrStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:getErrorMessages",
      "description": {
        "fct-descr": "\u003cp\u003eif error messages are collected by the error handler for\n processing these messages by the calling application,\n this arrow reads the stored messages and clears the error message store\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#getErrorMessages",
        "fct-type": "function",
        "title": "getErrorMessages"
      },
      "index": {
        "description": "if error messages are collected by the error handler for processing these messages by the calling application this arrow reads the stored messages and clears the error message store",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "getErrorMessages",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Messages",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:issueErr",
      "description": {
        "fct-descr": "\u003cp\u003egenerate an error message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueErr",
        "fct-type": "function",
        "title": "issueErr"
      },
      "index": {
        "description": "generate an error message",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "issueErr",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Err",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:issueExc",
      "description": {
        "fct-descr": "\u003cp\u003eDefault exception handler: issue a fatal error message and fail.\n\u003c/p\u003e\u003cp\u003eThe parameter can be used to specify where the error occured\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s SomeException b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueExc",
        "fct-type": "function",
        "title": "issueExc"
      },
      "index": {
        "description": "Default exception handler issue fatal error message and fail The parameter can be used to specify where the error occured",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "issueExc",
        "normalized": "String-\u003eIOStateArrow a SomeException b",
        "package": "hxt",
        "partial": "Exc",
        "signature": "String-\u003eIOStateArrow s SomeException b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:issueFatal",
      "description": {
        "fct-descr": "\u003cp\u003egenerate a fatal error message, e.g. document not found\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueFatal",
        "fct-type": "function",
        "title": "issueFatal"
      },
      "index": {
        "description": "generate fatal error message e.g document not found",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "issueFatal",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Fatal",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:issueWarn",
      "description": {
        "fct-descr": "\u003cp\u003egenerate a warnig message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueWarn",
        "fct-type": "function",
        "title": "issueWarn"
      },
      "index": {
        "description": "generate warnig message",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "issueWarn",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Warn",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:setDocumentStatus",
      "description": {
        "fct-descr": "\u003cp\u003eadd the error level and the module where the error occured\n to the attributes of a document root node and remove the children when level is greater or equal to \u003ccode\u003e\u003ca\u003ec_err\u003c/a\u003e\u003c/code\u003e.\n called by \u003ccode\u003e\u003ca\u003esetDocumentStatusFromSystemState\u003c/a\u003e\u003c/code\u003e when the system state indicates an error\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setDocumentStatus",
        "fct-type": "function",
        "title": "setDocumentStatus"
      },
      "index": {
        "description": "add the error level and the module where the error occured to the attributes of document root node and remove the children when level is greater or equal to err called by setDocumentStatusFromSystemState when the system state indicates an error",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "setDocumentStatus",
        "normalized": "Int-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document Status",
        "signature": "Int-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:setDocumentStatusFromSystemState",
      "description": {
        "fct-descr": "\u003cp\u003echeck whether the error level attribute in the system state\n is set to error, in this case the children of the document root are\n removed and the module name where the error occured and the error level are added as attributes with \u003ccode\u003e\u003ca\u003esetDocumentStatus\u003c/a\u003e\u003c/code\u003e\n else nothing is changed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setDocumentStatusFromSystemState",
        "fct-type": "function",
        "title": "setDocumentStatusFromSystemState"
      },
      "index": {
        "description": "check whether the error level attribute in the system state is set to error in this case the children of the document root are removed and the module name where the error occured and the error level are added as attributes with setDocumentStatus else nothing is changed",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "setDocumentStatusFromSystemState",
        "normalized": "String-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document Status From System State",
        "signature": "String-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:setErrMsgStatus",
      "description": {
        "fct-descr": "\u003cp\u003eraise the global error status level to that of the input tree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setErrMsgStatus",
        "fct-type": "function",
        "title": "setErrMsgStatus"
      },
      "index": {
        "description": "raise the global error status level to that of the input tree",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "setErrMsgStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Msg Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:setErrStatus",
      "description": {
        "fct-descr": "\u003cp\u003eset global error variable\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s Int Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setErrStatus",
        "fct-type": "function",
        "title": "setErrStatus"
      },
      "index": {
        "description": "set global error variable",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "setErrStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:setErrorMsgHandler",
      "description": {
        "fct-descr": "\u003cp\u003eset the error message handler and the flag for collecting the errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e (String -\u003e IO ()) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setErrorMsgHandler",
        "fct-type": "function",
        "title": "setErrorMsgHandler"
      },
      "index": {
        "description": "set the error message handler and the flag for collecting the errors",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "setErrorMsgHandler",
        "normalized": "Bool-\u003e(String-\u003eIO())-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Error Msg Handler",
        "signature": "Bool-\u003e(String-\u003eIO())-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#v:sysErrorMsg",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for output to stderr\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#sysErrorMsg",
        "fct-type": "function",
        "title": "sysErrorMsg"
      },
      "index": {
        "description": "error message handler for output to stderr",
        "hierarchy": "Text XML HXT Arrow XmlState ErrorHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
        "name": "sysErrorMsg",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ethe mime type configuration functions\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html",
        "fct-type": "module",
        "title": "MimeTypeTable"
      },
      "index": {
        "description": "the mime type configuration functions",
        "hierarchy": "Text XML HXT Arrow XmlState MimeTypeTable",
        "module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "name": "MimeTypeTable",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#v:getMimeTypeTable",
      "description": {
        "fct-descr": "\u003cp\u003eread the system mimetype table\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b MimeTypeTable",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#getMimeTypeTable",
        "fct-type": "function",
        "title": "getMimeTypeTable"
      },
      "index": {
        "description": "read the system mimetype table",
        "hierarchy": "Text XML HXT Arrow XmlState MimeTypeTable",
        "module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "name": "getMimeTypeTable",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#v:setMimeTypeTable",
      "description": {
        "fct-descr": "\u003cp\u003eset the table mapping of file extensions to mime types in the system state\n\u003c/p\u003e\u003cp\u003eDefault table is defined in \u003ccode\u003e\u003ca\u003eMimeTypeDefaults\u003c/a\u003e\u003c/code\u003e.\n This table is used when reading loacl files, (file: protocol) to determine the mime type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "fct-package": "hxt",
        "fct-signature": "MimeTypeTable -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#setMimeTypeTable",
        "fct-type": "function",
        "title": "setMimeTypeTable"
      },
      "index": {
        "description": "set the table mapping of file extensions to mime types in the system state Default table is defined in MimeTypeDefaults This table is used when reading loacl files file protocol to determine the mime type",
        "hierarchy": "Text XML HXT Arrow XmlState MimeTypeTable",
        "module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "name": "setMimeTypeTable",
        "normalized": "MimeTypeTable-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": "MimeTypeTable-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#v:setMimeTypeTableFromFile",
      "description": {
        "fct-descr": "\u003cp\u003eset the table mapping of file extensions to mime types by an external config file\n\u003c/p\u003e\u003cp\u003eThe config file must follow the conventions of \u003cem\u003eetc\u003c/em\u003emime.types on a debian linux system,\n that means all empty lines and all lines starting with a # are ignored. The other lines\n must consist of a mime type followed by a possible empty list of extensions.\n The list of extenstions and mime types overwrites the default list in the system state\n of the IOStateArrow\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "fct-package": "hxt",
        "fct-signature": "FilePath -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#setMimeTypeTableFromFile",
        "fct-type": "function",
        "title": "setMimeTypeTableFromFile"
      },
      "index": {
        "description": "set the table mapping of file extensions to mime types by an external config file The config file must follow the conventions of etc mime.types on debian linux system that means all empty lines and all lines starting with are ignored The other lines must consist of mime type followed by possible empty list of extensions The list of extenstions and mime types overwrites the default list in the system state of the IOStateArrow",
        "hierarchy": "Text XML HXT Arrow XmlState MimeTypeTable",
        "module": "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
        "name": "setMimeTypeTableFromFile",
        "normalized": "FilePath-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Mime Type Table From File",
        "signature": "FilePath-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003erun an io state arrow\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html",
        "fct-type": "module",
        "title": "RunIOStateArrow"
      },
      "index": {
        "description": "run an io state arrow",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "RunIOStateArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "Run IOState Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:dummyCacheRead",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOSArrow b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#dummyCacheRead",
        "fct-type": "function",
        "title": "dummyCacheRead"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "dummyCacheRead",
        "normalized": "String-\u003eIOSArrow a a",
        "package": "hxt",
        "partial": "Cache Read",
        "signature": "String-\u003eIOSArrow b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:dummyExpatParser",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#dummyExpatParser",
        "fct-type": "function",
        "title": "dummyExpatParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "dummyExpatParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:dummyHTTPHandler",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#dummyHTTPHandler",
        "fct-type": "function",
        "title": "dummyHTTPHandler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "dummyHTTPHandler",
        "normalized": "",
        "package": "hxt",
        "partial": "HTTPHandler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:dummyRelaxValidator",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#dummyRelaxValidator",
        "fct-type": "function",
        "title": "dummyRelaxValidator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "dummyRelaxValidator",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:dummyTagSoupParser",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#dummyTagSoupParser",
        "fct-type": "function",
        "title": "dummyTagSoupParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "dummyTagSoupParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Tag Soup Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:dummyXmlSchemaValidator",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#dummyXmlSchemaValidator",
        "fct-type": "function",
        "title": "dummyXmlSchemaValidator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "dummyXmlSchemaValidator",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Validator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:getConfigAttr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfigList -\u003e String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#getConfigAttr",
        "fct-type": "function",
        "title": "getConfigAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "getConfigAttr",
        "normalized": "String-\u003eSysConfigList-\u003eString",
        "package": "hxt",
        "partial": "Config Attr",
        "signature": "String-\u003eSysConfigList-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialCacheConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOCacheConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialCacheConfig",
        "fct-type": "function",
        "title": "initialCacheConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialCacheConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialInputConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOInputConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialInputConfig",
        "fct-type": "function",
        "title": "initialInputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialInputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialOutputConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOOutputConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialOutputConfig",
        "fct-type": "function",
        "title": "initialOutputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialOutputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialParseConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOParseConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialParseConfig",
        "fct-type": "function",
        "title": "initialParseConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialParseConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialRelaxConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIORelaxConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialRelaxConfig",
        "fct-type": "function",
        "title": "initialRelaxConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialRelaxConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialState",
      "description": {
        "fct-descr": "\u003cp\u003ethe default global state, used as initial state when running an \u003ccode\u003e\u003ca\u003eIOSArrow\u003c/a\u003e\u003c/code\u003e with \u003ccode\u003e\u003ca\u003erunIOSLA\u003c/a\u003e\u003c/code\u003e or\n \u003ccode\u003e\u003ca\u003erunX\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "us -\u003e XIOState us",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialState",
        "fct-type": "function",
        "title": "initialState"
      },
      "index": {
        "description": "the default global state used as initial state when running an IOSArrow with runIOSLA or runX",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialState",
        "normalized": "a-\u003eXIOState a",
        "package": "hxt",
        "partial": "State",
        "signature": "us-\u003eXIOState us"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialSysEnv",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOSysEnv",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialSysEnv",
        "fct-type": "function",
        "title": "initialSysEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialSysEnv",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Env",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialSysState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOSysState",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialSysState",
        "fct-type": "function",
        "title": "initialSysState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialSysState",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialSysWriter",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOSysWriter",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialSysWriter",
        "fct-type": "function",
        "title": "initialSysWriter"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialSysWriter",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Writer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:initialXmlSchemaConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOXmlSchemaConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#initialXmlSchemaConfig",
        "fct-type": "function",
        "title": "initialXmlSchemaConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "initialXmlSchemaConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:runX",
      "description": {
        "fct-descr": "\u003cp\u003eapply an \u003ccode\u003e\u003ca\u003eIOSArrow\u003c/a\u003e\u003c/code\u003e to an empty root node with \u003ccode\u003e\u003ca\u003einitialState\u003c/a\u003e\u003c/code\u003e () as initial state\n\u003c/p\u003e\u003cp\u003ethe main entry point for running a state arrow with IO\n\u003c/p\u003e\u003cp\u003ewhen running \u003ccode\u003e runX f\u003c/code\u003e an empty XML root node is applied to \u003ccode\u003ef\u003c/code\u003e.\n usually \u003ccode\u003ef\u003c/code\u003e will start with a constant arrow (ignoring the input), e.g. a \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e arrow.\n\u003c/p\u003e\u003cp\u003efor usage see examples with \u003ccode\u003e\u003ca\u003ewriteDocument\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eif input has to be feed into the arrow use \u003ccode\u003e\u003ca\u003erunIOSLA\u003c/a\u003e\u003c/code\u003e like in \u003ccode\u003e runIOSLA f emptyX inputDoc \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree c -\u003e IO [c]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#runX",
        "fct-type": "function",
        "title": "runX"
      },
      "index": {
        "description": "apply an IOSArrow to an empty root node with initialState as initial state the main entry point for running state arrow with IO when running runX an empty XML root node is applied to usually will start with constant arrow ignoring the input e.g readDocument arrow for usage see examples with writeDocument if input has to be feed into the arrow use runIOSLA like in runIOSLA emptyX inputDoc",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "runX",
        "normalized": "IOSArrow XmlTree a-\u003eIO[a]",
        "package": "hxt",
        "partial": "",
        "signature": "IOSArrow XmlTree c-\u003eIO[c]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:runXIOState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "XIOState s -\u003e IOStateArrow s XmlTree c -\u003e IO [c]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#runXIOState",
        "fct-type": "function",
        "title": "runXIOState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "runXIOState",
        "normalized": "XIOState a-\u003eIOStateArrow a XmlTree b-\u003eIO[b]",
        "package": "hxt",
        "partial": "XIOState",
        "signature": "XIOState s-\u003eIOStateArrow s XmlTree c-\u003eIO[c]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#v:theSysConfigComp",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState a -\u003e Selector SysConfig a",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#theSysConfigComp",
        "fct-type": "function",
        "title": "theSysConfigComp"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState RunIOStateArrow",
        "module": "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
        "name": "theSysConfigComp",
        "normalized": "Selector XIOSysState a-\u003eSelector SysConfig a",
        "package": "hxt",
        "partial": "Sys Config Comp",
        "signature": "Selector XIOSysState a-\u003eSelector SysConfig a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003esystem configuration and common options options\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html",
        "fct-type": "module",
        "title": "SystemConfig"
      },
      "index": {
        "description": "system configuration and common options options",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "SystemConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "System Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:no",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#no",
        "fct-type": "function",
        "title": "no"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "no",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withAcceptedMimeTypes",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify the set of accepted mime types.\n\u003c/p\u003e\u003cp\u003eAll contents of documents for which the mime type is not found in this list\n are discarded.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withAcceptedMimeTypes",
        "fct-type": "function",
        "title": "withAcceptedMimeTypes"
      },
      "index": {
        "description": "Specify the set of accepted mime types All contents of documents for which the mime type is not found in this list are discarded",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withAcceptedMimeTypes",
        "normalized": "[String]-\u003eSysConfig",
        "package": "hxt",
        "partial": "Accepted Mime Types",
        "signature": "[String]-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withAddDefaultDTD",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withAddDefaultDTD",
        "fct-type": "function",
        "title": "withAddDefaultDTD"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withAddDefaultDTD",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Add Default DTD",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withCanonicalize",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithCanonicalize yes/no\u003c/code\u003e : read option, canonicalize document, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withCanonicalize",
        "fct-type": "function",
        "title": "withCanonicalize"
      },
      "index": {
        "description": "withCanonicalize yes no read option canonicalize document default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withCanonicalize",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Canonicalize",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withCheckNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithCheckNamespaces yes/no\u003c/code\u003e: read option, check namespaces, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withCheckNamespaces",
        "fct-type": "function",
        "title": "withCheckNamespaces"
      },
      "index": {
        "description": "withCheckNamespaces yes no read option check namespaces default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withCheckNamespaces",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Check Namespaces",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withCompression",
      "description": {
        "fct-descr": "\u003cp\u003eConfigure compression and decompression for binary serialization/deserialization.\n First component is the compression function applied after serialization,\n second the decompression applied before deserialization.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "(CompressionFct, DeCompressionFct) -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withCompression",
        "fct-type": "function",
        "title": "withCompression"
      },
      "index": {
        "description": "Configure compression and decompression for binary serialization deserialization First component is the compression function applied after serialization second the decompression applied before deserialization",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withCompression",
        "normalized": "(CompressionFct,DeCompressionFct)-\u003eSysConfig",
        "package": "hxt",
        "partial": "Compression",
        "signature": "(CompressionFct,DeCompressionFct)-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withDefaultBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithDefaultBaseURI URI\u003c/code\u003e , input option, set the default base URI\n\u003c/p\u003e\u003cp\u003eThis option can be useful when parsing documents from stdin or contained in a string, and interpreting\n relative URIs within the document\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withDefaultBaseURI",
        "fct-type": "function",
        "title": "withDefaultBaseURI"
      },
      "index": {
        "description": "withDefaultBaseURI URI input option set the default base URI This option can be useful when parsing documents from stdin or contained in string and interpreting relative URIs within the document",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withDefaultBaseURI",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withEncodingErrors",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithEncodingErrors yes/no\u003c/code\u003e : input option, ignore all encoding errors, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withEncodingErrors",
        "fct-type": "function",
        "title": "withEncodingErrors"
      },
      "index": {
        "description": "withEncodingErrors yes no input option ignore all encoding errors default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withEncodingErrors",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Encoding Errors",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withErrors",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithErrors yes/no\u003c/code\u003e : system option for suppressing error messages, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withErrors",
        "fct-type": "function",
        "title": "withErrors"
      },
      "index": {
        "description": "withErrors yes no system option for suppressing error messages default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withErrors",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Errors",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withFileMimeType",
      "description": {
        "fct-descr": "\u003cp\u003eForce a given mime type for all file contents.\n\u003c/p\u003e\u003cp\u003eThe mime type for file access will then not be computed by looking into a mime.types file\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withFileMimeType",
        "fct-type": "function",
        "title": "withFileMimeType"
      },
      "index": {
        "description": "Force given mime type for all file contents The mime type for file access will then not be computed by looking into mime.types file",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withFileMimeType",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "File Mime Type",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withIgnoreNoneXmlContents",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithIgnoreNoneXmlContents yes/no\u003c/code\u003e : input option, ignore document contents of none XML/HTML documents.\n\u003c/p\u003e\u003cp\u003eThis option can be useful for implementing crawler like applications, e.g. an URL checker.\n In those cases net traffic can be reduced.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withIgnoreNoneXmlContents",
        "fct-type": "function",
        "title": "withIgnoreNoneXmlContents"
      },
      "index": {
        "description": "withIgnoreNoneXmlContents yes no input option ignore document contents of none XML HTML documents This option can be useful for implementing crawler like applications e.g an URL checker In those cases net traffic can be reduced",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withIgnoreNoneXmlContents",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Ignore None Xml Contents",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withIndent",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithIndent yes/no\u003c/code\u003e : output option, indent document before output, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withIndent",
        "fct-type": "function",
        "title": "withIndent"
      },
      "index": {
        "description": "withIndent yes no output option indent document before output default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withIndent",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Indent",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withInputEncoding",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithInputEncoding encodingName\u003c/code\u003e : input option\n\u003c/p\u003e\u003cp\u003eSet default document encoding (\u003ccode\u003e\u003ca\u003eutf8\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eisoLatin1\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eusAscii\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eiso8859_2\u003c/a\u003e\u003c/code\u003e, ... , \u003ccode\u003e\u003ca\u003eiso8859_16\u003c/a\u003e\u003c/code\u003e, ...).\n Only XML, HTML and text documents are decoded,\n default decoding for XML/HTML is utf8, for text iso latin1 (no decoding).\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withInputEncoding",
        "fct-type": "function",
        "title": "withInputEncoding"
      },
      "index": {
        "description": "withInputEncoding encodingName input option Set default document encoding utf8 isoLatin1 usAscii iso8859 iso8859 Only XML HTML and text documents are decoded default decoding for XML HTML is utf8 for text iso latin1 no decoding",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withInputEncoding",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Input Encoding",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withInputOption",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withInputOption",
        "fct-type": "function",
        "title": "withInputOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withInputOption",
        "normalized": "String-\u003eString-\u003eSysConfig",
        "package": "hxt",
        "partial": "Input Option",
        "signature": "String-\u003eString-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withInputOptions",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withInputOptions",
        "fct-type": "function",
        "title": "withInputOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withInputOptions",
        "normalized": "Attributes-\u003eSysConfig",
        "package": "hxt",
        "partial": "Input Options",
        "signature": "Attributes-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withMimeTypeFile",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithMimeTypeFile filename\u003c/code\u003e : input option,\n set the mime type table for \u003ccode\u003efile:\u003c/code\u003e documents by given file.\n The format of this config file must be in the syntax of a debian linux \"mime.types\" config file\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withMimeTypeFile",
        "fct-type": "function",
        "title": "withMimeTypeFile"
      },
      "index": {
        "description": "withMimeTypeFile filename input option set the mime type table for file documents by given file The format of this config file must be in the syntax of debian linux mime.types config file",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withMimeTypeFile",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Mime Type File",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withMimeTypeHandler",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify a content handler for documents of a given mime type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOSArrow XmlTree XmlTree -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withMimeTypeHandler",
        "fct-type": "function",
        "title": "withMimeTypeHandler"
      },
      "index": {
        "description": "Specify content handler for documents of given mime type",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withMimeTypeHandler",
        "normalized": "String-\u003eIOSArrow XmlTree XmlTree-\u003eSysConfig",
        "package": "hxt",
        "partial": "Mime Type Handler",
        "signature": "String-\u003eIOSArrow XmlTree XmlTree-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withNoEmptyElemFor",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withNoEmptyElemFor",
        "fct-type": "function",
        "title": "withNoEmptyElemFor"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withNoEmptyElemFor",
        "normalized": "[String]-\u003eSysConfig",
        "package": "hxt",
        "partial": "No Empty Elem For",
        "signature": "[String]-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withOutputEncoding",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithOutputEncoding encoding\u003c/code\u003e , output option,\n default is the default input encoding or utf8, if input encoding is not set\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputEncoding",
        "fct-type": "function",
        "title": "withOutputEncoding"
      },
      "index": {
        "description": "withOutputEncoding encoding output option default is the default input encoding or utf8 if input encoding is not set",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withOutputEncoding",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Output Encoding",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withOutputHTML",
      "description": {
        "fct-descr": "\u003cp\u003eWrite XHTML: quote all special XML chars, use HTML entity refs or char refs for none ASCII chars\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputHTML",
        "fct-type": "function",
        "title": "withOutputHTML"
      },
      "index": {
        "description": "Write XHTML quote all special XML chars use HTML entity refs or char refs for none ASCII chars",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withOutputHTML",
        "normalized": "",
        "package": "hxt",
        "partial": "Output HTML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withOutputPLAIN",
      "description": {
        "fct-descr": "\u003cp\u003esuppreses all char and entitiy substitution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputPLAIN",
        "fct-type": "function",
        "title": "withOutputPLAIN"
      },
      "index": {
        "description": "suppreses all char and entitiy substitution",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withOutputPLAIN",
        "normalized": "",
        "package": "hxt",
        "partial": "Output PLAIN",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withOutputXHTML",
      "description": {
        "fct-descr": "\u003cp\u003eWrite XML: quote only special XML chars, don't substitute chars by HTML entities,\n and don't generate empty elements for HTML elements,\n which may contain any contents, e.g. \u003ccode\u003e\u003ca\u003esrc=...\u003c/a\u003e\u003ca\u003e/script\u003c/a\u003e\u003c/code\u003e instead of \u003ccode\u003e\u003ca\u003esrc=... /\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputXHTML",
        "fct-type": "function",
        "title": "withOutputXHTML"
      },
      "index": {
        "description": "Write XML quote only special XML chars don substitute chars by HTML entities and don generate empty elements for HTML elements which may contain any contents e.g src script instead of src",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withOutputXHTML",
        "normalized": "",
        "package": "hxt",
        "partial": "Output XHTML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withOutputXML",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithOutputXML\u003c/code\u003e : output option, default writing\n\u003c/p\u003e\u003cp\u003eDefault is writing XML: quote special XML chars \u003e,\u003c,\",',& where neccessary,\n add XML processing instruction\n and encode document with respect to \u003ccode\u003e\u003ca\u003ewithOutputEncoding\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputXML",
        "fct-type": "function",
        "title": "withOutputXML"
      },
      "index": {
        "description": "withOutputXML output option default writing Default is writing XML quote special XML chars where neccessary add XML processing instruction and encode document with respect to withOutputEncoding",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withOutputXML",
        "normalized": "",
        "package": "hxt",
        "partial": "Output XML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withParseByMimeType",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithParseByMimeType yes/no\u003c/code\u003e  : read option, select the parser by the mime type of the document\n (pulled out of the HTTP header).\n\u003c/p\u003e\u003cp\u003eWhen the mime type is set to \"text/html\"\n the configured HTML parser is taken, when it's set to\n \"text/xml\" or \"text/xhtml\" the configured XML parser is taken.\n If the mime type is something else, no further processing is performed,\n the contents is given back to the application in form of a single text node.\n If the default document encoding is set to isoLatin1, this even enables processing\n of arbitray binary data.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withParseByMimeType",
        "fct-type": "function",
        "title": "withParseByMimeType"
      },
      "index": {
        "description": "withParseByMimeType yes no read option select the parser by the mime type of the document pulled out of the HTTP header When the mime type is set to text html the configured HTML parser is taken when it set to text xml or text xhtml the configured XML parser is taken If the mime type is something else no further processing is performed the contents is given back to the application in form of single text node If the default document encoding is set to isoLatin1 this even enables processing of arbitray binary data",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withParseByMimeType",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Parse By Mime Type",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withParseHTML",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithParseHTML yes/no\u003c/code\u003e: read option, use HTML parser, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e (use XML parser)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withParseHTML",
        "fct-type": "function",
        "title": "withParseHTML"
      },
      "index": {
        "description": "withParseHTML yes no read option use HTML parser default is no use XML parser",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withParseHTML",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Parse HTML",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withPreserveComment",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithPreserveComment yes/no\u003c/code\u003e : read option, preserve comments during canonicalization, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withPreserveComment",
        "fct-type": "function",
        "title": "withPreserveComment"
      },
      "index": {
        "description": "withPreserveComment yes no read option preserve comments during canonicalization default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withPreserveComment",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Preserve Comment",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withProxy",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithProxy \"host:port\"\u003c/code\u003e : input option, configure a proxy for HTTP access, e.g. www-cache:3128\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withProxy",
        "fct-type": "function",
        "title": "withProxy"
      },
      "index": {
        "description": "withProxy host port input option configure proxy for HTTP access e.g www-cache",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withProxy",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Proxy",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withRedirect",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithRedirect yes/no\u003c/code\u003e : input option, automatically follow redirected URIs, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withRedirect",
        "fct-type": "function",
        "title": "withRedirect"
      },
      "index": {
        "description": "withRedirect yes no input option automatically follow redirected URIs default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withRedirect",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Redirect",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withRemoveWS",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithRemoveWS yes/no\u003c/code\u003e : read and write option, remove all whitespace, used for document indentation, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withRemoveWS",
        "fct-type": "function",
        "title": "withRemoveWS"
      },
      "index": {
        "description": "withRemoveWS yes no read and write option remove all whitespace used for document indentation default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withRemoveWS",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Remove WS",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withShowHaskell",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withShowHaskell",
        "fct-type": "function",
        "title": "withShowHaskell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withShowHaskell",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Show Haskell",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withShowTree",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withShowTree",
        "fct-type": "function",
        "title": "withShowTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withShowTree",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Show Tree",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withStrictDeserialize",
      "description": {
        "fct-descr": "\u003cp\u003eStrict input for deserialization of binary data\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withStrictDeserialize",
        "fct-type": "function",
        "title": "withStrictDeserialize"
      },
      "index": {
        "description": "Strict input for deserialization of binary data",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withStrictDeserialize",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Strict Deserialize",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withStrictInput",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithStrictInput yes/no\u003c/code\u003e : input option, input of file and HTTP contents is read eagerly, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withStrictInput",
        "fct-type": "function",
        "title": "withStrictInput"
      },
      "index": {
        "description": "withStrictInput yes no input option input of file and HTTP contents is read eagerly default is no",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withStrictInput",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Strict Input",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withSubstDTDEntities",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithSubstDTDEntities yes/no\u003c/code\u003e: read option, substitute general entities defined in DTD, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e.\n switching this option and the validate option off can lead to faster parsing, because then\n there is no need to access the DTD\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withSubstDTDEntities",
        "fct-type": "function",
        "title": "withSubstDTDEntities"
      },
      "index": {
        "description": "withSubstDTDEntities yes no read option substitute general entities defined in DTD default is yes switching this option and the validate option off can lead to faster parsing because then there is no need to access the DTD",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withSubstDTDEntities",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Subst DTDEntities",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withSubstHTMLEntities",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithSubstHTMLEntities yes/no\u003c/code\u003e: read option, substitute general entities defined in HTML DTD, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e.\n switching this option on and the substDTDEntities and validate options off can lead to faster parsing\n because there is no need to access a DTD, but still the HTML general entities are substituted\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withSubstHTMLEntities",
        "fct-type": "function",
        "title": "withSubstHTMLEntities"
      },
      "index": {
        "description": "withSubstHTMLEntities yes no read option substitute general entities defined in HTML DTD default is no switching this option on and the substDTDEntities and validate options off can lead to faster parsing because there is no need to access DTD but still the HTML general entities are substituted",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withSubstHTMLEntities",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Subst HTMLEntities",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithSysAttr key value\u003c/code\u003e : store an arbitarty key value pair in system state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withSysAttr",
        "fct-type": "function",
        "title": "withSysAttr"
      },
      "index": {
        "description": "withSysAttr key value store an arbitarty key value pair in system state",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withSysAttr",
        "normalized": "String-\u003eString-\u003eSysConfig",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eString-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withTextMode",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withTextMode",
        "fct-type": "function",
        "title": "withTextMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withTextMode",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Text Mode",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withTrace",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithTace level\u003c/code\u003e : system option, set the trace level, (0..4)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withTrace",
        "fct-type": "function",
        "title": "withTrace"
      },
      "index": {
        "description": "withTace level system option set the trace level",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withTrace",
        "normalized": "Int-\u003eSysConfig",
        "package": "hxt",
        "partial": "Trace",
        "signature": "Int-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withValidate",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithValidate yes/no\u003c/code\u003e: read option, validate document against DTD, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withValidate",
        "fct-type": "function",
        "title": "withValidate"
      },
      "index": {
        "description": "withValidate yes no read option validate document against DTD default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withValidate",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Validate",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withWarnings",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithWarnings yes/no\u003c/code\u003e : system option, issue warnings during reading, HTML parsing and processing,\n default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withWarnings",
        "fct-type": "function",
        "title": "withWarnings"
      },
      "index": {
        "description": "withWarnings yes no system option issue warnings during reading HTML parsing and processing default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withWarnings",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Warnings",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:withXmlPi",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withXmlPi",
        "fct-type": "function",
        "title": "withXmlPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "withXmlPi",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#v:yes",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "fct-package": "hxt",
        "fct-signature": "Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#yes",
        "fct-type": "function",
        "title": "yes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState SystemConfig",
        "module": "Text.XML.HXT.Arrow.XmlState.SystemConfig",
        "name": "yes",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ethe trace arrows\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html",
        "fct-type": "module",
        "title": "TraceHandling"
      },
      "index": {
        "description": "the trace arrows",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "TraceHandling",
        "normalized": "",
        "package": "hxt",
        "partial": "Trace Handling",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:getTraceCmd",
      "description": {
        "fct-descr": "\u003cp\u003eacces the command for trace output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow a b (Int -\u003e String -\u003e IO ())",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#getTraceCmd",
        "fct-type": "function",
        "title": "getTraceCmd"
      },
      "index": {
        "description": "acces the command for trace output",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "getTraceCmd",
        "normalized": "IOStateArrow a b(Int-\u003eString-\u003eIO())",
        "package": "hxt",
        "partial": "Trace Cmd",
        "signature": "IOStateArrow a b(Int-\u003eString-\u003eIO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:getTraceLevel",
      "description": {
        "fct-descr": "\u003cp\u003eread the global trace level\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#getTraceLevel",
        "fct-type": "function",
        "title": "getTraceLevel"
      },
      "index": {
        "description": "read the global trace level",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "getTraceLevel",
        "normalized": "",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:setTraceCmd",
      "description": {
        "fct-descr": "\u003cp\u003eset the global trace command. This command does the trace output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "(Int -\u003e String -\u003e IO ()) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#setTraceCmd",
        "fct-type": "function",
        "title": "setTraceCmd"
      },
      "index": {
        "description": "set the global trace command This command does the trace output",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "setTraceCmd",
        "normalized": "(Int-\u003eString-\u003eIO())-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Trace Cmd",
        "signature": "(Int-\u003eString-\u003eIO())-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:setTraceLevel",
      "description": {
        "fct-descr": "\u003cp\u003eset the global trace level\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#setTraceLevel",
        "fct-type": "function",
        "title": "setTraceLevel"
      },
      "index": {
        "description": "set the global trace level",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "setTraceLevel",
        "normalized": "Int-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": "Int-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:trace",
      "description": {
        "fct-descr": "\u003cp\u003eapply a trace arrow and issue message to stderr\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e IOStateArrow s b String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#trace",
        "fct-type": "function",
        "title": "trace"
      },
      "index": {
        "description": "apply trace arrow and issue message to stderr",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "trace",
        "normalized": "Int-\u003eIOStateArrow a b String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "",
        "signature": "Int-\u003eIOStateArrow s b String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceDoc",
      "description": {
        "fct-descr": "\u003cp\u003etrace a main computation step\n issue a message when trace level \u003e= 1, issue document source if level \u003e= 3, issue tree when level is \u003e= 4\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceDoc",
        "fct-type": "function",
        "title": "traceDoc"
      },
      "index": {
        "description": "trace main computation step issue message when trace level issue document source if level issue tree when level is",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceDoc",
        "normalized": "String-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Doc",
        "signature": "String-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceMsg",
      "description": {
        "fct-descr": "\u003cp\u003eissue a string message as trace\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceMsg",
        "fct-type": "function",
        "title": "traceMsg"
      },
      "index": {
        "description": "issue string message as trace",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceMsg",
        "normalized": "Int-\u003eString-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Msg",
        "signature": "Int-\u003eString-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceOutputToStderr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IO ()",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceOutputToStderr",
        "fct-type": "function",
        "title": "traceOutputToStderr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceOutputToStderr",
        "normalized": "Int-\u003eString-\u003eIO()",
        "package": "hxt",
        "partial": "Output To Stderr",
        "signature": "Int-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceSource",
      "description": {
        "fct-descr": "\u003cp\u003eissue the source representation of a document if trace level \u003e= 3\n\u003c/p\u003e\u003cp\u003efor better readability the source is formated with indentDoc\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceSource",
        "fct-type": "function",
        "title": "traceSource"
      },
      "index": {
        "description": "issue the source representation of document if trace level for better readability the source is formated with indentDoc",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceSource",
        "normalized": "",
        "package": "hxt",
        "partial": "Source",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceString",
      "description": {
        "fct-descr": "\u003cp\u003ean old alias for \u003ccode\u003e\u003ca\u003etraceValue\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e (b -\u003e String) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceString",
        "fct-type": "function",
        "title": "traceString"
      },
      "index": {
        "description": "an old alias for traceValue",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceString",
        "normalized": "Int-\u003e(a-\u003eString)-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "String",
        "signature": "Int-\u003e(b-\u003eString)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceTree",
      "description": {
        "fct-descr": "\u003cp\u003eissue the tree representation of a document if trace level \u003e= 4\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceTree",
        "fct-type": "function",
        "title": "traceTree"
      },
      "index": {
        "description": "issue the tree representation of document if trace level",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:traceValue",
      "description": {
        "fct-descr": "\u003cp\u003etrace the current value transfered in a sequence of arrows.\n\u003c/p\u003e\u003cp\u003eThe value is formated by a string conversion function. This is a substitute for\n the old and less general traceString function\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e (b -\u003e String) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceValue",
        "fct-type": "function",
        "title": "traceValue"
      },
      "index": {
        "description": "trace the current value transfered in sequence of arrows The value is formated by string conversion function This is substitute for the old and less general traceString function",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "traceValue",
        "normalized": "Int-\u003e(a-\u003eString)-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "Value",
        "signature": "Int-\u003e(b-\u003eString)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#v:withTraceLevel",
      "description": {
        "fct-descr": "\u003cp\u003erun an arrow with a given trace level, the old trace level is restored after the arrow execution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e IOStateArrow s b c -\u003e IOStateArrow s b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#withTraceLevel",
        "fct-type": "function",
        "title": "withTraceLevel"
      },
      "index": {
        "description": "run an arrow with given trace level the old trace level is restored after the arrow execution",
        "hierarchy": "Text XML HXT Arrow XmlState TraceHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.TraceHandling",
        "name": "withTraceLevel",
        "normalized": "Int-\u003eIOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": "Int-\u003eIOStateArrow s b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ethe basic state arrows for XML processing\n\u003c/p\u003e\u003cp\u003eA state is needed for global processing options,\n   like encoding options, document base URI, trace levels\n   and error message handling\n\u003c/p\u003e\u003cp\u003eThe state is separated into a user defined state\n   and a system state. The system state contains variables\n   for error message handling, for tracing, for the document base\n   for accessing XML documents with relative references, e.g. DTDs,\n   and a global key value store. This assoc list has strings as keys\n   and lists of XmlTrees as values. It is used to store arbitrary\n   XML and text values, e.g. user defined global options.\n\u003c/p\u003e\u003cp\u003eThe user defined part of the store is in the default case empty, defined as ().\n   It can be extended with an arbitray data type\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html",
        "fct-type": "module",
        "title": "TypeDefs"
      },
      "index": {
        "description": "the basic state arrows for XML processing state is needed for global processing options like encoding options document base URI trace levels and error message handling The state is separated into user defined state and system state The system state contains variables for error message handling for tracing for the document base for accessing XML documents with relative references e.g DTDs and global key value store This assoc list has strings as keys and lists of XmlTrees as values It is used to store arbitrary XML and text values e.g user defined global options The user defined part of the store is in the default case empty defined as It can be extended with an arbitray data type",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "TypeDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Type Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:CompressionFct",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#CompressionFct",
        "fct-type": "type",
        "title": "CompressionFct"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "CompressionFct",
        "normalized": "",
        "package": "hxt",
        "partial": "Compression Fct",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:DeCompressionFct",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#DeCompressionFct",
        "fct-type": "type",
        "title": "DeCompressionFct"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "DeCompressionFct",
        "normalized": "",
        "package": "hxt",
        "partial": "De Compression Fct",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:IOSArrow",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow for stateful arrows with no user defined state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#IOSArrow",
        "fct-type": "type",
        "title": "IOSArrow"
      },
      "index": {
        "description": "The arrow for stateful arrows with no user defined state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "IOSArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "IOSArrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:IOStateArrow",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow type for stateful arrows\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#IOStateArrow",
        "fct-type": "type",
        "title": "IOStateArrow"
      },
      "index": {
        "description": "The arrow type for stateful arrows",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "IOStateArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "IOState Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:MimeTypeHandlers",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#MimeTypeHandlers",
        "fct-type": "type",
        "title": "MimeTypeHandlers"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "MimeTypeHandlers",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Handlers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:Selector",
      "description": {
        "fct-descr": "\u003cp\u003eA Selector is a pair of an access function and a modifying function\n for reading and updating parts of a composite type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "data",
        "title": "Selector"
      },
      "index": {
        "description": "Selector is pair of an access function and modifying function for reading and updating parts of composite type",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "Selector",
        "normalized": "",
        "package": "hxt",
        "partial": "Selector",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:SysConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#SysConfig",
        "fct-type": "type",
        "title": "SysConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "SysConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:SysConfigList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#SysConfigList",
        "fct-type": "type",
        "title": "SysConfigList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "SysConfigList",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Config List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOCacheConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "data",
        "title": "XIOCacheConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOCacheConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOCache Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOInputConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "data",
        "title": "XIOInputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOInputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOInput Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOOutputConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "data",
        "title": "XIOOutputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOOutputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOOutput Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOParseConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "data",
        "title": "XIOParseConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOParseConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOParse Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIORelaxConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "data",
        "title": "XIORelaxConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIORelaxConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIORelax Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOState",
      "description": {
        "fct-descr": "\u003cp\u003estate datatype consists of a system state and a user state\n the user state is not fixed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOState",
        "fct-type": "data",
        "title": "XIOState"
      },
      "index": {
        "description": "state datatype consists of system state and user state the user state is not fixed",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOState",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOState",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOSysEnv",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "data",
        "title": "XIOSysEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOSysEnv",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOSys Env",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOSysState",
      "description": {
        "fct-descr": "\u003cp\u003epredefined system state data type with all components for the\n system functions, like trace, error handling, ...\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysState",
        "fct-type": "data",
        "title": "XIOSysState"
      },
      "index": {
        "description": "predefined system state data type with all components for the system functions like trace error handling",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOSysState",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOSys State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOSysWriter",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "data",
        "title": "XIOSysWriter"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOSysWriter",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOSys Writer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOXmlSchemaConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXmlSchemaConfig",
        "fct-type": "data",
        "title": "XIOXmlSchemaConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOXmlSchemaConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOXml Schema Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#t:XIOXoutConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXoutConfig",
        "fct-type": "data",
        "title": "XIOXoutConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOXoutConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOXout Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:.-38--38--38-.",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector s a -\u003e Selector s b -\u003e Selector s (a, b)",
        "fct-source": "src/Data-Function-Selector.html#.%26%26%26.",
        "fct-type": "function",
        "title": "(.&&&.)"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "(.&&&.) .&&&.",
        "normalized": "Selector a b-\u003eSelector a c-\u003eSelector a(b,c)",
        "package": "hxt",
        "partial": "",
        "signature": "Selector s a-\u003eSelector s b-\u003eSelector s(a,b)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:HTMLoutput",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "HTMLoutput",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXoutConfig",
        "fct-type": "function",
        "title": "HTMLoutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "HTMLoutput",
        "normalized": "",
        "package": "hxt",
        "partial": "HTMLoutput",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:PLAINoutput",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "PLAINoutput",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXoutConfig",
        "fct-type": "function",
        "title": "PLAINoutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "PLAINoutput",
        "normalized": "",
        "package": "hxt",
        "partial": "PLAINoutput",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:S",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "S",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "function",
        "title": "S"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "S",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XHTMLoutput",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XHTMLoutput",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXoutConfig",
        "fct-type": "function",
        "title": "XHTMLoutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XHTMLoutput",
        "normalized": "",
        "package": "hxt",
        "partial": "XHTMLoutput",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOCch",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOCch",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "XIOCch"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOCch",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOCch",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOEnv",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOEnv",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "XIOEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOEnv",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOEnv",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOIcgf",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOIcgf",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "XIOIcgf"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOIcgf",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOIcgf",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOOcfg",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOOcfg",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "XIOOcfg"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOOcfg",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOOcfg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOPcfg",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOPcfg",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "XIOPcfg"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOPcfg",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOPcfg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIORxc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIORxc",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "XIORxc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIORxc",
        "normalized": "",
        "package": "hxt",
        "partial": "XIORxc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOScc",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOScc",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXmlSchemaConfig",
        "fct-type": "function",
        "title": "XIOScc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOScc",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOScc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOState",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOState",
        "fct-type": "function",
        "title": "XIOState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOState",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOState",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOSys",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOSys",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysState",
        "fct-type": "function",
        "title": "XIOSys"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOSys",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOSys",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XIOwrt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XIOwrt",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "XIOwrt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XIOwrt",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOwrt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:XMLoutput",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XMLoutput",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXoutConfig",
        "fct-type": "function",
        "title": "XMLoutput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "XMLoutput",
        "normalized": "",
        "package": "hxt",
        "partial": "XMLoutput",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:changeUserState",
      "description": {
        "fct-descr": "\u003cp\u003echange the user defined part of the state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e s -\u003e s) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#changeUserState",
        "fct-type": "function",
        "title": "changeUserState"
      },
      "index": {
        "description": "change the user defined part of the state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "changeUserState",
        "normalized": "(a-\u003eb-\u003eb)-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "User State",
        "signature": "(b-\u003es-\u003es)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:chgS",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector s a -\u003e (a -\u003e a) -\u003e s -\u003e s",
        "fct-source": "src/Data-Function-Selector.html#chgS",
        "fct-type": "function",
        "title": "chgS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "chgS",
        "normalized": "Selector a b-\u003e(b-\u003eb)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "",
        "signature": "Selector s a-\u003e(a-\u003ea)-\u003es-\u003es"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:chgSysVar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState c -\u003e (b -\u003e c -\u003e c) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#chgSysVar",
        "fct-type": "function",
        "title": "chgSysVar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "chgSysVar",
        "normalized": "Selector XIOSysState a-\u003e(b-\u003ea-\u003ea)-\u003eIOStateArrow c b b",
        "package": "hxt",
        "partial": "Sys Var",
        "signature": "Selector XIOSysState c-\u003e(b-\u003ec-\u003ec)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:configSysVar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "SysConfig -\u003e IOStateArrow s c c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#configSysVar",
        "fct-type": "function",
        "title": "configSysVar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "configSysVar",
        "normalized": "SysConfig-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Var",
        "signature": "SysConfig-\u003eIOStateArrow s c c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:configSysVars",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e IOStateArrow s c c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#configSysVars",
        "fct-type": "function",
        "title": "configSysVars"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "configSysVars",
        "normalized": "SysConfigList-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Vars",
        "signature": "SysConfigList-\u003eIOStateArrow s c c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:getAllSysAttrs",
      "description": {
        "fct-descr": "\u003cp\u003eread all attributes from global state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getAllSysAttrs",
        "fct-type": "function",
        "title": "getAllSysAttrs"
      },
      "index": {
        "description": "read all attributes from global state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "getAllSysAttrs",
        "normalized": "",
        "package": "hxt",
        "partial": "All Sys Attrs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:getS",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "s -\u003e a",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "function",
        "title": "getS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "getS",
        "normalized": "a-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "s-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:getSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003eread an attribute value from global state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getSysAttr",
        "fct-type": "function",
        "title": "getSysAttr"
      },
      "index": {
        "description": "read an attribute value from global state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "getSysAttr",
        "normalized": "String-\u003eIOStateArrow a b String",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eIOStateArrow s b String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:getSysAttrInt",
      "description": {
        "fct-descr": "\u003cp\u003eread an int value from global state\n\u003c/p\u003e\u003cpre\u003e getSysAttrInt 0 myIntAttr\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IOStateArrow s b Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getSysAttrInt",
        "fct-type": "function",
        "title": "getSysAttrInt"
      },
      "index": {
        "description": "read an int value from global state getSysAttrInt myIntAttr",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "getSysAttrInt",
        "normalized": "Int-\u003eString-\u003eIOStateArrow a b Int",
        "package": "hxt",
        "partial": "Sys Attr Int",
        "signature": "Int-\u003eString-\u003eIOStateArrow s b Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:getSysVar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState c -\u003e IOStateArrow s b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getSysVar",
        "fct-type": "function",
        "title": "getSysVar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "getSysVar",
        "normalized": "Selector XIOSysState a-\u003eIOStateArrow b c a",
        "package": "hxt",
        "partial": "Sys Var",
        "signature": "Selector XIOSysState c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:getUserState",
      "description": {
        "fct-descr": "\u003cp\u003eread the user defined part of the state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b s",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getUserState",
        "fct-type": "function",
        "title": "getUserState"
      },
      "index": {
        "description": "read the user defined part of the state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "getUserState",
        "normalized": "",
        "package": "hxt",
        "partial": "User State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:idS",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector s s",
        "fct-source": "src/Data-Function-Selector.html#idS",
        "fct-type": "function",
        "title": "idS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "idS",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:incrSysVar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Int -\u003e IOStateArrow s a Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#incrSysVar",
        "fct-type": "function",
        "title": "incrSysVar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "incrSysVar",
        "normalized": "Selector XIOSysState Int-\u003eIOStateArrow a b Int",
        "package": "hxt",
        "partial": "Sys Var",
        "signature": "Selector XIOSysState Int-\u003eIOStateArrow s a Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:localSysEnv",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s a b -\u003e IOStateArrow s a b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#localSysEnv",
        "fct-type": "function",
        "title": "localSysEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "localSysEnv",
        "normalized": "IOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Sys Env",
        "signature": "IOStateArrow s a b-\u003eIOStateArrow s a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:localSysVar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState c -\u003e IOStateArrow s a b -\u003e IOStateArrow s a b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#localSysVar",
        "fct-type": "function",
        "title": "localSysVar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "localSysVar",
        "normalized": "Selector XIOSysState a-\u003eIOStateArrow b c d-\u003eIOStateArrow b c d",
        "package": "hxt",
        "partial": "Sys Var",
        "signature": "Selector XIOSysState c-\u003eIOStateArrow s a b-\u003eIOStateArrow s a b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:setS",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e s -\u003e s",
        "fct-source": "src/Data-Function-Selector.html#Selector",
        "fct-type": "function",
        "title": "setS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "setS",
        "normalized": "a-\u003eb-\u003eb",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003es-\u003es"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:setSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003estore a string in global state under a given attribute name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysAttr",
        "fct-type": "function",
        "title": "setSysAttr"
      },
      "index": {
        "description": "store string in global state under given attribute name",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "setSysAttr",
        "normalized": "String-\u003eIOStateArrow a String String",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eIOStateArrow s String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:setSysAttrInt",
      "description": {
        "fct-descr": "\u003cp\u003estore an int value in global state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Int -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysAttrInt",
        "fct-type": "function",
        "title": "setSysAttrInt"
      },
      "index": {
        "description": "store an int value in global state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "setSysAttrInt",
        "normalized": "String-\u003eInt-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Attr Int",
        "signature": "String-\u003eInt-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:setSysAttrString",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysAttrString",
        "fct-type": "function",
        "title": "setSysAttrString"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "setSysAttrString",
        "normalized": "String-\u003eString-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Attr String",
        "signature": "String-\u003eString-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:setSysVar",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState c -\u003e IOStateArrow s c c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysVar",
        "fct-type": "function",
        "title": "setSysVar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "setSysVar",
        "normalized": "Selector XIOSysState a-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "Sys Var",
        "signature": "Selector XIOSysState c-\u003eIOStateArrow s c c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:setUserState",
      "description": {
        "fct-descr": "\u003cp\u003eset the user defined part of the state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s s s",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setUserState",
        "fct-type": "function",
        "title": "setUserState"
      },
      "index": {
        "description": "set the user defined part of the state",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "setUserState",
        "normalized": "",
        "package": "hxt",
        "partial": "User State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theAcceptedMimeTypes",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState [String]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theAcceptedMimeTypes",
        "fct-type": "function",
        "title": "theAcceptedMimeTypes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theAcceptedMimeTypes",
        "normalized": "Selector XIOSysState[String]",
        "package": "hxt",
        "partial": "Accepted Mime Types",
        "signature": "Selector XIOSysState[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theAddDefaultDTD",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theAddDefaultDTD",
        "fct-type": "function",
        "title": "theAddDefaultDTD"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theAddDefaultDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "Add Default DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theAttrList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theAttrList",
        "fct-type": "function",
        "title": "theAttrList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theAttrList",
        "normalized": "",
        "package": "hxt",
        "partial": "Attr List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theBaseURI",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theBaseURI",
        "fct-type": "function",
        "title": "theBaseURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theBinaryCompression",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (ByteString -\u003e ByteString)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theBinaryCompression",
        "fct-type": "function",
        "title": "theBinaryCompression"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theBinaryCompression",
        "normalized": "Selector XIOSysState(ByteString-\u003eByteString)",
        "package": "hxt",
        "partial": "Binary Compression",
        "signature": "Selector XIOSysState(ByteString-\u003eByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theBinaryDeCompression",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (ByteString -\u003e ByteString)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theBinaryDeCompression",
        "fct-type": "function",
        "title": "theBinaryDeCompression"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theBinaryDeCompression",
        "normalized": "Selector XIOSysState(ByteString-\u003eByteString)",
        "package": "hxt",
        "partial": "Binary De Compression",
        "signature": "Selector XIOSysState(ByteString-\u003eByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theCache404Err",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theCache404Err",
        "fct-type": "function",
        "title": "theCache404Err"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theCache404Err",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Err",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theCacheConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOCacheConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theCacheConfig",
        "fct-type": "function",
        "title": "theCacheConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theCacheConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theCacheDir",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theCacheDir",
        "fct-type": "function",
        "title": "theCacheDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theCacheDir",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theCacheRead",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (String -\u003e IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theCacheRead",
        "fct-type": "function",
        "title": "theCacheRead"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theCacheRead",
        "normalized": "Selector XIOSysState(String-\u003eIOSArrow XmlTree XmlTree)",
        "package": "hxt",
        "partial": "Cache Read",
        "signature": "Selector XIOSysState(String-\u003eIOSArrow XmlTree XmlTree)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theCanonicalize",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theCanonicalize",
        "fct-type": "function",
        "title": "theCanonicalize"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theCanonicalize",
        "normalized": "",
        "package": "hxt",
        "partial": "Canonicalize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theCheckNamespaces",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theCheckNamespaces",
        "fct-type": "function",
        "title": "theCheckNamespaces"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theCheckNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "Check Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theDefaultBaseURI",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theDefaultBaseURI",
        "fct-type": "function",
        "title": "theDefaultBaseURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theDefaultBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theDocumentAge",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theDocumentAge",
        "fct-type": "function",
        "title": "theDocumentAge"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theDocumentAge",
        "normalized": "",
        "package": "hxt",
        "partial": "Document Age",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theEncodingErrors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theEncodingErrors",
        "fct-type": "function",
        "title": "theEncodingErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theEncodingErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Encoding Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theErrorMsgCollect",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theErrorMsgCollect",
        "fct-type": "function",
        "title": "theErrorMsgCollect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theErrorMsgCollect",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg Collect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theErrorMsgHandler",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (String -\u003e IO ())",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theErrorMsgHandler",
        "fct-type": "function",
        "title": "theErrorMsgHandler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theErrorMsgHandler",
        "normalized": "Selector XIOSysState(String-\u003eIO())",
        "package": "hxt",
        "partial": "Error Msg Handler",
        "signature": "Selector XIOSysState(String-\u003eIO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theErrorMsgList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theErrorMsgList",
        "fct-type": "function",
        "title": "theErrorMsgList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theErrorMsgList",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theErrorStatus",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theErrorStatus",
        "fct-type": "function",
        "title": "theErrorStatus"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theErrorStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theExpat",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theExpat",
        "fct-type": "function",
        "title": "theExpat"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theExpat",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theExpatErrors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theExpatErrors",
        "fct-type": "function",
        "title": "theExpatErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theExpatErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theExpatParser",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theExpatParser",
        "fct-type": "function",
        "title": "theExpatParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theExpatParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theFileMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theFileMimeType",
        "fct-type": "function",
        "title": "theFileMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theFileMimeType",
        "normalized": "",
        "package": "hxt",
        "partial": "File Mime Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theHttpHandler",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theHttpHandler",
        "fct-type": "function",
        "title": "theHttpHandler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theHttpHandler",
        "normalized": "",
        "package": "hxt",
        "partial": "Http Handler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theIgnoreNoneXmlContents",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theIgnoreNoneXmlContents",
        "fct-type": "function",
        "title": "theIgnoreNoneXmlContents"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theIgnoreNoneXmlContents",
        "normalized": "",
        "package": "hxt",
        "partial": "Ignore None Xml Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theIndent",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theIndent",
        "fct-type": "function",
        "title": "theIndent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theIndent",
        "normalized": "",
        "package": "hxt",
        "partial": "Indent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theInputConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOInputConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theInputConfig",
        "fct-type": "function",
        "title": "theInputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theInputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theInputEncoding",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theInputEncoding",
        "fct-type": "function",
        "title": "theInputEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theInputEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theInputOptions",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theInputOptions",
        "fct-type": "function",
        "title": "theInputOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theInputOptions",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theLowerCaseNames",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theLowerCaseNames",
        "fct-type": "function",
        "title": "theLowerCaseNames"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theLowerCaseNames",
        "normalized": "",
        "package": "hxt",
        "partial": "Lower Case Names",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theMimeTypeFile",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theMimeTypeFile",
        "fct-type": "function",
        "title": "theMimeTypeFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theMimeTypeFile",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theMimeTypeHandlers",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState MimeTypeHandlers",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theMimeTypeHandlers",
        "fct-type": "function",
        "title": "theMimeTypeHandlers"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theMimeTypeHandlers",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Handlers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theMimeTypes",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState MimeTypeTable",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theMimeTypes",
        "fct-type": "function",
        "title": "theMimeTypes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theMimeTypes",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Types",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theNoEmptyElemFor",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState [String]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theNoEmptyElemFor",
        "fct-type": "function",
        "title": "theNoEmptyElemFor"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theNoEmptyElemFor",
        "normalized": "Selector XIOSysState[String]",
        "package": "hxt",
        "partial": "No Empty Elem For",
        "signature": "Selector XIOSysState[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theOutputConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOOutputConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theOutputConfig",
        "fct-type": "function",
        "title": "theOutputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theOutputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theOutputEncoding",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theOutputEncoding",
        "fct-type": "function",
        "title": "theOutputEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theOutputEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theOutputFmt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOXoutConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theOutputFmt",
        "fct-type": "function",
        "title": "theOutputFmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theOutputFmt",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Fmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theParseByMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theParseByMimeType",
        "fct-type": "function",
        "title": "theParseByMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theParseByMimeType",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse By Mime Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theParseConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOParseConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theParseConfig",
        "fct-type": "function",
        "title": "theParseConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theParseConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theParseHTML",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theParseHTML",
        "fct-type": "function",
        "title": "theParseHTML"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theParseHTML",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse HTML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:thePreserveComment",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#thePreserveComment",
        "fct-type": "function",
        "title": "thePreserveComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "thePreserveComment",
        "normalized": "",
        "package": "hxt",
        "partial": "Preserve Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theProxy",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theProxy",
        "fct-type": "function",
        "title": "theProxy"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theProxy",
        "normalized": "",
        "package": "hxt",
        "partial": "Proxy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRedirect",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRedirect",
        "fct-type": "function",
        "title": "theRedirect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRedirect",
        "normalized": "",
        "package": "hxt",
        "partial": "Redirect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxAttrList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (AssocList String XmlTrees)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxAttrList",
        "fct-type": "function",
        "title": "theRelaxAttrList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxAttrList",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Attr List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxCheckRestr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxCheckRestr",
        "fct-type": "function",
        "title": "theRelaxCheckRestr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxCheckRestr",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Check Restr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxCollectErrors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxCollectErrors",
        "fct-type": "function",
        "title": "theRelaxCollectErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxCollectErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Collect Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIORelaxConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxConfig",
        "fct-type": "function",
        "title": "theRelaxConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxDefineId",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxDefineId",
        "fct-type": "function",
        "title": "theRelaxDefineId"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxDefineId",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Define Id",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxNoOfErrors",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxNoOfErrors",
        "fct-type": "function",
        "title": "theRelaxNoOfErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxNoOfErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax No Of Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxSchema",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxSchema",
        "fct-type": "function",
        "title": "theRelaxSchema"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxSchema",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxValidate",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxValidate",
        "fct-type": "function",
        "title": "theRelaxValidate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxValidate",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxValidateExtRef",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxValidateExtRef",
        "fct-type": "function",
        "title": "theRelaxValidateExtRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxValidateExtRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validate Ext Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxValidateInclude",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxValidateInclude",
        "fct-type": "function",
        "title": "theRelaxValidateInclude"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxValidateInclude",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validate Include",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRelaxValidator",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRelaxValidator",
        "fct-type": "function",
        "title": "theRelaxValidator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRelaxValidator",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theRemoveWS",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theRemoveWS",
        "fct-type": "function",
        "title": "theRemoveWS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theRemoveWS",
        "normalized": "",
        "package": "hxt",
        "partial": "Remove WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theShowHaskell",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theShowHaskell",
        "fct-type": "function",
        "title": "theShowHaskell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theShowHaskell",
        "normalized": "",
        "package": "hxt",
        "partial": "Show Haskell",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theShowTree",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theShowTree",
        "fct-type": "function",
        "title": "theShowTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theShowTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Show Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theStrictDeserialize",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theStrictDeserialize",
        "fct-type": "function",
        "title": "theStrictDeserialize"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theStrictDeserialize",
        "normalized": "",
        "package": "hxt",
        "partial": "Strict Deserialize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theStrictInput",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theStrictInput",
        "fct-type": "function",
        "title": "theStrictInput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theStrictInput",
        "normalized": "",
        "package": "hxt",
        "partial": "Strict Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theSubstDTDEntities",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theSubstDTDEntities",
        "fct-type": "function",
        "title": "theSubstDTDEntities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theSubstDTDEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "Subst DTDEntities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theSubstHTMLEntities",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theSubstHTMLEntities",
        "fct-type": "function",
        "title": "theSubstHTMLEntities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theSubstHTMLEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "Subst HTMLEntities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theSysEnv",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOSysEnv",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theSysEnv",
        "fct-type": "function",
        "title": "theSysEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theSysEnv",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Env",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theSysState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector (XIOState us) XIOSysState",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theSysState",
        "fct-type": "function",
        "title": "theSysState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theSysState",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theSysWriter",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOSysWriter",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theSysWriter",
        "fct-type": "function",
        "title": "theSysWriter"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theSysWriter",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Writer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theTagSoup",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theTagSoup",
        "fct-type": "function",
        "title": "theTagSoup"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theTagSoup",
        "normalized": "",
        "package": "hxt",
        "partial": "Tag Soup",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theTagSoupParser",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theTagSoupParser",
        "fct-type": "function",
        "title": "theTagSoupParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theTagSoupParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Tag Soup Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theTextMode",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theTextMode",
        "fct-type": "function",
        "title": "theTextMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theTextMode",
        "normalized": "",
        "package": "hxt",
        "partial": "Text Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theTrace",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (Int, Int -\u003e String -\u003e IO ())",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theTrace",
        "fct-type": "function",
        "title": "theTrace"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theTrace",
        "normalized": "Selector XIOSysState(Int,Int-\u003eString-\u003eIO())",
        "package": "hxt",
        "partial": "Trace",
        "signature": "Selector XIOSysState(Int,Int-\u003eString-\u003eIO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theTraceCmd",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (Int -\u003e String -\u003e IO ())",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theTraceCmd",
        "fct-type": "function",
        "title": "theTraceCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theTraceCmd",
        "normalized": "Selector XIOSysState(Int-\u003eString-\u003eIO())",
        "package": "hxt",
        "partial": "Trace Cmd",
        "signature": "Selector XIOSysState(Int-\u003eString-\u003eIO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theTraceLevel",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theTraceLevel",
        "fct-type": "function",
        "title": "theTraceLevel"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theTraceLevel",
        "normalized": "",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theUserState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector (XIOState us) us",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theUserState",
        "fct-type": "function",
        "title": "theUserState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theUserState",
        "normalized": "",
        "package": "hxt",
        "partial": "User State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theValidate",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theValidate",
        "fct-type": "function",
        "title": "theValidate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theValidate",
        "normalized": "",
        "package": "hxt",
        "partial": "Validate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theWarnings",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theWarnings",
        "fct-type": "function",
        "title": "theWarnings"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theWarnings",
        "normalized": "",
        "package": "hxt",
        "partial": "Warnings",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theWithCache",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theWithCache",
        "fct-type": "function",
        "title": "theWithCache"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theWithCache",
        "normalized": "",
        "package": "hxt",
        "partial": "With Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theXmlPi",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theXmlPi",
        "fct-type": "function",
        "title": "theXmlPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theXmlPi",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theXmlSchemaConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState XIOXmlSchemaConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theXmlSchemaConfig",
        "fct-type": "function",
        "title": "theXmlSchemaConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theXmlSchemaConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theXmlSchemaSchema",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theXmlSchemaSchema",
        "fct-type": "function",
        "title": "theXmlSchemaSchema"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theXmlSchemaSchema",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theXmlSchemaValidate",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theXmlSchemaValidate",
        "fct-type": "function",
        "title": "theXmlSchemaValidate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theXmlSchemaValidate",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Validate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:theXmlSchemaValidator",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Selector XIOSysState (IOSArrow XmlTree XmlTree)",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#theXmlSchemaValidator",
        "fct-type": "function",
        "title": "theXmlSchemaValidator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "theXmlSchemaValidator",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Validator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:toInt",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#toInt",
        "fct-type": "function",
        "title": "toInt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "toInt",
        "normalized": "Int-\u003eString-\u003eInt",
        "package": "hxt",
        "partial": "Int",
        "signature": "Int-\u003eString-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:unsetSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003eremove an entry in global state, arrow input remains unchanged\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#unsetSysAttr",
        "fct-type": "function",
        "title": "unsetSysAttr"
      },
      "index": {
        "description": "remove an entry in global state arrow input remains unchanged",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "unsetSysAttr",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:withExtendedUserState",
      "description": {
        "fct-descr": "\u003cp\u003eextend user state\n\u003c/p\u003e\u003cp\u003eRun an arrow with an extended user state component, The old component\n is stored together with a new one in a pair, the arrow is executed with this\n extended state, and the augmented state component is removed form the state\n when the arrow has finished its execution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "s1 -\u003e IOStateArrow (s1, s0) b c -\u003e IOStateArrow s0 b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#withExtendedUserState",
        "fct-type": "function",
        "title": "withExtendedUserState"
      },
      "index": {
        "description": "extend user state Run an arrow with an extended user state component The old component is stored together with new one in pair the arrow is executed with this extended state and the augmented state component is removed form the state when the arrow has finished its execution",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "withExtendedUserState",
        "normalized": "a-\u003eIOStateArrow(a,a)b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Extended User State",
        "signature": "s-\u003eIOStateArrow(s,s)b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:withOtherUserState",
      "description": {
        "fct-descr": "\u003cp\u003echange the type of user state\n\u003c/p\u003e\u003cp\u003eThis conversion is useful, when running a state arrow with another\n structure of the user state, e.g. with () when executing some IO arrows\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "s1 -\u003e IOStateArrow s1 b c -\u003e IOStateArrow s0 b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#withOtherUserState",
        "fct-type": "function",
        "title": "withOtherUserState"
      },
      "index": {
        "description": "change the type of user state This conversion is useful when running state arrow with another structure of the user state e.g with when executing some IO arrows",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "withOtherUserState",
        "normalized": "a-\u003eIOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Other User State",
        "signature": "s-\u003eIOStateArrow s b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:withoutUserState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow b c -\u003e IOStateArrow s0 b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#withoutUserState",
        "fct-type": "function",
        "title": "withoutUserState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "withoutUserState",
        "normalized": "IOSArrow a b-\u003eIOStateArrow c a b",
        "package": "hxt",
        "partial": "User State",
        "signature": "IOSArrow b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioAcceptedMimeTypes",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "[String]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioAcceptedMimeTypes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioAcceptedMimeTypes",
        "normalized": "[String]",
        "package": "hxt",
        "partial": "Accepted Mime Types",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioAddDefaultDTD",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioAddDefaultDTD"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioAddDefaultDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "Add Default DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioAttrList",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioAttrList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioAttrList",
        "normalized": "",
        "package": "hxt",
        "partial": "Attr List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioBaseURI",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioBaseURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioBinaryCompression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "CompressionFct",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioBinaryCompression"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioBinaryCompression",
        "normalized": "",
        "package": "hxt",
        "partial": "Binary Compression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioBinaryDeCompression",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "DeCompressionFct",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioBinaryDeCompression"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioBinaryDeCompression",
        "normalized": "",
        "package": "hxt",
        "partial": "Binary De Compression",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioCache404Err",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioCache404Err"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioCache404Err",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Err",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioCacheConfig",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOCacheConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioCacheConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioCacheConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioCacheDir",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioCacheDir"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioCacheDir",
        "normalized": "",
        "package": "hxt",
        "partial": "Cache Dir",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioCacheRead",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioCacheRead"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioCacheRead",
        "normalized": "String-\u003eIOSArrow XmlTree XmlTree",
        "package": "hxt",
        "partial": "Cache Read",
        "signature": "String-\u003eIOSArrow XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioCanonicalize",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioCanonicalize"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioCanonicalize",
        "normalized": "",
        "package": "hxt",
        "partial": "Canonicalize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioCheckNamespaces",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioCheckNamespaces"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioCheckNamespaces",
        "normalized": "",
        "package": "hxt",
        "partial": "Check Namespaces",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioDefaultBaseURI",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioDefaultBaseURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioDefaultBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioDocumentAge",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioDocumentAge"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioDocumentAge",
        "normalized": "",
        "package": "hxt",
        "partial": "Document Age",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioEncodingErrors",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioEncodingErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioEncodingErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Encoding Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioErrorMsgCollect",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioErrorMsgCollect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioErrorMsgCollect",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg Collect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioErrorMsgHandler",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IO ()",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioErrorMsgHandler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioErrorMsgHandler",
        "normalized": "String-\u003eIO()",
        "package": "hxt",
        "partial": "Error Msg Handler",
        "signature": "String-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioErrorMsgList",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "xioErrorMsgList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioErrorMsgList",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioErrorStatus",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "xioErrorStatus"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioErrorStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioExpat",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioExpat"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioExpat",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioExpatErrors",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "xioExpatErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioExpatErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioExpatParser",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioExpatParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioExpatParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Expat Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioFileMimeType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioFileMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioFileMimeType",
        "normalized": "",
        "package": "hxt",
        "partial": "File Mime Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioHttpHandler",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioHttpHandler"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioHttpHandler",
        "normalized": "",
        "package": "hxt",
        "partial": "Http Handler",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioIgnoreNoneXmlContents",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioIgnoreNoneXmlContents"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioIgnoreNoneXmlContents",
        "normalized": "",
        "package": "hxt",
        "partial": "Ignore None Xml Contents",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioIndent",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioIndent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioIndent",
        "normalized": "",
        "package": "hxt",
        "partial": "Indent",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioInputConfig",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOInputConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioInputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioInputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioInputEncoding",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioInputEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioInputEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioInputOptions",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioInputOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioInputOptions",
        "normalized": "",
        "package": "hxt",
        "partial": "Input Options",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioLowerCaseNames",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioLowerCaseNames"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioLowerCaseNames",
        "normalized": "",
        "package": "hxt",
        "partial": "Lower Case Names",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioMimeTypeFile",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioMimeTypeFile"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioMimeTypeFile",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type File",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioMimeTypeHandlers",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "MimeTypeHandlers",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioMimeTypeHandlers"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioMimeTypeHandlers",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Handlers",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioMimeTypes",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "MimeTypeTable",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioMimeTypes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioMimeTypes",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Types",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioNoEmptyElemFor",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "![String]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioNoEmptyElemFor"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioNoEmptyElemFor",
        "normalized": "[String]",
        "package": "hxt",
        "partial": "No Empty Elem For",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioOutputConfig",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOOutputConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioOutputConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioOutputConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioOutputEncoding",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioOutputEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioOutputEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioOutputFmt",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOXoutConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioOutputFmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioOutputFmt",
        "normalized": "",
        "package": "hxt",
        "partial": "Output Fmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioParseByMimeType",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioParseByMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioParseByMimeType",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse By Mime Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioParseConfig",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOParseConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioParseConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioParseConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioParseHTML",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioParseHTML"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioParseHTML",
        "normalized": "",
        "package": "hxt",
        "partial": "Parse HTML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioPreserveComment",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioPreserveComment"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioPreserveComment",
        "normalized": "",
        "package": "hxt",
        "partial": "Preserve Comment",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioProxy",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioProxy"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioProxy",
        "normalized": "",
        "package": "hxt",
        "partial": "Proxy",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRedirect",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioRedirect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRedirect",
        "normalized": "",
        "package": "hxt",
        "partial": "Redirect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxAttrList",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "AssocList String XmlTrees",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "xioRelaxAttrList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxAttrList",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Attr List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxCheckRestr",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxCheckRestr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxCheckRestr",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Check Restr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxCollectErrors",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxCollectErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxCollectErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Collect Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxConfig",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIORelaxConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioRelaxConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxDefineId",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "xioRelaxDefineId"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxDefineId",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Define Id",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxNoOfErrors",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysWriter",
        "fct-type": "function",
        "title": "xioRelaxNoOfErrors"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxNoOfErrors",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax No Of Errors",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxSchema",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxSchema"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxSchema",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxValidate",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxValidate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxValidate",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxValidateExtRef",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxValidateExtRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxValidateExtRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validate Ext Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxValidateInclude",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxValidateInclude"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxValidateInclude",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validate Include",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRelaxValidator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIORelaxConfig",
        "fct-type": "function",
        "title": "xioRelaxValidator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRelaxValidator",
        "normalized": "",
        "package": "hxt",
        "partial": "Relax Validator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioRemoveWS",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioRemoveWS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioRemoveWS",
        "normalized": "",
        "package": "hxt",
        "partial": "Remove WS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioShowHaskell",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioShowHaskell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioShowHaskell",
        "normalized": "",
        "package": "hxt",
        "partial": "Show Haskell",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioShowTree",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioShowTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioShowTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Show Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioStrictDeserialize",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioStrictDeserialize"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioStrictDeserialize",
        "normalized": "",
        "package": "hxt",
        "partial": "Strict Deserialize",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioStrictInput",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOInputConfig",
        "fct-type": "function",
        "title": "xioStrictInput"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioStrictInput",
        "normalized": "",
        "package": "hxt",
        "partial": "Strict Input",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioSubstDTDEntities",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioSubstDTDEntities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioSubstDTDEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "Subst DTDEntities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioSubstHTMLEntities",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioSubstHTMLEntities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioSubstHTMLEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "Subst HTMLEntities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioSysEnv",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOSysEnv",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysState",
        "fct-type": "function",
        "title": "xioSysEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioSysEnv",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Env",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioSysState",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOSysState",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOState",
        "fct-type": "function",
        "title": "xioSysState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioSysState",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioSysWriter",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOSysWriter",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysState",
        "fct-type": "function",
        "title": "xioSysWriter"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioSysWriter",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Writer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioTagSoup",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioTagSoup"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioTagSoup",
        "normalized": "",
        "package": "hxt",
        "partial": "Tag Soup",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioTagSoupParser",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioTagSoupParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioTagSoupParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Tag Soup Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioTextMode",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioTextMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioTextMode",
        "normalized": "",
        "package": "hxt",
        "partial": "Text Mode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioTraceCmd",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IO ()",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioTraceCmd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioTraceCmd",
        "normalized": "Int-\u003eString-\u003eIO()",
        "package": "hxt",
        "partial": "Trace Cmd",
        "signature": "Int-\u003eString-\u003eIO()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioTraceLevel",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioTraceLevel"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioTraceLevel",
        "normalized": "",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioUserState",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!us",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOState",
        "fct-type": "function",
        "title": "xioUserState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioUserState",
        "normalized": "",
        "package": "hxt",
        "partial": "User State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioValidate",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioValidate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioValidate",
        "normalized": "",
        "package": "hxt",
        "partial": "Validate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioWarnings",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOParseConfig",
        "fct-type": "function",
        "title": "xioWarnings"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioWarnings",
        "normalized": "",
        "package": "hxt",
        "partial": "Warnings",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioWithCache",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOCacheConfig",
        "fct-type": "function",
        "title": "xioWithCache"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioWithCache",
        "normalized": "",
        "package": "hxt",
        "partial": "With Cache",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioXmlPi",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOOutputConfig",
        "fct-type": "function",
        "title": "xioXmlPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioXmlPi",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioXmlSchemaConfig",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!XIOXmlSchemaConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysEnv",
        "fct-type": "function",
        "title": "xioXmlSchemaConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioXmlSchemaConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioXmlSchemaSchema",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXmlSchemaConfig",
        "fct-type": "function",
        "title": "xioXmlSchemaSchema"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioXmlSchemaSchema",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Schema",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioXmlSchemaValidate",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXmlSchemaConfig",
        "fct-type": "function",
        "title": "xioXmlSchemaValidate"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioXmlSchemaValidate",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Validate",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#v:xioXmlSchemaValidator",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOXmlSchemaConfig",
        "fct-type": "function",
        "title": "xioXmlSchemaValidator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState TypeDefs",
        "module": "Text.XML.HXT.Arrow.XmlState.TypeDefs",
        "name": "xioXmlSchemaValidator",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Schema Validator",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ethe basic state arrows for URI handling\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html",
        "fct-type": "module",
        "title": "URIHandling"
      },
      "index": {
        "description": "the basic state arrows for URI handling",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "URIHandling",
        "normalized": "",
        "package": "hxt",
        "partial": "URIHandling",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:changeBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003echange the base URI with a possibly relative URI, can be used for\n evaluating the xml:base attribute. Returns the new absolute base URI.\n Fails, if input is not parsable with parseURIReference\n\u003c/p\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003esetBaseURI\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003emkAbsURI\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#changeBaseURI",
        "fct-type": "function",
        "title": "changeBaseURI"
      },
      "index": {
        "description": "change the base URI with possibly relative URI can be used for evaluating the xml base attribute Returns the new absolute base URI Fails if input is not parsable with parseURIReference see also setBaseURI mkAbsURI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "changeBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:expandURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow variant of \u003ccode\u003e\u003ca\u003eexpandURIString\u003c/a\u003e\u003c/code\u003e, fails if \u003ccode\u003e\u003ca\u003eexpandURIString\u003c/a\u003e\u003c/code\u003e returns Nothing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a (String, String) String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#expandURI",
        "fct-type": "function",
        "title": "expandURI"
      },
      "index": {
        "description": "arrow variant of expandURIString fails if expandURIString returns Nothing",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "expandURI",
        "normalized": "a(String,String)String",
        "package": "hxt",
        "partial": "URI",
        "signature": "a(String,String)String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:expandURIString",
      "description": {
        "fct-descr": "\u003cp\u003ecompute the absolut URI for a given URI and a base URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#expandURIString",
        "fct-type": "function",
        "title": "expandURIString"
      },
      "index": {
        "description": "compute the absolut URI for given URI and base URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "expandURIString",
        "normalized": "String-\u003eString-\u003eMaybe String",
        "package": "hxt",
        "partial": "URIString",
        "signature": "String-\u003eString-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eread the base URI from the globale state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getBaseURI",
        "fct-type": "function",
        "title": "getBaseURI"
      },
      "index": {
        "description": "read the base URI from the globale state",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getDefaultBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eget the default base URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getDefaultBaseURI",
        "fct-type": "function",
        "title": "getDefaultBaseURI"
      },
      "index": {
        "description": "get the default base URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getDefaultBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getFragmentFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the fragment component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getFragmentFromURI",
        "fct-type": "function",
        "title": "getFragmentFromURI"
      },
      "index": {
        "description": "arrow for computing the fragment component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getFragmentFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Fragment From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getPartFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the path component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "(URI -\u003e String) -\u003e a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getPartFromURI",
        "fct-type": "function",
        "title": "getPartFromURI"
      },
      "index": {
        "description": "arrow for computing the path component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getPartFromURI",
        "normalized": "(URI-\u003eString)-\u003ea String String",
        "package": "hxt",
        "partial": "Part From URI",
        "signature": "(URI-\u003eString)-\u003ea String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getPathFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the path component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getPathFromURI",
        "fct-type": "function",
        "title": "getPathFromURI"
      },
      "index": {
        "description": "arrow for computing the path component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getPathFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Path From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getPortFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the port number of the URI without leading ':', fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getPortFromURI",
        "fct-type": "function",
        "title": "getPortFromURI"
      },
      "index": {
        "description": "arrow for selecting the port number of the URI without leading fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getPortFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Port From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getQueryFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the query component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getQueryFromURI",
        "fct-type": "function",
        "title": "getQueryFromURI"
      },
      "index": {
        "description": "arrow for computing the query component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getQueryFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Query From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getRegNameFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the registered name (host) of the URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getRegNameFromURI",
        "fct-type": "function",
        "title": "getRegNameFromURI"
      },
      "index": {
        "description": "arrow for selecting the registered name host of the URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getRegNameFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Reg Name From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getSchemeFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the scheme (protocol) of the URI, fails if input is not a legal URI.\n\u003c/p\u003e\u003cp\u003eSee Network.URI for URI components\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getSchemeFromURI",
        "fct-type": "function",
        "title": "getSchemeFromURI"
      },
      "index": {
        "description": "arrow for selecting the scheme protocol of the URI fails if input is not legal URI See Network.URI for URI components",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getSchemeFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Scheme From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:getUserInfoFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the user info of the URI without trailing '@', fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getUserInfoFromURI",
        "fct-type": "function",
        "title": "getUserInfoFromURI"
      },
      "index": {
        "description": "arrow for selecting the user info of the URI without trailing fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "getUserInfoFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "User Info From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:mkAbsURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for expanding an input URI into an absolute URI using global base URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#mkAbsURI",
        "fct-type": "function",
        "title": "mkAbsURI"
      },
      "index": {
        "description": "arrow for expanding an input URI into an absolute URI using global base URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "mkAbsURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Abs URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:parseURIReference-39-",
      "description": {
        "fct-descr": "\u003cp\u003eparse a URI reference, in case of a failure,\n try to escape unescaped chars, convert backslashes to slashes for windows paths,\n and try parsing again\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Maybe URI",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#parseURIReference%27",
        "fct-type": "function",
        "title": "parseURIReference'"
      },
      "index": {
        "description": "parse URI reference in case of failure try to escape unescaped chars convert backslashes to slashes for windows paths and try parsing again",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "parseURIReference'",
        "normalized": "String-\u003eMaybe URI",
        "package": "hxt",
        "partial": "URIReference'",
        "signature": "String-\u003eMaybe URI"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:runInLocalURIContext",
      "description": {
        "fct-descr": "\u003cp\u003eremember base uri, run an arrow and restore the base URI, used with external entity substitution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b c -\u003e IOStateArrow s b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#runInLocalURIContext",
        "fct-type": "function",
        "title": "runInLocalURIContext"
      },
      "index": {
        "description": "remember base uri run an arrow and restore the base URI used with external entity substitution",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "runInLocalURIContext",
        "normalized": "IOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "In Local URIContext",
        "signature": "IOStateArrow s b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:setBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eset the base URI of a document, used e.g. for reading includes, e.g. external entities,\n the input must be an absolute URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#setBaseURI",
        "fct-type": "function",
        "title": "setBaseURI"
      },
      "index": {
        "description": "set the base URI of document used e.g for reading includes e.g external entities the input must be an absolute URI",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "setBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState-URIHandling.html#v:setDefaultBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eset the default base URI, if parameter is null, the system base (\u003ccode\u003e file:///\u003ccwd\u003e/ \u003c/code\u003e) is used,\n else the parameter, must be called before any document is read\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#setDefaultBaseURI",
        "fct-type": "function",
        "title": "setDefaultBaseURI"
      },
      "index": {
        "description": "set the default base URI if parameter is null the system base file cwd is used else the parameter must be called before any document is read",
        "hierarchy": "Text XML HXT Arrow XmlState URIHandling",
        "module": "Text.XML.HXT.Arrow.XmlState.URIHandling",
        "name": "setDefaultBaseURI",
        "normalized": "String-\u003eIOStateArrow a b String",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": "String-\u003eIOStateArrow s b String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ethe interface for the basic state maipulation functions\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState.html",
        "fct-type": "module",
        "title": "XmlState"
      },
      "index": {
        "description": "the interface for the basic state maipulation functions",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "XmlState",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#t:IOSArrow",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow for stateful arrows with no user defined state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#IOSArrow",
        "fct-type": "type",
        "title": "IOSArrow"
      },
      "index": {
        "description": "The arrow for stateful arrows with no user defined state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "IOSArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "IOSArrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#t:IOStateArrow",
      "description": {
        "fct-descr": "\u003cp\u003eThe arrow type for stateful arrows\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#IOStateArrow",
        "fct-type": "type",
        "title": "IOStateArrow"
      },
      "index": {
        "description": "The arrow type for stateful arrows",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "IOStateArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "IOState Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#t:SysConfig",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#SysConfig",
        "fct-type": "type",
        "title": "SysConfig"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "SysConfig",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Config",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#t:SysConfigList",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#SysConfigList",
        "fct-type": "type",
        "title": "SysConfigList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "SysConfigList",
        "normalized": "",
        "package": "hxt",
        "partial": "Sys Config List",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#t:XIOState",
      "description": {
        "fct-descr": "\u003cp\u003estate datatype consists of a system state and a user state\n the user state is not fixed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOState",
        "fct-type": "data",
        "title": "XIOState"
      },
      "index": {
        "description": "state datatype consists of system state and user state the user state is not fixed",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "XIOState",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOState",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#t:XIOSysState",
      "description": {
        "fct-descr": "\u003cp\u003epredefined system state data type with all components for the\n system functions, like trace, error handling, ...\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#XIOSysState",
        "fct-type": "data",
        "title": "XIOSysState"
      },
      "index": {
        "description": "predefined system state data type with all components for the system functions like trace error handling",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "XIOSysState",
        "normalized": "",
        "package": "hxt",
        "partial": "XIOSys State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:changeBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003echange the base URI with a possibly relative URI, can be used for\n evaluating the xml:base attribute. Returns the new absolute base URI.\n Fails, if input is not parsable with parseURIReference\n\u003c/p\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003esetBaseURI\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003emkAbsURI\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#changeBaseURI",
        "fct-type": "function",
        "title": "changeBaseURI"
      },
      "index": {
        "description": "change the base URI with possibly relative URI can be used for evaluating the xml base attribute Returns the new absolute base URI Fails if input is not parsable with parseURIReference see also setBaseURI mkAbsURI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "changeBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:changeUserState",
      "description": {
        "fct-descr": "\u003cp\u003echange the user defined part of the state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "(b -\u003e s -\u003e s) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#changeUserState",
        "fct-type": "function",
        "title": "changeUserState"
      },
      "index": {
        "description": "change the user defined part of the state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "changeUserState",
        "normalized": "(a-\u003eb-\u003eb)-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "User State",
        "signature": "(b-\u003es-\u003es)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:clearErrStatus",
      "description": {
        "fct-descr": "\u003cp\u003ereset global error variable\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#clearErrStatus",
        "fct-type": "function",
        "title": "clearErrStatus"
      },
      "index": {
        "description": "reset global error variable",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "clearErrStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:configSysVars",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "SysConfigList -\u003e IOStateArrow s c c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#configSysVars",
        "fct-type": "function",
        "title": "configSysVars"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "configSysVars",
        "normalized": "SysConfigList-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Vars",
        "signature": "SysConfigList-\u003eIOStateArrow s c c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:documentStatusOk",
      "description": {
        "fct-descr": "\u003cp\u003echeck whether tree is a document root and the status attribute has a value less than \u003ccode\u003e\u003ca\u003ec_err\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#documentStatusOk",
        "fct-type": "function",
        "title": "documentStatusOk"
      },
      "index": {
        "description": "check whether tree is document root and the status attribute has value less than err",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "documentStatusOk",
        "normalized": "",
        "package": "hxt",
        "partial": "Status Ok",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:errorMsgCollect",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for collecting errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgCollect",
        "fct-type": "function",
        "title": "errorMsgCollect"
      },
      "index": {
        "description": "error message handler for collecting errors",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "errorMsgCollect",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Collect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:errorMsgIgnore",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for ignoring errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgIgnore",
        "fct-type": "function",
        "title": "errorMsgIgnore"
      },
      "index": {
        "description": "error message handler for ignoring errors",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "errorMsgIgnore",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Ignore",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:errorMsgStderr",
      "description": {
        "fct-descr": "\u003cp\u003ethe default error message handler: error output to stderr\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgStderr",
        "fct-type": "function",
        "title": "errorMsgStderr"
      },
      "index": {
        "description": "the default error message handler error output to stderr",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "errorMsgStderr",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Stderr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:errorMsgStderrAndCollect",
      "description": {
        "fct-descr": "\u003cp\u003eerror message handler for output to stderr and collecting\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#errorMsgStderrAndCollect",
        "fct-type": "function",
        "title": "errorMsgStderrAndCollect"
      },
      "index": {
        "description": "error message handler for output to stderr and collecting",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "errorMsgStderrAndCollect",
        "normalized": "",
        "package": "hxt",
        "partial": "Msg Stderr And Collect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:expandURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow variant of \u003ccode\u003e\u003ca\u003eexpandURIString\u003c/a\u003e\u003c/code\u003e, fails if \u003ccode\u003e\u003ca\u003eexpandURIString\u003c/a\u003e\u003c/code\u003e returns Nothing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a (String, String) String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#expandURI",
        "fct-type": "function",
        "title": "expandURI"
      },
      "index": {
        "description": "arrow variant of expandURIString fails if expandURIString returns Nothing",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "expandURI",
        "normalized": "a(String,String)String",
        "package": "hxt",
        "partial": "URI",
        "signature": "a(String,String)String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:expandURIString",
      "description": {
        "fct-descr": "\u003cp\u003ecompute the absolut URI for a given URI and a base URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#expandURIString",
        "fct-type": "function",
        "title": "expandURIString"
      },
      "index": {
        "description": "compute the absolut URI for given URI and base URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "expandURIString",
        "normalized": "String-\u003eString-\u003eMaybe String",
        "package": "hxt",
        "partial": "URIString",
        "signature": "String-\u003eString-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:filterErrorMsg",
      "description": {
        "fct-descr": "\u003cp\u003efilter error messages from input trees and issue errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#filterErrorMsg",
        "fct-type": "function",
        "title": "filterErrorMsg"
      },
      "index": {
        "description": "filter error messages from input trees and issue errors",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "filterErrorMsg",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Msg",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getAllSysAttrs",
      "description": {
        "fct-descr": "\u003cp\u003eread all attributes from global state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b Attributes",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getAllSysAttrs",
        "fct-type": "function",
        "title": "getAllSysAttrs"
      },
      "index": {
        "description": "read all attributes from global state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getAllSysAttrs",
        "normalized": "",
        "package": "hxt",
        "partial": "All Sys Attrs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eread the base URI from the globale state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getBaseURI",
        "fct-type": "function",
        "title": "getBaseURI"
      },
      "index": {
        "description": "read the base URI from the globale state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getConfigAttr",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfigList -\u003e String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#getConfigAttr",
        "fct-type": "function",
        "title": "getConfigAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getConfigAttr",
        "normalized": "String-\u003eSysConfigList-\u003eString",
        "package": "hxt",
        "partial": "Config Attr",
        "signature": "String-\u003eSysConfigList-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getDefaultBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eget the default base URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getDefaultBaseURI",
        "fct-type": "function",
        "title": "getDefaultBaseURI"
      },
      "index": {
        "description": "get the default base URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getDefaultBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getErrStatus",
      "description": {
        "fct-descr": "\u003cp\u003eread current global error status\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#getErrStatus",
        "fct-type": "function",
        "title": "getErrStatus"
      },
      "index": {
        "description": "read current global error status",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getErrStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getErrorMessages",
      "description": {
        "fct-descr": "\u003cp\u003eif error messages are collected by the error handler for\n processing these messages by the calling application,\n this arrow reads the stored messages and clears the error message store\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#getErrorMessages",
        "fct-type": "function",
        "title": "getErrorMessages"
      },
      "index": {
        "description": "if error messages are collected by the error handler for processing these messages by the calling application this arrow reads the stored messages and clears the error message store",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getErrorMessages",
        "normalized": "",
        "package": "hxt",
        "partial": "Error Messages",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getFragmentFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the fragment component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getFragmentFromURI",
        "fct-type": "function",
        "title": "getFragmentFromURI"
      },
      "index": {
        "description": "arrow for computing the fragment component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getFragmentFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Fragment From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getMimeTypeTable",
      "description": {
        "fct-descr": "\u003cp\u003eread the system mimetype table\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b MimeTypeTable",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#getMimeTypeTable",
        "fct-type": "function",
        "title": "getMimeTypeTable"
      },
      "index": {
        "description": "read the system mimetype table",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getMimeTypeTable",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getPathFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the path component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getPathFromURI",
        "fct-type": "function",
        "title": "getPathFromURI"
      },
      "index": {
        "description": "arrow for computing the path component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getPathFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Path From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getPortFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the port number of the URI without leading ':', fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getPortFromURI",
        "fct-type": "function",
        "title": "getPortFromURI"
      },
      "index": {
        "description": "arrow for selecting the port number of the URI without leading fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getPortFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Port From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getQueryFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for computing the query component of an URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getQueryFromURI",
        "fct-type": "function",
        "title": "getQueryFromURI"
      },
      "index": {
        "description": "arrow for computing the query component of an URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getQueryFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Query From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getRegNameFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the registered name (host) of the URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getRegNameFromURI",
        "fct-type": "function",
        "title": "getRegNameFromURI"
      },
      "index": {
        "description": "arrow for selecting the registered name host of the URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getRegNameFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Reg Name From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getSchemeFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the scheme (protocol) of the URI, fails if input is not a legal URI.\n\u003c/p\u003e\u003cp\u003eSee Network.URI for URI components\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getSchemeFromURI",
        "fct-type": "function",
        "title": "getSchemeFromURI"
      },
      "index": {
        "description": "arrow for selecting the scheme protocol of the URI fails if input is not legal URI See Network.URI for URI components",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getSchemeFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Scheme From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003eread an attribute value from global state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getSysAttr",
        "fct-type": "function",
        "title": "getSysAttr"
      },
      "index": {
        "description": "read an attribute value from global state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getSysAttr",
        "normalized": "String-\u003eIOStateArrow a b String",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eIOStateArrow s b String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getSysAttrInt",
      "description": {
        "fct-descr": "\u003cp\u003eread an int value from global state\n\u003c/p\u003e\u003cpre\u003e getSysAttrInt 0 myIntAttr\n\u003c/pre\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IOStateArrow s b Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getSysAttrInt",
        "fct-type": "function",
        "title": "getSysAttrInt"
      },
      "index": {
        "description": "read an int value from global state getSysAttrInt myIntAttr",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getSysAttrInt",
        "normalized": "Int-\u003eString-\u003eIOStateArrow a b Int",
        "package": "hxt",
        "partial": "Sys Attr Int",
        "signature": "Int-\u003eString-\u003eIOStateArrow s b Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getTraceCmd",
      "description": {
        "fct-descr": "\u003cp\u003eacces the command for trace output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow a b (Int -\u003e String -\u003e IO ())",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#getTraceCmd",
        "fct-type": "function",
        "title": "getTraceCmd"
      },
      "index": {
        "description": "acces the command for trace output",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getTraceCmd",
        "normalized": "IOStateArrow a b(Int-\u003eString-\u003eIO())",
        "package": "hxt",
        "partial": "Trace Cmd",
        "signature": "IOStateArrow a b(Int-\u003eString-\u003eIO())"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getTraceLevel",
      "description": {
        "fct-descr": "\u003cp\u003eread the global trace level\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#getTraceLevel",
        "fct-type": "function",
        "title": "getTraceLevel"
      },
      "index": {
        "description": "read the global trace level",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getTraceLevel",
        "normalized": "",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getUserInfoFromURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for selecting the user info of the URI without trailing '@', fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "a String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#getUserInfoFromURI",
        "fct-type": "function",
        "title": "getUserInfoFromURI"
      },
      "index": {
        "description": "arrow for selecting the user info of the URI without trailing fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getUserInfoFromURI",
        "normalized": "",
        "package": "hxt",
        "partial": "User Info From URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:getUserState",
      "description": {
        "fct-descr": "\u003cp\u003eread the user defined part of the state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b s",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#getUserState",
        "fct-type": "function",
        "title": "getUserState"
      },
      "index": {
        "description": "read the user defined part of the state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "getUserState",
        "normalized": "",
        "package": "hxt",
        "partial": "User State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:issueErr",
      "description": {
        "fct-descr": "\u003cp\u003egenerate an error message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueErr",
        "fct-type": "function",
        "title": "issueErr"
      },
      "index": {
        "description": "generate an error message",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "issueErr",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Err",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:issueExc",
      "description": {
        "fct-descr": "\u003cp\u003eDefault exception handler: issue a fatal error message and fail.\n\u003c/p\u003e\u003cp\u003eThe parameter can be used to specify where the error occured\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s SomeException b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueExc",
        "fct-type": "function",
        "title": "issueExc"
      },
      "index": {
        "description": "Default exception handler issue fatal error message and fail The parameter can be used to specify where the error occured",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "issueExc",
        "normalized": "String-\u003eIOStateArrow a SomeException b",
        "package": "hxt",
        "partial": "Exc",
        "signature": "String-\u003eIOStateArrow s SomeException b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:issueFatal",
      "description": {
        "fct-descr": "\u003cp\u003egenerate a fatal error message, e.g. document not found\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueFatal",
        "fct-type": "function",
        "title": "issueFatal"
      },
      "index": {
        "description": "generate fatal error message e.g document not found",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "issueFatal",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Fatal",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:issueWarn",
      "description": {
        "fct-descr": "\u003cp\u003egenerate a warnig message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#issueWarn",
        "fct-type": "function",
        "title": "issueWarn"
      },
      "index": {
        "description": "generate warnig message",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "issueWarn",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Warn",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:mkAbsURI",
      "description": {
        "fct-descr": "\u003cp\u003earrow for expanding an input URI into an absolute URI using global base URI, fails if input is not a legal URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#mkAbsURI",
        "fct-type": "function",
        "title": "mkAbsURI"
      },
      "index": {
        "description": "arrow for expanding an input URI into an absolute URI using global base URI fails if input is not legal URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "mkAbsURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Abs URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:no",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#no",
        "fct-type": "function",
        "title": "no"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "no",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:runInLocalURIContext",
      "description": {
        "fct-descr": "\u003cp\u003eremember base uri, run an arrow and restore the base URI, used with external entity substitution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s b c -\u003e IOStateArrow s b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#runInLocalURIContext",
        "fct-type": "function",
        "title": "runInLocalURIContext"
      },
      "index": {
        "description": "remember base uri run an arrow and restore the base URI used with external entity substitution",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "runInLocalURIContext",
        "normalized": "IOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "In Local URIContext",
        "signature": "IOStateArrow s b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:runX",
      "description": {
        "fct-descr": "\u003cp\u003eapply an \u003ccode\u003e\u003ca\u003eIOSArrow\u003c/a\u003e\u003c/code\u003e to an empty root node with \u003ccode\u003e\u003ca\u003einitialState\u003c/a\u003e\u003c/code\u003e () as initial state\n\u003c/p\u003e\u003cp\u003ethe main entry point for running a state arrow with IO\n\u003c/p\u003e\u003cp\u003ewhen running \u003ccode\u003e runX f\u003c/code\u003e an empty XML root node is applied to \u003ccode\u003ef\u003c/code\u003e.\n usually \u003ccode\u003ef\u003c/code\u003e will start with a constant arrow (ignoring the input), e.g. a \u003ccode\u003e\u003ca\u003ereadDocument\u003c/a\u003e\u003c/code\u003e arrow.\n\u003c/p\u003e\u003cp\u003efor usage see examples with \u003ccode\u003e\u003ca\u003ewriteDocument\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e\u003cp\u003eif input has to be feed into the arrow use \u003ccode\u003e\u003ca\u003erunIOSLA\u003c/a\u003e\u003c/code\u003e like in \u003ccode\u003e runIOSLA f emptyX inputDoc \u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow XmlTree c -\u003e IO [c]",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-RunIOStateArrow.html#runX",
        "fct-type": "function",
        "title": "runX"
      },
      "index": {
        "description": "apply an IOSArrow to an empty root node with initialState as initial state the main entry point for running state arrow with IO when running runX an empty XML root node is applied to usually will start with constant arrow ignoring the input e.g readDocument arrow for usage see examples with writeDocument if input has to be feed into the arrow use runIOSLA like in runIOSLA emptyX inputDoc",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "runX",
        "normalized": "IOSArrow XmlTree a-\u003eIO[a]",
        "package": "hxt",
        "partial": "",
        "signature": "IOSArrow XmlTree c-\u003eIO[c]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eset the base URI of a document, used e.g. for reading includes, e.g. external entities,\n the input must be an absolute URI\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#setBaseURI",
        "fct-type": "function",
        "title": "setBaseURI"
      },
      "index": {
        "description": "set the base URI of document used e.g for reading includes e.g external entities the input must be an absolute URI",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setBaseURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Base URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setDefaultBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003eset the default base URI, if parameter is null, the system base (\u003ccode\u003e file:///\u003ccwd\u003e/ \u003c/code\u003e) is used,\n else the parameter, must be called before any document is read\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-URIHandling.html#setDefaultBaseURI",
        "fct-type": "function",
        "title": "setDefaultBaseURI"
      },
      "index": {
        "description": "set the default base URI if parameter is null the system base file cwd is used else the parameter must be called before any document is read",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setDefaultBaseURI",
        "normalized": "String-\u003eIOStateArrow a b String",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": "String-\u003eIOStateArrow s b String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setDocumentStatus",
      "description": {
        "fct-descr": "\u003cp\u003eadd the error level and the module where the error occured\n to the attributes of a document root node and remove the children when level is greater or equal to \u003ccode\u003e\u003ca\u003ec_err\u003c/a\u003e\u003c/code\u003e.\n called by \u003ccode\u003e\u003ca\u003esetDocumentStatusFromSystemState\u003c/a\u003e\u003c/code\u003e when the system state indicates an error\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setDocumentStatus",
        "fct-type": "function",
        "title": "setDocumentStatus"
      },
      "index": {
        "description": "add the error level and the module where the error occured to the attributes of document root node and remove the children when level is greater or equal to err called by setDocumentStatusFromSystemState when the system state indicates an error",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setDocumentStatus",
        "normalized": "Int-\u003eString-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document Status",
        "signature": "Int-\u003eString-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setDocumentStatusFromSystemState",
      "description": {
        "fct-descr": "\u003cp\u003echeck whether the error level attribute in the system state\n is set to error, in this case the children of the document root are\n removed and the module name where the error occured and the error level are added as attributes with \u003ccode\u003e\u003ca\u003esetDocumentStatus\u003c/a\u003e\u003c/code\u003e\n else nothing is changed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setDocumentStatusFromSystemState",
        "fct-type": "function",
        "title": "setDocumentStatusFromSystemState"
      },
      "index": {
        "description": "check whether the error level attribute in the system state is set to error in this case the children of the document root are removed and the module name where the error occured and the error level are added as attributes with setDocumentStatus else nothing is changed",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setDocumentStatusFromSystemState",
        "normalized": "String-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Document Status From System State",
        "signature": "String-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setErrMsgStatus",
      "description": {
        "fct-descr": "\u003cp\u003eraise the global error status level to that of the input tree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setErrMsgStatus",
        "fct-type": "function",
        "title": "setErrMsgStatus"
      },
      "index": {
        "description": "raise the global error status level to that of the input tree",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setErrMsgStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Msg Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setErrStatus",
      "description": {
        "fct-descr": "\u003cp\u003eset global error variable\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s Int Int",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setErrStatus",
        "fct-type": "function",
        "title": "setErrStatus"
      },
      "index": {
        "description": "set global error variable",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setErrStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Err Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setErrorMsgHandler",
      "description": {
        "fct-descr": "\u003cp\u003eset the error message handler and the flag for collecting the errors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e (String -\u003e IO ()) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-ErrorHandling.html#setErrorMsgHandler",
        "fct-type": "function",
        "title": "setErrorMsgHandler"
      },
      "index": {
        "description": "set the error message handler and the flag for collecting the errors",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setErrorMsgHandler",
        "normalized": "Bool-\u003e(String-\u003eIO())-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Error Msg Handler",
        "signature": "Bool-\u003e(String-\u003eIO())-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setMimeTypeTable",
      "description": {
        "fct-descr": "\u003cp\u003eset the table mapping of file extensions to mime types in the system state\n\u003c/p\u003e\u003cp\u003eDefault table is defined in \u003ccode\u003e\u003ca\u003eMimeTypeDefaults\u003c/a\u003e\u003c/code\u003e.\n This table is used when reading loacl files, (file: protocol) to determine the mime type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "MimeTypeTable -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#setMimeTypeTable",
        "fct-type": "function",
        "title": "setMimeTypeTable"
      },
      "index": {
        "description": "set the table mapping of file extensions to mime types in the system state Default table is defined in MimeTypeDefaults This table is used when reading loacl files file protocol to determine the mime type",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setMimeTypeTable",
        "normalized": "MimeTypeTable-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": "MimeTypeTable-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setMimeTypeTableFromFile",
      "description": {
        "fct-descr": "\u003cp\u003eset the table mapping of file extensions to mime types by an external config file\n\u003c/p\u003e\u003cp\u003eThe config file must follow the conventions of \u003cem\u003eetc\u003c/em\u003emime.types on a debian linux system,\n that means all empty lines and all lines starting with a # are ignored. The other lines\n must consist of a mime type followed by a possible empty list of extensions.\n The list of extenstions and mime types overwrites the default list in the system state\n of the IOStateArrow\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "FilePath -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-MimeTypeTable.html#setMimeTypeTableFromFile",
        "fct-type": "function",
        "title": "setMimeTypeTableFromFile"
      },
      "index": {
        "description": "set the table mapping of file extensions to mime types by an external config file The config file must follow the conventions of etc mime.types on debian linux system that means all empty lines and all lines starting with are ignored The other lines must consist of mime type followed by possible empty list of extensions The list of extenstions and mime types overwrites the default list in the system state of the IOStateArrow",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setMimeTypeTableFromFile",
        "normalized": "FilePath-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Mime Type Table From File",
        "signature": "FilePath-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003estore a string in global state under a given attribute name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s String String",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysAttr",
        "fct-type": "function",
        "title": "setSysAttr"
      },
      "index": {
        "description": "store string in global state under given attribute name",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setSysAttr",
        "normalized": "String-\u003eIOStateArrow a String String",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eIOStateArrow s String String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setSysAttrInt",
      "description": {
        "fct-descr": "\u003cp\u003estore an int value in global state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Int -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysAttrInt",
        "fct-type": "function",
        "title": "setSysAttrInt"
      },
      "index": {
        "description": "store an int value in global state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setSysAttrInt",
        "normalized": "String-\u003eInt-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Attr Int",
        "signature": "String-\u003eInt-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setSysAttrString",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setSysAttrString",
        "fct-type": "function",
        "title": "setSysAttrString"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setSysAttrString",
        "normalized": "String-\u003eString-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Attr String",
        "signature": "String-\u003eString-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setTraceCmd",
      "description": {
        "fct-descr": "\u003cp\u003eset the global trace command. This command does the trace output\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "(Int -\u003e String -\u003e IO ()) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#setTraceCmd",
        "fct-type": "function",
        "title": "setTraceCmd"
      },
      "index": {
        "description": "set the global trace command This command does the trace output",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setTraceCmd",
        "normalized": "(Int-\u003eString-\u003eIO())-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Trace Cmd",
        "signature": "(Int-\u003eString-\u003eIO())-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setTraceLevel",
      "description": {
        "fct-descr": "\u003cp\u003eset the global trace level\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#setTraceLevel",
        "fct-type": "function",
        "title": "setTraceLevel"
      },
      "index": {
        "description": "set the global trace level",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setTraceLevel",
        "normalized": "Int-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": "Int-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:setUserState",
      "description": {
        "fct-descr": "\u003cp\u003eset the user defined part of the state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s s s",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#setUserState",
        "fct-type": "function",
        "title": "setUserState"
      },
      "index": {
        "description": "set the user defined part of the state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "setUserState",
        "normalized": "",
        "package": "hxt",
        "partial": "User State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:trace",
      "description": {
        "fct-descr": "\u003cp\u003eapply a trace arrow and issue message to stderr\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e IOStateArrow s b String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#trace",
        "fct-type": "function",
        "title": "trace"
      },
      "index": {
        "description": "apply trace arrow and issue message to stderr",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "trace",
        "normalized": "Int-\u003eIOStateArrow a b String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "",
        "signature": "Int-\u003eIOStateArrow s b String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:traceDoc",
      "description": {
        "fct-descr": "\u003cp\u003etrace a main computation step\n issue a message when trace level \u003e= 1, issue document source if level \u003e= 3, issue tree when level is \u003e= 4\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceDoc",
        "fct-type": "function",
        "title": "traceDoc"
      },
      "index": {
        "description": "trace main computation step issue message when trace level issue document source if level issue tree when level is",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "traceDoc",
        "normalized": "String-\u003eIOStateArrow a XmlTree XmlTree",
        "package": "hxt",
        "partial": "Doc",
        "signature": "String-\u003eIOStateArrow s XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:traceMsg",
      "description": {
        "fct-descr": "\u003cp\u003eissue a string message as trace\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceMsg",
        "fct-type": "function",
        "title": "traceMsg"
      },
      "index": {
        "description": "issue string message as trace",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "traceMsg",
        "normalized": "Int-\u003eString-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Msg",
        "signature": "Int-\u003eString-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:traceSource",
      "description": {
        "fct-descr": "\u003cp\u003eissue the source representation of a document if trace level \u003e= 3\n\u003c/p\u003e\u003cp\u003efor better readability the source is formated with indentDoc\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceSource",
        "fct-type": "function",
        "title": "traceSource"
      },
      "index": {
        "description": "issue the source representation of document if trace level for better readability the source is formated with indentDoc",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "traceSource",
        "normalized": "",
        "package": "hxt",
        "partial": "Source",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:traceString",
      "description": {
        "fct-descr": "\u003cp\u003ean old alias for \u003ccode\u003e\u003ca\u003etraceValue\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e (b -\u003e String) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceString",
        "fct-type": "function",
        "title": "traceString"
      },
      "index": {
        "description": "an old alias for traceValue",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "traceString",
        "normalized": "Int-\u003e(a-\u003eString)-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "String",
        "signature": "Int-\u003e(b-\u003eString)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:traceTree",
      "description": {
        "fct-descr": "\u003cp\u003eissue the tree representation of a document if trace level \u003e= 4\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOStateArrow s XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceTree",
        "fct-type": "function",
        "title": "traceTree"
      },
      "index": {
        "description": "issue the tree representation of document if trace level",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "traceTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:traceValue",
      "description": {
        "fct-descr": "\u003cp\u003etrace the current value transfered in a sequence of arrows.\n\u003c/p\u003e\u003cp\u003eThe value is formated by a string conversion function. This is a substitute for\n the old and less general traceString function\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e (b -\u003e String) -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#traceValue",
        "fct-type": "function",
        "title": "traceValue"
      },
      "index": {
        "description": "trace the current value transfered in sequence of arrows The value is formated by string conversion function This is substitute for the old and less general traceString function",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "traceValue",
        "normalized": "Int-\u003e(a-\u003eString)-\u003eIOStateArrow b a a",
        "package": "hxt",
        "partial": "Value",
        "signature": "Int-\u003e(b-\u003eString)-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:unsetSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003eremove an entry in global state, arrow input remains unchanged\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOStateArrow s b b",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#unsetSysAttr",
        "fct-type": "function",
        "title": "unsetSysAttr"
      },
      "index": {
        "description": "remove an entry in global state arrow input remains unchanged",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "unsetSysAttr",
        "normalized": "String-\u003eIOStateArrow a b b",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eIOStateArrow s b b"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withAcceptedMimeTypes",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify the set of accepted mime types.\n\u003c/p\u003e\u003cp\u003eAll contents of documents for which the mime type is not found in this list\n are discarded.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withAcceptedMimeTypes",
        "fct-type": "function",
        "title": "withAcceptedMimeTypes"
      },
      "index": {
        "description": "Specify the set of accepted mime types All contents of documents for which the mime type is not found in this list are discarded",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withAcceptedMimeTypes",
        "normalized": "[String]-\u003eSysConfig",
        "package": "hxt",
        "partial": "Accepted Mime Types",
        "signature": "[String]-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withAddDefaultDTD",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withAddDefaultDTD",
        "fct-type": "function",
        "title": "withAddDefaultDTD"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withAddDefaultDTD",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Add Default DTD",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withCanonicalize",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithCanonicalize yes/no\u003c/code\u003e : read option, canonicalize document, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withCanonicalize",
        "fct-type": "function",
        "title": "withCanonicalize"
      },
      "index": {
        "description": "withCanonicalize yes no read option canonicalize document default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withCanonicalize",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Canonicalize",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withCheckNamespaces",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithCheckNamespaces yes/no\u003c/code\u003e: read option, check namespaces, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withCheckNamespaces",
        "fct-type": "function",
        "title": "withCheckNamespaces"
      },
      "index": {
        "description": "withCheckNamespaces yes no read option check namespaces default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withCheckNamespaces",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Check Namespaces",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withCompression",
      "description": {
        "fct-descr": "\u003cp\u003eConfigure compression and decompression for binary serialization/deserialization.\n First component is the compression function applied after serialization,\n second the decompression applied before deserialization.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "(CompressionFct, DeCompressionFct) -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withCompression",
        "fct-type": "function",
        "title": "withCompression"
      },
      "index": {
        "description": "Configure compression and decompression for binary serialization deserialization First component is the compression function applied after serialization second the decompression applied before deserialization",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withCompression",
        "normalized": "(CompressionFct,DeCompressionFct)-\u003eSysConfig",
        "package": "hxt",
        "partial": "Compression",
        "signature": "(CompressionFct,DeCompressionFct)-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withDefaultBaseURI",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithDefaultBaseURI URI\u003c/code\u003e , input option, set the default base URI\n\u003c/p\u003e\u003cp\u003eThis option can be useful when parsing documents from stdin or contained in a string, and interpreting\n relative URIs within the document\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withDefaultBaseURI",
        "fct-type": "function",
        "title": "withDefaultBaseURI"
      },
      "index": {
        "description": "withDefaultBaseURI URI input option set the default base URI This option can be useful when parsing documents from stdin or contained in string and interpreting relative URIs within the document",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withDefaultBaseURI",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Default Base URI",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withEncodingErrors",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithEncodingErrors yes/no\u003c/code\u003e : input option, ignore all encoding errors, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withEncodingErrors",
        "fct-type": "function",
        "title": "withEncodingErrors"
      },
      "index": {
        "description": "withEncodingErrors yes no input option ignore all encoding errors default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withEncodingErrors",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Encoding Errors",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withErrors",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithErrors yes/no\u003c/code\u003e : system option for suppressing error messages, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withErrors",
        "fct-type": "function",
        "title": "withErrors"
      },
      "index": {
        "description": "withErrors yes no system option for suppressing error messages default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withErrors",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Errors",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withExtendedUserState",
      "description": {
        "fct-descr": "\u003cp\u003eextend user state\n\u003c/p\u003e\u003cp\u003eRun an arrow with an extended user state component, The old component\n is stored together with a new one in a pair, the arrow is executed with this\n extended state, and the augmented state component is removed form the state\n when the arrow has finished its execution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "s1 -\u003e IOStateArrow (s1, s0) b c -\u003e IOStateArrow s0 b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#withExtendedUserState",
        "fct-type": "function",
        "title": "withExtendedUserState"
      },
      "index": {
        "description": "extend user state Run an arrow with an extended user state component The old component is stored together with new one in pair the arrow is executed with this extended state and the augmented state component is removed form the state when the arrow has finished its execution",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withExtendedUserState",
        "normalized": "a-\u003eIOStateArrow(a,a)b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Extended User State",
        "signature": "s-\u003eIOStateArrow(s,s)b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withFileMimeType",
      "description": {
        "fct-descr": "\u003cp\u003eForce a given mime type for all file contents.\n\u003c/p\u003e\u003cp\u003eThe mime type for file access will then not be computed by looking into a mime.types file\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withFileMimeType",
        "fct-type": "function",
        "title": "withFileMimeType"
      },
      "index": {
        "description": "Force given mime type for all file contents The mime type for file access will then not be computed by looking into mime.types file",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withFileMimeType",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "File Mime Type",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withIgnoreNoneXmlContents",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithIgnoreNoneXmlContents yes/no\u003c/code\u003e : input option, ignore document contents of none XML/HTML documents.\n\u003c/p\u003e\u003cp\u003eThis option can be useful for implementing crawler like applications, e.g. an URL checker.\n In those cases net traffic can be reduced.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withIgnoreNoneXmlContents",
        "fct-type": "function",
        "title": "withIgnoreNoneXmlContents"
      },
      "index": {
        "description": "withIgnoreNoneXmlContents yes no input option ignore document contents of none XML HTML documents This option can be useful for implementing crawler like applications e.g an URL checker In those cases net traffic can be reduced",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withIgnoreNoneXmlContents",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Ignore None Xml Contents",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withIndent",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithIndent yes/no\u003c/code\u003e : output option, indent document before output, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withIndent",
        "fct-type": "function",
        "title": "withIndent"
      },
      "index": {
        "description": "withIndent yes no output option indent document before output default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withIndent",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Indent",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withInputEncoding",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithInputEncoding encodingName\u003c/code\u003e : input option\n\u003c/p\u003e\u003cp\u003eSet default document encoding (\u003ccode\u003e\u003ca\u003eutf8\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eisoLatin1\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eusAscii\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eiso8859_2\u003c/a\u003e\u003c/code\u003e, ... , \u003ccode\u003e\u003ca\u003eiso8859_16\u003c/a\u003e\u003c/code\u003e, ...).\n Only XML, HTML and text documents are decoded,\n default decoding for XML/HTML is utf8, for text iso latin1 (no decoding).\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withInputEncoding",
        "fct-type": "function",
        "title": "withInputEncoding"
      },
      "index": {
        "description": "withInputEncoding encodingName input option Set default document encoding utf8 isoLatin1 usAscii iso8859 iso8859 Only XML HTML and text documents are decoded default decoding for XML HTML is utf8 for text iso latin1 no decoding",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withInputEncoding",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Input Encoding",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withInputOption",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withInputOption",
        "fct-type": "function",
        "title": "withInputOption"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withInputOption",
        "normalized": "String-\u003eString-\u003eSysConfig",
        "package": "hxt",
        "partial": "Input Option",
        "signature": "String-\u003eString-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withInputOptions",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withInputOptions",
        "fct-type": "function",
        "title": "withInputOptions"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withInputOptions",
        "normalized": "Attributes-\u003eSysConfig",
        "package": "hxt",
        "partial": "Input Options",
        "signature": "Attributes-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withMimeTypeFile",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithMimeTypeFile filename\u003c/code\u003e : input option,\n set the mime type table for \u003ccode\u003efile:\u003c/code\u003e documents by given file.\n The format of this config file must be in the syntax of a debian linux \"mime.types\" config file\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withMimeTypeFile",
        "fct-type": "function",
        "title": "withMimeTypeFile"
      },
      "index": {
        "description": "withMimeTypeFile filename input option set the mime type table for file documents by given file The format of this config file must be in the syntax of debian linux mime.types config file",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withMimeTypeFile",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Mime Type File",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withMimeTypeHandler",
      "description": {
        "fct-descr": "\u003cp\u003eSpecify a content handler for documents of a given mime type\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e IOSArrow XmlTree XmlTree -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withMimeTypeHandler",
        "fct-type": "function",
        "title": "withMimeTypeHandler"
      },
      "index": {
        "description": "Specify content handler for documents of given mime type",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withMimeTypeHandler",
        "normalized": "String-\u003eIOSArrow XmlTree XmlTree-\u003eSysConfig",
        "package": "hxt",
        "partial": "Mime Type Handler",
        "signature": "String-\u003eIOSArrow XmlTree XmlTree-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withNoEmptyElemFor",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withNoEmptyElemFor",
        "fct-type": "function",
        "title": "withNoEmptyElemFor"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withNoEmptyElemFor",
        "normalized": "[String]-\u003eSysConfig",
        "package": "hxt",
        "partial": "No Empty Elem For",
        "signature": "[String]-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withOtherUserState",
      "description": {
        "fct-descr": "\u003cp\u003echange the type of user state\n\u003c/p\u003e\u003cp\u003eThis conversion is useful, when running a state arrow with another\n structure of the user state, e.g. with () when executing some IO arrows\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "s1 -\u003e IOStateArrow s1 b c -\u003e IOStateArrow s0 b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#withOtherUserState",
        "fct-type": "function",
        "title": "withOtherUserState"
      },
      "index": {
        "description": "change the type of user state This conversion is useful when running state arrow with another structure of the user state e.g with when executing some IO arrows",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withOtherUserState",
        "normalized": "a-\u003eIOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Other User State",
        "signature": "s-\u003eIOStateArrow s b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withOutputEncoding",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithOutputEncoding encoding\u003c/code\u003e , output option,\n default is the default input encoding or utf8, if input encoding is not set\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputEncoding",
        "fct-type": "function",
        "title": "withOutputEncoding"
      },
      "index": {
        "description": "withOutputEncoding encoding output option default is the default input encoding or utf8 if input encoding is not set",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withOutputEncoding",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Output Encoding",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withOutputHTML",
      "description": {
        "fct-descr": "\u003cp\u003eWrite XHTML: quote all special XML chars, use HTML entity refs or char refs for none ASCII chars\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputHTML",
        "fct-type": "function",
        "title": "withOutputHTML"
      },
      "index": {
        "description": "Write XHTML quote all special XML chars use HTML entity refs or char refs for none ASCII chars",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withOutputHTML",
        "normalized": "",
        "package": "hxt",
        "partial": "Output HTML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withOutputPLAIN",
      "description": {
        "fct-descr": "\u003cp\u003esuppreses all char and entitiy substitution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputPLAIN",
        "fct-type": "function",
        "title": "withOutputPLAIN"
      },
      "index": {
        "description": "suppreses all char and entitiy substitution",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withOutputPLAIN",
        "normalized": "",
        "package": "hxt",
        "partial": "Output PLAIN",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withOutputXHTML",
      "description": {
        "fct-descr": "\u003cp\u003eWrite XML: quote only special XML chars, don't substitute chars by HTML entities,\n and don't generate empty elements for HTML elements,\n which may contain any contents, e.g. \u003ccode\u003e\u003ca\u003esrc=...\u003c/a\u003e\u003ca\u003e/script\u003c/a\u003e\u003c/code\u003e instead of \u003ccode\u003e\u003ca\u003esrc=... /\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputXHTML",
        "fct-type": "function",
        "title": "withOutputXHTML"
      },
      "index": {
        "description": "Write XML quote only special XML chars don substitute chars by HTML entities and don generate empty elements for HTML elements which may contain any contents e.g src script instead of src",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withOutputXHTML",
        "normalized": "",
        "package": "hxt",
        "partial": "Output XHTML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withOutputXML",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithOutputXML\u003c/code\u003e : output option, default writing\n\u003c/p\u003e\u003cp\u003eDefault is writing XML: quote special XML chars \u003e,\u003c,\",',& where neccessary,\n add XML processing instruction\n and encode document with respect to \u003ccode\u003e\u003ca\u003ewithOutputEncoding\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withOutputXML",
        "fct-type": "function",
        "title": "withOutputXML"
      },
      "index": {
        "description": "withOutputXML output option default writing Default is writing XML quote special XML chars where neccessary add XML processing instruction and encode document with respect to withOutputEncoding",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withOutputXML",
        "normalized": "",
        "package": "hxt",
        "partial": "Output XML",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withParseByMimeType",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithParseByMimeType yes/no\u003c/code\u003e  : read option, select the parser by the mime type of the document\n (pulled out of the HTTP header).\n\u003c/p\u003e\u003cp\u003eWhen the mime type is set to \"text/html\"\n the configured HTML parser is taken, when it's set to\n \"text/xml\" or \"text/xhtml\" the configured XML parser is taken.\n If the mime type is something else, no further processing is performed,\n the contents is given back to the application in form of a single text node.\n If the default document encoding is set to isoLatin1, this even enables processing\n of arbitray binary data.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withParseByMimeType",
        "fct-type": "function",
        "title": "withParseByMimeType"
      },
      "index": {
        "description": "withParseByMimeType yes no read option select the parser by the mime type of the document pulled out of the HTTP header When the mime type is set to text html the configured HTML parser is taken when it set to text xml or text xhtml the configured XML parser is taken If the mime type is something else no further processing is performed the contents is given back to the application in form of single text node If the default document encoding is set to isoLatin1 this even enables processing of arbitray binary data",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withParseByMimeType",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Parse By Mime Type",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withParseHTML",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithParseHTML yes/no\u003c/code\u003e: read option, use HTML parser, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e (use XML parser)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withParseHTML",
        "fct-type": "function",
        "title": "withParseHTML"
      },
      "index": {
        "description": "withParseHTML yes no read option use HTML parser default is no use XML parser",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withParseHTML",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Parse HTML",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withPreserveComment",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithPreserveComment yes/no\u003c/code\u003e : read option, preserve comments during canonicalization, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withPreserveComment",
        "fct-type": "function",
        "title": "withPreserveComment"
      },
      "index": {
        "description": "withPreserveComment yes no read option preserve comments during canonicalization default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withPreserveComment",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Preserve Comment",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withProxy",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithProxy \"host:port\"\u003c/code\u003e : input option, configure a proxy for HTTP access, e.g. www-cache:3128\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withProxy",
        "fct-type": "function",
        "title": "withProxy"
      },
      "index": {
        "description": "withProxy host port input option configure proxy for HTTP access e.g www-cache",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withProxy",
        "normalized": "String-\u003eSysConfig",
        "package": "hxt",
        "partial": "Proxy",
        "signature": "String-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withRedirect",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithRedirect yes/no\u003c/code\u003e : input option, automatically follow redirected URIs, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withRedirect",
        "fct-type": "function",
        "title": "withRedirect"
      },
      "index": {
        "description": "withRedirect yes no input option automatically follow redirected URIs default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withRedirect",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Redirect",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withRemoveWS",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithRemoveWS yes/no\u003c/code\u003e : read and write option, remove all whitespace, used for document indentation, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withRemoveWS",
        "fct-type": "function",
        "title": "withRemoveWS"
      },
      "index": {
        "description": "withRemoveWS yes no read and write option remove all whitespace used for document indentation default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withRemoveWS",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Remove WS",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withShowHaskell",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withShowHaskell",
        "fct-type": "function",
        "title": "withShowHaskell"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withShowHaskell",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Show Haskell",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withShowTree",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withShowTree",
        "fct-type": "function",
        "title": "withShowTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withShowTree",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Show Tree",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withStrictDeserialize",
      "description": {
        "fct-descr": "\u003cp\u003eStrict input for deserialization of binary data\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withStrictDeserialize",
        "fct-type": "function",
        "title": "withStrictDeserialize"
      },
      "index": {
        "description": "Strict input for deserialization of binary data",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withStrictDeserialize",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Strict Deserialize",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withStrictInput",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithStrictInput yes/no\u003c/code\u003e : input option, input of file and HTTP contents is read eagerly, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withStrictInput",
        "fct-type": "function",
        "title": "withStrictInput"
      },
      "index": {
        "description": "withStrictInput yes no input option input of file and HTTP contents is read eagerly default is no",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withStrictInput",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Strict Input",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withSubstDTDEntities",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithSubstDTDEntities yes/no\u003c/code\u003e: read option, substitute general entities defined in DTD, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e.\n switching this option and the validate option off can lead to faster parsing, because then\n there is no need to access the DTD\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withSubstDTDEntities",
        "fct-type": "function",
        "title": "withSubstDTDEntities"
      },
      "index": {
        "description": "withSubstDTDEntities yes no read option substitute general entities defined in DTD default is yes switching this option and the validate option off can lead to faster parsing because then there is no need to access the DTD",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withSubstDTDEntities",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Subst DTDEntities",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withSubstHTMLEntities",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithSubstHTMLEntities yes/no\u003c/code\u003e: read option, substitute general entities defined in HTML DTD, default is \u003ccode\u003e\u003ca\u003eno\u003c/a\u003e\u003c/code\u003e.\n switching this option on and the substDTDEntities and validate options off can lead to faster parsing\n because there is no need to access a DTD, but still the HTML general entities are substituted\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withSubstHTMLEntities",
        "fct-type": "function",
        "title": "withSubstHTMLEntities"
      },
      "index": {
        "description": "withSubstHTMLEntities yes no read option substitute general entities defined in HTML DTD default is no switching this option on and the substDTDEntities and validate options off can lead to faster parsing because there is no need to access DTD but still the HTML general entities are substituted",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withSubstHTMLEntities",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Subst HTMLEntities",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withSysAttr",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithSysAttr key value\u003c/code\u003e : store an arbitarty key value pair in system state\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withSysAttr",
        "fct-type": "function",
        "title": "withSysAttr"
      },
      "index": {
        "description": "withSysAttr key value store an arbitarty key value pair in system state",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withSysAttr",
        "normalized": "String-\u003eString-\u003eSysConfig",
        "package": "hxt",
        "partial": "Sys Attr",
        "signature": "String-\u003eString-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withTextMode",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withTextMode",
        "fct-type": "function",
        "title": "withTextMode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withTextMode",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Text Mode",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withTrace",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithTace level\u003c/code\u003e : system option, set the trace level, (0..4)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withTrace",
        "fct-type": "function",
        "title": "withTrace"
      },
      "index": {
        "description": "withTace level system option set the trace level",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withTrace",
        "normalized": "Int-\u003eSysConfig",
        "package": "hxt",
        "partial": "Trace",
        "signature": "Int-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withTraceLevel",
      "description": {
        "fct-descr": "\u003cp\u003erun an arrow with a given trace level, the old trace level is restored after the arrow execution\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e IOStateArrow s b c -\u003e IOStateArrow s b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TraceHandling.html#withTraceLevel",
        "fct-type": "function",
        "title": "withTraceLevel"
      },
      "index": {
        "description": "run an arrow with given trace level the old trace level is restored after the arrow execution",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withTraceLevel",
        "normalized": "Int-\u003eIOStateArrow a b c-\u003eIOStateArrow a b c",
        "package": "hxt",
        "partial": "Trace Level",
        "signature": "Int-\u003eIOStateArrow s b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withValidate",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithValidate yes/no\u003c/code\u003e: read option, validate document against DTD, default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withValidate",
        "fct-type": "function",
        "title": "withValidate"
      },
      "index": {
        "description": "withValidate yes no read option validate document against DTD default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withValidate",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Validate",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withWarnings",
      "description": {
        "fct-descr": "\u003cp\u003e\u003ccode\u003ewithWarnings yes/no\u003c/code\u003e : system option, issue warnings during reading, HTML parsing and processing,\n default is \u003ccode\u003e\u003ca\u003eyes\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withWarnings",
        "fct-type": "function",
        "title": "withWarnings"
      },
      "index": {
        "description": "withWarnings yes no system option issue warnings during reading HTML parsing and processing default is yes",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withWarnings",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Warnings",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withXmlPi",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e SysConfig",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#withXmlPi",
        "fct-type": "function",
        "title": "withXmlPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withXmlPi",
        "normalized": "Bool-\u003eSysConfig",
        "package": "hxt",
        "partial": "Xml Pi",
        "signature": "Bool-\u003eSysConfig"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:withoutUserState",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "IOSArrow b c -\u003e IOStateArrow s0 b c",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-TypeDefs.html#withoutUserState",
        "fct-type": "function",
        "title": "withoutUserState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "withoutUserState",
        "normalized": "IOSArrow a b-\u003eIOStateArrow c a b",
        "package": "hxt",
        "partial": "User State",
        "signature": "IOSArrow b c-\u003eIOStateArrow s b c"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Arrow-XmlState.html#v:yes",
      "description": {
        "fct-module": "Text.XML.HXT.Arrow.XmlState",
        "fct-package": "hxt",
        "fct-signature": "Bool",
        "fct-source": "src/Text-XML-HXT-Arrow-XmlState-SystemConfig.html#yes",
        "fct-type": "function",
        "title": "yes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Arrow XmlState",
        "module": "Text.XML.HXT.Arrow.XmlState",
        "name": "yes",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Core.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe HXT arrow interface\n\u003c/p\u003e\u003cp\u003eThe application programming interface to the arrow modules of the Haskell XML Toolbox.\n   This module exports all important arrows for input, output, parsing, validating and transforming XML.\n   It also exports all basic datatypes and functions of the toolbox.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Core",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Core.html",
        "fct-type": "module",
        "title": "Core"
      },
      "index": {
        "description": "The HXT arrow interface The application programming interface to the arrow modules of the Haskell XML Toolbox This module exports all important arrows for input output parsing validating and transforming XML It also exports all basic datatypes and functions of the toolbox",
        "hierarchy": "Text XML HXT Core",
        "module": "Text.XML.HXT.Core",
        "name": "Core",
        "normalized": "",
        "package": "hxt",
        "partial": "Core",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-FormatXmlTree.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFormat a xml tree in tree representation\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.FormatXmlTree",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-FormatXmlTree.html",
        "fct-type": "module",
        "title": "FormatXmlTree"
      },
      "index": {
        "description": "Format xml tree in tree representation",
        "hierarchy": "Text XML HXT DOM FormatXmlTree",
        "module": "Text.XML.HXT.DOM.FormatXmlTree",
        "name": "FormatXmlTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Format Xml Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-FormatXmlTree.html#v:formatXmlContents",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.FormatXmlTree",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-FormatXmlTree.html#formatXmlContents",
        "fct-type": "function",
        "title": "formatXmlContents"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM FormatXmlTree",
        "module": "Text.XML.HXT.DOM.FormatXmlTree",
        "name": "formatXmlContents",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Contents",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-FormatXmlTree.html#v:formatXmlTree",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.FormatXmlTree",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-FormatXmlTree.html#formatXmlTree",
        "fct-type": "function",
        "title": "formatXmlTree"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM FormatXmlTree",
        "module": "Text.XML.HXT.DOM.FormatXmlTree",
        "name": "formatXmlTree",
        "normalized": "XmlTree-\u003eString",
        "package": "hxt",
        "partial": "Xml Tree",
        "signature": "XmlTree-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Interface.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe interface to the primitive DOM data types and constants\n   and utility functions\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.Interface",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-Interface.html",
        "fct-type": "module",
        "title": "Interface"
      },
      "index": {
        "description": "The interface to the primitive DOM data types and constants and utility functions",
        "hierarchy": "Text XML HXT DOM Interface",
        "module": "Text.XML.HXT.DOM.Interface",
        "name": "Interface",
        "normalized": "",
        "package": "hxt",
        "partial": "Interface",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypeDefaults.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003edefault mime type table\n\u003c/p\u003e\u003cp\u003ethis file is generated from file \u003cem\u003eetc\u003c/em\u003emime.types\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.MimeTypeDefaults",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypeDefaults.html",
        "fct-type": "module",
        "title": "MimeTypeDefaults"
      },
      "index": {
        "description": "default mime type table this file is generated from file etc mime.types",
        "hierarchy": "Text XML HXT DOM MimeTypeDefaults",
        "module": "Text.XML.HXT.DOM.MimeTypeDefaults",
        "name": "MimeTypeDefaults",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Defaults",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypeDefaults.html#v:mimeTypeDefaults",
      "description": {
        "fct-descr": "\u003cp\u003ethe table with the mapping from file name extensions to mime types\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.MimeTypeDefaults",
        "fct-package": "hxt",
        "fct-signature": "[(String, String)]",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypeDefaults.html#mimeTypeDefaults",
        "fct-type": "function",
        "title": "mimeTypeDefaults"
      },
      "index": {
        "description": "the table with the mapping from file name extensions to mime types",
        "hierarchy": "Text XML HXT DOM MimeTypeDefaults",
        "module": "Text.XML.HXT.DOM.MimeTypeDefaults",
        "name": "mimeTypeDefaults",
        "normalized": "[(String,String)]",
        "package": "hxt",
        "partial": "Type Defaults",
        "signature": "[(String,String)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003emime type related data and functions\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html",
        "fct-type": "module",
        "title": "MimeTypes"
      },
      "index": {
        "description": "mime type related data and functions",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "MimeTypes",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Types",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#t:MimeTypeTable",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#MimeTypeTable",
        "fct-type": "type",
        "title": "MimeTypeTable"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "MimeTypeTable",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:application_xhtml",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#application_xhtml",
        "fct-type": "function",
        "title": "application_xhtml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "application_xhtml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:application_xml",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#application_xml",
        "fct-type": "function",
        "title": "application_xml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "application_xml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:application_xml_dtd",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#application_xml_dtd",
        "fct-type": "function",
        "title": "application_xml_dtd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "application_xml_dtd",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:application_xml_external_parsed_entity",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#application_xml_external_parsed_entity",
        "fct-type": "function",
        "title": "application_xml_external_parsed_entity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "application_xml_external_parsed_entity",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:defaultMimeTypeTable",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "MimeTypeTable",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#defaultMimeTypeTable",
        "fct-type": "function",
        "title": "defaultMimeTypeTable"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "defaultMimeTypeTable",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:extensionToMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e MimeTypeTable -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#extensionToMimeType",
        "fct-type": "function",
        "title": "extensionToMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "extensionToMimeType",
        "normalized": "String-\u003eMimeTypeTable-\u003eString",
        "package": "hxt",
        "partial": "To Mime Type",
        "signature": "String-\u003eMimeTypeTable-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:isHtmlMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#isHtmlMimeType",
        "fct-type": "function",
        "title": "isHtmlMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "isHtmlMimeType",
        "normalized": "String-\u003eBool",
        "package": "hxt",
        "partial": "Html Mime Type",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:isTextMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#isTextMimeType",
        "fct-type": "function",
        "title": "isTextMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "isTextMimeType",
        "normalized": "String-\u003eBool",
        "package": "hxt",
        "partial": "Text Mime Type",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:isXmlMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#isXmlMimeType",
        "fct-type": "function",
        "title": "isXmlMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "isXmlMimeType",
        "normalized": "String-\u003eBool",
        "package": "hxt",
        "partial": "Xml Mime Type",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:parseMimeTypeTable",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e [(String, String)]",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#parseMimeTypeTable",
        "fct-type": "function",
        "title": "parseMimeTypeTable"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "parseMimeTypeTable",
        "normalized": "String-\u003e[(String,String)]",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": "String-\u003e[(String,String)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:readMimeTypeTable",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "FilePath -\u003e IO MimeTypeTable",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#readMimeTypeTable",
        "fct-type": "function",
        "title": "readMimeTypeTable"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "readMimeTypeTable",
        "normalized": "FilePath-\u003eIO MimeTypeTable",
        "package": "hxt",
        "partial": "Mime Type Table",
        "signature": "FilePath-\u003eIO MimeTypeTable"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:text_html",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#text_html",
        "fct-type": "function",
        "title": "text_html"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "text_html",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:text_pdf",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#text_pdf",
        "fct-type": "function",
        "title": "text_pdf"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "text_pdf",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:text_plain",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#text_plain",
        "fct-type": "function",
        "title": "text_plain"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "text_plain",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:text_xdtd",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#text_xdtd",
        "fct-type": "function",
        "title": "text_xdtd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "text_xdtd",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:text_xml",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#text_xml",
        "fct-type": "function",
        "title": "text_xml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "text_xml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-MimeTypes.html#v:text_xml_external_parsed_entity",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.MimeTypes",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-MimeTypes.html#text_xml_external_parsed_entity",
        "fct-type": "function",
        "title": "text_xml_external_parsed_entity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM MimeTypes",
        "module": "Text.XML.HXT.DOM.MimeTypes",
        "name": "text_xml_external_parsed_entity",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe types and functions for qualified names\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html",
        "fct-type": "module",
        "title": "QualifiedName"
      },
      "index": {
        "description": "The types and functions for qualified names",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "QualifiedName",
        "normalized": "",
        "package": "hxt",
        "partial": "Qualified Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#t:NsEnv",
      "description": {
        "fct-descr": "\u003cp\u003eType for the namespace association list, used when propagating namespaces by\n modifying the \u003ccode\u003e\u003ca\u003eQName\u003c/a\u003e\u003c/code\u003e values in a tree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#NsEnv",
        "fct-type": "type",
        "title": "NsEnv"
      },
      "index": {
        "description": "Type for the namespace association list used when propagating namespaces by modifying the QName values in tree",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "NsEnv",
        "normalized": "",
        "package": "hxt",
        "partial": "Ns Env",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#t:QName",
      "description": {
        "fct-descr": "\u003cp\u003eNamespace support for element and attribute names.\n\u003c/p\u003e\u003cp\u003eA qualified name consists of a name prefix, a local name\n and a namespace uri.\n All modules, which are not namespace aware, use only the \u003ccode\u003e\u003ca\u003elocalPart\u003c/a\u003e\u003c/code\u003e component.\n When dealing with namespaces, the document tree must be processed by \u003ccode\u003e\u003ca\u003epropagateNamespaces\u003c/a\u003e\u003c/code\u003e\n to split names of structure \"prefix:localPart\" and label the name with the apropriate namespace uri\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#QName",
        "fct-type": "data",
        "title": "QName"
      },
      "index": {
        "description": "Namespace support for element and attribute names qualified name consists of name prefix local name and namespace uri All modules which are not namespace aware use only the localPart component When dealing with namespaces the document tree must be processed by propagateNamespaces to split names of structure prefix localPart and label the name with the apropriate namespace uri",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "QName",
        "normalized": "",
        "package": "hxt",
        "partial": "QName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#t:XName",
      "description": {
        "fct-descr": "\u003cp\u003eXML names are represented by Strings, but these strings do not mix up with normal strings.\n Names are always reduced to normal form, and they are stored internally in a name cache\n for sharing equal names by the same data structure\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#XName",
        "fct-type": "data",
        "title": "XName"
      },
      "index": {
        "description": "XML names are represented by Strings but these strings do not mix up with normal strings Names are always reduced to normal form and they are stored internally in name cache for sharing equal names by the same data structure",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "XName",
        "normalized": "",
        "package": "hxt",
        "partial": "XName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:buildUniversalName",
      "description": {
        "fct-descr": "\u003cp\u003ebuilds a string from the namespace uri and the local part. If the namespace uri is empty, the local part is returned, else\n namespace uri and local part are combined with the combining function given by the first parameter\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String -\u003e String) -\u003e QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#buildUniversalName",
        "fct-type": "function",
        "title": "buildUniversalName"
      },
      "index": {
        "description": "builds string from the namespace uri and the local part If the namespace uri is empty the local part is returned else namespace uri and local part are combined with the combining function given by the first parameter",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "buildUniversalName",
        "normalized": "(String-\u003eString-\u003eString)-\u003eQName-\u003eString",
        "package": "hxt",
        "partial": "Universal Name",
        "signature": "(String-\u003eString-\u003eString)-\u003eQName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:equalQNameBy",
      "description": {
        "fct-descr": "\u003cp\u003eSometimes a weaker equality relation than \u003ccode\u003eequalQName\u003c/code\u003e is appropriate, e.g no case significance in names, ...\n a name normalization function can be applied to the strings before comparing. Called by \u003ccode\u003eequalQName\u003c/code\u003e and\n \u003ccode\u003e\u003ca\u003eequivQName\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String -\u003e Bool) -\u003e QName -\u003e QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#equalQNameBy",
        "fct-type": "function",
        "title": "equalQNameBy"
      },
      "index": {
        "description": "Sometimes weaker equality relation than equalQName is appropriate e.g no case significance in names name normalization function can be applied to the strings before comparing Called by equalQName and equivQName",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "equalQNameBy",
        "normalized": "(String-\u003eString-\u003eBool)-\u003eQName-\u003eQName-\u003eBool",
        "package": "hxt",
        "partial": "QName By",
        "signature": "(String-\u003eString-\u003eBool)-\u003eQName-\u003eQName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:equivQName",
      "description": {
        "fct-descr": "\u003cp\u003eEquivalent QNames are defined as follows: The URIs are normalized before comparison.\n Comparison is done with \u003ccode\u003e\u003ca\u003eequalQNameBy\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eequivUri\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#equivQName",
        "fct-type": "function",
        "title": "equivQName"
      },
      "index": {
        "description": "Equivalent QNames are defined as follows The URIs are normalized before comparison Comparison is done with equalQNameBy and equivUri",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "equivQName",
        "normalized": "QName-\u003eQName-\u003eBool",
        "package": "hxt",
        "partial": "QName",
        "signature": "QName-\u003eQName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:equivUri",
      "description": {
        "fct-descr": "\u003cp\u003eComparison of normalized namespace URIs using \u003ccode\u003e\u003ca\u003enormalizeNsUri\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#equivUri",
        "fct-type": "function",
        "title": "equivUri"
      },
      "index": {
        "description": "Comparison of normalized namespace URIs using normalizeNsUri",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "equivUri",
        "normalized": "String-\u003eString-\u003eBool",
        "package": "hxt",
        "partial": "Uri",
        "signature": "String-\u003eString-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isDeclaredNamespace",
      "description": {
        "fct-descr": "\u003cp\u003epredicate is used in filter \u003ccode\u003evaldateNamespaces\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isDeclaredNamespace",
        "fct-type": "function",
        "title": "isDeclaredNamespace"
      },
      "index": {
        "description": "predicate is used in filter valdateNamespaces",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isDeclaredNamespace",
        "normalized": "QName-\u003eBool",
        "package": "hxt",
        "partial": "Declared Namespace",
        "signature": "QName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isNCName",
      "description": {
        "fct-descr": "\u003cp\u003etest for wellformed NCName, rule [4] XML Namespaces\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isNCName",
        "fct-type": "function",
        "title": "isNCName"
      },
      "index": {
        "description": "test for wellformed NCName rule XML Namespaces",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isNCName",
        "normalized": "String-\u003eBool",
        "package": "hxt",
        "partial": "NCName",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isNameSpaceName",
      "description": {
        "fct-descr": "\u003cp\u003etest whether a name is a namespace declaration attribute name\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isNameSpaceName",
        "fct-type": "function",
        "title": "isNameSpaceName"
      },
      "index": {
        "description": "test whether name is namespace declaration attribute name",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isNameSpaceName",
        "normalized": "QName-\u003eBool",
        "package": "hxt",
        "partial": "Name Space Name",
        "signature": "QName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isNullXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isNullXName",
        "fct-type": "function",
        "title": "isNullXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isNullXName",
        "normalized": "XName-\u003eBool",
        "package": "hxt",
        "partial": "Null XName",
        "signature": "XName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isWellformedNSDecl",
      "description": {
        "fct-descr": "\u003cp\u003etest whether an attribute name is a namesapce declaration name.\n If this is not the case True is the result, else\n the name must be a well formed namespace name:\n All namespace prefixes starting with \"xml\" are reserved for XML related definitions.\n predicate is used in filter \u003ccode\u003evaldateNamespaces\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isWellformedNSDecl",
        "fct-type": "function",
        "title": "isWellformedNSDecl"
      },
      "index": {
        "description": "test whether an attribute name is namesapce declaration name If this is not the case True is the result else the name must be well formed namespace name All namespace prefixes starting with xml are reserved for XML related definitions predicate is used in filter valdateNamespaces",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isWellformedNSDecl",
        "normalized": "QName-\u003eBool",
        "package": "hxt",
        "partial": "Wellformed NSDecl",
        "signature": "QName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isWellformedNameSpaceName",
      "description": {
        "fct-descr": "\u003cp\u003etest for a namespace name to be well formed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isWellformedNameSpaceName",
        "fct-type": "function",
        "title": "isWellformedNameSpaceName"
      },
      "index": {
        "description": "test for namespace name to be well formed",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isWellformedNameSpaceName",
        "normalized": "QName-\u003eBool",
        "package": "hxt",
        "partial": "Wellformed Name Space Name",
        "signature": "QName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isWellformedQName",
      "description": {
        "fct-descr": "\u003cp\u003etest for wellformed QName values.\n A QName is wellformed, if the local part is a NCName, the namePrefix, if not empty, is also a NCName.\n predicate is used in filter \u003ccode\u003evaldateNamespaces\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isWellformedQName",
        "fct-type": "function",
        "title": "isWellformedQName"
      },
      "index": {
        "description": "test for wellformed QName values QName is wellformed if the local part is NCName the namePrefix if not empty is also NCName predicate is used in filter valdateNamespaces",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isWellformedQName",
        "normalized": "QName-\u003eBool",
        "package": "hxt",
        "partial": "Wellformed QName",
        "signature": "QName-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:isWellformedQualifiedName",
      "description": {
        "fct-descr": "\u003cp\u003etest for wellformed QName, rule [6] XML Namespaces\n predicate is used in filter \u003ccode\u003evaldateNamespaces\u003c/code\u003e.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#isWellformedQualifiedName",
        "fct-type": "function",
        "title": "isWellformedQualifiedName"
      },
      "index": {
        "description": "test for wellformed QName rule XML Namespaces predicate is used in filter valdateNamespaces",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "isWellformedQualifiedName",
        "normalized": "String-\u003eBool",
        "package": "hxt",
        "partial": "Wellformed Qualified Name",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:localPart",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#localPart",
        "fct-type": "function",
        "title": "localPart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "localPart",
        "normalized": "QName-\u003eString",
        "package": "hxt",
        "partial": "Part",
        "signature": "QName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:localPart-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#localPart%27",
        "fct-type": "function",
        "title": "localPart'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "localPart'",
        "normalized": "QName-\u003eXName",
        "package": "hxt",
        "partial": "Part'",
        "signature": "QName-\u003eXName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:mkName",
      "description": {
        "fct-descr": "\u003cp\u003econstructs a simple, namespace unaware name.\n If the name is in \u003ccode\u003eprefix:localpart\u003c/code\u003e form and the prefix is not empty\n the name is split internally into\n a prefix and a local part.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#mkName",
        "fct-type": "function",
        "title": "mkName"
      },
      "index": {
        "description": "constructs simple namespace unaware name If the name is in prefix localpart form and the prefix is not empty the name is split internally into prefix and local part",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "mkName",
        "normalized": "String-\u003eQName",
        "package": "hxt",
        "partial": "Name",
        "signature": "String-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:mkNsName",
      "description": {
        "fct-descr": "\u003cp\u003econstructs a simple, namespace aware name, with prefix:localPart as first parameter,\n namspace uri as second.\n\u003c/p\u003e\u003cp\u003esee also \u003ccode\u003e\u003ca\u003emkName\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003emkPrefixLocalPart\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#mkNsName",
        "fct-type": "function",
        "title": "mkNsName"
      },
      "index": {
        "description": "constructs simple namespace aware name with prefix localPart as first parameter namspace uri as second see also mkName mkPrefixLocalPart",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "mkNsName",
        "normalized": "String-\u003eString-\u003eQName",
        "package": "hxt",
        "partial": "Ns Name",
        "signature": "String-\u003eString-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:mkPrefixLocalPart",
      "description": {
        "fct-descr": "\u003cp\u003econstructs a simple name, with prefix and localPart but without a namespace uri.\n\u003c/p\u003e\u003cp\u003esee also \u003ccode\u003e\u003ca\u003emkQName\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003emkName\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#mkPrefixLocalPart",
        "fct-type": "function",
        "title": "mkPrefixLocalPart"
      },
      "index": {
        "description": "constructs simple name with prefix and localPart but without namespace uri see also mkQName mkName",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "mkPrefixLocalPart",
        "normalized": "String-\u003eString-\u003eQName",
        "package": "hxt",
        "partial": "Prefix Local Part",
        "signature": "String-\u003eString-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:mkQName",
      "description": {
        "fct-descr": "\u003cp\u003econstructs a complete qualified name with \u003ccode\u003e\u003ca\u003enamePrefix\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003elocalPart\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003enamespaceUri\u003c/a\u003e\u003c/code\u003e.\n This function can be used to build not wellformed prefix:localpart names.\n The XPath module uses wildcard names like \u003ccode\u003exxx:*\u003c/code\u003e. These must be build with \u003ccode\u003e\u003ca\u003emkQName\u003c/a\u003e\u003c/code\u003e\n and not with mkName.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e String -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#mkQName",
        "fct-type": "function",
        "title": "mkQName"
      },
      "index": {
        "description": "constructs complete qualified name with namePrefix localPart and namespaceUri This function can be used to build not wellformed prefix localpart names The XPath module uses wildcard names like xxx These must be build with mkQName and not with mkName",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "mkQName",
        "normalized": "String-\u003eString-\u003eString-\u003eQName",
        "package": "hxt",
        "partial": "QName",
        "signature": "String-\u003eString-\u003eString-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:mkQName-39-",
      "description": {
        "fct-descr": "\u003cdiv class=\"warning\"\u003e\u003cp\u003eDeprecated: use newQName instead with lp px ns param seq \n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName -\u003e XName -\u003e XName -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#mkQName%27",
        "fct-type": "function",
        "title": "mkQName'"
      },
      "index": {
        "description": "Deprecated use newQName instead with lp px ns param seq",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "mkQName'",
        "normalized": "XName-\u003eXName-\u003eXName-\u003eQName",
        "package": "hxt",
        "partial": "QName'",
        "signature": "XName-\u003eXName-\u003eXName-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:mkSNsName",
      "description": {
        "fct-descr": "\u003cdiv class=\"warning\"\u003e\u003cp\u003eDeprecated: use mkName instead\n\u003c/p\u003e\u003c/div\u003e\u003cp\u003eold name for \u003ccode\u003e\u003ca\u003emkName\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#mkSNsName",
        "fct-type": "function",
        "title": "mkSNsName"
      },
      "index": {
        "description": "Deprecated use mkName instead old name for mkName",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "mkSNsName",
        "normalized": "String-\u003eQName",
        "package": "hxt",
        "partial": "SNs Name",
        "signature": "String-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:namePrefix",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#namePrefix",
        "fct-type": "function",
        "title": "namePrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "namePrefix",
        "normalized": "QName-\u003eString",
        "package": "hxt",
        "partial": "Prefix",
        "signature": "QName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:namePrefix-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#namePrefix%27",
        "fct-type": "function",
        "title": "namePrefix'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "namePrefix'",
        "normalized": "QName-\u003eXName",
        "package": "hxt",
        "partial": "Prefix'",
        "signature": "QName-\u003eXName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:namespaceUri",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#namespaceUri",
        "fct-type": "function",
        "title": "namespaceUri"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "namespaceUri",
        "normalized": "QName-\u003eString",
        "package": "hxt",
        "partial": "Uri",
        "signature": "QName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:namespaceUri-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#namespaceUri%27",
        "fct-type": "function",
        "title": "namespaceUri'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "namespaceUri'",
        "normalized": "QName-\u003eXName",
        "package": "hxt",
        "partial": "Uri'",
        "signature": "QName-\u003eXName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:newQName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName -\u003e XName -\u003e XName -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#newQName",
        "fct-type": "function",
        "title": "newQName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "newQName",
        "normalized": "XName-\u003eXName-\u003eXName-\u003eQName",
        "package": "hxt",
        "partial": "QName",
        "signature": "XName-\u003eXName-\u003eXName-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:newXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#newXName",
        "fct-type": "function",
        "title": "newXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "newXName",
        "normalized": "String-\u003eXName",
        "package": "hxt",
        "partial": "XName",
        "signature": "String-\u003eXName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:normalizeNsUri",
      "description": {
        "fct-descr": "\u003cp\u003eNormalization of URIs: Normalization is done by conversion into lowercase letters. A trailing \"/\" is ignored\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#normalizeNsUri",
        "fct-type": "function",
        "title": "normalizeNsUri"
      },
      "index": {
        "description": "Normalization of URIs Normalization is done by conversion into lowercase letters trailing is ignored",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "normalizeNsUri",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Ns Uri",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:nullXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#nullXName",
        "fct-type": "function",
        "title": "nullXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "nullXName",
        "normalized": "",
        "package": "hxt",
        "partial": "XName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:qualifiedName",
      "description": {
        "fct-descr": "\u003cp\u003ebuilds the full name \"prefix:localPart\", if prefix is not null, else the local part is the result\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#qualifiedName",
        "fct-type": "function",
        "title": "qualifiedName"
      },
      "index": {
        "description": "builds the full name prefix localPart if prefix is not null else the local part is the result",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "qualifiedName",
        "normalized": "QName-\u003eString",
        "package": "hxt",
        "partial": "Name",
        "signature": "QName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:qualifiedName-39-",
      "description": {
        "fct-descr": "\u003cp\u003efunctional list version of qualifiedName used in xshow\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#qualifiedName%27",
        "fct-type": "function",
        "title": "qualifiedName'"
      },
      "index": {
        "description": "functional list version of qualifiedName used in xshow",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "qualifiedName'",
        "normalized": "QName-\u003eString-\u003eString",
        "package": "hxt",
        "partial": "Name'",
        "signature": "QName-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:setLocalPart-39-",
      "description": {
        "fct-descr": "\u003cp\u003eset local part\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName -\u003e QName -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#setLocalPart%27",
        "fct-type": "function",
        "title": "setLocalPart'"
      },
      "index": {
        "description": "set local part",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "setLocalPart'",
        "normalized": "XName-\u003eQName-\u003eQName",
        "package": "hxt",
        "partial": "Local Part'",
        "signature": "XName-\u003eQName-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:setNamePrefix-39-",
      "description": {
        "fct-descr": "\u003cp\u003eset name prefix\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName -\u003e QName -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#setNamePrefix%27",
        "fct-type": "function",
        "title": "setNamePrefix'"
      },
      "index": {
        "description": "set name prefix",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "setNamePrefix'",
        "normalized": "XName-\u003eQName-\u003eQName",
        "package": "hxt",
        "partial": "Name Prefix'",
        "signature": "XName-\u003eQName-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:setNamespace",
      "description": {
        "fct-descr": "\u003cp\u003eCompute the name prefix and the namespace uri for a qualified name.\n\u003c/p\u003e\u003cp\u003eThis function does not test whether the name is a wellformed qualified name.\n see Namespaces in XML Rule [6] to [8]. Error checking is done with separate functions,\n see \u003ccode\u003e\u003ca\u003eisWellformedQName\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eisWellformedQualifiedName\u003c/a\u003e\u003c/code\u003e for error checking.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "NsEnv -\u003e QName -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#setNamespace",
        "fct-type": "function",
        "title": "setNamespace"
      },
      "index": {
        "description": "Compute the name prefix and the namespace uri for qualified name This function does not test whether the name is wellformed qualified name see Namespaces in XML Rule to Error checking is done with separate functions see isWellformedQName and isWellformedQualifiedName for error checking",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "setNamespace",
        "normalized": "NsEnv-\u003eQName-\u003eQName",
        "package": "hxt",
        "partial": "Namespace",
        "signature": "NsEnv-\u003eQName-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:setNamespaceUri-39-",
      "description": {
        "fct-descr": "\u003cp\u003eset name prefix\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName -\u003e QName -\u003e QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#setNamespaceUri%27",
        "fct-type": "function",
        "title": "setNamespaceUri'"
      },
      "index": {
        "description": "set name prefix",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "setNamespaceUri'",
        "normalized": "XName-\u003eQName-\u003eQName",
        "package": "hxt",
        "partial": "Namespace Uri'",
        "signature": "XName-\u003eQName-\u003eQName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:toNsEnv",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "AssocList String String -\u003e NsEnv",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#toNsEnv",
        "fct-type": "function",
        "title": "toNsEnv"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "toNsEnv",
        "normalized": "AssocList String String-\u003eNsEnv",
        "package": "hxt",
        "partial": "Ns Env",
        "signature": "AssocList String String-\u003eNsEnv"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:universalName",
      "description": {
        "fct-descr": "\u003cp\u003ebuilds the \"universal\" name, that is the namespace uri surrounded with \"{\" and \"}\" followed by the local part\n (specialisation of \u003ccode\u003e\u003ca\u003ebuildUniversalName\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#universalName",
        "fct-type": "function",
        "title": "universalName"
      },
      "index": {
        "description": "builds the universal name that is the namespace uri surrounded with and followed by the local part specialisation of buildUniversalName",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "universalName",
        "normalized": "QName-\u003eString",
        "package": "hxt",
        "partial": "Name",
        "signature": "QName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:universalUri",
      "description": {
        "fct-descr": "\u003cp\u003ebuilds an \"universal\" uri, that is the namespace uri followed by the local part. This is usefull for RDF applications,\n where the subject, predicate and object often are concatenated from namespace uri and local part\n (specialisation of \u003ccode\u003e\u003ca\u003ebuildUniversalName\u003c/a\u003e\u003c/code\u003e)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#universalUri",
        "fct-type": "function",
        "title": "universalUri"
      },
      "index": {
        "description": "builds an universal uri that is the namespace uri followed by the local part This is usefull for RDF applications where the subject predicate and object often are concatenated from namespace uri and local part specialisation of buildUniversalName",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "universalUri",
        "normalized": "QName-\u003eString",
        "package": "hxt",
        "partial": "Uri",
        "signature": "QName-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:xmlNamespaceXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#xmlNamespaceXName",
        "fct-type": "function",
        "title": "xmlNamespaceXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "xmlNamespaceXName",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace XName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:xmlXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#xmlXName",
        "fct-type": "function",
        "title": "xmlXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "xmlXName",
        "normalized": "",
        "package": "hxt",
        "partial": "XName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:xmlnsNamespaceXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#xmlnsNamespaceXName",
        "fct-type": "function",
        "title": "xmlnsNamespaceXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "xmlnsNamespaceXName",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace XName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:xmlnsQN",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "QName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#xmlnsQN",
        "fct-type": "function",
        "title": "xmlnsQN"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "xmlnsQN",
        "normalized": "",
        "package": "hxt",
        "partial": "QN",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-QualifiedName.html#v:xmlnsXName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.QualifiedName",
        "fct-package": "hxt",
        "fct-signature": "XName",
        "fct-source": "src/Text-XML-HXT-DOM-QualifiedName.html#xmlnsXName",
        "fct-type": "function",
        "title": "xmlnsXName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM QualifiedName",
        "module": "Text.XML.HXT.DOM.QualifiedName",
        "name": "xmlnsXName",
        "normalized": "",
        "package": "hxt",
        "partial": "XName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-ShowXml.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eXML tree conversion to external string representation\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.ShowXml",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-ShowXml.html",
        "fct-type": "module",
        "title": "ShowXml"
      },
      "index": {
        "description": "XML tree conversion to external string representation",
        "hierarchy": "Text XML HXT DOM ShowXml",
        "module": "Text.XML.HXT.DOM.ShowXml",
        "name": "ShowXml",
        "normalized": "",
        "package": "hxt",
        "partial": "Show Xml",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-ShowXml.html#v:xshow",
      "description": {
        "fct-descr": "\u003cp\u003econvert a list of trees into a string\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003exmlTreesToText\u003c/code\u003e for filter version, \u003ccode\u003e\u003ca\u003exread\u003c/a\u003e\u003c/code\u003e for the inverse operation\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.ShowXml",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-ShowXml.html#xshow",
        "fct-type": "function",
        "title": "xshow"
      },
      "index": {
        "description": "convert list of trees into string see also xmlTreesToText for filter version xread for the inverse operation",
        "hierarchy": "Text XML HXT DOM ShowXml",
        "module": "Text.XML.HXT.DOM.ShowXml",
        "name": "xshow",
        "normalized": "XmlTrees-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "XmlTrees-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-ShowXml.html#v:xshow-39-",
      "description": {
        "fct-descr": "\u003cp\u003econvert a list of trees into a blob.\n\u003c/p\u003e\u003cp\u003eApply a quoting function for XML quoting of content,\n a 2. quoting funtion for attribute values\n and an encoding function after tree conversion\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.ShowXml",
        "fct-package": "hxt",
        "fct-signature": "(Char -\u003e StringFct) -\u003e (Char -\u003e StringFct) -\u003e (Char -\u003e StringFct) -\u003e XmlTrees -\u003e Blob",
        "fct-source": "src/Text-XML-HXT-DOM-ShowXml.html#xshow%27",
        "fct-type": "function",
        "title": "xshow'"
      },
      "index": {
        "description": "convert list of trees into blob Apply quoting function for XML quoting of content quoting funtion for attribute values and an encoding function after tree conversion",
        "hierarchy": "Text XML HXT DOM ShowXml",
        "module": "Text.XML.HXT.DOM.ShowXml",
        "name": "xshow'",
        "normalized": "(Char-\u003eStringFct)-\u003e(Char-\u003eStringFct)-\u003e(Char-\u003eStringFct)-\u003eXmlTrees-\u003eBlob",
        "package": "hxt",
        "partial": "",
        "signature": "(Char-\u003eStringFct)-\u003e(Char-\u003eStringFct)-\u003e(Char-\u003eStringFct)-\u003eXmlTrees-\u003eBlob"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-ShowXml.html#v:xshow-39--39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.ShowXml",
        "fct-package": "hxt",
        "fct-signature": "(Char -\u003e StringFct) -\u003e (Char -\u003e StringFct) -\u003e XmlTrees -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-ShowXml.html#xshow%27%27",
        "fct-type": "function",
        "title": "xshow''"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM ShowXml",
        "module": "Text.XML.HXT.DOM.ShowXml",
        "name": "xshow''",
        "normalized": "(Char-\u003eStringFct)-\u003e(Char-\u003eStringFct)-\u003eXmlTrees-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "(Char-\u003eStringFct)-\u003e(Char-\u003eStringFct)-\u003eXmlTrees-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-ShowXml.html#v:xshowBlob",
      "description": {
        "fct-descr": "\u003cp\u003econvert an XML tree into a binary large object (a bytestring)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.ShowXml",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e Blob",
        "fct-source": "src/Text-XML-HXT-DOM-ShowXml.html#xshowBlob",
        "fct-type": "function",
        "title": "xshowBlob"
      },
      "index": {
        "description": "convert an XML tree into binary large object bytestring",
        "hierarchy": "Text XML HXT DOM ShowXml",
        "module": "Text.XML.HXT.DOM.ShowXml",
        "name": "xshowBlob",
        "normalized": "XmlTrees-\u003eBlob",
        "package": "hxt",
        "partial": "Blob",
        "signature": "XmlTrees-\u003eBlob"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe core data types of the HXT DOM.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html",
        "fct-type": "module",
        "title": "TypeDefs"
      },
      "index": {
        "description": "The core data types of the HXT DOM",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "TypeDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Type Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:Attributes",
      "description": {
        "fct-descr": "\u003cp\u003eAttribute list\n\u003c/p\u003e\u003cp\u003eused for storing option lists and features of DTD parts\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#Attributes",
        "fct-type": "type",
        "title": "Attributes"
      },
      "index": {
        "description": "Attribute list used for storing option lists and features of DTD parts",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "Attributes",
        "normalized": "",
        "package": "hxt",
        "partial": "Attributes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:Blob",
      "description": {
        "fct-descr": "\u003cp\u003eBinary large object implemented as a lazy bytestring\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#Blob",
        "fct-type": "type",
        "title": "Blob"
      },
      "index": {
        "description": "Binary large object implemented as lazy bytestring",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "Blob",
        "normalized": "",
        "package": "hxt",
        "partial": "Blob",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:ChildNodes",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#ChildNodes",
        "fct-type": "type",
        "title": "ChildNodes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "ChildNodes",
        "normalized": "",
        "package": "hxt",
        "partial": "Child Nodes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:DTDElem",
      "description": {
        "fct-descr": "\u003cp\u003eRepresents a DTD element\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "data",
        "title": "DTDElem"
      },
      "index": {
        "description": "Represents DTD element",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "DTDElem",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDElem",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:XNode",
      "description": {
        "fct-descr": "\u003cp\u003eRepresents elements\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "data",
        "title": "XNode"
      },
      "index": {
        "description": "Represents elements",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XNode",
        "normalized": "",
        "package": "hxt",
        "partial": "XNode",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:XmlNavTree",
      "description": {
        "fct-descr": "\u003cp\u003eNavigatable rose tree with XML nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNavTree",
        "fct-type": "type",
        "title": "XmlNavTree"
      },
      "index": {
        "description": "Navigatable rose tree with XML nodes",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XmlNavTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Nav Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:XmlNavTrees",
      "description": {
        "fct-descr": "\u003cp\u003eList of navigatable rose trees with XML nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNavTrees",
        "fct-type": "type",
        "title": "XmlNavTrees"
      },
      "index": {
        "description": "List of navigatable rose trees with XML nodes",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XmlNavTrees",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Nav Trees",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:XmlNodeSet",
      "description": {
        "fct-descr": "\u003cp\u003edata type for representing a set of nodes as a tree structure\n\u003c/p\u003e\u003cp\u003ethis structure is e.g. used to repesent the result of an XPath query\n such that the selected nodes can be processed or selected later in\n processing a document tree\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNodeSet",
        "fct-type": "data",
        "title": "XmlNodeSet"
      },
      "index": {
        "description": "data type for representing set of nodes as tree structure this structure is e.g used to repesent the result of an XPath query such that the selected nodes can be processed or selected later in processing document tree",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XmlNodeSet",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Node Set",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:XmlTree",
      "description": {
        "fct-descr": "\u003cp\u003eRose tree with XML nodes (XNode)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlTree",
        "fct-type": "type",
        "title": "XmlTree"
      },
      "index": {
        "description": "Rose tree with XML nodes XNode",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XmlTree",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Tree",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#t:XmlTrees",
      "description": {
        "fct-descr": "\u003cp\u003eList of rose trees with XML nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlTrees",
        "fct-type": "type",
        "title": "XmlTrees"
      },
      "index": {
        "description": "List of rose trees with XML nodes",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XmlTrees",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Trees",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:ATTLIST",
      "description": {
        "fct-descr": "\u003cp\u003eattributes:\n  name - name of element\n\u003c/p\u003e\u003cp\u003evalue - name of attribute\n\u003c/p\u003e\u003cp\u003etype: \"CDATA\" | \"ID\" | \"IDREF\" | \"IDREFS\" | \"ENTITY\" | \"ENTITIES\" |\n\u003c/p\u003e\u003cp\u003e\"NMTOKEN\" | \"NMTOKENS\" |\"NOTATION\" | \"ENUMTYPE\"\n\u003c/p\u003e\u003cp\u003ekind: \"\u003ca name=\"REQUIRED\\\" | \\\"\"/\u003eIMPLIED\" | \"DEFAULT\"\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "ATTLIST",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "ATTLIST"
      },
      "index": {
        "description": "attributes name name of element value name of attribute type CDATA ID IDREF IDREFS ENTITY ENTITIES NMTOKEN NMTOKENS NOTATION ENUMTYPE kind IMPLIED DEFAULT",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "ATTLIST",
        "normalized": "",
        "package": "hxt",
        "partial": "ATTLIST",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:CONDSECT",
      "description": {
        "fct-descr": "\u003cp\u003efor INCLUDEs, IGNOREs and peRefs: attr: type\n\u003c/p\u003e\u003cp\u003etype = INCLUDE, IGNORE or %...;\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "CONDSECT",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "CONDSECT"
      },
      "index": {
        "description": "for INCLUDEs IGNOREs and peRefs attr type type INCLUDE IGNORE or",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "CONDSECT",
        "normalized": "",
        "package": "hxt",
        "partial": "CONDSECT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:CONTENT",
      "description": {
        "fct-descr": "\u003cp\u003eelement content\n\u003c/p\u003e\u003cp\u003eattr: kind, modifier\n\u003c/p\u003e\u003cp\u003emodifier: \"\" | \"?\" | \"*\" | \"+\"\n\u003c/p\u003e\u003cp\u003ekind: seq | choice\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "CONTENT",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "CONTENT"
      },
      "index": {
        "description": "element content attr kind modifier modifier kind seq choice",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "CONTENT",
        "normalized": "",
        "package": "hxt",
        "partial": "CONTENT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:DOCTYPE",
      "description": {
        "fct-descr": "\u003cp\u003eattr: name, system, public,        XDTD elems as children\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "DOCTYPE",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "DOCTYPE"
      },
      "index": {
        "description": "attr name system public XDTD elems as children",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "DOCTYPE",
        "normalized": "",
        "package": "hxt",
        "partial": "DOCTYPE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:ELEMENT",
      "description": {
        "fct-descr": "\u003cp\u003eattr: name, kind\n\u003c/p\u003e\u003cp\u003ename: element name\n\u003c/p\u003e\u003cp\u003ekind: \"EMPTY\" | \"ANY\" | \"#PCDATA\" | children | mixed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "ELEMENT",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "ELEMENT"
      },
      "index": {
        "description": "attr name kind name element name kind EMPTY ANY PCDATA children mixed",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "ELEMENT",
        "normalized": "",
        "package": "hxt",
        "partial": "ELEMENT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:ENTITY",
      "description": {
        "fct-descr": "\u003cp\u003efor entity declarations\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "ENTITY",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "ENTITY"
      },
      "index": {
        "description": "for entity declarations",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "ENTITY",
        "normalized": "",
        "package": "hxt",
        "partial": "ENTITY",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:NAME",
      "description": {
        "fct-descr": "\u003cp\u003eattr: name\n\u003c/p\u003e\u003cp\u003efor lists of names in notation types or nmtokens in enumeration types\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NAME",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "NAME"
      },
      "index": {
        "description": "attr name for lists of names in notation types or nmtokens in enumeration types",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "NAME",
        "normalized": "",
        "package": "hxt",
        "partial": "NAME",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:NOTATION",
      "description": {
        "fct-descr": "\u003cp\u003efor notations\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "NOTATION",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "NOTATION"
      },
      "index": {
        "description": "for notations",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "NOTATION",
        "normalized": "",
        "package": "hxt",
        "partial": "NOTATION",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:PENTITY",
      "description": {
        "fct-descr": "\u003cp\u003efor parameter entity declarations\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "PENTITY",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "PENTITY"
      },
      "index": {
        "description": "for parameter entity declarations",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "PENTITY",
        "normalized": "",
        "package": "hxt",
        "partial": "PENTITY",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:PEREF",
      "description": {
        "fct-descr": "\u003cp\u003efor Parameter Entity References in DTDs\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "PEREF",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#DTDElem",
        "fct-type": "function",
        "title": "PEREF"
      },
      "index": {
        "description": "for Parameter Entity References in DTDs",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "PEREF",
        "normalized": "",
        "package": "hxt",
        "partial": "PEREF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XAttr",
      "description": {
        "fct-descr": "\u003cp\u003eattribute with qualified name, the attribute value is stored in children\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XAttr QName",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XAttr"
      },
      "index": {
        "description": "attribute with qualified name the attribute value is stored in children",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XAttr",
        "normalized": "",
        "package": "hxt",
        "partial": "XAttr",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XBlob",
      "description": {
        "fct-descr": "\u003cp\u003etext represented more space efficient as bytestring (leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XBlob Blob",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XBlob"
      },
      "index": {
        "description": "text represented more space efficient as bytestring leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XBlob",
        "normalized": "",
        "package": "hxt",
        "partial": "XBlob",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XCdata",
      "description": {
        "fct-descr": "\u003cp\u003eCDATA section                                       (leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XCdata String",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XCdata"
      },
      "index": {
        "description": "CDATA section leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XCdata",
        "normalized": "",
        "package": "hxt",
        "partial": "XCdata",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XCharRef",
      "description": {
        "fct-descr": "\u003cp\u003echaracter reference                                 (leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XCharRef Int",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XCharRef"
      },
      "index": {
        "description": "character reference leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XCharRef",
        "normalized": "",
        "package": "hxt",
        "partial": "XChar Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XCmt",
      "description": {
        "fct-descr": "\u003cp\u003ecomment                                             (leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XCmt String",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XCmt"
      },
      "index": {
        "description": "comment leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XCmt",
        "normalized": "",
        "package": "hxt",
        "partial": "XCmt",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XDTD",
      "description": {
        "fct-descr": "\u003cp\u003eDTD element with assoc list for dtd element features\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XDTD DTDElem Attributes",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XDTD"
      },
      "index": {
        "description": "DTD element with assoc list for dtd element features",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "XDTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XEntityRef",
      "description": {
        "fct-descr": "\u003cp\u003eentity reference                                    (leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XEntityRef String",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XEntityRef"
      },
      "index": {
        "description": "entity reference leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XEntityRef",
        "normalized": "",
        "package": "hxt",
        "partial": "XEntity Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XError",
      "description": {
        "fct-descr": "\u003cp\u003eerror message with level and text\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XError Int String",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XError"
      },
      "index": {
        "description": "error message with level and text",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XError",
        "normalized": "",
        "package": "hxt",
        "partial": "XError",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XNS",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XNS",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNodeSet",
        "fct-type": "function",
        "title": "XNS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XNS",
        "normalized": "",
        "package": "hxt",
        "partial": "XNS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XPi",
      "description": {
        "fct-descr": "\u003cp\u003eProcessing Instr with qualified name                (leaf)\n   with list of attributes.\n   If tag name is xml, attributs are \"version\", \"encoding\", \"standalone\",\n   else attribute list is empty, content is a text child node\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XPi QName XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XPi"
      },
      "index": {
        "description": "Processing Instr with qualified name leaf with list of attributes If tag name is xml attributs are version encoding standalone else attribute list is empty content is text child node",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XPi",
        "normalized": "",
        "package": "hxt",
        "partial": "XPi",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XTag",
      "description": {
        "fct-descr": "\u003cp\u003etag with qualified name and list of attributes (inner node or leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XTag QName XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XTag"
      },
      "index": {
        "description": "tag with qualified name and list of attributes inner node or leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XTag",
        "normalized": "",
        "package": "hxt",
        "partial": "XTag",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:XText",
      "description": {
        "fct-descr": "\u003cp\u003eordinary text                                       (leaf)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XText String",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XNode",
        "fct-type": "function",
        "title": "XText"
      },
      "index": {
        "description": "ordinary text leaf",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "XText",
        "normalized": "",
        "package": "hxt",
        "partial": "XText",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:attrNodes",
      "description": {
        "fct-descr": "\u003cp\u003ethe set of attribute nodes\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "[QName]",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNodeSet",
        "fct-type": "function",
        "title": "attrNodes"
      },
      "index": {
        "description": "the set of attribute nodes",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "attrNodes",
        "normalized": "[QName]",
        "package": "hxt",
        "partial": "Nodes",
        "signature": "[QName]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:blobToString",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Blob -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#blobToString",
        "fct-type": "function",
        "title": "blobToString"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "blobToString",
        "normalized": "Blob-\u003eString",
        "package": "hxt",
        "partial": "To String",
        "signature": "Blob-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:c_err",
      "description": {
        "fct-descr": "\u003cp\u003eError level for XError, type error\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#c_err",
        "fct-type": "function",
        "title": "c_err"
      },
      "index": {
        "description": "Error level for XError type error",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "c_err",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:c_fatal",
      "description": {
        "fct-descr": "\u003cp\u003eError level for XError, type fatal error\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#c_fatal",
        "fct-type": "function",
        "title": "c_fatal"
      },
      "index": {
        "description": "Error level for XError type fatal error",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "c_fatal",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:c_ok",
      "description": {
        "fct-descr": "\u003cp\u003eno error, everything is ok\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#c_ok",
        "fct-type": "function",
        "title": "c_ok"
      },
      "index": {
        "description": "no error everything is ok",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "c_ok",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:c_warn",
      "description": {
        "fct-descr": "\u003cp\u003eError level for XError, type warning\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Int",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#c_warn",
        "fct-type": "function",
        "title": "c_warn"
      },
      "index": {
        "description": "Error level for XError type warning",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "c_warn",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:childNodes",
      "description": {
        "fct-descr": "\u003cp\u003ethe set of child nodes, a list of pairs of index and node set\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "ChildNodes",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNodeSet",
        "fct-type": "function",
        "title": "childNodes"
      },
      "index": {
        "description": "the set of child nodes list of pairs of index and node set",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "childNodes",
        "normalized": "",
        "package": "hxt",
        "partial": "Nodes",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:rwnfAttributes",
      "description": {
        "fct-descr": "\u003cp\u003eEvaluate an assoc list of strings\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e ()",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#rwnfAttributes",
        "fct-type": "function",
        "title": "rwnfAttributes"
      },
      "index": {
        "description": "Evaluate an assoc list of strings",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "rwnfAttributes",
        "normalized": "Attributes-\u003e()",
        "package": "hxt",
        "partial": "Attributes",
        "signature": "Attributes-\u003e()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:stringToBlob",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Blob",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#stringToBlob",
        "fct-type": "function",
        "title": "stringToBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "stringToBlob",
        "normalized": "String-\u003eBlob",
        "package": "hxt",
        "partial": "To Blob",
        "signature": "String-\u003eBlob"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-TypeDefs.html#v:thisNode",
      "description": {
        "fct-descr": "\u003cp\u003eis this node part of the set ?\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Bool",
        "fct-source": "src/Text-XML-HXT-DOM-TypeDefs.html#XmlNodeSet",
        "fct-type": "function",
        "title": "thisNode"
      },
      "index": {
        "description": "is this node part of the set",
        "hierarchy": "Text XML HXT DOM TypeDefs",
        "module": "Text.XML.HXT.DOM.TypeDefs",
        "name": "thisNode",
        "normalized": "",
        "package": "hxt",
        "partial": "Node",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLittle useful things for strings, lists and other values\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html",
        "fct-type": "module",
        "title": "Util"
      },
      "index": {
        "description": "Little useful things for strings lists and other values",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "Util",
        "normalized": "",
        "package": "hxt",
        "partial": "Util",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:attrEscapeXml",
      "description": {
        "fct-descr": "\u003cp\u003eescape XML chars in attribute values, same as stringEscapeXml, but none blank whitespace\n is also escaped\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003estringEscapeXml\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#attrEscapeXml",
        "fct-type": "function",
        "title": "attrEscapeXml"
      },
      "index": {
        "description": "escape XML chars in attribute values same as stringEscapeXml but none blank whitespace is also escaped see also stringEscapeXml",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "attrEscapeXml",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Escape Xml",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:charToHexString",
      "description": {
        "fct-descr": "\u003cp\u003econvert a char (byte) into a 2-digit hexadecimal string\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003estringToHexString\u003c/a\u003e\u003c/code\u003e, \u003ccode\u003e\u003ca\u003eintToHexString\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "Char -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#charToHexString",
        "fct-type": "function",
        "title": "charToHexString"
      },
      "index": {
        "description": "convert char byte into digit hexadecimal string see also stringToHexString intToHexString",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "charToHexString",
        "normalized": "Char-\u003eString",
        "package": "hxt",
        "partial": "To Hex String",
        "signature": "Char-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:decimalStringToInt",
      "description": {
        "fct-descr": "\u003cp\u003econvert a string of digits into an Int\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Int",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#decimalStringToInt",
        "fct-type": "function",
        "title": "decimalStringToInt"
      },
      "index": {
        "description": "convert string of digits into an Int",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "decimalStringToInt",
        "normalized": "String-\u003eInt",
        "package": "hxt",
        "partial": "String To Int",
        "signature": "String-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:doubles",
      "description": {
        "fct-descr": "\u003cp\u003etake all elements of a list which occur more than once. The result does not contain doubles.\n (doubles . doubles == doubles)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#doubles",
        "fct-type": "function",
        "title": "doubles"
      },
      "index": {
        "description": "take all elements of list which occur more than once The result does not contain doubles doubles doubles doubles",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "doubles",
        "normalized": "[a]-\u003e[a]",
        "package": "hxt",
        "partial": "",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:escapeURI",
      "description": {
        "fct-descr": "\u003cp\u003eEscape all disallowed characters in URI\n references (see \u003ca\u003ehttp://www.w3.org/TR/xlink/#link-locators\u003c/a\u003e)\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#escapeURI",
        "fct-type": "function",
        "title": "escapeURI"
      },
      "index": {
        "description": "Escape all disallowed characters in URI references see http www.w3.org TR xlink link-locators",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "escapeURI",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "URI",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:hexStringToInt",
      "description": {
        "fct-descr": "\u003cp\u003econvert a string of hexadecimal digits into an Int\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Int",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#hexStringToInt",
        "fct-type": "function",
        "title": "hexStringToInt"
      },
      "index": {
        "description": "convert string of hexadecimal digits into an Int",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "hexStringToInt",
        "normalized": "String-\u003eInt",
        "package": "hxt",
        "partial": "String To Int",
        "signature": "String-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:intToHexString",
      "description": {
        "fct-descr": "\u003cp\u003econvert a none negative Int into a hexadecimal string\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003echarToHexString\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#intToHexString",
        "fct-type": "function",
        "title": "intToHexString"
      },
      "index": {
        "description": "convert none negative Int into hexadecimal string see also charToHexString",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "intToHexString",
        "normalized": "Int-\u003eString",
        "package": "hxt",
        "partial": "To Hex String",
        "signature": "Int-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:noDoubles",
      "description": {
        "fct-descr": "\u003cp\u003eremove duplicates from list\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#noDoubles",
        "fct-type": "function",
        "title": "noDoubles"
      },
      "index": {
        "description": "remove duplicates from list",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "noDoubles",
        "normalized": "[a]-\u003e[a]",
        "package": "hxt",
        "partial": "Doubles",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:normalizeBlanks",
      "description": {
        "fct-descr": "\u003cp\u003ereplace all whitespace chars by blanks\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#normalizeBlanks",
        "fct-type": "function",
        "title": "normalizeBlanks"
      },
      "index": {
        "description": "replace all whitespace chars by blanks",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "normalizeBlanks",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Blanks",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:normalizeNumber",
      "description": {
        "fct-descr": "\u003cp\u003eRemoves leading / trailing whitespaces and leading zeros\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#normalizeNumber",
        "fct-type": "function",
        "title": "normalizeNumber"
      },
      "index": {
        "description": "Removes leading trailing whitespaces and leading zeros",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "normalizeNumber",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Number",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:normalizeWhitespace",
      "description": {
        "fct-descr": "\u003cp\u003eReduce whitespace sequences to a single whitespace\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#normalizeWhitespace",
        "fct-type": "function",
        "title": "normalizeWhitespace"
      },
      "index": {
        "description": "Reduce whitespace sequences to single whitespace",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "normalizeWhitespace",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Whitespace",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:partitionEither",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[Either a b] -\u003e ([a], [b])",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#partitionEither",
        "fct-type": "function",
        "title": "partitionEither"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "partitionEither",
        "normalized": "[Either a b]-\u003e([a],[b])",
        "package": "hxt",
        "partial": "Either",
        "signature": "[Either a b]-\u003e([a],[b])"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:singles",
      "description": {
        "fct-descr": "\u003cp\u003edrop all elements from a list which occur more than once.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[a] -\u003e [a]",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#singles",
        "fct-type": "function",
        "title": "singles"
      },
      "index": {
        "description": "drop all elements from list which occur more than once",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "singles",
        "normalized": "[a]-\u003e[a]",
        "package": "hxt",
        "partial": "",
        "signature": "[a]-\u003e[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringAll",
      "description": {
        "fct-descr": "\u003cp\u003efind all positions where a string occurs within another string\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[a] -\u003e [a] -\u003e [Int]",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringAll",
        "fct-type": "function",
        "title": "stringAll"
      },
      "index": {
        "description": "find all positions where string occurs within another string",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringAll",
        "normalized": "[a]-\u003e[a]-\u003e[Int]",
        "package": "hxt",
        "partial": "All",
        "signature": "[a]-\u003e[a]-\u003e[Int]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringEscapeXml",
      "description": {
        "fct-descr": "\u003cp\u003eescape XML chars &lt;, &gt;, &quot;,  and ampercent by transforming them into character references\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003eattrEscapeXml\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringEscapeXml",
        "fct-type": "function",
        "title": "stringEscapeXml"
      },
      "index": {
        "description": "escape XML chars lt gt quot and ampercent by transforming them into character references see also attrEscapeXml",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringEscapeXml",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Escape Xml",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringFirst",
      "description": {
        "fct-descr": "\u003cp\u003efind the position of the first occurence of a string\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[a] -\u003e [a] -\u003e Maybe Int",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringFirst",
        "fct-type": "function",
        "title": "stringFirst"
      },
      "index": {
        "description": "find the position of the first occurence of string",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringFirst",
        "normalized": "[a]-\u003e[a]-\u003eMaybe Int",
        "package": "hxt",
        "partial": "First",
        "signature": "[a]-\u003e[a]-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringLast",
      "description": {
        "fct-descr": "\u003cp\u003efind the position of the last occurence of a string\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "[a] -\u003e [a] -\u003e Maybe Int",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringLast",
        "fct-type": "function",
        "title": "stringLast"
      },
      "index": {
        "description": "find the position of the last occurence of string",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringLast",
        "normalized": "[a]-\u003e[a]-\u003eMaybe Int",
        "package": "hxt",
        "partial": "Last",
        "signature": "[a]-\u003e[a]-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringToHexString",
      "description": {
        "fct-descr": "\u003cp\u003econvert a string into a hexadecimal string applying charToHexString\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003echarToHexString\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringToHexString",
        "fct-type": "function",
        "title": "stringToHexString"
      },
      "index": {
        "description": "convert string into hexadecimal string applying charToHexString see also charToHexString",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringToHexString",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "To Hex String",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringToInt",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e Int",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringToInt",
        "fct-type": "function",
        "title": "stringToInt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringToInt",
        "normalized": "Int-\u003eString-\u003eInt",
        "package": "hxt",
        "partial": "To Int",
        "signature": "Int-\u003eString-\u003eInt"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringToLower",
      "description": {
        "fct-descr": "\u003cp\u003econvert string to lowercase with standard Haskell toLower function\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringToLower",
        "fct-type": "function",
        "title": "stringToLower"
      },
      "index": {
        "description": "convert string to lowercase with standard Haskell toLower function",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringToLower",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "To Lower",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringToUpper",
      "description": {
        "fct-descr": "\u003cp\u003econvert string to uppercase with standard Haskell toUpper function\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringToUpper",
        "fct-type": "function",
        "title": "stringToUpper"
      },
      "index": {
        "description": "convert string to uppercase with standard Haskell toUpper function",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringToUpper",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "To Upper",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:stringTrim",
      "description": {
        "fct-descr": "\u003cp\u003eremove leading and trailing whitespace with standard Haskell predicate isSpace\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#stringTrim",
        "fct-type": "function",
        "title": "stringTrim"
      },
      "index": {
        "description": "remove leading and trailing whitespace with standard Haskell predicate isSpace",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "stringTrim",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Trim",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:swap",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "(a, b) -\u003e (b, a)",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#swap",
        "fct-type": "function",
        "title": "swap"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "swap",
        "normalized": "(a,b)-\u003e(b,a)",
        "package": "hxt",
        "partial": "",
        "signature": "(a,b)-\u003e(b,a)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:textEscapeXml",
      "description": {
        "fct-descr": "\u003cp\u003eescape XML chars &lt;  and ampercent by transforming them into character references, used for escaping text nodes\n\u003c/p\u003e\u003cp\u003esee also : \u003ccode\u003e\u003ca\u003eattrEscapeXml\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#textEscapeXml",
        "fct-type": "function",
        "title": "textEscapeXml"
      },
      "index": {
        "description": "escape XML chars lt and ampercent by transforming them into character references used for escaping text nodes see also attrEscapeXml",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "textEscapeXml",
        "normalized": "String-\u003eString",
        "package": "hxt",
        "partial": "Escape Xml",
        "signature": "String-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:toMaybe",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e a -\u003e Maybe a",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#toMaybe",
        "fct-type": "function",
        "title": "toMaybe"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "toMaybe",
        "normalized": "Bool-\u003ea-\u003eMaybe a",
        "package": "hxt",
        "partial": "Maybe",
        "signature": "Bool-\u003ea-\u003eMaybe a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:uncurry3",
      "description": {
        "fct-descr": "\u003cp\u003emothers little helpers for to much curry\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e (a, b, c) -\u003e d",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#uncurry3",
        "fct-type": "function",
        "title": "uncurry3"
      },
      "index": {
        "description": "mothers little helpers for to much curry",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "uncurry3",
        "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003e(a,b,c)-\u003ed",
        "package": "hxt",
        "partial": "",
        "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003e(a,b,c)-\u003ed"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-Util.html#v:uncurry4",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.Util",
        "fct-package": "hxt",
        "fct-signature": "(a -\u003e b -\u003e c -\u003e d -\u003e e) -\u003e (a, b, c, d) -\u003e e",
        "fct-source": "src/Text-XML-HXT-DOM-Util.html#uncurry4",
        "fct-type": "function",
        "title": "uncurry4"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM Util",
        "module": "Text.XML.HXT.DOM.Util",
        "name": "uncurry4",
        "normalized": "(a-\u003eb-\u003ec-\u003ed-\u003ee)-\u003e(a,b,c,d)-\u003ee",
        "package": "hxt",
        "partial": "",
        "signature": "(a-\u003eb-\u003ec-\u003ed-\u003ee)-\u003e(a,b,c,d)-\u003ee"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eConstants for XML keywords, for special attribute names\n   and special attribute values\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html",
        "fct-type": "module",
        "title": "XmlKeywords"
      },
      "index": {
        "description": "Constants for XML keywords for special attribute names and special attribute values",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "XmlKeywords",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Keywords",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_column",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_column",
        "fct-type": "function",
        "title": "a_column"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_column",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_contentLength",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_contentLength",
        "fct-type": "function",
        "title": "a_contentLength"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_contentLength",
        "normalized": "",
        "package": "hxt",
        "partial": "Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_default",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_default",
        "fct-type": "function",
        "title": "a_default"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_default",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_encoding",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_encoding",
        "fct-type": "function",
        "title": "a_encoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_encoding",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_kind",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_kind",
        "fct-type": "function",
        "title": "a_kind"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_kind",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_line",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_line",
        "fct-type": "function",
        "title": "a_line"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_line",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_modifier",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_modifier",
        "fct-type": "function",
        "title": "a_modifier"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_modifier",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_module",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_module",
        "fct-type": "function",
        "title": "a_module"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_module",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_name",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_name",
        "fct-type": "function",
        "title": "a_name"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_name",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_output_encoding",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_output_encoding",
        "fct-type": "function",
        "title": "a_output_encoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_output_encoding",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_peref",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_peref",
        "fct-type": "function",
        "title": "a_peref"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_peref",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_source",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_source",
        "fct-type": "function",
        "title": "a_source"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_source",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_standalone",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_standalone",
        "fct-type": "function",
        "title": "a_standalone"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_standalone",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_status",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_status",
        "fct-type": "function",
        "title": "a_status"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_status",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_type",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_type",
        "fct-type": "function",
        "title": "a_type"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_type",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_url",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_url",
        "fct-type": "function",
        "title": "a_url"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_url",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_value",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_value",
        "fct-type": "function",
        "title": "a_value"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_value",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_version",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_version",
        "fct-type": "function",
        "title": "a_version"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_version",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_xml",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_xml",
        "fct-type": "function",
        "title": "a_xml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_xml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:a_xmlns",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#a_xmlns",
        "fct-type": "function",
        "title": "a_xmlns"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "a_xmlns",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:dtdPrefix",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#dtdPrefix",
        "fct-type": "function",
        "title": "dtdPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "dtdPrefix",
        "normalized": "",
        "package": "hxt",
        "partial": "Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:httpPrefix",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#httpPrefix",
        "fct-type": "function",
        "title": "httpPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "httpPrefix",
        "normalized": "",
        "package": "hxt",
        "partial": "Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_any",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_any",
        "fct-type": "function",
        "title": "k_any"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_any",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_cdata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_cdata",
        "fct-type": "function",
        "title": "k_cdata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_cdata",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_default",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_default",
        "fct-type": "function",
        "title": "k_default"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_default",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_empty",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_empty",
        "fct-type": "function",
        "title": "k_empty"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_empty",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_entities",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_entities",
        "fct-type": "function",
        "title": "k_entities"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_entities",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_entity",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_entity",
        "fct-type": "function",
        "title": "k_entity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_entity",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_enumeration",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_enumeration",
        "fct-type": "function",
        "title": "k_enumeration"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_enumeration",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_fixed",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_fixed",
        "fct-type": "function",
        "title": "k_fixed"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_fixed",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_id",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_id",
        "fct-type": "function",
        "title": "k_id"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_id",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_idref",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_idref",
        "fct-type": "function",
        "title": "k_idref"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_idref",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_idrefs",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_idrefs",
        "fct-type": "function",
        "title": "k_idrefs"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_idrefs",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_ignore",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_ignore",
        "fct-type": "function",
        "title": "k_ignore"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_ignore",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_implied",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_implied",
        "fct-type": "function",
        "title": "k_implied"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_implied",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_include",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_include",
        "fct-type": "function",
        "title": "k_include"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_include",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_ndata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_ndata",
        "fct-type": "function",
        "title": "k_ndata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_ndata",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_nmtoken",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_nmtoken",
        "fct-type": "function",
        "title": "k_nmtoken"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_nmtoken",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_nmtokens",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_nmtokens",
        "fct-type": "function",
        "title": "k_nmtokens"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_nmtokens",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_notation",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_notation",
        "fct-type": "function",
        "title": "k_notation"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_notation",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_pcdata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_pcdata",
        "fct-type": "function",
        "title": "k_pcdata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_pcdata",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_peref",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_peref",
        "fct-type": "function",
        "title": "k_peref"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_peref",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_public",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_public",
        "fct-type": "function",
        "title": "k_public"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_public",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_required",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_required",
        "fct-type": "function",
        "title": "k_required"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_required",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:k_system",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#k_system",
        "fct-type": "function",
        "title": "k_system"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "k_system",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:relaxNamespace",
      "description": {
        "fct-descr": "\u003cp\u003eRelax NG namespace\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#relaxNamespace",
        "fct-type": "function",
        "title": "relaxNamespace"
      },
      "index": {
        "description": "Relax NG namespace",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "relaxNamespace",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:stringProtocol",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#stringProtocol",
        "fct-type": "function",
        "title": "stringProtocol"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "stringProtocol",
        "normalized": "",
        "package": "hxt",
        "partial": "Protocol",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:t_root",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#t_root",
        "fct-type": "function",
        "title": "t_root"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "t_root",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:t_xml",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#t_xml",
        "fct-type": "function",
        "title": "t_xml"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "t_xml",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferDefaultURI",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferDefaultURI",
        "fct-type": "function",
        "title": "transferDefaultURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferDefaultURI",
        "normalized": "",
        "package": "hxt",
        "partial": "Default URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferEncoding",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferEncoding",
        "fct-type": "function",
        "title": "transferEncoding"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferEncoding",
        "normalized": "",
        "package": "hxt",
        "partial": "Encoding",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferMessage",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferMessage",
        "fct-type": "function",
        "title": "transferMessage"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferMessage",
        "normalized": "",
        "package": "hxt",
        "partial": "Message",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferMimeType",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferMimeType",
        "fct-type": "function",
        "title": "transferMimeType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferMimeType",
        "normalized": "",
        "package": "hxt",
        "partial": "Mime Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferPrefix",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferPrefix",
        "fct-type": "function",
        "title": "transferPrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferPrefix",
        "normalized": "",
        "package": "hxt",
        "partial": "Prefix",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferProtocol",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferProtocol",
        "fct-type": "function",
        "title": "transferProtocol"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferProtocol",
        "normalized": "",
        "package": "hxt",
        "partial": "Protocol",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferStatus",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferStatus",
        "fct-type": "function",
        "title": "transferStatus"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferStatus",
        "normalized": "",
        "package": "hxt",
        "partial": "Status",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferURI",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferURI",
        "fct-type": "function",
        "title": "transferURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferURI",
        "normalized": "",
        "package": "hxt",
        "partial": "URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:transferVersion",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#transferVersion",
        "fct-type": "function",
        "title": "transferVersion"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "transferVersion",
        "normalized": "",
        "package": "hxt",
        "partial": "Version",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_0",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_0",
        "fct-type": "function",
        "title": "v_0"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_0",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_1",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_1",
        "fct-type": "function",
        "title": "v_1"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_1",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_2",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_2",
        "fct-type": "function",
        "title": "v_2"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_2",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_any",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_any",
        "fct-type": "function",
        "title": "v_any"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_any",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_children",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_children",
        "fct-type": "function",
        "title": "v_children"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_children",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_choice",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_choice",
        "fct-type": "function",
        "title": "v_choice"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_choice",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_empty",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_empty",
        "fct-type": "function",
        "title": "v_empty"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_empty",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_mixed",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_mixed",
        "fct-type": "function",
        "title": "v_mixed"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_mixed",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_no",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_no",
        "fct-type": "function",
        "title": "v_no"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_no",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_null",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_null",
        "fct-type": "function",
        "title": "v_null"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_null",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_option",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_option",
        "fct-type": "function",
        "title": "v_option"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_option",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_pcdata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_pcdata",
        "fct-type": "function",
        "title": "v_pcdata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_pcdata",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_plus",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_plus",
        "fct-type": "function",
        "title": "v_plus"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_plus",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_seq",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_seq",
        "fct-type": "function",
        "title": "v_seq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_seq",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_star",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_star",
        "fct-type": "function",
        "title": "v_star"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_star",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:v_yes",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#v_yes",
        "fct-type": "function",
        "title": "v_yes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "v_yes",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:xmlNamespace",
      "description": {
        "fct-descr": "\u003cp\u003ethe predefined namespace uri for xml: \"http://www.w3.org/XML/1998/namespace\"\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#xmlNamespace",
        "fct-type": "function",
        "title": "xmlNamespace"
      },
      "index": {
        "description": "the predefined namespace uri for xml http www.w3.org XML namespace",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "xmlNamespace",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlKeywords.html#v:xmlnsNamespace",
      "description": {
        "fct-descr": "\u003cp\u003ethe predefined namespace uri for xmlns: \"http://www.w3.org/2000/xmlns/\"\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.XmlKeywords",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlKeywords.html#xmlnsNamespace",
        "fct-type": "function",
        "title": "xmlnsNamespace"
      },
      "index": {
        "description": "the predefined namespace uri for xmlns http www.w3.org xmlns",
        "hierarchy": "Text XML HXT DOM XmlKeywords",
        "module": "Text.XML.HXT.DOM.XmlKeywords",
        "name": "xmlnsNamespace",
        "normalized": "",
        "package": "hxt",
        "partial": "Namespace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eInterface for XmlArrow to basic data types NTree and XmlTree\n\u003c/p\u003e\u003cp\u003eIf this module must be used in code working with arrows,\n   it should be imported qualified e.g. \u003ccode\u003eas XN\u003c/code\u003e, to prevent name clashes.\n\u003c/p\u003e\u003cp\u003eFor code working on the \"node and tree level\" this module\n   is the interface for writing code without using the\n   constructor functions of \u003ccode\u003e\u003ca\u003eXNode\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003eNTree\u003c/a\u003e\u003c/code\u003e directly\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html",
        "fct-type": "module",
        "title": "XmlNode"
      },
      "index": {
        "description": "Interface for XmlArrow to basic data types NTree and XmlTree If this module must be used in code working with arrows it should be imported qualified e.g as XN to prevent name clashes For code working on the node and tree level this module is the interface for writing code without using the constructor functions of XNode and NTree directly",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "XmlNode",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Node",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#t:XmlNode",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "class",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#XmlNode",
        "fct-type": "class",
        "title": "XmlNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "XmlNode",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Node",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:addAttr",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#addAttr",
        "fct-type": "function",
        "title": "addAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "addAttr",
        "normalized": "XmlTree-\u003eXmlTrees-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Attr",
        "signature": "XmlTree-\u003eXmlTrees-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeAttrName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeAttrName",
        "fct-type": "method",
        "title": "changeAttrName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeAttrName",
        "normalized": "(QName-\u003eQName)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Attr Name",
        "signature": "(QName-\u003eQName)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(XmlTrees -\u003e XmlTrees) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeAttrl",
        "fct-type": "method",
        "title": "changeAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeAttrl",
        "normalized": "(XmlTrees-\u003eXmlTrees)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "(XmlTrees-\u003eXmlTrees)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeBlob",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(Blob -\u003e Blob) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeBlob",
        "fct-type": "method",
        "title": "changeBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeBlob",
        "normalized": "(Blob-\u003eBlob)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Blob",
        "signature": "(Blob-\u003eBlob)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeCmt",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeCmt",
        "fct-type": "method",
        "title": "changeCmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeCmt",
        "normalized": "(String-\u003eString)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Cmt",
        "signature": "(String-\u003eString)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeDTDAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(Attributes -\u003e Attributes) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeDTDAttrl",
        "fct-type": "method",
        "title": "changeDTDAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeDTDAttrl",
        "normalized": "(Attributes-\u003eAttributes)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "DTDAttrl",
        "signature": "(Attributes-\u003eAttributes)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeElemName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeElemName",
        "fct-type": "method",
        "title": "changeElemName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeElemName",
        "normalized": "(QName-\u003eQName)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Elem Name",
        "signature": "(QName-\u003eQName)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeName",
        "fct-type": "method",
        "title": "changeName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeName",
        "normalized": "(QName-\u003eQName)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Name",
        "signature": "(QName-\u003eQName)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changePiName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(QName -\u003e QName) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changePiName",
        "fct-type": "method",
        "title": "changePiName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changePiName",
        "normalized": "(QName-\u003eQName)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Pi Name",
        "signature": "(QName-\u003eQName)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:changeText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String) -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#changeText",
        "fct-type": "method",
        "title": "changeText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "changeText",
        "normalized": "(String-\u003eString)-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Text",
        "signature": "(String-\u003eString)-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:concText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#concText",
        "fct-type": "function",
        "title": "concText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "concText",
        "normalized": "XmlTree-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Text",
        "signature": "XmlTree-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getAttrName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe QName",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getAttrName",
        "fct-type": "method",
        "title": "getAttrName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getAttrName",
        "normalized": "a-\u003eMaybe QName",
        "package": "hxt",
        "partial": "Attr Name",
        "signature": "a-\u003eMaybe QName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getAttrl",
        "fct-type": "method",
        "title": "getAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getAttrl",
        "normalized": "a-\u003eMaybe XmlTrees",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "a-\u003eMaybe XmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getBlob",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe Blob",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getBlob",
        "fct-type": "method",
        "title": "getBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getBlob",
        "normalized": "a-\u003eMaybe Blob",
        "package": "hxt",
        "partial": "Blob",
        "signature": "a-\u003eMaybe Blob"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getCdata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getCdata",
        "fct-type": "method",
        "title": "getCdata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getCdata",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Cdata",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getCharRef",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe Int",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getCharRef",
        "fct-type": "method",
        "title": "getCharRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getCharRef",
        "normalized": "a-\u003eMaybe Int",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": "a-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getCmt",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getCmt",
        "fct-type": "method",
        "title": "getCmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getCmt",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Cmt",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getDTDAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe Attributes",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getDTDAttrl",
        "fct-type": "method",
        "title": "getDTDAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getDTDAttrl",
        "normalized": "a-\u003eMaybe Attributes",
        "package": "hxt",
        "partial": "DTDAttrl",
        "signature": "a-\u003eMaybe Attributes"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getDTDPart",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe DTDElem",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getDTDPart",
        "fct-type": "method",
        "title": "getDTDPart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getDTDPart",
        "normalized": "a-\u003eMaybe DTDElem",
        "package": "hxt",
        "partial": "DTDPart",
        "signature": "a-\u003eMaybe DTDElem"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getElemName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe QName",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getElemName",
        "fct-type": "method",
        "title": "getElemName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getElemName",
        "normalized": "a-\u003eMaybe QName",
        "package": "hxt",
        "partial": "Elem Name",
        "signature": "a-\u003eMaybe QName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getEntityRef",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getEntityRef",
        "fct-type": "method",
        "title": "getEntityRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getEntityRef",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Entity Ref",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getErrorLevel",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe Int",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getErrorLevel",
        "fct-type": "method",
        "title": "getErrorLevel"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getErrorLevel",
        "normalized": "a-\u003eMaybe Int",
        "package": "hxt",
        "partial": "Error Level",
        "signature": "a-\u003eMaybe Int"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getErrorMsg",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getErrorMsg",
        "fct-type": "method",
        "title": "getErrorMsg"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getErrorMsg",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Error Msg",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getLocalPart",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getLocalPart",
        "fct-type": "method",
        "title": "getLocalPart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getLocalPart",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Local Part",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe QName",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getName",
        "fct-type": "method",
        "title": "getName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getName",
        "normalized": "a-\u003eMaybe QName",
        "package": "hxt",
        "partial": "Name",
        "signature": "a-\u003eMaybe QName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getNamePrefix",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getNamePrefix",
        "fct-type": "method",
        "title": "getNamePrefix"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getNamePrefix",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Name Prefix",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getNamespaceUri",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getNamespaceUri",
        "fct-type": "method",
        "title": "getNamespaceUri"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getNamespaceUri",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Namespace Uri",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getPiContent",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getPiContent",
        "fct-type": "method",
        "title": "getPiContent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getPiContent",
        "normalized": "a-\u003eMaybe XmlTrees",
        "package": "hxt",
        "partial": "Pi Content",
        "signature": "a-\u003eMaybe XmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getPiName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe QName",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getPiName",
        "fct-type": "method",
        "title": "getPiName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getPiName",
        "normalized": "a-\u003eMaybe QName",
        "package": "hxt",
        "partial": "Pi Name",
        "signature": "a-\u003eMaybe QName"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getQualifiedName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getQualifiedName",
        "fct-type": "method",
        "title": "getQualifiedName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getQualifiedName",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Qualified Name",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getText",
        "fct-type": "method",
        "title": "getText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getText",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Text",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getUniversalName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getUniversalName",
        "fct-type": "method",
        "title": "getUniversalName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getUniversalName",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Universal Name",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:getUniversalUri",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Maybe String",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#getUniversalUri",
        "fct-type": "method",
        "title": "getUniversalUri"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "getUniversalUri",
        "normalized": "a-\u003eMaybe String",
        "package": "hxt",
        "partial": "Universal Uri",
        "signature": "a-\u003eMaybe String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isAttr",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isAttr",
        "fct-type": "method",
        "title": "isAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isAttr",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Attr",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isBlob",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isBlob",
        "fct-type": "method",
        "title": "isBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isBlob",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Blob",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isCdata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isCdata",
        "fct-type": "method",
        "title": "isCdata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isCdata",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Cdata",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isCharRef",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isCharRef",
        "fct-type": "method",
        "title": "isCharRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isCharRef",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isCmt",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isCmt",
        "fct-type": "method",
        "title": "isCmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isCmt",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Cmt",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isDTD",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isDTD",
        "fct-type": "method",
        "title": "isDTD"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isDTD",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "DTD",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isElem",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isElem",
        "fct-type": "method",
        "title": "isElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isElem",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Elem",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isEntityRef",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isEntityRef",
        "fct-type": "method",
        "title": "isEntityRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isEntityRef",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Entity Ref",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isError",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isError",
        "fct-type": "method",
        "title": "isError"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isError",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Error",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isPi",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isPi",
        "fct-type": "method",
        "title": "isPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isPi",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Pi",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isRoot",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isRoot",
        "fct-type": "method",
        "title": "isRoot"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isRoot",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Root",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:isText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#isText",
        "fct-type": "method",
        "title": "isText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "isText",
        "normalized": "a-\u003eBool",
        "package": "hxt",
        "partial": "Text",
        "signature": "a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mergeAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e XmlTrees -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mergeAttrl",
        "fct-type": "function",
        "title": "mergeAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mergeAttrl",
        "normalized": "XmlTrees-\u003eXmlTrees-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Attrl",
        "signature": "XmlTrees-\u003eXmlTrees-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mergeText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mergeText",
        "fct-type": "function",
        "title": "mergeText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mergeText",
        "normalized": "XmlTree-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Text",
        "signature": "XmlTree-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkAttr",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkAttr",
        "fct-type": "function",
        "title": "mkAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkAttr",
        "normalized": "QName-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Attr",
        "signature": "QName-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkAttr-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkAttr%27",
        "fct-type": "function",
        "title": "mkAttr'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkAttr'",
        "normalized": "QName-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Attr'",
        "signature": "QName-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkAttrNode",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XNode",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkAttrNode",
        "fct-type": "function",
        "title": "mkAttrNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkAttrNode",
        "normalized": "QName-\u003eXNode",
        "package": "hxt",
        "partial": "Attr Node",
        "signature": "QName-\u003eXNode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkBlob",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Blob -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkBlob",
        "fct-type": "method",
        "title": "mkBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkBlob",
        "normalized": "Blob-\u003ea",
        "package": "hxt",
        "partial": "Blob",
        "signature": "Blob-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkCdata",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkCdata",
        "fct-type": "method",
        "title": "mkCdata"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkCdata",
        "normalized": "String-\u003ea",
        "package": "hxt",
        "partial": "Cdata",
        "signature": "String-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkCdata-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkCdata%27",
        "fct-type": "function",
        "title": "mkCdata'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkCdata'",
        "normalized": "String-\u003eXmlTree",
        "package": "hxt",
        "partial": "Cdata'",
        "signature": "String-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkCharRef",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkCharRef",
        "fct-type": "method",
        "title": "mkCharRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkCharRef",
        "normalized": "Int-\u003ea",
        "package": "hxt",
        "partial": "Char Ref",
        "signature": "Int-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkCharRef-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkCharRef%27",
        "fct-type": "function",
        "title": "mkCharRef'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkCharRef'",
        "normalized": "Int-\u003eXmlTree",
        "package": "hxt",
        "partial": "Char Ref'",
        "signature": "Int-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkCmt",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkCmt",
        "fct-type": "method",
        "title": "mkCmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkCmt",
        "normalized": "String-\u003ea",
        "package": "hxt",
        "partial": "Cmt",
        "signature": "String-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkCmt-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkCmt%27",
        "fct-type": "function",
        "title": "mkCmt'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkCmt'",
        "normalized": "String-\u003eXmlTree",
        "package": "hxt",
        "partial": "Cmt'",
        "signature": "String-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkDTDElem",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "DTDElem -\u003e Attributes -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkDTDElem",
        "fct-type": "function",
        "title": "mkDTDElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkDTDElem",
        "normalized": "DTDElem-\u003eAttributes-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "DTDElem",
        "signature": "DTDElem-\u003eAttributes-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkDTDElem-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "DTDElem -\u003e Attributes -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkDTDElem%27",
        "fct-type": "function",
        "title": "mkDTDElem'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkDTDElem'",
        "normalized": "DTDElem-\u003eAttributes-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "DTDElem'",
        "signature": "DTDElem-\u003eAttributes-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkDTDNode",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "DTDElem -\u003e Attributes -\u003e XNode",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkDTDNode",
        "fct-type": "function",
        "title": "mkDTDNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkDTDNode",
        "normalized": "DTDElem-\u003eAttributes-\u003eXNode",
        "package": "hxt",
        "partial": "DTDNode",
        "signature": "DTDElem-\u003eAttributes-\u003eXNode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkElement",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkElement",
        "fct-type": "function",
        "title": "mkElement"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkElement",
        "normalized": "QName-\u003eXmlTrees-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Element",
        "signature": "QName-\u003eXmlTrees-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkElement-39-",
      "description": {
        "fct-descr": "\u003cp\u003eweak normalform versions of constructors\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkElement%27",
        "fct-type": "function",
        "title": "mkElement'"
      },
      "index": {
        "description": "weak normalform versions of constructors",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkElement'",
        "normalized": "QName-\u003eXmlTrees-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Element'",
        "signature": "QName-\u003eXmlTrees-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkElementNode",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e XNode",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkElementNode",
        "fct-type": "function",
        "title": "mkElementNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkElementNode",
        "normalized": "QName-\u003eXmlTrees-\u003eXNode",
        "package": "hxt",
        "partial": "Element Node",
        "signature": "QName-\u003eXmlTrees-\u003eXNode"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkEntityRef",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkEntityRef",
        "fct-type": "method",
        "title": "mkEntityRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkEntityRef",
        "normalized": "String-\u003ea",
        "package": "hxt",
        "partial": "Entity Ref",
        "signature": "String-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkEntityRef-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkEntityRef%27",
        "fct-type": "function",
        "title": "mkEntityRef'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkEntityRef'",
        "normalized": "String-\u003eXmlTree",
        "package": "hxt",
        "partial": "Entity Ref'",
        "signature": "String-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkError",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkError",
        "fct-type": "method",
        "title": "mkError"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkError",
        "normalized": "Int-\u003eString-\u003ea",
        "package": "hxt",
        "partial": "Error",
        "signature": "Int-\u003eString-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkError-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Int -\u003e String -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkError%27",
        "fct-type": "function",
        "title": "mkError'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkError'",
        "normalized": "Int-\u003eString-\u003eXmlTree",
        "package": "hxt",
        "partial": "Error'",
        "signature": "Int-\u003eString-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkPi",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkPi",
        "fct-type": "method",
        "title": "mkPi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkPi",
        "normalized": "QName-\u003eXmlTrees-\u003ea",
        "package": "hxt",
        "partial": "Pi",
        "signature": "QName-\u003eXmlTrees-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkPi-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkPi%27",
        "fct-type": "function",
        "title": "mkPi'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkPi'",
        "normalized": "QName-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Pi'",
        "signature": "QName-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkRoot",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkRoot",
        "fct-type": "function",
        "title": "mkRoot"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkRoot",
        "normalized": "XmlTrees-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Root",
        "signature": "XmlTrees-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkRoot-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e XmlTrees -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkRoot%27",
        "fct-type": "function",
        "title": "mkRoot'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkRoot'",
        "normalized": "XmlTrees-\u003eXmlTrees-\u003eXmlTree",
        "package": "hxt",
        "partial": "Root'",
        "signature": "XmlTrees-\u003eXmlTrees-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkText",
        "fct-type": "method",
        "title": "mkText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkText",
        "normalized": "String-\u003ea",
        "package": "hxt",
        "partial": "Text",
        "signature": "String-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:mkText-39-",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#mkText%27",
        "fct-type": "function",
        "title": "mkText'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "mkText'",
        "normalized": "String-\u003eXmlTree",
        "package": "hxt",
        "partial": "Text'",
        "signature": "String-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setAttrName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setAttrName",
        "fct-type": "method",
        "title": "setAttrName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setAttrName",
        "normalized": "QName-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Attr Name",
        "signature": "QName-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setBlob",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Blob -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setBlob",
        "fct-type": "method",
        "title": "setBlob"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setBlob",
        "normalized": "Blob-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Blob",
        "signature": "Blob-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setCmt",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setCmt",
        "fct-type": "method",
        "title": "setCmt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setCmt",
        "normalized": "String-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Cmt",
        "signature": "String-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setDTDAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setDTDAttrl",
        "fct-type": "method",
        "title": "setDTDAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setDTDAttrl",
        "normalized": "Attributes-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "DTDAttrl",
        "signature": "Attributes-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setElemAttrl",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setElemAttrl",
        "fct-type": "method",
        "title": "setElemAttrl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setElemAttrl",
        "normalized": "XmlTrees-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Elem Attrl",
        "signature": "XmlTrees-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setElemName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setElemName",
        "fct-type": "method",
        "title": "setElemName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setElemName",
        "normalized": "QName-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Elem Name",
        "signature": "QName-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setName",
        "fct-type": "method",
        "title": "setName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setName",
        "normalized": "QName-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Name",
        "signature": "QName-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setPiName",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "QName -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setPiName",
        "fct-type": "method",
        "title": "setPiName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setPiName",
        "normalized": "QName-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Pi Name",
        "signature": "QName-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:setText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a -\u003e a",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#setText",
        "fct-type": "method",
        "title": "setText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "setText",
        "normalized": "String-\u003ea-\u003ea",
        "package": "hxt",
        "partial": "Text",
        "signature": "String-\u003ea-\u003ea"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DOM-XmlNode.html#v:toText",
      "description": {
        "fct-module": "Text.XML.HXT.DOM.XmlNode",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTree",
        "fct-source": "src/Text-XML-HXT-DOM-XmlNode.html#toText",
        "fct-type": "function",
        "title": "toText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DOM XmlNode",
        "module": "Text.XML.HXT.DOM.XmlNode",
        "name": "toText",
        "normalized": "XmlTree-\u003eXmlTree",
        "package": "hxt",
        "partial": "Text",
        "signature": "XmlTree-\u003eXmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-AttributeValueValidation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides functions for validating attributes.\n\u003c/p\u003e\u003cp\u003eThe main functions are:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Check if the attribute value meets the lexical constraints of its type\n\u003c/li\u003e\u003cli\u003e Normalization of an attribute value\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.AttributeValueValidation",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-AttributeValueValidation.html",
        "fct-type": "module",
        "title": "AttributeValueValidation"
      },
      "index": {
        "description": "This module provides functions for validating attributes The main functions are Check if the attribute value meets the lexical constraints of its type Normalization of an attribute value",
        "hierarchy": "Text XML HXT DTDValidation AttributeValueValidation",
        "module": "Text.XML.HXT.DTDValidation.AttributeValueValidation",
        "name": "AttributeValueValidation",
        "normalized": "",
        "package": "hxt",
        "partial": "Attribute Value Validation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-AttributeValueValidation.html#v:checkAttributeValue",
      "description": {
        "fct-descr": "\u003cp\u003eChecks if the attribute value meets the lexical constraints of its type.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter dtdPart :  the children of the \u003ccode\u003eDOCTYPE\u003c/code\u003e node\n\u003c/li\u003e\u003cli\u003e 2.parameter attrDecl :  the declaration of the attribute from the DTD\n\u003c/li\u003e\u003cli\u003e returns : a function which takes an element (XTag or XDTD ATTLIST),\n                    checks if the attribute value meets the lexical constraints\n                    of its type and returns a list of errors\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.AttributeValueValidation",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e XmlTree -\u003e XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-AttributeValueValidation.html#checkAttributeValue",
        "fct-type": "function",
        "title": "checkAttributeValue"
      },
      "index": {
        "description": "Checks if the attribute value meets the lexical constraints of its type parameter dtdPart the children of the DOCTYPE node parameter attrDecl the declaration of the attribute from the DTD returns function which takes an element XTag or XDTD ATTLIST checks if the attribute value meets the lexical constraints of its type and returns list of errors",
        "hierarchy": "Text XML HXT DTDValidation AttributeValueValidation",
        "module": "Text.XML.HXT.DTDValidation.AttributeValueValidation",
        "name": "checkAttributeValue",
        "normalized": "XmlTrees-\u003eXmlTree-\u003eXmlArrow",
        "package": "hxt",
        "partial": "Attribute Value",
        "signature": "XmlTrees-\u003eXmlTree-\u003eXmlArrow"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-AttributeValueValidation.html#v:normalizeAttributeValue",
      "description": {
        "fct-descr": "\u003cp\u003eNormalizes an attribute value with respect to its type. (3.3.3 / p.29 in Spec)\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter attrDecl :  the declaration of the attribute from the DTD. Expected\n                   is a list. If the list is empty, no declaration exists.\n\u003c/li\u003e\u003cli\u003e 2.parameter value :  the attribute value to be normalized\n\u003c/li\u003e\u003cli\u003e returns : the normalized value\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.AttributeValueValidation",
        "fct-package": "hxt",
        "fct-signature": "Maybe XmlTree -\u003e String -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-AttributeValueValidation.html#normalizeAttributeValue",
        "fct-type": "function",
        "title": "normalizeAttributeValue"
      },
      "index": {
        "description": "Normalizes an attribute value with respect to its type p.29 in Spec parameter attrDecl the declaration of the attribute from the DTD Expected is list If the list is empty no declaration exists parameter value the attribute value to be normalized returns the normalized value",
        "hierarchy": "Text XML HXT DTDValidation AttributeValueValidation",
        "module": "Text.XML.HXT.DTDValidation.AttributeValueValidation",
        "name": "normalizeAttributeValue",
        "normalized": "Maybe XmlTree-\u003eString-\u003eString",
        "package": "hxt",
        "partial": "Attribute Value",
        "signature": "Maybe XmlTree-\u003eString-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DTDValidation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides functions for validating the DTD of XML documents\n   represented as XmlTree.\n\u003c/p\u003e\u003cp\u003eUnlike other popular XML validation tools the validation process returns\n   a list of errors instead of aborting after the first error was found.\n\u003c/p\u003e\u003cp\u003eUnlike validation of the document, the DTD branch is traversed four times:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Validation of Notations\n\u003c/li\u003e\u003cli\u003e Validation of Unparsed Entities\n\u003c/li\u003e\u003cli\u003e Validation of Element declarations\n\u003c/li\u003e\u003cli\u003e Validation of Attribute declarations\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DTDValidation",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DTDValidation.html",
        "fct-type": "module",
        "title": "DTDValidation"
      },
      "index": {
        "description": "This module provides functions for validating the DTD of XML documents represented as XmlTree Unlike other popular XML validation tools the validation process returns list of errors instead of aborting after the first error was found Unlike validation of the document the DTD branch is traversed four times Validation of Notations Validation of Unparsed Entities Validation of Element declarations Validation of Attribute declarations",
        "hierarchy": "Text XML HXT DTDValidation DTDValidation",
        "module": "Text.XML.HXT.DTDValidation.DTDValidation",
        "name": "DTDValidation",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDValidation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DTDValidation.html#v:removeDoublicateDefs",
      "description": {
        "fct-descr": "\u003cp\u003eRemoves doublicate declarations from the DTD, which first declaration is\n binding. This is the case for ATTLIST and ENTITY declarations.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : A function that replaces the children of DOCTYPE nodes by a list\n               where all multiple declarations are removed.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DTDValidation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DTDValidation.html#removeDoublicateDefs",
        "fct-type": "function",
        "title": "removeDoublicateDefs"
      },
      "index": {
        "description": "Removes doublicate declarations from the DTD which first declaration is binding This is the case for ATTLIST and ENTITY declarations returns function that replaces the children of DOCTYPE nodes by list where all multiple declarations are removed",
        "hierarchy": "Text XML HXT DTDValidation DTDValidation",
        "module": "Text.XML.HXT.DTDValidation.DTDValidation",
        "name": "removeDoublicateDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Doublicate Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DTDValidation.html#v:validateDTD",
      "description": {
        "fct-descr": "\u003cp\u003eValidate a DTD.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : a functions which takes the DTD subset of the XmlTree, checks\n                  if the DTD is valid and returns a list of errors\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DTDValidation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DTDValidation.html#validateDTD",
        "fct-type": "function",
        "title": "validateDTD"
      },
      "index": {
        "description": "Validate DTD returns functions which takes the DTD subset of the XmlTree checks if the DTD is valid and returns list of errors",
        "hierarchy": "Text XML HXT DTDValidation DTDValidation",
        "module": "Text.XML.HXT.DTDValidation.DTDValidation",
        "name": "validateDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DocTransformation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides functions for transforming XML documents represented as\n   XmlTree with respect to its DTD.\n\u003c/p\u003e\u003cp\u003eTransforming an XML document with respect to its DTD means:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e add all attributes with default values\n\u003c/li\u003e\u003cli\u003e normalize all attribute values\n\u003c/li\u003e\u003cli\u003e sort all attributes in lexical order\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eNote: Transformation should be started after validation.\n\u003c/p\u003e\u003cp\u003eBefore the document is validated, a lookup-table is build on the basis of\n   the DTD which maps element names to their transformation functions.\n   After this initialization phase the whole document is traversed in preorder\n   and every element is transformed by the XmlFilter from the lookup-table.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DocTransformation",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DocTransformation.html",
        "fct-type": "module",
        "title": "DocTransformation"
      },
      "index": {
        "description": "This module provides functions for transforming XML documents represented as XmlTree with respect to its DTD Transforming an XML document with respect to its DTD means add all attributes with default values normalize all attribute values sort all attributes in lexical order Note Transformation should be started after validation Before the document is validated lookup-table is build on the basis of the DTD which maps element names to their transformation functions After this initialization phase the whole document is traversed in preorder and every element is transformed by the XmlFilter from the lookup-table",
        "hierarchy": "Text XML HXT DTDValidation DocTransformation",
        "module": "Text.XML.HXT.DTDValidation.DocTransformation",
        "name": "DocTransformation",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc Transformation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DocTransformation.html#v:transform",
      "description": {
        "fct-descr": "\u003cp\u003efilter for transforming the document.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter dtdPart :  the DTD subset (Node \u003ccode\u003eDOCTYPE\u003c/code\u003e) of the XmlTree\n\u003c/li\u003e\u003cli\u003e 2.parameter doc :  the document subset of the XmlTree\n\u003c/li\u003e\u003cli\u003e returns : a list of errors\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DocTransformation",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DocTransformation.html#transform",
        "fct-type": "function",
        "title": "transform"
      },
      "index": {
        "description": "filter for transforming the document parameter dtdPart the DTD subset Node DOCTYPE of the XmlTree parameter doc the document subset of the XmlTree returns list of errors",
        "hierarchy": "Text XML HXT DTDValidation DocTransformation",
        "module": "Text.XML.HXT.DTDValidation.DocTransformation",
        "name": "transform",
        "normalized": "XmlTree-\u003eXmlArrow",
        "package": "hxt",
        "partial": "",
        "signature": "XmlTree-\u003eXmlArrow"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DocValidation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides functions for validating XML Documents represented as\n   XmlTree.\n\u003c/p\u003e\u003cp\u003eUnlike other popular XML validation tools the validation process returns\n   a list of errors instead of aborting after the first error was found.\n\u003c/p\u003e\u003cp\u003eBefore the document is validated, a lookup-table is build on the basis of\n   the DTD which maps element names to their validation functions.\n   After this initialization phase the whole document is traversed in preorder\n   and every element is validated by the XmlFilter from the lookup-table.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DocValidation",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DocValidation.html",
        "fct-type": "module",
        "title": "DocValidation"
      },
      "index": {
        "description": "This module provides functions for validating XML Documents represented as XmlTree Unlike other popular XML validation tools the validation process returns list of errors instead of aborting after the first error was found Before the document is validated lookup-table is build on the basis of the DTD which maps element names to their validation functions After this initialization phase the whole document is traversed in preorder and every element is validated by the XmlFilter from the lookup-table",
        "hierarchy": "Text XML HXT DTDValidation DocValidation",
        "module": "Text.XML.HXT.DTDValidation.DocValidation",
        "name": "DocValidation",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc Validation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-DocValidation.html#v:validateDoc",
      "description": {
        "fct-descr": "\u003cp\u003eValidate a document.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter dtdPart :  the DTD subset (Node \u003ccode\u003eDOCTYPE\u003c/code\u003e) of the XmlTree\n\u003c/li\u003e\u003cli\u003e 2.parameter doc :  the document subset of the XmlTree\n\u003c/li\u003e\u003cli\u003e returns : a list of errors\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.DocValidation",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-DocValidation.html#validateDoc",
        "fct-type": "function",
        "title": "validateDoc"
      },
      "index": {
        "description": "Validate document parameter dtdPart the DTD subset Node DOCTYPE of the XmlTree parameter doc the document subset of the XmlTree returns list of errors",
        "hierarchy": "Text XML HXT DTDValidation DocValidation",
        "module": "Text.XML.HXT.DTDValidation.DocValidation",
        "name": "validateDoc",
        "normalized": "XmlTree-\u003eXmlArrow",
        "package": "hxt",
        "partial": "Doc",
        "signature": "XmlTree-\u003eXmlArrow"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-IdValidation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides functions for checking special ID\u003cem\u003eIDREF\u003c/em\u003eIDREFS constraints.\n\u003c/p\u003e\u003cp\u003eChecking special ID/IDREF/IDREFS constraints means:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e checking that all ID values are unique.\n\u003c/li\u003e\u003cli\u003e checking that all IDREF/IDREFS values match the value of some ID attribute\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eID-Validation should be started before or after validating the document.\n\u003c/p\u003e\u003cp\u003eFirst all nodes with ID attributes are collected from the document, then\n   it is validated that values of ID attributes do not occure more than once.\n   During a second iteration over the document it is validated that there exists\n   an ID attribute value for IDREF/IDREFS attribute values.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.IdValidation",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-IdValidation.html",
        "fct-type": "module",
        "title": "IdValidation"
      },
      "index": {
        "description": "This module provides functions for checking special ID IDREF IDREFS constraints Checking special ID IDREF IDREFS constraints means checking that all ID values are unique checking that all IDREF IDREFS values match the value of some ID attribute ID-Validation should be started before or after validating the document First all nodes with ID attributes are collected from the document then it is validated that values of ID attributes do not occure more than once During second iteration over the document it is validated that there exists an ID attribute value for IDREF IDREFS attribute values",
        "hierarchy": "Text XML HXT DTDValidation IdValidation",
        "module": "Text.XML.HXT.DTDValidation.IdValidation",
        "name": "IdValidation",
        "normalized": "",
        "package": "hxt",
        "partial": "Id Validation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-IdValidation.html#v:validateIds",
      "description": {
        "fct-descr": "\u003cp\u003ePerform the validation of the ID\u003cem\u003eIDREF\u003c/em\u003eIDREFS constraints.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter dtdPart :  the DTD subset (Node \u003ccode\u003eDOCTYPE\u003c/code\u003e) of the XmlTree\n\u003c/li\u003e\u003cli\u003e 2.parameter doc :  the document subset of the XmlTree\n\u003c/li\u003e\u003cli\u003e returns : a list of errors\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.IdValidation",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-IdValidation.html#validateIds",
        "fct-type": "function",
        "title": "validateIds"
      },
      "index": {
        "description": "Perform the validation of the ID IDREF IDREFS constraints parameter dtdPart the DTD subset Node DOCTYPE of the XmlTree parameter doc the document subset of the XmlTree returns list of errors",
        "hierarchy": "Text XML HXT DTDValidation IdValidation",
        "module": "Text.XML.HXT.DTDValidation.IdValidation",
        "name": "validateIds",
        "normalized": "XmlTree-\u003eXmlArrow",
        "package": "hxt",
        "partial": "Ids",
        "signature": "XmlTree-\u003eXmlArrow"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for regular expression matching based on derivatives of regular expressions.\n\u003c/p\u003e\u003cp\u003eThe code was taken from Joe English (\u003ca\u003ehttp://www.flightlab.com/~joe/sgml/validate.html\u003c/a\u003e).\n   Tested and extended by Martin Schmidt.\n\u003c/p\u003e\u003cp\u003eFurther references for the algorithm:\n\u003c/p\u003e\u003cp\u003eJanusz A. Brzozowski.\n\u003c/p\u003e\u003cp\u003eDerivatives of Regular Expressions. Journal of the ACM, Volume 11, Issue 4, 1964.\n\u003c/p\u003e\u003cp\u003eMark Hopkins.\n\u003c/p\u003e\u003cp\u003eRegular Expression Package. Posted to comp.compilers, 1994.\n        Available per FTP at \u003ca\u003eftp://iecc.com/pub/file/regex.tar.gz\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html",
        "fct-type": "module",
        "title": "RE"
      },
      "index": {
        "description": "module for regular expression matching based on derivatives of regular expressions The code was taken from Joe English http www.flightlab.com joe sgml validate.html Tested and extended by Martin Schmidt Further references for the algorithm Janusz Brzozowski Derivatives of Regular Expressions Journal of the ACM Volume Issue Mark Hopkins Regular Expression Package Posted to comp.compilers Available per FTP at ftp iecc.com pub file regex.tar.gz",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE",
        "normalized": "",
        "package": "hxt",
        "partial": "RE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#t:RE",
      "description": {
        "fct-descr": "\u003cp\u003eData type for regular expressions.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "data",
        "title": "RE"
      },
      "index": {
        "description": "Data type for regular expressions",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE",
        "normalized": "",
        "package": "hxt",
        "partial": "RE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_ALT",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_ALT (RE a) (RE a)",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_ALT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_ALT",
        "normalized": "",
        "package": "hxt",
        "partial": "RE ALT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_DOT",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_DOT",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_DOT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_DOT",
        "normalized": "",
        "package": "hxt",
        "partial": "RE DOT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_OPT",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_OPT (RE a)",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_OPT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_OPT",
        "normalized": "",
        "package": "hxt",
        "partial": "RE OPT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_PLUS",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_PLUS (RE a)",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_PLUS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_PLUS",
        "normalized": "",
        "package": "hxt",
        "partial": "RE PLUS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_REP",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_REP (RE a)",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_REP"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_REP",
        "normalized": "",
        "package": "hxt",
        "partial": "RE REP",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_SEQ",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_SEQ (RE a) (RE a)",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_SEQ"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_SEQ",
        "normalized": "",
        "package": "hxt",
        "partial": "RE SEQ",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_SYM",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_SYM a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_SYM"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_SYM",
        "normalized": "",
        "package": "hxt",
        "partial": "RE SYM",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_UNIT",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_UNIT",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_UNIT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_UNIT",
        "normalized": "",
        "package": "hxt",
        "partial": "RE UNIT",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:RE_ZERO",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE_ZERO String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "function",
        "title": "RE_ZERO"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "RE_ZERO",
        "normalized": "",
        "package": "hxt",
        "partial": "RE ZERO",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:checkRE",
      "description": {
        "fct-descr": "\u003cp\u003eChecks if an input matched a regular expression. The function should be\n called after matches.\n\u003c/p\u003e\u003cp\u003eWas the sentence used in \u003ccode\u003ematches\u003c/code\u003e in the language of the regular expression?\n -\u003e matches e s == s `in` L(e)?\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  the derived regular expression\n\u003c/li\u003e\u003cli\u003e returns : empty String if input matched the regular expression, otherwise\n               an error message is returned\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#checkRE",
        "fct-type": "function",
        "title": "checkRE"
      },
      "index": {
        "description": "Checks if an input matched regular expression The function should be called after matches Was the sentence used in matches in the language of the regular expression matches in parameter re the derived regular expression returns empty String if input matched the regular expression otherwise an error message is returned",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "checkRE",
        "normalized": "RE a-\u003eString",
        "package": "hxt",
        "partial": "RE",
        "signature": "RE a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:matches",
      "description": {
        "fct-descr": "\u003cp\u003eDerives a regular expression with respect to a sentence.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  regular expression\n\u003c/li\u003e\u003cli\u003e 2.parameter s :  sentence to which the regular expression is applied\n\u003c/li\u003e\u003cli\u003e returns : the derived regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e [a] -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#matches",
        "fct-type": "function",
        "title": "matches"
      },
      "index": {
        "description": "Derives regular expression with respect to sentence parameter re regular expression parameter sentence to which the regular expression is applied returns the derived regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "matches",
        "normalized": "RE a-\u003e[a]-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003e[a]-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:nullable",
      "description": {
        "fct-descr": "\u003cp\u003eChecks if a regular expression matches the empty sequence.\n\u003c/p\u003e\u003cp\u003enullable e == [] `in` L(e)\n\u003c/p\u003e\u003cp\u003eThis check indicates if a regular expression fits to a sentence or not.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  regular expression to be checked\n\u003c/li\u003e\u003cli\u003e returns : true if regular expression matches the empty sequence,\n                otherwise false\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#nullable",
        "fct-type": "function",
        "title": "nullable"
      },
      "index": {
        "description": "Checks if regular expression matches the empty sequence nullable in This check indicates if regular expression fits to sentence or not parameter re regular expression to be checked returns true if regular expression matches the empty sequence otherwise false",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "nullable",
        "normalized": "RE a-\u003eBool",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:printRE",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a string representation of a regular expression.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  a regular expression\n\u003c/li\u003e\u003cli\u003e returns : the string representation of the regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#printRE",
        "fct-type": "function",
        "title": "printRE"
      },
      "index": {
        "description": "Constructs string representation of regular expression parameter re regular expression returns the string representation of the regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "printRE",
        "normalized": "RE a-\u003eString",
        "package": "hxt",
        "partial": "RE",
        "signature": "RE a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_alt",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs an alternative (|) of two regular expressions\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  first regular expression of alternative\n\u003c/li\u003e\u003cli\u003e 2.parameter re_b :  second regular expression of alternative\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_alt",
        "fct-type": "function",
        "title": "re_alt"
      },
      "index": {
        "description": "Constructs an alternative of two regular expressions parameter re first regular expression of alternative parameter re second regular expression of alternative returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_alt",
        "normalized": "RE a-\u003eRE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_dot",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for accepting any singel symbol\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : regular expression for accepting any singel symbol\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_dot",
        "fct-type": "function",
        "title": "re_dot"
      },
      "index": {
        "description": "Constructs regular expression for accepting any singel symbol returns regular expression for accepting any singel symbol",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_dot",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_opt",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs an option (?) of a regular expression\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  regular expression to be optional\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_opt",
        "fct-type": "function",
        "title": "re_opt"
      },
      "index": {
        "description": "Constructs an option of regular expression parameter re regular expression to be optional returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_opt",
        "normalized": "RE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_plus",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a repetition (+) of a regular expression\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  regular expression to be repeted\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_plus",
        "fct-type": "function",
        "title": "re_plus"
      },
      "index": {
        "description": "Constructs repetition of regular expression parameter re regular expression to be repeted returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_plus",
        "normalized": "RE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_rep",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs an optional repetition (*) of a regular expression\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  regular expression to be repeted\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_rep",
        "fct-type": "function",
        "title": "re_rep"
      },
      "index": {
        "description": "Constructs an optional repetition of regular expression parameter re regular expression to be repeted returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_rep",
        "normalized": "RE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_seq",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a sequence (,) of two regular expressions\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  first regular expression in sequence\n\u003c/li\u003e\u003cli\u003e 2.parameter re_b :  second regular expression in sequence\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_seq",
        "fct-type": "function",
        "title": "re_seq"
      },
      "index": {
        "description": "Constructs sequence of two regular expressions parameter re first regular expression in sequence parameter re second regular expression in sequence returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_seq",
        "normalized": "RE a-\u003eRE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_sym",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for accepting a symbol\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter sym :  the symbol to be accepted\n\u003c/li\u003e\u003cli\u003e returns : regular expression for accepting a symbol\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_sym",
        "fct-type": "function",
        "title": "re_sym"
      },
      "index": {
        "description": "Constructs regular expression for accepting symbol parameter sym the symbol to be accepted returns regular expression for accepting symbol",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_sym",
        "normalized": "a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_unit",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for an empty sequence.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : regular expression for an empty sequence\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_unit",
        "fct-type": "function",
        "title": "re_unit"
      },
      "index": {
        "description": "Constructs regular expression for an empty sequence returns regular expression for an empty sequence",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_unit",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-RE.html#v:re_zero",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for an empty set.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter errMsg :  error message\n\u003c/li\u003e\u003cli\u003e returns : regular expression for an empty set\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.RE",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_zero",
        "fct-type": "function",
        "title": "re_zero"
      },
      "index": {
        "description": "Constructs regular expression for an empty set parameter errMsg error message returns regular expression for an empty set",
        "hierarchy": "Text XML HXT DTDValidation RE",
        "module": "Text.XML.HXT.DTDValidation.RE",
        "name": "re_zero",
        "normalized": "String-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides all datatypes for DTD validation\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html",
        "fct-type": "module",
        "title": "TypeDefs"
      },
      "index": {
        "description": "This module provides all datatypes for DTD validation",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "TypeDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Type Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#t:XmlArrow",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#XmlArrow",
        "fct-type": "type",
        "title": "XmlArrow"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "XmlArrow",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#t:XmlArrowS",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#XmlArrowS",
        "fct-type": "type",
        "title": "XmlArrowS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "XmlArrowS",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Arrow",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:-36--36-",
      "description": {
        "fct-descr": "\u003cp\u003einfix operator for applying an arrow to a list of trees\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter f :  the arrow\n\u003c/li\u003e\u003cli\u003e 2.parameter ts :  the list of trees\n\u003c/li\u003e\u003cli\u003e returns : list of results\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow -\u003e XmlTrees -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#%24%24",
        "fct-type": "function",
        "title": "($$)"
      },
      "index": {
        "description": "infix operator for applying an arrow to list of trees parameter the arrow parameter ts the list of trees returns list of results",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "($$) $$",
        "normalized": "XmlArrow-\u003eXmlTrees-\u003eXmlTrees",
        "package": "hxt",
        "partial": "",
        "signature": "XmlArrow-\u003eXmlTrees-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:dtd_default",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#dtd_default",
        "fct-type": "function",
        "title": "dtd_default"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "dtd_default",
        "normalized": "Attributes-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "Attributes-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:dtd_kind",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#dtd_kind",
        "fct-type": "function",
        "title": "dtd_kind"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "dtd_kind",
        "normalized": "Attributes-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "Attributes-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:dtd_modifier",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#dtd_modifier",
        "fct-type": "function",
        "title": "dtd_modifier"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "dtd_modifier",
        "normalized": "Attributes-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "Attributes-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:dtd_name",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#dtd_name",
        "fct-type": "function",
        "title": "dtd_name"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "dtd_name",
        "normalized": "Attributes-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "Attributes-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:dtd_type",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#dtd_type",
        "fct-type": "function",
        "title": "dtd_type"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "dtd_type",
        "normalized": "Attributes-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "Attributes-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:dtd_value",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "Attributes -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#dtd_value",
        "fct-type": "function",
        "title": "dtd_value"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "dtd_value",
        "normalized": "Attributes-\u003eString",
        "package": "hxt",
        "partial": "",
        "signature": "Attributes-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:getDTDAttributes",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Attributes",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#getDTDAttributes",
        "fct-type": "function",
        "title": "getDTDAttributes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "getDTDAttributes",
        "normalized": "XmlTree-\u003eAttributes",
        "package": "hxt",
        "partial": "DTDAttributes",
        "signature": "XmlTree-\u003eAttributes"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:hasDTDAttrValue",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e (String -\u003e Bool) -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#hasDTDAttrValue",
        "fct-type": "function",
        "title": "hasDTDAttrValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "hasDTDAttrValue",
        "normalized": "String-\u003e(String-\u003eBool)-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "DTDAttr Value",
        "signature": "String-\u003e(String-\u003eBool)-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isAttlistOfElement",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isAttlistOfElement",
        "fct-type": "function",
        "title": "isAttlistOfElement"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isAttlistOfElement",
        "normalized": "String-\u003ea XmlTree XmlTree",
        "package": "hxt",
        "partial": "Attlist Of Element",
        "signature": "String-\u003ea XmlTree XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isDTDAttlistNode",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isDTDAttlistNode",
        "fct-type": "function",
        "title": "isDTDAttlistNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isDTDAttlistNode",
        "normalized": "XmlTree-\u003eBool",
        "package": "hxt",
        "partial": "DTDAttlist Node",
        "signature": "XmlTree-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isDTDContentNode",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isDTDContentNode",
        "fct-type": "function",
        "title": "isDTDContentNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isDTDContentNode",
        "normalized": "XmlTree-\u003eBool",
        "package": "hxt",
        "partial": "DTDContent Node",
        "signature": "XmlTree-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isDTDDoctypeNode",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isDTDDoctypeNode",
        "fct-type": "function",
        "title": "isDTDDoctypeNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isDTDDoctypeNode",
        "normalized": "XmlTree-\u003eBool",
        "package": "hxt",
        "partial": "DTDDoctype Node",
        "signature": "XmlTree-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isDTDElementNode",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isDTDElementNode",
        "fct-type": "function",
        "title": "isDTDElementNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isDTDElementNode",
        "normalized": "XmlTree-\u003eBool",
        "package": "hxt",
        "partial": "DTDElement Node",
        "signature": "XmlTree-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isDTDNameNode",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isDTDNameNode",
        "fct-type": "function",
        "title": "isDTDNameNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isDTDNameNode",
        "normalized": "XmlTree-\u003eBool",
        "package": "hxt",
        "partial": "DTDName Node",
        "signature": "XmlTree-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isDefaultAttrKind",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isDefaultAttrKind",
        "fct-type": "function",
        "title": "isDefaultAttrKind"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isDefaultAttrKind",
        "normalized": "",
        "package": "hxt",
        "partial": "Default Attr Kind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isElemNode",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isElemNode",
        "fct-type": "function",
        "title": "isElemNode"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isElemNode",
        "normalized": "XmlTree-\u003eBool",
        "package": "hxt",
        "partial": "Elem Node",
        "signature": "XmlTree-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isEmptyElement",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isEmptyElement",
        "fct-type": "function",
        "title": "isEmptyElement"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isEmptyElement",
        "normalized": "",
        "package": "hxt",
        "partial": "Empty Element",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isEnumAttrType",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isEnumAttrType",
        "fct-type": "function",
        "title": "isEnumAttrType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isEnumAttrType",
        "normalized": "",
        "package": "hxt",
        "partial": "Enum Attr Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isFixedAttrKind",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isFixedAttrKind",
        "fct-type": "function",
        "title": "isFixedAttrKind"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isFixedAttrKind",
        "normalized": "",
        "package": "hxt",
        "partial": "Fixed Attr Kind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isIdAttrType",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isIdAttrType",
        "fct-type": "function",
        "title": "isIdAttrType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isIdAttrType",
        "normalized": "",
        "package": "hxt",
        "partial": "Id Attr Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isIdRefAttrType",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isIdRefAttrType",
        "fct-type": "function",
        "title": "isIdRefAttrType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isIdRefAttrType",
        "normalized": "",
        "package": "hxt",
        "partial": "Id Ref Attr Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isMixedContentElement",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isMixedContentElement",
        "fct-type": "function",
        "title": "isMixedContentElement"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isMixedContentElement",
        "normalized": "",
        "package": "hxt",
        "partial": "Mixed Content Element",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isNotationAttrType",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isNotationAttrType",
        "fct-type": "function",
        "title": "isNotationAttrType"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isNotationAttrType",
        "normalized": "",
        "package": "hxt",
        "partial": "Notation Attr Type",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isRequiredAttrKind",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isRequiredAttrKind",
        "fct-type": "function",
        "title": "isRequiredAttrKind"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isRequiredAttrKind",
        "normalized": "",
        "package": "hxt",
        "partial": "Required Attr Kind",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:isUnparsedEntity",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "a XmlTree XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#isUnparsedEntity",
        "fct-type": "function",
        "title": "isUnparsedEntity"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "isUnparsedEntity",
        "normalized": "",
        "package": "hxt",
        "partial": "Unparsed Entity",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:msgToErr",
      "description": {
        "fct-descr": "\u003cp\u003ecreate an error message\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "(String -\u003e String) -\u003e LA String XmlTree",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#msgToErr",
        "fct-type": "function",
        "title": "msgToErr"
      },
      "index": {
        "description": "create an error message",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "msgToErr",
        "normalized": "(String-\u003eString)-\u003eLA String XmlTree",
        "package": "hxt",
        "partial": "To Err",
        "signature": "(String-\u003eString)-\u003eLA String XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:nameOfAttr",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#nameOfAttr",
        "fct-type": "function",
        "title": "nameOfAttr"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "nameOfAttr",
        "normalized": "XmlTree-\u003eString",
        "package": "hxt",
        "partial": "Of Attr",
        "signature": "XmlTree-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:nameOfElem",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#nameOfElem",
        "fct-type": "function",
        "title": "nameOfElem"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "nameOfElem",
        "normalized": "XmlTree-\u003eString",
        "package": "hxt",
        "partial": "Of Elem",
        "signature": "XmlTree-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:valueOf",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#valueOf",
        "fct-type": "function",
        "title": "valueOf"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "valueOf",
        "normalized": "String-\u003eXmlTree-\u003eString",
        "package": "hxt",
        "partial": "Of",
        "signature": "String-\u003eXmlTree-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-TypeDefs.html#v:valueOfDTD",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-TypeDefs.html#valueOfDTD",
        "fct-type": "function",
        "title": "valueOfDTD"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation TypeDefs",
        "module": "Text.XML.HXT.DTDValidation.TypeDefs",
        "name": "valueOfDTD",
        "normalized": "String-\u003eXmlTree-\u003eString",
        "package": "hxt",
        "partial": "Of DTD",
        "signature": "String-\u003eXmlTree-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides functions for validating XML documents represented as\n   XmlTree.\n\u003c/p\u003e\u003cp\u003eUnlike other popular XML validation tools the validation functions return\n   a list of errors instead of aborting after the first error was found.\n\u003c/p\u003e\u003cp\u003eNote: The validation process has been split into validation and transformation!\n   If \u003ccode\u003evalidate\u003c/code\u003e did not report any errors, \u003ccode\u003etransform\u003c/code\u003e\n   should be called, to change the document the way a validating parser\n   is expected to do.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html",
        "fct-type": "module",
        "title": "Validation"
      },
      "index": {
        "description": "This module provides functions for validating XML documents represented as XmlTree Unlike other popular XML validation tools the validation functions return list of errors instead of aborting after the first error was found Note The validation process has been split into validation and transformation If validate did not report any errors transform should be called to change the document the way validating parser is expected to do",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "Validation",
        "normalized": "",
        "package": "hxt",
        "partial": "Validation",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:generalEntitiesDefined",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#generalEntitiesDefined",
        "fct-type": "function",
        "title": "generalEntitiesDefined"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "generalEntitiesDefined",
        "normalized": "",
        "package": "hxt",
        "partial": "Entities Defined",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:getDTDSubset",
      "description": {
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#getDTDSubset",
        "fct-type": "function",
        "title": "getDTDSubset"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "getDTDSubset",
        "normalized": "",
        "package": "hxt",
        "partial": "DTDSubset",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:removeDoublicateDefs",
      "description": {
        "fct-descr": "\u003cp\u003eRemoves doublicate declarations from the DTD which first declaration is\n binding. This is the case for ATTLIST and ENTITY declarations.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : A function that replaces the children of DOCTYPE nodes by a list\n               where all multiple declarations are removed.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#removeDoublicateDefs",
        "fct-type": "function",
        "title": "removeDoublicateDefs"
      },
      "index": {
        "description": "Removes doublicate declarations from the DTD which first declaration is binding This is the case for ATTLIST and ENTITY declarations returns function that replaces the children of DOCTYPE nodes by list where all multiple declarations are removed",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "removeDoublicateDefs",
        "normalized": "",
        "package": "hxt",
        "partial": "Doublicate Defs",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:transform",
      "description": {
        "fct-descr": "\u003cp\u003efilter for transforming a document with respect to the given DTD.\n\u003c/p\u003e\u003cp\u003eValidating parsers\n are expected to  normalize attribute values and add default values.\n This function should be called after a successful validation.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : a function which expects a complete XML document tree\n                and returns the transformed XmlTree\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#transform",
        "fct-type": "function",
        "title": "transform"
      },
      "index": {
        "description": "filter for transforming document with respect to the given DTD Validating parsers are expected to normalize attribute values and add default values This function should be called after successful validation returns function which expects complete XML document tree and returns the transformed XmlTree",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "transform",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:validate",
      "description": {
        "fct-descr": "\u003cp\u003eMain validation filter. Check if the DTD and the document are valid.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : a function which expects a complete document as XmlTree input\n                     and returns a list of all errors found.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#validate",
        "fct-type": "function",
        "title": "validate"
      },
      "index": {
        "description": "Main validation filter Check if the DTD and the document are valid returns function which expects complete document as XmlTree input and returns list of all errors found",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "validate",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:validateDTD",
      "description": {
        "fct-descr": "\u003cp\u003eCheck if the DTD is valid.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : a function which expects an XmlTree from the parser as input\n                     and returns a list of all errors found in the DTD.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#validateDTD",
        "fct-type": "function",
        "title": "validateDTD"
      },
      "index": {
        "description": "Check if the DTD is valid returns function which expects an XmlTree from the parser as input and returns list of all errors found in the DTD",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "validateDTD",
        "normalized": "",
        "package": "hxt",
        "partial": "DTD",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-Validation.html#v:validateDoc",
      "description": {
        "fct-descr": "\u003cp\u003eCheck if the document corresponds to the given DTD.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : a function which expects a complete document as XmlTree input\n                     and returns a list of all errors found in the content part.\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.Validation",
        "fct-package": "hxt",
        "fct-signature": "XmlArrow",
        "fct-source": "src/Text-XML-HXT-DTDValidation-Validation.html#validateDoc",
        "fct-type": "function",
        "title": "validateDoc"
      },
      "index": {
        "description": "Check if the document corresponds to the given DTD returns function which expects complete document as XmlTree input and returns list of all errors found in the content part",
        "hierarchy": "Text XML HXT DTDValidation Validation",
        "module": "Text.XML.HXT.DTDValidation.Validation",
        "name": "validateDoc",
        "normalized": "",
        "package": "hxt",
        "partial": "Doc",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA module for regular expression matching, adapted for XML DTDs.\n\u003c/p\u003e\u003cp\u003eThis module is based on the module RE.\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-DTDValidation-XmlRE.html",
        "fct-type": "module",
        "title": "XmlRE"
      },
      "index": {
        "description": "module for regular expression matching adapted for XML DTDs This module is based on the module RE",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "XmlRE",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml RE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#t:RE",
      "description": {
        "fct-descr": "\u003cp\u003eData type for regular expressions.\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#RE",
        "fct-type": "data",
        "title": "RE"
      },
      "index": {
        "description": "Data type for regular expressions",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "RE",
        "normalized": "",
        "package": "hxt",
        "partial": "RE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:checkRE",
      "description": {
        "fct-descr": "\u003cp\u003eChecks if an input matched a regular expression. The function should be\n called after matches.\n\u003c/p\u003e\u003cp\u003eWas the sentence used in \u003ccode\u003ematches\u003c/code\u003e in the language of the regular expression?\n -\u003e matches e s == s `in` L(e)?\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  the derived regular expression\n\u003c/li\u003e\u003cli\u003e returns : empty String if input matched the regular expression, otherwise\n               an error message is returned\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#checkRE",
        "fct-type": "function",
        "title": "checkRE"
      },
      "index": {
        "description": "Checks if an input matched regular expression The function should be called after matches Was the sentence used in matches in the language of the regular expression matches in parameter re the derived regular expression returns empty String if input matched the regular expression otherwise an error message is returned",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "checkRE",
        "normalized": "RE a-\u003eString",
        "package": "hxt",
        "partial": "RE",
        "signature": "RE a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:matches",
      "description": {
        "fct-descr": "\u003cp\u003eDerives a regular expression with respect to a list of elements.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  regular expression\n\u003c/li\u003e\u003cli\u003e 2.parameter list :  list of elements to which the regular expression is applied\n\u003c/li\u003e\u003cli\u003e returns : the derived regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE String -\u003e XmlTrees -\u003e RE String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-XmlRE.html#matches",
        "fct-type": "function",
        "title": "matches"
      },
      "index": {
        "description": "Derives regular expression with respect to list of elements parameter re regular expression parameter list list of elements to which the regular expression is applied returns the derived regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "matches",
        "normalized": "RE String-\u003eXmlTrees-\u003eRE String",
        "package": "hxt",
        "partial": "",
        "signature": "RE String-\u003eXmlTrees-\u003eRE String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:printRE",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a string representation of a regular expression.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re :  a regular expression\n\u003c/li\u003e\u003cli\u003e returns : the string representation of the regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e String",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#printRE",
        "fct-type": "function",
        "title": "printRE"
      },
      "index": {
        "description": "Constructs string representation of regular expression parameter re regular expression returns the string representation of the regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "printRE",
        "normalized": "RE a-\u003eString",
        "package": "hxt",
        "partial": "RE",
        "signature": "RE a-\u003eString"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_alt",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs an alternative (|) of two regular expressions\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  first regular expression of alternative\n\u003c/li\u003e\u003cli\u003e 2.parameter re_b :  second regular expression of alternative\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_alt",
        "fct-type": "function",
        "title": "re_alt"
      },
      "index": {
        "description": "Constructs an alternative of two regular expressions parameter re first regular expression of alternative parameter re second regular expression of alternative returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_alt",
        "normalized": "RE a-\u003eRE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_dot",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for accepting any singel symbol\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : regular expression for accepting any singel symbol\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_dot",
        "fct-type": "function",
        "title": "re_dot"
      },
      "index": {
        "description": "Constructs regular expression for accepting any singel symbol returns regular expression for accepting any singel symbol",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_dot",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_opt",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs an option (?) of a regular expression\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  regular expression to be optional\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_opt",
        "fct-type": "function",
        "title": "re_opt"
      },
      "index": {
        "description": "Constructs an option of regular expression parameter re regular expression to be optional returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_opt",
        "normalized": "RE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_plus",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a repetition (+) of a regular expression\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  regular expression to be repeted\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_plus",
        "fct-type": "function",
        "title": "re_plus"
      },
      "index": {
        "description": "Constructs repetition of regular expression parameter re regular expression to be repeted returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_plus",
        "normalized": "RE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_rep",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs an optional repetition (*) of a regular expression\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  regular expression to be repeted\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_rep",
        "fct-type": "function",
        "title": "re_rep"
      },
      "index": {
        "description": "Constructs an optional repetition of regular expression parameter re regular expression to be repeted returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_rep",
        "normalized": "RE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_seq",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a sequence (,) of two regular expressions\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter re_a :  first regular expression in sequence\n\u003c/li\u003e\u003cli\u003e 2.parameter re_b :  second regular expression in sequence\n\u003c/li\u003e\u003cli\u003e returns : new regular expression\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a -\u003e RE a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_seq",
        "fct-type": "function",
        "title": "re_seq"
      },
      "index": {
        "description": "Constructs sequence of two regular expressions parameter re first regular expression in sequence parameter re second regular expression in sequence returns new regular expression",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_seq",
        "normalized": "RE a-\u003eRE a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "RE a-\u003eRE a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_sym",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for accepting a symbol\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter sym :  the symbol to be accepted\n\u003c/li\u003e\u003cli\u003e returns : regular expression for accepting a symbol\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_sym",
        "fct-type": "function",
        "title": "re_sym"
      },
      "index": {
        "description": "Constructs regular expression for accepting symbol parameter sym the symbol to be accepted returns regular expression for accepting symbol",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_sym",
        "normalized": "a-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "a-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_unit",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for an empty sequence.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e returns : regular expression for an empty sequence\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_unit",
        "fct-type": "function",
        "title": "re_unit"
      },
      "index": {
        "description": "Constructs regular expression for an empty sequence returns regular expression for an empty sequence",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_unit",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-DTDValidation-XmlRE.html#v:re_zero",
      "description": {
        "fct-descr": "\u003cp\u003eConstructs a regular expression for an empty set.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter errMsg :  error message\n\u003c/li\u003e\u003cli\u003e returns : regular expression for an empty set\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.DTDValidation.XmlRE",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e RE a",
        "fct-source": "src/Text-XML-HXT-DTDValidation-RE.html#re_zero",
        "fct-type": "function",
        "title": "re_zero"
      },
      "index": {
        "description": "Constructs regular expression for an empty set parameter errMsg error message returns regular expression for an empty set",
        "hierarchy": "Text XML HXT DTDValidation XmlRE",
        "module": "Text.XML.HXT.DTDValidation.XmlRE",
        "name": "re_zero",
        "normalized": "String-\u003eRE a",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eRE a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-IO-GetFILE.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe GET method for file protocol\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.IO.GetFILE",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-IO-GetFILE.html",
        "fct-type": "module",
        "title": "GetFILE"
      },
      "index": {
        "description": "The GET method for file protocol",
        "hierarchy": "Text XML HXT IO GetFILE",
        "module": "Text.XML.HXT.IO.GetFILE",
        "name": "GetFILE",
        "normalized": "",
        "package": "hxt",
        "partial": "Get FILE",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-IO-GetFILE.html#v:getCont",
      "description": {
        "fct-module": "Text.XML.HXT.IO.GetFILE",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e String -\u003e IO (Either ([(String, String)], String) ByteString)",
        "fct-source": "src/Text-XML-HXT-IO-GetFILE.html#getCont",
        "fct-type": "function",
        "title": "getCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT IO GetFILE",
        "module": "Text.XML.HXT.IO.GetFILE",
        "name": "getCont",
        "normalized": "Bool-\u003eString-\u003eIO(Either([(String,String)],String)ByteString)",
        "package": "hxt",
        "partial": "Cont",
        "signature": "Bool-\u003eString-\u003eIO(Either([(String,String)],String)ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-IO-GetFILE.html#v:getStdinCont",
      "description": {
        "fct-module": "Text.XML.HXT.IO.GetFILE",
        "fct-package": "hxt",
        "fct-signature": "Bool -\u003e IO (Either ([(String, String)], String) ByteString)",
        "fct-source": "src/Text-XML-HXT-IO-GetFILE.html#getStdinCont",
        "fct-type": "function",
        "title": "getStdinCont"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT IO GetFILE",
        "module": "Text.XML.HXT.IO.GetFILE",
        "name": "getStdinCont",
        "normalized": "Bool-\u003eIO(Either([(String,String)],String)ByteString)",
        "package": "hxt",
        "partial": "Stdin Cont",
        "signature": "Bool-\u003eIO(Either([(String,String)],String)ByteString)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis parser tries to interprete everything as HTML\n   no errors are emitted during parsing. If something looks\n   weired, warning messages are inserted in the document tree.\n\u003c/p\u003e\u003cp\u003eAll filter are pure XmlFilter,\n   errror handling and IO is done in \u003ccode\u003e\u003ca\u003eHtmlParser\u003c/a\u003e\u003c/code\u003e\n   or other modules\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html",
        "fct-type": "module",
        "title": "HtmlParsec"
      },
      "index": {
        "description": "This parser tries to interprete everything as HTML no errors are emitted during parsing If something looks weired warning messages are inserted in the document tree All filter are pure XmlFilter errror handling and IO is done in HtmlParser or other modules",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "HtmlParsec",
        "normalized": "",
        "package": "hxt",
        "partial": "Html Parsec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:closesHtmlTag",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#closesHtmlTag",
        "fct-type": "function",
        "title": "closesHtmlTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "closesHtmlTag",
        "normalized": "String-\u003eString-\u003eBool",
        "package": "hxt",
        "partial": "Html Tag",
        "signature": "String-\u003eString-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:emptyHtmlTags",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "[String]",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#emptyHtmlTags",
        "fct-type": "function",
        "title": "emptyHtmlTags"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "emptyHtmlTags",
        "normalized": "[String]",
        "package": "hxt",
        "partial": "Html Tags",
        "signature": "[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:isEmptyHtmlTag",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#isEmptyHtmlTag",
        "fct-type": "function",
        "title": "isEmptyHtmlTag"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "isEmptyHtmlTag",
        "normalized": "String-\u003eBool",
        "package": "hxt",
        "partial": "Empty Html Tag",
        "signature": "String-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:isInnerHtmlTagOf",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e Bool",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#isInnerHtmlTagOf",
        "fct-type": "function",
        "title": "isInnerHtmlTagOf"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "isInnerHtmlTagOf",
        "normalized": "String-\u003eString-\u003eBool",
        "package": "hxt",
        "partial": "Inner Html Tag Of",
        "signature": "String-\u003eString-\u003eBool"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:parseHtmlContent",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#parseHtmlContent",
        "fct-type": "function",
        "title": "parseHtmlContent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "parseHtmlContent",
        "normalized": "String-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Html Content",
        "signature": "String-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:parseHtmlDocument",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#parseHtmlDocument",
        "fct-type": "function",
        "title": "parseHtmlDocument"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "parseHtmlDocument",
        "normalized": "String-\u003eString-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Html Document",
        "signature": "String-\u003eString-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-HtmlParsec.html#v:parseHtmlText",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.HtmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-HtmlParsec.html#parseHtmlText",
        "fct-type": "function",
        "title": "parseHtmlText"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser HtmlParsec",
        "module": "Text.XML.HXT.Parser.HtmlParsec",
        "name": "parseHtmlText",
        "normalized": "String-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Html Text",
        "signature": "String-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-ProtocolHandlerUtil.html#",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.ProtocolHandlerUtil",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-ProtocolHandlerUtil.html",
        "fct-type": "module",
        "title": "ProtocolHandlerUtil"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser ProtocolHandlerUtil",
        "module": "Text.XML.HXT.Parser.ProtocolHandlerUtil",
        "name": "ProtocolHandlerUtil",
        "normalized": "",
        "package": "hxt",
        "partial": "Protocol Handler Util",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-ProtocolHandlerUtil.html#v:parseContentType",
      "description": {
        "fct-descr": "\u003cp\u003eTry to extract charset spec from Content-Type header\n e.g. \"text/html; charset=ISO-8859-1\"\n\u003c/p\u003e\u003cp\u003eSometimes the server deliver the charset spec in quotes\n these are removed\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.ProtocolHandlerUtil",
        "fct-package": "hxt",
        "fct-signature": "Parser [(String, String)]",
        "fct-source": "src/Text-XML-HXT-Parser-ProtocolHandlerUtil.html#parseContentType",
        "fct-type": "function",
        "title": "parseContentType"
      },
      "index": {
        "description": "Try to extract charset spec from Content-Type header e.g text html charset ISO-8859-1 Sometimes the server deliver the charset spec in quotes these are removed",
        "hierarchy": "Text XML HXT Parser ProtocolHandlerUtil",
        "module": "Text.XML.HXT.Parser.ProtocolHandlerUtil",
        "name": "parseContentType",
        "normalized": "Parser[(String,String)]",
        "package": "hxt",
        "partial": "Content Type",
        "signature": "Parser[(String,String)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XhtmlEntities.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eXHTML Entity References\n\u003c/p\u003e\u003cp\u003eThis module defines a table of all\n predefined XHTML entity references\n for special or none ASCII chars including the\n predefined XML entity refs\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XhtmlEntities",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XhtmlEntities.html",
        "fct-type": "module",
        "title": "XhtmlEntities"
      },
      "index": {
        "description": "XHTML Entity References This module defines table of all predefined XHTML entity references for special or none ASCII chars including the predefined XML entity refs",
        "hierarchy": "Text XML HXT Parser XhtmlEntities",
        "module": "Text.XML.HXT.Parser.XhtmlEntities",
        "name": "XhtmlEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "Xhtml Entities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XhtmlEntities.html#v:xhtmlEntities",
      "description": {
        "fct-descr": "\u003cp\u003etable with all XHTML entity refs and corresponding unicode values\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XhtmlEntities",
        "fct-package": "hxt",
        "fct-signature": "[(String, Int)]",
        "fct-source": "src/Text-XML-HXT-Parser-XhtmlEntities.html#xhtmlEntities",
        "fct-type": "function",
        "title": "xhtmlEntities"
      },
      "index": {
        "description": "table with all XHTML entity refs and corresponding unicode values",
        "hierarchy": "Text XML HXT Parser XhtmlEntities",
        "module": "Text.XML.HXT.Parser.XhtmlEntities",
        "name": "xhtmlEntities",
        "normalized": "[(String,Int)]",
        "package": "hxt",
        "partial": "Entities",
        "signature": "[(String,Int)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eUTF-8 character parser and simple XML token parsers\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html",
        "fct-type": "module",
        "title": "XmlCharParser"
      },
      "index": {
        "description": "UTF-8 character parser and simple XML token parsers",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "XmlCharParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Char Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#t:SimpleXParser",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#SimpleXParser",
        "fct-type": "type",
        "title": "SimpleXParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "SimpleXParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Simple XParser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#t:XPState",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "data",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#XPState",
        "fct-type": "data",
        "title": "XPState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "XPState",
        "normalized": "",
        "package": "hxt",
        "partial": "XPState",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#t:XParser",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "type",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#XParser",
        "fct-type": "type",
        "title": "XParser"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "XParser",
        "normalized": "",
        "package": "hxt",
        "partial": "XParser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:XPState",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XPState",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#XPState",
        "fct-type": "function",
        "title": "XPState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "XPState",
        "normalized": "",
        "package": "hxt",
        "partial": "XPState",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:withNormNewline",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e XPState a",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#withNormNewline",
        "fct-type": "function",
        "title": "withNormNewline"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "withNormNewline",
        "normalized": "a-\u003eXPState a",
        "package": "hxt",
        "partial": "Norm Newline",
        "signature": "a-\u003eXPState a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:withoutNormNewline",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "a -\u003e XPState a",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#withoutNormNewline",
        "fct-type": "function",
        "title": "withoutNormNewline"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "withoutNormNewline",
        "normalized": "a-\u003eXPState a",
        "package": "hxt",
        "partial": "Norm Newline",
        "signature": "a-\u003eXPState a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlCRLFChar",
      "description": {
        "fct-descr": "\u003cp\u003eWhite Space Normalization\n\u003c/p\u003e\u003cp\u003eend of line handling (2.11)\n #x0D and #x0D#x0A are mapped to #x0A\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Char",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlCRLFChar",
        "fct-type": "function",
        "title": "xmlCRLFChar"
      },
      "index": {
        "description": "White Space Normalization end of line handling x0D and x0D x0A are mapped to x0A",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlCRLFChar",
        "normalized": "",
        "package": "hxt",
        "partial": "CRLFChar",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlChar",
      "description": {
        "fct-descr": "\u003cp\u003eparse a single Unicode character\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Unicode",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlChar",
        "fct-type": "function",
        "title": "xmlChar"
      },
      "index": {
        "description": "parse single Unicode character",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlChar",
        "normalized": "",
        "package": "hxt",
        "partial": "Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlLetter",
      "description": {
        "fct-descr": "\u003cp\u003eparse a XML letter character\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Unicode",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlLetter",
        "fct-type": "function",
        "title": "xmlLetter"
      },
      "index": {
        "description": "parse XML letter character",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlLetter",
        "normalized": "",
        "package": "hxt",
        "partial": "Letter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlNCNameChar",
      "description": {
        "fct-descr": "\u003cp\u003eparse a XML NCName character\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Unicode",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlNCNameChar",
        "fct-type": "function",
        "title": "xmlNCNameChar"
      },
      "index": {
        "description": "parse XML NCName character",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlNCNameChar",
        "normalized": "",
        "package": "hxt",
        "partial": "NCName Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlNCNameStartChar",
      "description": {
        "fct-descr": "\u003cp\u003eparse a XML NCName start character\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Unicode",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlNCNameStartChar",
        "fct-type": "function",
        "title": "xmlNCNameStartChar"
      },
      "index": {
        "description": "parse XML NCName start character",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlNCNameStartChar",
        "normalized": "",
        "package": "hxt",
        "partial": "NCName Start Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlNameChar",
      "description": {
        "fct-descr": "\u003cp\u003eparse a XML name character\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Unicode",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlNameChar",
        "fct-type": "function",
        "title": "xmlNameChar"
      },
      "index": {
        "description": "parse XML name character",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlNameChar",
        "normalized": "",
        "package": "hxt",
        "partial": "Name Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlNameStartChar",
      "description": {
        "fct-descr": "\u003cp\u003eparse a XML name start character\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Unicode",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlNameStartChar",
        "fct-type": "function",
        "title": "xmlNameStartChar"
      },
      "index": {
        "description": "parse XML name start character",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlNameStartChar",
        "normalized": "",
        "package": "hxt",
        "partial": "Name Start Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xmlSpaceChar",
      "description": {
        "fct-descr": "\u003cp\u003eWhite Space (2.3)\n\u003c/p\u003e\u003cp\u003eend of line handling (2.11) will be done before or with \u003ccode\u003e\u003ca\u003exmlCRLFChar\u003c/a\u003e\u003c/code\u003e parser\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Char",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#xmlSpaceChar",
        "fct-type": "function",
        "title": "xmlSpaceChar"
      },
      "index": {
        "description": "White Space end of line handling will be done before or with xmlCRLFChar parser",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xmlSpaceChar",
        "normalized": "",
        "package": "hxt",
        "partial": "Space Char",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xps_normalizeNewline",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "!Bool",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#XPState",
        "fct-type": "function",
        "title": "xps_normalizeNewline"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xps_normalizeNewline",
        "normalized": "",
        "package": "hxt",
        "partial": "Newline",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlCharParser.html#v:xps_userState",
      "description": {
        "fct-descr": "&#160;",
        "fct-module": "Text.XML.HXT.Parser.XmlCharParser",
        "fct-package": "hxt",
        "fct-signature": "s",
        "fct-source": "src/Text-XML-HXT-Parser-XmlCharParser.html#XPState",
        "fct-type": "function",
        "title": "xps_userState"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlCharParser",
        "module": "Text.XML.HXT.Parser.XmlCharParser",
        "name": "xps_userState",
        "normalized": "",
        "package": "hxt",
        "partial": "State",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eParsec parser for DTD declarations for ELEMENT, ATTLIST, ENTITY and NOTATION declarations\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html",
        "fct-type": "module",
        "title": "XmlDTDParser"
      },
      "index": {
        "description": "Parsec parser for DTD declarations for ELEMENT ATTLIST ENTITY and NOTATION declarations",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "XmlDTDParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml DTDParser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:attlistDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "SParser XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#attlistDecl",
        "fct-type": "function",
        "title": "attlistDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "attlistDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:elementDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "SParser XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#elementDecl",
        "fct-type": "function",
        "title": "elementDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "elementDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:entityDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "SParser XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#entityDecl",
        "fct-type": "function",
        "title": "entityDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "entityDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:notationDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "SParser XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#notationDecl",
        "fct-type": "function",
        "title": "notationDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "notationDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:parseXmlDTDEntityValue",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#parseXmlDTDEntityValue",
        "fct-type": "function",
        "title": "parseXmlDTDEntityValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "parseXmlDTDEntityValue",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml DTDEntity Value",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:parseXmlDTDdecl",
      "description": {
        "fct-descr": "\u003cp\u003eparse a tokenized DTD declaration represented by a DTD tree.\n The content is represented by the children containing text and parameter entity reference nodes.\n The parameter entity reference nodes contain their value in the children list, consisting of text\n and possibly again parameter entity reference nodes. This structure is build by the parameter entity\n substitution.\n Output is again a DTD declaration node, but this time completely parsed and ready for further DTD processing\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#parseXmlDTDdecl",
        "fct-type": "function",
        "title": "parseXmlDTDdecl"
      },
      "index": {
        "description": "parse tokenized DTD declaration represented by DTD tree The content is represented by the children containing text and parameter entity reference nodes The parameter entity reference nodes contain their value in the children list consisting of text and possibly again parameter entity reference nodes This structure is build by the parameter entity substitution Output is again DTD declaration node but this time completely parsed and ready for further DTD processing",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "parseXmlDTDdecl",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml DTDdecl",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDParser.html#v:parseXmlDTDdeclPart",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDParser",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDParser.html#parseXmlDTDdeclPart",
        "fct-type": "function",
        "title": "parseXmlDTDdeclPart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDParser",
        "module": "Text.XML.HXT.Parser.XmlDTDParser",
        "name": "parseXmlDTDdeclPart",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml DTDdecl Part",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eParsec parser for tokenizing DTD declarations for ELEMENT, ATTLIST, ENTITY and NOTATION\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html",
        "fct-type": "module",
        "title": "XmlDTDTokenParser"
      },
      "index": {
        "description": "Parsec parser for tokenizing DTD declarations for ELEMENT ATTLIST ENTITY and NOTATION",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "XmlDTDTokenParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml DTDToken Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:dtdChars",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#dtdChars",
        "fct-type": "function",
        "title": "dtdChars"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "dtdChars",
        "normalized": "",
        "package": "hxt",
        "partial": "Chars",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:dtdDeclEnd",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#dtdDeclEnd",
        "fct-type": "function",
        "title": "dtdDeclEnd"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "dtdDeclEnd",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "Decl End",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:dtdDeclStart",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s (DTDElem, Attributes)",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#dtdDeclStart",
        "fct-type": "function",
        "title": "dtdDeclStart"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "dtdDeclStart",
        "normalized": "XParser a(DTDElem,Attributes)",
        "package": "hxt",
        "partial": "Decl Start",
        "signature": "XParser s(DTDElem,Attributes)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:dtdDeclTokenizer",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#dtdDeclTokenizer",
        "fct-type": "function",
        "title": "dtdDeclTokenizer"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "dtdDeclTokenizer",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl Tokenizer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:dtdToken",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#dtdToken",
        "fct-type": "function",
        "title": "dtdToken"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "dtdToken",
        "normalized": "",
        "package": "hxt",
        "partial": "Token",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:entityValue",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#entityValue",
        "fct-type": "function",
        "title": "entityValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "entityValue",
        "normalized": "",
        "package": "hxt",
        "partial": "Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:peReference",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#peReference",
        "fct-type": "function",
        "title": "peReference"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "peReference",
        "normalized": "",
        "package": "hxt",
        "partial": "Reference",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlDTDTokenParser.html#v:percent",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlDTDTokenParser.html#percent",
        "fct-type": "function",
        "title": "percent"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlDTDTokenParser",
        "module": "Text.XML.HXT.Parser.XmlDTDTokenParser",
        "name": "percent",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlEntities.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePredefined XML Entity References\n\u003c/p\u003e\u003cp\u003eThis module defines a table of all\n predefined XML entity references\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlEntities",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XmlEntities.html",
        "fct-type": "module",
        "title": "XmlEntities"
      },
      "index": {
        "description": "Predefined XML Entity References This module defines table of all predefined XML entity references",
        "hierarchy": "Text XML HXT Parser XmlEntities",
        "module": "Text.XML.HXT.Parser.XmlEntities",
        "name": "XmlEntities",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Entities",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlEntities.html#v:xmlEntities",
      "description": {
        "fct-descr": "\u003cp\u003elist of predefined XML entity names and their unicode values\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlEntities",
        "fct-package": "hxt",
        "fct-signature": "[(String, Int)]",
        "fct-source": "src/Text-XML-HXT-Parser-XmlEntities.html#xmlEntities",
        "fct-type": "function",
        "title": "xmlEntities"
      },
      "index": {
        "description": "list of predefined XML entity names and their unicode values",
        "hierarchy": "Text XML HXT Parser XmlEntities",
        "module": "Text.XML.HXT.Parser.XmlEntities",
        "name": "xmlEntities",
        "normalized": "[(String,Int)]",
        "package": "hxt",
        "partial": "Entities",
        "signature": "[(String,Int)]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eXml Parsec parser with pure filter interface\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html",
        "fct-type": "module",
        "title": "XmlParsec"
      },
      "index": {
        "description": "Xml Parsec parser with pure filter interface",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "XmlParsec",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Parsec",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:cDSect",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#cDSect",
        "fct-type": "function",
        "title": "cDSect"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "cDSect",
        "normalized": "",
        "package": "hxt",
        "partial": "DSect",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:charData",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#charData",
        "fct-type": "function",
        "title": "charData"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "charData",
        "normalized": "",
        "package": "hxt",
        "partial": "Data",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:charData-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#charData%27",
        "fct-type": "function",
        "title": "charData'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "charData'",
        "normalized": "",
        "package": "hxt",
        "partial": "Data'",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:comment",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#comment",
        "fct-type": "function",
        "title": "comment"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "comment",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:content",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#content",
        "fct-type": "function",
        "title": "content"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "content",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:contentWithTextDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#contentWithTextDecl",
        "fct-type": "function",
        "title": "contentWithTextDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "contentWithTextDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "With Text Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:doctypedecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#doctypedecl",
        "fct-type": "function",
        "title": "doctypedecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "doctypedecl",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:document",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#document",
        "fct-type": "function",
        "title": "document"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "document",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:document-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#document%27",
        "fct-type": "function",
        "title": "document'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "document'",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:element",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#element",
        "fct-type": "function",
        "title": "element"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "element",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:encodingDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#encodingDecl",
        "fct-type": "function",
        "title": "encodingDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "encodingDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:markupdecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#markupdecl",
        "fct-type": "function",
        "title": "markupdecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "markupdecl",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:misc",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#misc",
        "fct-type": "function",
        "title": "misc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "misc",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:pI",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#pI",
        "fct-type": "function",
        "title": "pI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "pI",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseNMToken",
      "description": {
        "fct-descr": "\u003cp\u003eParser for NMTOKENs\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseNMToken",
        "fct-type": "function",
        "title": "parseNMToken"
      },
      "index": {
        "description": "Parser for NMTOKENs",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseNMToken",
        "normalized": "String-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "NMToken",
        "signature": "String-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseName",
      "description": {
        "fct-descr": "\u003cp\u003eParser for XML names\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseName",
        "fct-type": "function",
        "title": "parseName"
      },
      "index": {
        "description": "Parser for XML names",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseName",
        "normalized": "String-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Name",
        "signature": "String-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlContent",
      "description": {
        "fct-descr": "\u003cp\u003ethe filter version of \u003ccode\u003e\u003ca\u003exread\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlContent",
        "fct-type": "function",
        "title": "parseXmlContent"
      },
      "index": {
        "description": "the filter version of xread",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlContent",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Content",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlDTDPart",
      "description": {
        "fct-descr": "\u003cp\u003eParser for parts of a DTD\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlDTDPart",
        "fct-type": "function",
        "title": "parseXmlDTDPart"
      },
      "index": {
        "description": "Parser for parts of DTD",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlDTDPart",
        "normalized": "String-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml DTDPart",
        "signature": "String-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlDocEncodingSpec",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlDocEncodingSpec",
        "fct-type": "function",
        "title": "parseXmlDocEncodingSpec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlDocEncodingSpec",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Doc Encoding Spec",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlDocument",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlDocument",
        "fct-type": "function",
        "title": "parseXmlDocument"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlDocument",
        "normalized": "String-\u003eString-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Document",
        "signature": "String-\u003eString-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlEncodingSpec",
      "description": {
        "fct-descr": "\u003cp\u003etry to parse a xml encoding spec.\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e 1.parameter encParse :  the parser for the encoding decl\n\u003c/li\u003e\u003cli\u003e 2.parameter root :  a document root\n\u003c/li\u003e\u003cli\u003e returns : the same tree, but with an additional\n                        attribute \"encoding\" in the root node\n                        in case of a valid encoding spec\n                        else the unchanged tree\n\u003c/li\u003e\u003c/ul\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "SimpleXParser XmlTree -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlEncodingSpec",
        "fct-type": "function",
        "title": "parseXmlEncodingSpec"
      },
      "index": {
        "description": "try to parse xml encoding spec parameter encParse the parser for the encoding decl parameter root document root returns the same tree but with an additional attribute encoding in the root node in case of valid encoding spec else the unchanged tree",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlEncodingSpec",
        "normalized": "SimpleXParser XmlTree-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Encoding Spec",
        "signature": "SimpleXParser XmlTree-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlEntityEncodingSpec",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlEntityEncodingSpec",
        "fct-type": "function",
        "title": "parseXmlEntityEncodingSpec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlEntityEncodingSpec",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Entity Encoding Spec",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlEntityValueAsAttrValue",
      "description": {
        "fct-descr": "\u003cp\u003eParser for entity substitution within attribute values\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlEntityValueAsAttrValue",
        "fct-type": "function",
        "title": "parseXmlEntityValueAsAttrValue"
      },
      "index": {
        "description": "Parser for entity substitution within attribute values",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlEntityValueAsAttrValue",
        "normalized": "String-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Entity Value As Attr Value",
        "signature": "String-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlEntityValueAsContent",
      "description": {
        "fct-descr": "\u003cp\u003eParser for general entites\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlEntityValueAsContent",
        "fct-type": "function",
        "title": "parseXmlEntityValueAsContent"
      },
      "index": {
        "description": "Parser for general entites",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlEntityValueAsContent",
        "normalized": "String-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Entity Value As Content",
        "signature": "String-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlPart",
      "description": {
        "fct-descr": "\u003cp\u003egeneral parser for parsing arbitray parts of a XML document\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "SimpleXParser XmlTrees -\u003e String -\u003e String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlPart",
        "fct-type": "function",
        "title": "parseXmlPart"
      },
      "index": {
        "description": "general parser for parsing arbitray parts of XML document",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlPart",
        "normalized": "SimpleXParser XmlTrees-\u003eString-\u003eString-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Part",
        "signature": "SimpleXParser XmlTrees-\u003eString-\u003eString-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:parseXmlText",
      "description": {
        "fct-descr": "\u003cp\u003ea more general version of \u003ccode\u003e\u003ca\u003eparseXmlContent\u003c/a\u003e\u003c/code\u003e.\n The parser to be used and the context are extra parameter\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "SimpleXParser XmlTrees -\u003e XPState () -\u003e String -\u003e XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#parseXmlText",
        "fct-type": "function",
        "title": "parseXmlText"
      },
      "index": {
        "description": "more general version of parseXmlContent The parser to be used and the context are extra parameter",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "parseXmlText",
        "normalized": "SimpleXParser XmlTrees-\u003eXPState()-\u003eString-\u003eXmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Xml Text",
        "signature": "SimpleXParser XmlTrees-\u003eXPState()-\u003eString-\u003eXmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:prolog",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#prolog",
        "fct-type": "function",
        "title": "prolog"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "prolog",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:removeEncodingSpec",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XmlTree -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#removeEncodingSpec",
        "fct-type": "function",
        "title": "removeEncodingSpec"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "removeEncodingSpec",
        "normalized": "XmlTree-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Encoding Spec",
        "signature": "XmlTree-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:sDDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#sDDecl",
        "fct-type": "function",
        "title": "sDDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "sDDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "DDecl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:textDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#textDecl",
        "fct-type": "function",
        "title": "textDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "textDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "Decl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:versionInfo",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#versionInfo",
        "fct-type": "function",
        "title": "versionInfo"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "versionInfo",
        "normalized": "",
        "package": "hxt",
        "partial": "Info",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:xMLDecl",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#xMLDecl",
        "fct-type": "function",
        "title": "xMLDecl"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "xMLDecl",
        "normalized": "",
        "package": "hxt",
        "partial": "MLDecl",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:xMLDecl-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#xMLDecl%27",
        "fct-type": "function",
        "title": "xMLDecl'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "xMLDecl'",
        "normalized": "",
        "package": "hxt",
        "partial": "MLDecl'",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:xread",
      "description": {
        "fct-descr": "\u003cp\u003ethe inverse function to \u003ccode\u003e\u003ca\u003exshow\u003c/a\u003e\u003c/code\u003e, (for XML content).\n\u003c/p\u003e\u003cp\u003ethe string parameter is parsed with the XML content parser.\n result is the list of trees or in case of an error a single element list with the\n error message as node. No entity or character subtitution is done here,\n but the XML parser can do this for the predefined XML or the char references for performance reasons\n\u003c/p\u003e\u003cp\u003esee also: \u003ccode\u003e\u003ca\u003eparseXmlContent\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#xread",
        "fct-type": "function",
        "title": "xread"
      },
      "index": {
        "description": "the inverse function to xshow for XML content the string parameter is parsed with the XML content parser result is the list of trees or in case of an error single element list with the error message as node No entity or character subtitution is done here but the XML parser can do this for the predefined XML or the char references for performance reasons see also parseXmlContent",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "xread",
        "normalized": "String-\u003eXmlTrees",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlParsec.html#v:xreadDoc",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlParsec",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlParsec.html#xreadDoc",
        "fct-type": "function",
        "title": "xreadDoc"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlParsec",
        "module": "Text.XML.HXT.Parser.XmlParsec",
        "name": "xreadDoc",
        "normalized": "String-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Doc",
        "signature": "String-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eParsec parser for XML tokens\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html",
        "fct-type": "module",
        "title": "XmlTokenParser"
      },
      "index": {
        "description": "Parsec parser for XML tokens",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "XmlTokenParser",
        "normalized": "",
        "package": "hxt",
        "partial": "Xml Token Parser",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:allBut",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "(XParser s Char -\u003e XParser s String) -\u003e String -\u003e XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#allBut",
        "fct-type": "function",
        "title": "allBut"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "allBut",
        "normalized": "(XParser a Char-\u003eXParser a String)-\u003eString-\u003eXParser a String",
        "package": "hxt",
        "partial": "But",
        "signature": "(XParser s Char-\u003eXParser s String)-\u003eString-\u003eXParser s String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:allBut1",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "(XParser s Char -\u003e XParser s String) -\u003e (Char -\u003e Bool) -\u003e String -\u003e XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#allBut1",
        "fct-type": "function",
        "title": "allBut1"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "allBut1",
        "normalized": "(XParser a Char-\u003eXParser a String)-\u003e(Char-\u003eBool)-\u003eString-\u003eXParser a String",
        "package": "hxt",
        "partial": "But",
        "signature": "(XParser s Char-\u003eXParser s String)-\u003e(Char-\u003eBool)-\u003eString-\u003eXParser s String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:amp",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#amp",
        "fct-type": "function",
        "title": "amp"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "amp",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:asciiLetter",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Char",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#asciiLetter",
        "fct-type": "function",
        "title": "asciiLetter"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "asciiLetter",
        "normalized": "",
        "package": "hxt",
        "partial": "Letter",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:attrChar",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#attrChar",
        "fct-type": "function",
        "title": "attrChar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "attrChar",
        "normalized": "String-\u003eXParser a String",
        "package": "hxt",
        "partial": "Char",
        "signature": "String-\u003eXParser s String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:attrValue",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#attrValue",
        "fct-type": "function",
        "title": "attrValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "attrValue",
        "normalized": "",
        "package": "hxt",
        "partial": "Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:attrValueT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#attrValueT",
        "fct-type": "function",
        "title": "attrValueT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "attrValueT",
        "normalized": "",
        "package": "hxt",
        "partial": "Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:attrValueT-39-",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#attrValueT%27",
        "fct-type": "function",
        "title": "attrValueT'"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "attrValueT'",
        "normalized": "String-\u003eXParser a XmlTrees",
        "package": "hxt",
        "partial": "Value T'",
        "signature": "String-\u003eXParser s XmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:bar",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#bar",
        "fct-type": "function",
        "title": "bar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "bar",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:charRef",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s Int",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#charRef",
        "fct-type": "function",
        "title": "charRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "charRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:charRefT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#charRefT",
        "fct-type": "function",
        "title": "charRefT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "charRefT",
        "normalized": "",
        "package": "hxt",
        "partial": "Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:checkString",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#checkString",
        "fct-type": "function",
        "title": "checkString"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "checkString",
        "normalized": "String-\u003eXParser a()",
        "package": "hxt",
        "partial": "String",
        "signature": "String-\u003eXParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:comma",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#comma",
        "fct-type": "function",
        "title": "comma"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "comma",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:concRes",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s [[a]] -\u003e XParser s [a]",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#concRes",
        "fct-type": "function",
        "title": "concRes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "concRes",
        "normalized": "XParser a[[b]]-\u003eXParser a[b]",
        "package": "hxt",
        "partial": "Res",
        "signature": "XParser s[[a]]-\u003eXParser s[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:dq",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#dq",
        "fct-type": "function",
        "title": "dq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "dq",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:encName",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#encName",
        "fct-type": "function",
        "title": "encName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "encName",
        "normalized": "",
        "package": "hxt",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:entityCharT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#entityCharT",
        "fct-type": "function",
        "title": "entityCharT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "entityCharT",
        "normalized": "String-\u003eXParser a XmlTree",
        "package": "hxt",
        "partial": "Char",
        "signature": "String-\u003eXParser s XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:entityRef",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#entityRef",
        "fct-type": "function",
        "title": "entityRef"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "entityRef",
        "normalized": "",
        "package": "hxt",
        "partial": "Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:entityRefT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#entityRefT",
        "fct-type": "function",
        "title": "entityRefT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "entityRefT",
        "normalized": "",
        "package": "hxt",
        "partial": "Ref",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:entityTokensT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#entityTokensT",
        "fct-type": "function",
        "title": "entityTokensT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "entityTokensT",
        "normalized": "String-\u003eXParser a XmlTrees",
        "package": "hxt",
        "partial": "Tokens",
        "signature": "String-\u003eXParser s XmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:entityValue",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#entityValue",
        "fct-type": "function",
        "title": "entityValue"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "entityValue",
        "normalized": "",
        "package": "hxt",
        "partial": "Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:entityValueT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#entityValueT",
        "fct-type": "function",
        "title": "entityValueT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "entityValueT",
        "normalized": "",
        "package": "hxt",
        "partial": "Value",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:eq",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#eq",
        "fct-type": "function",
        "title": "eq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "eq",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:gt",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#gt",
        "fct-type": "function",
        "title": "gt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "gt",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:keyword",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#keyword",
        "fct-type": "function",
        "title": "keyword"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "keyword",
        "normalized": "String-\u003eXParser a String",
        "package": "hxt",
        "partial": "",
        "signature": "String-\u003eXParser s String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:keywords",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "[String] -\u003e XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#keywords",
        "fct-type": "function",
        "title": "keywords"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "keywords",
        "normalized": "[String]-\u003eXParser a String",
        "package": "hxt",
        "partial": "",
        "signature": "[String]-\u003eXParser s String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:lpar",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#lpar",
        "fct-type": "function",
        "title": "lpar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "lpar",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:lt",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#lt",
        "fct-type": "function",
        "title": "lt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "lt",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:mergeTextNodes",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XmlTrees -\u003e XmlTrees",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#mergeTextNodes",
        "fct-type": "function",
        "title": "mergeTextNodes"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "mergeTextNodes",
        "normalized": "XmlTrees-\u003eXmlTrees",
        "package": "hxt",
        "partial": "Text Nodes",
        "signature": "XmlTrees-\u003eXmlTrees"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:mkList",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s a -\u003e XParser s [a]",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#mkList",
        "fct-type": "function",
        "title": "mkList"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "mkList",
        "normalized": "XParser a b-\u003eXParser a[b]",
        "package": "hxt",
        "partial": "List",
        "signature": "XParser s a-\u003eXParser s[a]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:name",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#name",
        "fct-type": "function",
        "title": "name"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "name",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:nameT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#nameT",
        "fct-type": "function",
        "title": "nameT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "nameT",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:names",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s [String]",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#names",
        "fct-type": "function",
        "title": "names"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "names",
        "normalized": "XParser a[String]",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:ncName",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#ncName",
        "fct-type": "function",
        "title": "ncName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "ncName",
        "normalized": "",
        "package": "hxt",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:nmtoken",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#nmtoken",
        "fct-type": "function",
        "title": "nmtoken"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "nmtoken",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:nmtokenT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#nmtokenT",
        "fct-type": "function",
        "title": "nmtokenT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "nmtokenT",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:nmtokens",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s [String]",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#nmtokens",
        "fct-type": "function",
        "title": "nmtokens"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "nmtokens",
        "normalized": "XParser a[String]",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s[String]"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:peReference",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#peReference",
        "fct-type": "function",
        "title": "peReference"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "peReference",
        "normalized": "",
        "package": "hxt",
        "partial": "Reference",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:peReferenceT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#peReferenceT",
        "fct-type": "function",
        "title": "peReferenceT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "peReferenceT",
        "normalized": "",
        "package": "hxt",
        "partial": "Reference",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:pubidLiteral",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#pubidLiteral",
        "fct-type": "function",
        "title": "pubidLiteral"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "pubidLiteral",
        "normalized": "",
        "package": "hxt",
        "partial": "Literal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:qName",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s (String, String)",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#qName",
        "fct-type": "function",
        "title": "qName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "qName",
        "normalized": "XParser a(String,String)",
        "package": "hxt",
        "partial": "Name",
        "signature": "XParser s(String,String)"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:quoted",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s a -\u003e XParser s a",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#quoted",
        "fct-type": "function",
        "title": "quoted"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "quoted",
        "normalized": "XParser a b-\u003eXParser a b",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s a-\u003eXParser s a"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:reference",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#reference",
        "fct-type": "function",
        "title": "reference"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "reference",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:referenceT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#referenceT",
        "fct-type": "function",
        "title": "referenceT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "referenceT",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:rpar",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#rpar",
        "fct-type": "function",
        "title": "rpar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "rpar",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:sPace",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#sPace",
        "fct-type": "function",
        "title": "sPace"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "sPace",
        "normalized": "",
        "package": "hxt",
        "partial": "Pace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:sPace0",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#sPace0",
        "fct-type": "function",
        "title": "sPace0"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "sPace0",
        "normalized": "",
        "package": "hxt",
        "partial": "Pace",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:semi",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#semi",
        "fct-type": "function",
        "title": "semi"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "semi",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:separator",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "Char -\u003e XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#separator",
        "fct-type": "function",
        "title": "separator"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "separator",
        "normalized": "Char-\u003eXParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "Char-\u003eXParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:singleChar",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s Char",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#singleChar",
        "fct-type": "function",
        "title": "singleChar"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "singleChar",
        "normalized": "String-\u003eXParser a Char",
        "package": "hxt",
        "partial": "Char",
        "signature": "String-\u003eXParser s Char"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:singleChars",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#singleChars",
        "fct-type": "function",
        "title": "singleChars"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "singleChars",
        "normalized": "String-\u003eXParser a String",
        "package": "hxt",
        "partial": "Chars",
        "signature": "String-\u003eXParser s String"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:singleCharsT",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "String -\u003e XParser s XmlTree",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#singleCharsT",
        "fct-type": "function",
        "title": "singleCharsT"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "singleCharsT",
        "normalized": "String-\u003eXParser a XmlTree",
        "package": "hxt",
        "partial": "Chars",
        "signature": "String-\u003eXParser s XmlTree"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:skipS",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#skipS",
        "fct-type": "function",
        "title": "skipS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "skipS",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:skipS0",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#skipS0",
        "fct-type": "function",
        "title": "skipS0"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "skipS0",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:sq",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s ()",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#sq",
        "fct-type": "function",
        "title": "sq"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "sq",
        "normalized": "XParser a()",
        "package": "hxt",
        "partial": "",
        "signature": "XParser s()"
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:systemLiteral",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#systemLiteral",
        "fct-type": "function",
        "title": "systemLiteral"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "systemLiteral",
        "normalized": "",
        "package": "hxt",
        "partial": "Literal",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Parser-XmlTokenParser.html#v:versionNum",
      "description": {
        "fct-module": "Text.XML.HXT.Parser.XmlTokenParser",
        "fct-package": "hxt",
        "fct-signature": "XParser s String",
        "fct-source": "src/Text-XML-HXT-Parser-XmlTokenParser.html#versionNum",
        "fct-type": "function",
        "title": "versionNum"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Parser XmlTokenParser",
        "module": "Text.XML.HXT.Parser.XmlTokenParser",
        "name": "versionNum",
        "normalized": "",
        "package": "hxt",
        "partial": "Num",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Version.html#",
      "description": {
        "fct-module": "Text.XML.HXT.Version",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-Version.html",
        "fct-type": "module",
        "title": "Version"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Version",
        "module": "Text.XML.HXT.Version",
        "name": "Version",
        "normalized": "",
        "package": "hxt",
        "partial": "Version",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-Version.html#v:hxt_version",
      "description": {
        "fct-module": "Text.XML.HXT.Version",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-Version.html#hxt_version",
        "fct-type": "function",
        "title": "hxt_version"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT Version",
        "module": "Text.XML.HXT.Version",
        "name": "hxt_version",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#",
      "description": {
        "fct-descr": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eVersion    : $Id$\n\u003c/p\u003e\u003cp\u003eDatatype library for the W3C XML schema datatypes\n\u003c/p\u003e\u003c/div\u003e",
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "module",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html",
        "fct-type": "module",
        "title": "DataTypeLibW3CNames"
      },
      "index": {
        "description": "Version Id Datatype library for the W3C XML schema datatypes",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "DataTypeLibW3CNames",
        "normalized": "",
        "package": "hxt",
        "partial": "Data Type Lib CNames",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:w3cNS",
      "description": {
        "fct-descr": "\u003cp\u003eNamespace of the W3C XML schema datatype library\n\u003c/p\u003e",
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#w3cNS",
        "fct-type": "function",
        "title": "w3cNS"
      },
      "index": {
        "description": "Namespace of the W3C XML schema datatype library",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "w3cNS",
        "normalized": "",
        "package": "hxt",
        "partial": "NS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_ENTITIES",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_ENTITIES",
        "fct-type": "function",
        "title": "xsd_ENTITIES"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_ENTITIES",
        "normalized": "",
        "package": "hxt",
        "partial": "ENTITIES",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_ENTITY",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_ENTITY",
        "fct-type": "function",
        "title": "xsd_ENTITY"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_ENTITY",
        "normalized": "",
        "package": "hxt",
        "partial": "ENTITY",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_ID",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_ID",
        "fct-type": "function",
        "title": "xsd_ID"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_ID",
        "normalized": "",
        "package": "hxt",
        "partial": "ID",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_IDREF",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_IDREF",
        "fct-type": "function",
        "title": "xsd_IDREF"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_IDREF",
        "normalized": "",
        "package": "hxt",
        "partial": "IDREF",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_IDREFS",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_IDREFS",
        "fct-type": "function",
        "title": "xsd_IDREFS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_IDREFS",
        "normalized": "",
        "package": "hxt",
        "partial": "IDREFS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_NCName",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_NCName",
        "fct-type": "function",
        "title": "xsd_NCName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_NCName",
        "normalized": "",
        "package": "hxt",
        "partial": "NCName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_NMTOKEN",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_NMTOKEN",
        "fct-type": "function",
        "title": "xsd_NMTOKEN"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_NMTOKEN",
        "normalized": "",
        "package": "hxt",
        "partial": "NMTOKEN",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_NMTOKENS",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_NMTOKENS",
        "fct-type": "function",
        "title": "xsd_NMTOKENS"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_NMTOKENS",
        "normalized": "",
        "package": "hxt",
        "partial": "NMTOKENS",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_NOTATION",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_NOTATION",
        "fct-type": "function",
        "title": "xsd_NOTATION"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_NOTATION",
        "normalized": "",
        "package": "hxt",
        "partial": "NOTATION",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_Name",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_Name",
        "fct-type": "function",
        "title": "xsd_Name"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_Name",
        "normalized": "",
        "package": "hxt",
        "partial": "Name",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_QName",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_QName",
        "fct-type": "function",
        "title": "xsd_QName"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_QName",
        "normalized": "",
        "package": "hxt",
        "partial": "QName",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_anyURI",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_anyURI",
        "fct-type": "function",
        "title": "xsd_anyURI"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_anyURI",
        "normalized": "",
        "package": "hxt",
        "partial": "URI",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_base64Binary",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_base64Binary",
        "fct-type": "function",
        "title": "xsd_base64Binary"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_base64Binary",
        "normalized": "",
        "package": "hxt",
        "partial": "Binary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_boolean",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_boolean",
        "fct-type": "function",
        "title": "xsd_boolean"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_boolean",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_byte",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_byte",
        "fct-type": "function",
        "title": "xsd_byte"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_byte",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_date",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_date",
        "fct-type": "function",
        "title": "xsd_date"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_date",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_dateTime",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_dateTime",
        "fct-type": "function",
        "title": "xsd_dateTime"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_dateTime",
        "normalized": "",
        "package": "hxt",
        "partial": "Time",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_decimal",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_decimal",
        "fct-type": "function",
        "title": "xsd_decimal"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_decimal",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_double",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_double",
        "fct-type": "function",
        "title": "xsd_double"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_double",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_duration",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_duration",
        "fct-type": "function",
        "title": "xsd_duration"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_duration",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_enumeration",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_enumeration",
        "fct-type": "function",
        "title": "xsd_enumeration"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_enumeration",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_float",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_float",
        "fct-type": "function",
        "title": "xsd_float"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_float",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_fractionDigits",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_fractionDigits",
        "fct-type": "function",
        "title": "xsd_fractionDigits"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_fractionDigits",
        "normalized": "",
        "package": "hxt",
        "partial": "Digits",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_gDay",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_gDay",
        "fct-type": "function",
        "title": "xsd_gDay"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_gDay",
        "normalized": "",
        "package": "hxt",
        "partial": "Day",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_gMonth",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_gMonth",
        "fct-type": "function",
        "title": "xsd_gMonth"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_gMonth",
        "normalized": "",
        "package": "hxt",
        "partial": "Month",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_gMonthDay",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_gMonthDay",
        "fct-type": "function",
        "title": "xsd_gMonthDay"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_gMonthDay",
        "normalized": "",
        "package": "hxt",
        "partial": "Month Day",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_gYear",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_gYear",
        "fct-type": "function",
        "title": "xsd_gYear"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_gYear",
        "normalized": "",
        "package": "hxt",
        "partial": "Year",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_gYearMonth",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_gYearMonth",
        "fct-type": "function",
        "title": "xsd_gYearMonth"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_gYearMonth",
        "normalized": "",
        "package": "hxt",
        "partial": "Year Month",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_hexBinary",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_hexBinary",
        "fct-type": "function",
        "title": "xsd_hexBinary"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_hexBinary",
        "normalized": "",
        "package": "hxt",
        "partial": "Binary",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_int",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_int",
        "fct-type": "function",
        "title": "xsd_int"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_int",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_integer",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_integer",
        "fct-type": "function",
        "title": "xsd_integer"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_integer",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_language",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_language",
        "fct-type": "function",
        "title": "xsd_language"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_language",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_length",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_length",
        "fct-type": "function",
        "title": "xsd_length"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_length",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_long",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_long",
        "fct-type": "function",
        "title": "xsd_long"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_long",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_maxExclusive",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_maxExclusive",
        "fct-type": "function",
        "title": "xsd_maxExclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_maxExclusive",
        "normalized": "",
        "package": "hxt",
        "partial": "Exclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_maxInclusive",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_maxInclusive",
        "fct-type": "function",
        "title": "xsd_maxInclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_maxInclusive",
        "normalized": "",
        "package": "hxt",
        "partial": "Inclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_maxLength",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_maxLength",
        "fct-type": "function",
        "title": "xsd_maxLength"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_maxLength",
        "normalized": "",
        "package": "hxt",
        "partial": "Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_minExclusive",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_minExclusive",
        "fct-type": "function",
        "title": "xsd_minExclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_minExclusive",
        "normalized": "",
        "package": "hxt",
        "partial": "Exclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_minInclusive",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_minInclusive",
        "fct-type": "function",
        "title": "xsd_minInclusive"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_minInclusive",
        "normalized": "",
        "package": "hxt",
        "partial": "Inclusive",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_minLength",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_minLength",
        "fct-type": "function",
        "title": "xsd_minLength"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_minLength",
        "normalized": "",
        "package": "hxt",
        "partial": "Length",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_negativeInteger",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_negativeInteger",
        "fct-type": "function",
        "title": "xsd_negativeInteger"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_negativeInteger",
        "normalized": "",
        "package": "hxt",
        "partial": "Integer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_nonNegativeInteger",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_nonNegativeInteger",
        "fct-type": "function",
        "title": "xsd_nonNegativeInteger"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_nonNegativeInteger",
        "normalized": "",
        "package": "hxt",
        "partial": "Negative Integer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_nonPositiveInteger",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_nonPositiveInteger",
        "fct-type": "function",
        "title": "xsd_nonPositiveInteger"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_nonPositiveInteger",
        "normalized": "",
        "package": "hxt",
        "partial": "Positive Integer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_normalizedString",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_normalizedString",
        "fct-type": "function",
        "title": "xsd_normalizedString"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_normalizedString",
        "normalized": "",
        "package": "hxt",
        "partial": "String",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_pattern",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_pattern",
        "fct-type": "function",
        "title": "xsd_pattern"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_pattern",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_positiveInteger",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_positiveInteger",
        "fct-type": "function",
        "title": "xsd_positiveInteger"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_positiveInteger",
        "normalized": "",
        "package": "hxt",
        "partial": "Integer",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_short",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_short",
        "fct-type": "function",
        "title": "xsd_short"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_short",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_string",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_string",
        "fct-type": "function",
        "title": "xsd_string"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_string",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_time",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_time",
        "fct-type": "function",
        "title": "xsd_time"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_time",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_token",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_token",
        "fct-type": "function",
        "title": "xsd_token"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_token",
        "normalized": "",
        "package": "hxt",
        "partial": "",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_totalDigits",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_totalDigits",
        "fct-type": "function",
        "title": "xsd_totalDigits"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_totalDigits",
        "normalized": "",
        "package": "hxt",
        "partial": "Digits",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_unsignedByte",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_unsignedByte",
        "fct-type": "function",
        "title": "xsd_unsignedByte"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_unsignedByte",
        "normalized": "",
        "package": "hxt",
        "partial": "Byte",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_unsignedInt",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_unsignedInt",
        "fct-type": "function",
        "title": "xsd_unsignedInt"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_unsignedInt",
        "normalized": "",
        "package": "hxt",
        "partial": "Int",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_unsignedLong",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_unsignedLong",
        "fct-type": "function",
        "title": "xsd_unsignedLong"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_unsignedLong",
        "normalized": "",
        "package": "hxt",
        "partial": "Long",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_unsignedShort",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_unsignedShort",
        "fct-type": "function",
        "title": "xsd_unsignedShort"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_unsignedShort",
        "normalized": "",
        "package": "hxt",
        "partial": "Short",
        "signature": ""
      }
    }
  },
  {
    "cmd": "update",
    "document": {
      "uri": "http://hackage.haskell.org/package/hxt/docs/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#v:xsd_whiteSpace",
      "description": {
        "fct-module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "fct-package": "hxt",
        "fct-signature": "String",
        "fct-source": "src/Text-XML-HXT-XMLSchema-DataTypeLibW3CNames.html#xsd_whiteSpace",
        "fct-type": "function",
        "title": "xsd_whiteSpace"
      },
      "index": {
        "description": "",
        "hierarchy": "Text XML HXT XMLSchema DataTypeLibW3CNames",
        "module": "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
        "name": "xsd_whiteSpace",
        "normalized": "",
        "package": "hxt",
        "partial": "Space",
        "signature": ""
      }
    }
  }
]